<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: source/c++/rocky20/api/sph/api_omp_sph.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('api__omp__sph_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">api_omp_sph.hpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">// (C) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">// Includes ---------------------------------------------------------------------------------------</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;rocky20/api/rocky_api.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;rocky20/api/sph/api_device_sph.hpp&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;rocky20/device/omp_backend.hpp&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">namespace </span>rocky::omp {</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment">// Dispatchers ------------------------------------------------------------------------------------</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Operator = device::DefaultOperator&lt;OMPBackend&gt;, <span class="keyword">typename</span> Functor&gt;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">inline</span> <span class="keywordtype">void</span> dispatch_sph_elements_kernel(</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>&amp; model, Functor&amp; omp_dispatch_particle_f, <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    SPHModel* sph_model = &amp;(*model._impl-&gt;sph_model);</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    SPHDeviceModel* sph_device = model._impl-&gt;sph_model-&gt;get_device_data(0);</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    SDeviceModel* device_data = model.get_device_data(0);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    <span class="keywordflow">if</span> (sph_model-&gt;gen_sph.nprt_active &lt;= 0)</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">#ifndef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">    #pragma omp parallel num_threads(model.get_number_of_processes())</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    {</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>        device::launch_sph_particles_function&lt;OMPBackend, Operator&gt;(</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>            device_data, sph_device, model.<a class="code hl_function" href="structIRockyModel.xhtml#a93ef35ae1eb9cf50ca77ab2070a769ab">get_current_time</a>(), omp_dispatch_particle_f, udf_data);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>}</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Operator = device::DefaultElementsOperator&lt;OMPBackend&gt;, <span class="keyword">typename</span> Functor&gt;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">inline</span> <span class="keywordtype">void</span> dispatch_sph_interactions_elements_kernel(</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>&amp; model,</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    Functor&amp; sph_particle_interaction_f,</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <span class="keywordtype">void</span>* udf_data,</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    IterationType it_type = itAll)</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    cuda_host&amp; solver_model = *model._impl;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    SPHModel* sph_model = &amp;(*model._impl-&gt;sph_model);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="keywordtype">float</span> current_time = model.<a class="code hl_function" href="structIRockyModel.xhtml#a93ef35ae1eb9cf50ca77ab2070a769ab">get_current_time</a>();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keywordflow">if</span> (sph_model-&gt;gen_sph.nprt_active &lt;= 0)</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#ifndef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="preprocessor">    #pragma omp parallel num_threads(model.get_number_of_processes())</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>        <span class="comment">// SPH -&gt; SPH</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>        <span class="keywordflow">if</span> (sph_model-&gt;gen_sph.use_particles_neighbors_list)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>        {</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>            <span class="keywordflow">if</span> (solver_model.gen.periodic_domain.enabled())</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>            {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>                SPHExplicitHandler&lt;OMPBackend, true&gt; handler { solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>                                                               sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>                                                               current_time,</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>                                                               it_type };</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>                device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>                    OMPBackend,</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>                    Operator,</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>                    <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>                    solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>                    sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>                    current_time,</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>                    sph_particle_interaction_f,</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                    udf_data,</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>                    handler);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>            }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>            <span class="keywordflow">else</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>            {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>                SPHExplicitHandler&lt;OMPBackend, false&gt; handler { solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>                                                                sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>                                                                current_time,</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>                                                                it_type };</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>                device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>                    OMPBackend,</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>                    Operator,</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>                    <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>                    solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>                    sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>                    current_time,</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>                    sph_particle_interaction_f,</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>                    udf_data,</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>                    handler);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>            }</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>        }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>        {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>            <span class="keywordflow">if</span> (solver_model.gen.nprt_active &gt; 0)</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>            {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>                <span class="keywordflow">if</span> (solver_model.gen.periodic_domain.enabled())</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>                {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>                    SPHApplyHandler&lt;OMPBackend, true, true&gt; handler { solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>                                                                      sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>                                                                      current_time,</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>                                                                      it_type };</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>                    device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>                        OMPBackend,</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>                        Operator,</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>                        <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>                        current_time,</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>                        sph_particle_interaction_f,</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>                        udf_data,</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>                        handler);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>                }</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>                <span class="keywordflow">else</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>                {</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>                    SPHApplyHandler&lt;OMPBackend, true, false&gt; handler {</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>                        current_time,</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>                        it_type</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>                    };</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>                    device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>                        OMPBackend,</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>                        Operator,</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>                        <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>                        current_time,</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>                        sph_particle_interaction_f,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>                        udf_data,</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>                        handler);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>                }</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>            }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>            <span class="keywordflow">else</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>            {</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>                <span class="keywordflow">if</span> (solver_model.gen.periodic_domain.enabled())</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>                {</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>                    SPHApplyHandler&lt;OMPBackend, false, true&gt; handler {</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>                        current_time,</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>                        it_type</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>                    };</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>                    device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>                        OMPBackend,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>                        Operator,</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>                        <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>                        current_time,</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>                        sph_particle_interaction_f,</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>                        udf_data,</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>                        handler);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>                }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>                <span class="keywordflow">else</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>                {</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>                    SPHApplyHandler&lt;OMPBackend, false, false&gt; handler {</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>                        current_time,</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>                        it_type</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>                    };</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>                    device::launch_sph_interactions_particles&lt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>                        OMPBackend,</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>                        Operator,</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>                        <span class="keyword">decltype</span>(sph_particle_interaction_f)&gt;(</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>                        solver_model.GetDeviceData(0),</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>                        sph_model-&gt;get_device_data(0),</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>                        current_time,</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>                        sph_particle_interaction_f,</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>                        udf_data,</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>                        handler);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>                }</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>            }</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        }</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    }</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>}</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Operator = device::DefaultTrianglesOperator&lt;OMPBackend&gt;, <span class="keyword">typename</span> Functor&gt;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">inline</span> <span class="keywordtype">void</span> dispatch_sph_interactions_triangles_kernel(</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    <a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>&amp; model, Functor&amp; sph_triangle_interaction_f, <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>{</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    SPHModel* sph_model = &amp;(*model._impl-&gt;sph_model);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    SPHDeviceModel* sph_device = model._impl-&gt;sph_model-&gt;get_device_data(0);</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    SDeviceModel* device_data = model.get_device_data(0);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    <span class="keywordflow">if</span> (sph_model-&gt;gen_sph.nprt_active &lt;= 0)</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span><span class="preprocessor">#ifndef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="preprocessor">    #pragma omp parallel num_threads(model.get_number_of_processes())</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    {</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        <span class="comment">// SPH -&gt; triangles</span></div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        device::launch_sph_interactions_triangles&lt;OMPBackend, Operator&gt;(</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>            device_data,</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>            sph_device,</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>            model.<a class="code hl_function" href="structIRockyModel.xhtml#a93ef35ae1eb9cf50ca77ab2070a769ab">get_current_time</a>(),</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>            sph_triangle_interaction_f,</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>            udf_data);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>}</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>}  <span class="comment">// namespace rocky::omp</span></div>
<div class="ttc" id="astructIRockyModel_xhtml"><div class="ttname"><a href="structIRockyModel.xhtml">IRockyModel</a></div><div class="ttdef"><b>Definition</b> rocky_api.h:58</div></div>
<div class="ttc" id="astructIRockyModel_xhtml_a93ef35ae1eb9cf50ca77ab2070a769ab"><div class="ttname"><a href="structIRockyModel.xhtml#a93ef35ae1eb9cf50ca77ab2070a769ab">IRockyModel::get_current_time</a></div><div class="ttdeci">double get_current_time() const</div><div class="ttdef"><b>Definition</b> rocky_api.cpp:143</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b2f33c71d4aa5e7af42a1ca61ff5af1b.xhtml">source</a></li><li class="navelem"><a class="el" href="dir_5bec2c41045c5679e0f388d0726ce756.xhtml">c++</a></li><li class="navelem"><a class="el" href="dir_fc907dd8a19288f35eaf149283de05d4.xhtml">rocky20</a></li><li class="navelem"><a class="el" href="dir_04a4feaf085f2323de96e1b0ca127830.xhtml">api</a></li><li class="navelem"><a class="el" href="dir_73defce0f3034688ade5b24ad0c9ed4d.xhtml">sph</a></li><li class="navelem"><b>api_omp_sph.hpp</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
