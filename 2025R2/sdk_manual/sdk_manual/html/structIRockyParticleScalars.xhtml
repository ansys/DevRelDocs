<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockyParticleScalars Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockyParticleScalars.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockyParticleScalars Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__particle__scalars_8hpp_source.xhtml">rocky_particle_scalars.hpp</a>&gt;</code></p>

<p>Inherits EntityScalars&lt; rocky20::ParticleScalars &gt;.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4a64868ea5dae08ca841701423268d24" id="r_a4a64868ea5dae08ca841701423268d24"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a64868ea5dae08ca841701423268d24">get_temperature</a> () const</td></tr>
<tr class="separator:a4a64868ea5dae08ca841701423268d24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228debc629b2c74943a35a6411e85e34" id="r_a228debc629b2c74943a35a6411e85e34"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a228debc629b2c74943a35a6411e85e34">get_mass_increment</a> () const</td></tr>
<tr class="separator:a228debc629b2c74943a35a6411e85e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07d6c5c74fe0291617efe4f1c5c0b530" id="r_a07d6c5c74fe0291617efe4f1c5c0b530"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a07d6c5c74fe0291617efe4f1c5c0b530">get_volume_increment</a> () const</td></tr>
<tr class="separator:a07d6c5c74fe0291617efe4f1c5c0b530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52baa075b4469ce9c99fb3598b1e3495" id="r_a52baa075b4469ce9c99fb3598b1e3495"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a52baa075b4469ce9c99fb3598b1e3495">set_temperature</a> (const double value)</td></tr>
<tr class="separator:a52baa075b4469ce9c99fb3598b1e3495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add3b52baa679fb29168078afd6f414c4" id="r_add3b52baa679fb29168078afd6f414c4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add3b52baa679fb29168078afd6f414c4">set_mass_increment</a> (const double value)</td></tr>
<tr class="separator:add3b52baa679fb29168078afd6f414c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cf60c38b7d56949f4bd938a71139b3a" id="r_a1cf60c38b7d56949f4bd938a71139b3a"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1cf60c38b7d56949f4bd938a71139b3a">set_volume_increment</a> (const double value)</td></tr>
<tr class="separator:a1cf60c38b7d56949f4bd938a71139b3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae018069db36996a8d86fd9f6c18a0cf" id="r_aae018069db36996a8d86fd9f6c18a0cf"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aae018069db36996a8d86fd9f6c18a0cf">add_temperature</a> (const double value)</td></tr>
<tr class="separator:aae018069db36996a8d86fd9f6c18a0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8f1693fb8d2e2f901791f0d55ffafd9" id="r_ad8f1693fb8d2e2f901791f0d55ffafd9"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8f1693fb8d2e2f901791f0d55ffafd9">add_explicit_fluid_momentum</a> (const double3 value)</td></tr>
<tr class="separator:ad8f1693fb8d2e2f901791f0d55ffafd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec6b9153716ae4de2399ce1cb148a35" id="r_a4ec6b9153716ae4de2399ce1cb148a35"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ec6b9153716ae4de2399ce1cb148a35">add_implicit_fluid_momentum</a> (const double value)</td></tr>
<tr class="separator:a4ec6b9153716ae4de2399ce1cb148a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a879d37039a8dac11578b008f69510232" id="r_a879d37039a8dac11578b008f69510232"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a879d37039a8dac11578b008f69510232">add_explicit_fluid_heat_transfer_rate</a> (const double value)</td></tr>
<tr class="separator:a879d37039a8dac11578b008f69510232"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc8afe09fcf6cbbc037884a382f40386" id="r_afc8afe09fcf6cbbc037884a382f40386"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afc8afe09fcf6cbbc037884a382f40386">add_implicit_fluid_heat_transfer_rate</a> (const double value)</td></tr>
<tr class="separator:afc8afe09fcf6cbbc037884a382f40386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7c53f46ae9e8420e3546939841cb267" id="r_ae7c53f46ae9e8420e3546939841cb267"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae7c53f46ae9e8420e3546939841cb267">add_mass_increment</a> (const double value)</td></tr>
<tr class="separator:ae7c53f46ae9e8420e3546939841cb267"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d6d6d09083736d7e40bb09710bfa37" id="r_a76d6d6d09083736d7e40bb09710bfa37"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a76d6d6d09083736d7e40bb09710bfa37">add_volume_increment</a> (const double value)</td></tr>
<tr class="separator:a76d6d6d09083736d7e40bb09710bfa37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c656901b88bf6938e16f0559e1f8554" id="r_a3c656901b88bf6938e16f0559e1f8554"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c656901b88bf6938e16f0559e1f8554">get_thermal_conductivity</a> () const</td></tr>
<tr class="separator:a3c656901b88bf6938e16f0559e1f8554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9ff5092bd888f58d2441f26503717b" id="r_a2e9ff5092bd888f58d2441f26503717b"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e9ff5092bd888f58d2441f26503717b">set_thermal_conductivity</a> (const double value)</td></tr>
<tr class="separator:a2e9ff5092bd888f58d2441f26503717b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e527a39101f66c5b8107634655f7ac0" id="r_a2e527a39101f66c5b8107634655f7ac0"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2e527a39101f66c5b8107634655f7ac0">get_specific_heat</a> () const</td></tr>
<tr class="separator:a2e527a39101f66c5b8107634655f7ac0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a161b925c5cb9660521995eae19230b98" id="r_a161b925c5cb9660521995eae19230b98"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a161b925c5cb9660521995eae19230b98">set_specific_heat</a> (const double value)</td></tr>
<tr class="separator:a161b925c5cb9660521995eae19230b98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2e33b5ad44cf4487e8c28f69bab1bbc" id="r_aa2e33b5ad44cf4487e8c28f69bab1bbc"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa2e33b5ad44cf4487e8c28f69bab1bbc">get_poisson_ratio</a> () const</td></tr>
<tr class="separator:aa2e33b5ad44cf4487e8c28f69bab1bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a575c4ba7f23f9b8b0344964a5ddf4e01" id="r_a575c4ba7f23f9b8b0344964a5ddf4e01"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a575c4ba7f23f9b8b0344964a5ddf4e01">set_poisson_ratio</a> (const double value)</td></tr>
<tr class="separator:a575c4ba7f23f9b8b0344964a5ddf4e01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22cb79d50006e74ccc257c1b7b7c65ce" id="r_a22cb79d50006e74ccc257c1b7b7c65ce"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22cb79d50006e74ccc257c1b7b7c65ce">get_scalar</a> (int scalar_index) const</td></tr>
<tr class="separator:a22cb79d50006e74ccc257c1b7b7c65ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18a2bdf028e0356b59e5c7bfa7d35a05" id="r_a18a2bdf028e0356b59e5c7bfa7d35a05"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18a2bdf028e0356b59e5c7bfa7d35a05">set_scalar</a> (int scalar_index, double value) const</td></tr>
<tr class="separator:a18a2bdf028e0356b59e5c7bfa7d35a05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7583200a98dabab00cb51f19e90356a4" id="r_a7583200a98dabab00cb51f19e90356a4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7583200a98dabab00cb51f19e90356a4">add_scalar</a> (int scalar_index, double value) const</td></tr>
<tr class="separator:a7583200a98dabab00cb51f19e90356a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a4b26c94d203d6b02708fa7ec52c65" id="r_a83a4b26c94d203d6b02708fa7ec52c65"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83a4b26c94d203d6b02708fa7ec52c65">max_scalar</a> (int scalar_index, double value) const</td></tr>
<tr class="separator:a83a4b26c94d203d6b02708fa7ec52c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>When running a simulation, an <code><a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a></code> gives access to all particle scalars defined in the project. These particle scalars can be built-in scalars defined in the Rocky solver, or custom particle scalars defined by the current module or other active modules. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a879d37039a8dac11578b008f69510232" name="a879d37039a8dac11578b008f69510232"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a879d37039a8dac11578b008f69510232">&#9670;&#160;</a></span>add_explicit_fluid_heat_transfer_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_explicit_fluid_heat_transfer_rate </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method adds the particle's implicit contribution into the CFD thermal energy equation</dt><dd>associated to the cell where the particle centroid is located. This operation is valid only for thermal-enabled two-way DEM-CFD coupling (please refer to the DEM-CFD Coupling Technical Manual for more details).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The particle's explicit heat transfer rate contribution. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad8f1693fb8d2e2f901791f0d55ffafd9" name="ad8f1693fb8d2e2f901791f0d55ffafd9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8f1693fb8d2e2f901791f0d55ffafd9">&#9670;&#160;</a></span>add_explicit_fluid_momentum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_explicit_fluid_momentum </td>
          <td>(</td>
          <td class="paramtype">const double3</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method adds the particle's explicit contribution into the CFD momentum equation</dt><dd>associated to the cell where the particle centroid is located. This operation is valid only for two-way DEM-CFD coupling (please refer to the DEM-CFD Coupling Technical Manual for more details).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The particle's explicit momentum contribution. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afc8afe09fcf6cbbc037884a382f40386" name="afc8afe09fcf6cbbc037884a382f40386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc8afe09fcf6cbbc037884a382f40386">&#9670;&#160;</a></span>add_implicit_fluid_heat_transfer_rate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_implicit_fluid_heat_transfer_rate </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>// This method adds the particle's implicit contribution into the CFD thermal energy equation</dt><dd>associated to the cell where the particle centroid is located. This operation is valid only for thermal-enabled two-way DEM-CFD coupling (please refer to the DEM-CFD Coupling Technical Manual for more details).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The particle's implicit heat transfer rate contribution. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4ec6b9153716ae4de2399ce1cb148a35" name="a4ec6b9153716ae4de2399ce1cb148a35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ec6b9153716ae4de2399ce1cb148a35">&#9670;&#160;</a></span>add_implicit_fluid_momentum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_implicit_fluid_momentum </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method adds the particle's implicit contribution into the CFD momentum equation</dt><dd>associated to the cell where the particle centroid is located. This operation is valid only for two-way DEM-CFD coupling (please refer to the DEM-CFD Coupling Technical Manual for more details).</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The coefficient associated to particle's implicit momentum contribution. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae7c53f46ae9e8420e3546939841cb267" name="ae7c53f46ae9e8420e3546939841cb267"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7c53f46ae9e8420e3546939841cb267">&#9670;&#160;</a></span>add_mass_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_mass_increment </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a value to the current mass increment of the particle.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value summed to the mass increment. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7583200a98dabab00cb51f19e90356a4" name="a7583200a98dabab00cb51f19e90356a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7583200a98dabab00cb51f19e90356a4">&#9670;&#160;</a></span>add_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to sum a value to the current one stored in it.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>The value that must be summed to the current stored value.<br  />
   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aae018069db36996a8d86fd9f6c18a0cf" name="aae018069db36996a8d86fd9f6c18a0cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae018069db36996a8d86fd9f6c18a0cf">&#9670;&#160;</a></span>add_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_temperature </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a value to the current temperature of the particle.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value summed to the temperature. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a76d6d6d09083736d7e40bb09710bfa37" name="a76d6d6d09083736d7e40bb09710bfa37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d6d6d09083736d7e40bb09710bfa37">&#9670;&#160;</a></span>add_volume_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::add_volume_increment </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a value to the current volume increment of the particle.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value summed to the volume increment. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a228debc629b2c74943a35a6411e85e34" name="a228debc629b2c74943a35a6411e85e34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a228debc629b2c74943a35a6411e85e34">&#9670;&#160;</a></span>get_mass_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_mass_increment </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the mass increment of the particle in relation to the initial mass at the time of entrance. Different physical processes can cause this mass increment. The mass increment is a built-in particle scalar defined in the solver. </dd></dl>

</div>
</div>
<a id="aa2e33b5ad44cf4487e8c28f69bab1bbc" name="aa2e33b5ad44cf4487e8c28f69bab1bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2e33b5ad44cf4487e8c28f69bab1bbc">&#9670;&#160;</a></span>get_poisson_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_poisson_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the Poisson's ratio assigned to the particle. The Rocky solver has a built-in particle scalar that once enabled allow particles to have a variable Poisson's ratio, which overrides the constant value specified for the particle's material. </dd></dl>

</div>
</div>
<a id="a22cb79d50006e74ccc257c1b7b7c65ce" name="a22cb79d50006e74ccc257c1b7b7c65ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22cb79d50006e74ccc257c1b7b7c65ce">&#9670;&#160;</a></span>get_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>the value currently stored can be accessed with this method.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value currently stored in the scalar variable.   </dd></dl>

</div>
</div>
<a id="a2e527a39101f66c5b8107634655f7ac0" name="a2e527a39101f66c5b8107634655f7ac0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e527a39101f66c5b8107634655f7ac0">&#9670;&#160;</a></span>get_specific_heat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_specific_heat </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the specific heat of the particle. The Rocky solver has a built-in particle scalar that once enabled allow particles to have a variable specific heat, which overrides the constant value specified for the particle's material. </dd></dl>

</div>
</div>
<a id="a4a64868ea5dae08ca841701423268d24" name="a4a64868ea5dae08ca841701423268d24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a64868ea5dae08ca841701423268d24">&#9670;&#160;</a></span>get_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_temperature </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the current particle's temperature. Temperature is a built-in particle scalar defined in the solver, enabled whenever a thermal model is active in the project. </dd></dl>

</div>
</div>
<a id="a3c656901b88bf6938e16f0559e1f8554" name="a3c656901b88bf6938e16f0559e1f8554"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c656901b88bf6938e16f0559e1f8554">&#9670;&#160;</a></span>get_thermal_conductivity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_thermal_conductivity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the thermal conductivity of the particle. The Rocky solver has a built-in particle scalar that once enabled allow particles to have a variable thermal conductivity, which overrides the constant value specified for the particle's material. </dd></dl>

</div>
</div>
<a id="a07d6c5c74fe0291617efe4f1c5c0b530" name="a07d6c5c74fe0291617efe4f1c5c0b530"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07d6c5c74fe0291617efe4f1c5c0b530">&#9670;&#160;</a></span>get_volume_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticleScalars::get_volume_increment </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the volume increment of the particle in relation to the initial volume at the time of entrance. Different physical processes can cause this volume increment. The volume increment is a built-in particle scalar defined in the solver. </dd></dl>

</div>
</div>
<a id="a83a4b26c94d203d6b02708fa7ec52c65" name="a83a4b26c94d203d6b02708fa7ec52c65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83a4b26c94d203d6b02708fa7ec52c65">&#9670;&#160;</a></span>max_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::max_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to make the scalar store the maximum of a set of values. A common use of this method is, for instance, to find the maximum among a set of values associated to the contacts of a particle.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>A value that must be checked if it is greater than the current stored value.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="add3b52baa679fb29168078afd6f414c4" name="add3b52baa679fb29168078afd6f414c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add3b52baa679fb29168078afd6f414c4">&#9670;&#160;</a></span>set_mass_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_mass_increment </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the mass increment of the particle in relation</dt><dd>to the initial mass at the time of entrance.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the mass increment. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a575c4ba7f23f9b8b0344964a5ddf4e01" name="a575c4ba7f23f9b8b0344964a5ddf4e01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a575c4ba7f23f9b8b0344964a5ddf4e01">&#9670;&#160;</a></span>set_poisson_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_poisson_ratio </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the Poisson's ratio for the associated particle, if</dt><dd>the corresponding built-in particle scalar was enabled. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the Poisson's ratio for the particle. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a18a2bdf028e0356b59e5c7bfa7d35a05" name="a18a2bdf028e0356b59e5c7bfa7d35a05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18a2bdf028e0356b59e5c7bfa7d35a05">&#9670;&#160;</a></span>set_scalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to store a value on it.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>The value that must be stored.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a161b925c5cb9660521995eae19230b98" name="a161b925c5cb9660521995eae19230b98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a161b925c5cb9660521995eae19230b98">&#9670;&#160;</a></span>set_specific_heat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_specific_heat </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the specific heat for the associated particle, if</dt><dd>the corresponding built-in particle scalar was enabled. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the particle's specific heat. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a52baa075b4469ce9c99fb3598b1e3495" name="a52baa075b4469ce9c99fb3598b1e3495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52baa075b4469ce9c99fb3598b1e3495">&#9670;&#160;</a></span>set_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_temperature </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the temperature of the particle.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the temperature. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2e9ff5092bd888f58d2441f26503717b" name="a2e9ff5092bd888f58d2441f26503717b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e9ff5092bd888f58d2441f26503717b">&#9670;&#160;</a></span>set_thermal_conductivity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_thermal_conductivity </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the thermal conductivity for the associated particle, if</dt><dd>the corresponding built-in particle scalar was enabled. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the particle's thermal conductivity. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1cf60c38b7d56949f4bd938a71139b3a" name="a1cf60c38b7d56949f4bd938a71139b3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cf60c38b7d56949f4bd938a71139b3a">&#9670;&#160;</a></span>set_volume_increment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticleScalars::set_volume_increment </td>
          <td>(</td>
          <td class="paramtype">const double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the value of the volume increment of the particle in relation</dt><dd>to the initial volume at the time of entrance.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the volume increment. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
