<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockySPHElementScalarsModel Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockySPHElementScalarsModel.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockySPHElementScalarsModel Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__sph__element__scalars_8hpp_source.xhtml">rocky_sph_element_scalars.hpp</a>&gt;</code></p>

<p>Inherits ScalarsModel&lt; rocky20::SPHParticleScalarsController &gt;.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a16f0c80fcfcc46485a0cdb5523eba2bf" id="r_a16f0c80fcfcc46485a0cdb5523eba2bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a16f0c80fcfcc46485a0cdb5523eba2bf">set_operation</a> (int scalar_index, ESPHOperationType operation, ESPHOperationPlace place)</td></tr>
<tr class="separator:a16f0c80fcfcc46485a0cdb5523eba2bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac46511b18b436d5cec83047f8e1e331f" id="r_ac46511b18b436d5cec83047f8e1e331f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac46511b18b436d5cec83047f8e1e331f">enable_velocity_gradient</a> () const</td></tr>
<tr class="separator:ac46511b18b436d5cec83047f8e1e331f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fbb7ee252cf15717b7fbe4dfb148fa2" id="r_a3fbb7ee252cf15717b7fbe4dfb148fa2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3fbb7ee252cf15717b7fbe4dfb148fa2">enable_variable_molecular_viscosity</a> () const</td></tr>
<tr class="separator:a3fbb7ee252cf15717b7fbe4dfb148fa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08368398c992a677000337a1c6b87836" id="r_a08368398c992a677000337a1c6b87836"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a08368398c992a677000337a1c6b87836">find</a> (const char *name)</td></tr>
<tr class="separator:a08368398c992a677000337a1c6b87836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ee97eb19ead27e53c0e240f871d09b5" id="r_a9ee97eb19ead27e53c0e240f871d09b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ee97eb19ead27e53c0e240f871d09b5">reset</a> (int scalar_index)</td></tr>
<tr class="separator:a9ee97eb19ead27e53c0e240f871d09b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dd4ff3f064eea4b4d112155d20aadf1" id="r_a0dd4ff3f064eea4b4d112155d20aadf1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0dd4ff3f064eea4b4d112155d20aadf1">set_dimension</a> (int scalar_index, double dimension_factor)</td></tr>
<tr class="separator:a0dd4ff3f064eea4b4d112155d20aadf1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab522d175868cf8f58efc33f6df21eb07" id="r_ab522d175868cf8f58efc33f6df21eb07"><td class="memTemplParams" colspan="2">template&lt;class _data_type  = float&gt; </td></tr>
<tr class="memitem:ab522d175868cf8f58efc33f6df21eb07"><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#ab522d175868cf8f58efc33f6df21eb07">add</a> (const char *name, const char *unit, bool output=true)</td></tr>
<tr class="separator:ab522d175868cf8f58efc33f6df21eb07"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>An <code><a class="el" href="structIRockySPHElementScalarsModel.xhtml">IRockySPHElementScalarsModel</a></code> object allows users to add new SPH element scalars, find SPH element scalars created in other modules or activate SPH element scalars defined into the Rocky solver, during the setup stage of a module. SPH element scalars are special variables attached to SPH elements, which are able to store values per SPH element that are preserved between time iterations during a simulation. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ab522d175868cf8f58efc33f6df21eb07" name="ab522d175868cf8f58efc33f6df21eb07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab522d175868cf8f58efc33f6df21eb07">&#9670;&#160;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _data_type  = float&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">int IRockySPHElementScalarsModel::add </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>unit</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>output</em><span class="paramdefsep"> = </span><span class="paramdefval">true</span></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>This method creates a new scalar variable of type <code>double</code></dt><dd>for storing custom values during a simulation, preserving them between time iterations.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name given to the scalar variable. The purpose of this name is twofold. First, it enables to find this scalar variable from other module, in order to share their values. Second, if the scalar variable can be displayed in a 3D window as a property, this name will identify it in the Rocky UI.</td></tr>
    <tr><td class="paramname">unit</td><td>A string specifying the unit in S.I. associated to the scalar variable.</td></tr>
    <tr><td class="paramname">output</td><td>Enables/disables the storage in disk at output times, for the visualization and post-processing of the scalar values.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index that will uniquely identify the scalar variable during the execution of the simulation.   </dd></dl>

</div>
</div>
<a id="a3fbb7ee252cf15717b7fbe4dfb148fa2" name="a3fbb7ee252cf15717b7fbe4dfb148fa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fbb7ee252cf15717b7fbe4dfb148fa2">&#9670;&#160;</a></span>enable_variable_molecular_viscosity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockySPHElementScalarsModel::enable_variable_molecular_viscosity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Enables a known-scalar that defines the molecular viscosity as a variable property of</dt><dd>SPH Elements. When this scalar is enabled, a different value of molecular viscosity can be specified for each element in a simulation, and this value will be used everywhere in the Rocky solver instead of the constant value specified for the fluid's material in the Rocky UI. </dd></dl>

</div>
</div>
<a id="ac46511b18b436d5cec83047f8e1e331f" name="ac46511b18b436d5cec83047f8e1e331f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac46511b18b436d5cec83047f8e1e331f">&#9670;&#160;</a></span>enable_velocity_gradient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockySPHElementScalarsModel::enable_velocity_gradient </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Enables the automatic calculation of the components of the velocity gradient, which are</dt><dd>needed for the calculation of the strain-rate tensor. </dd></dl>

</div>
</div>
<a id="a08368398c992a677000337a1c6b87836" name="a08368398c992a677000337a1c6b87836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08368398c992a677000337a1c6b87836">&#9670;&#160;</a></span>find()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockySPHElementScalarsModel::find </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>name</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>This method searches for a scalar variable already created by other modules,</dt><dd>in order to allow access to its values, or store new values on it, during the execution of the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name given to the scalar at the moment of its creation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index that uniquely identifies the wanted scalar if it was actually found. It returns -1 otherwise.   </dd></dl>

</div>
</div>
<a id="a9ee97eb19ead27e53c0e240f871d09b5" name="a9ee97eb19ead27e53c0e240f871d09b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ee97eb19ead27e53c0e240f871d09b5">&#9670;&#160;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockySPHElementScalarsModel::reset </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>This method resets to zero all values stored in a scalar variable.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The index attributed to the scalar variable at the moment of its creation.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0dd4ff3f064eea4b4d112155d20aadf1" name="a0dd4ff3f064eea4b4d112155d20aadf1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0dd4ff3f064eea4b4d112155d20aadf1">&#9670;&#160;</a></span>set_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockySPHElementScalarsModel::set_dimension </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension_factor</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor</dt><dd>to a scalar variable. This factor will be used to nondimensionalize their values. For instance, if the scalar represents a force, a force dimensional factor must be associated through this method. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The index attributed to the scalar variable at the moment of its creation.</td></tr>
    <tr><td class="paramname">dimension_factor</td><td>The appropriate dimensional factor for the scalar variable.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a16f0c80fcfcc46485a0cdb5523eba2bf" name="a16f0c80fcfcc46485a0cdb5523eba2bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16f0c80fcfcc46485a0cdb5523eba2bf">&#9670;&#160;</a></span>set_operation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockySPHElementScalarsModel::set_operation </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ESPHOperationType</td>          <td class="paramname"><span class="paramname"><em>operation</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ESPHOperationPlace</td>          <td class="paramname"><span class="paramname"><em>place</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>SPH element scalars have a unique feature between all scalars in Rocky, which is the</dt><dd>ability of configuring automatic operations that the Rocky solver can perform over them at specific points of the iterative cycle. This method is designed for a custom module to perform such configuration. An example of the usage of such feature would be in a SPH scalar created for accumulating the heat flow rate that goes to every SPH element from its neighbors at a given time. That scalar needs to be reset before doing that accumulation, for instance, within a <code>ROCKY_PLUGIN_PRE_MOVE_ON_SPH_PARTICLE_INTERACTIONS</code>. Moreover, after performing the accumulation of individual heat flow rates, for multi-GPU simulations it will be needed to sum the values stored in halo regions before using them for solving the thermal balance equation for the SPH elements, and then update back those values across devices. The operations currently available and the points at which they can be performed are listed below.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The index of the SPH element scalar over which the operation will be made.</td></tr>
    <tr><td class="paramname">operation</td><td>The operation that will be performed. There are defined currently the following operations:<br  />
 <code>sphotReset</code>: reset to zero all stored values. This operation takes place at the beginning of the SPH hooks iteration.<br  />
 <code>sphotSum</code>: sum values stored in halo regions, in a multi-GPU scenario. This operation takes place after SPH Interactions hooks.<br  />
 <code>sphotUpdate</code>: update the summed values back to the halo regions, in a multi-GPU scenario. This operation takes place after SPH Particles hooks.<br  />
</td></tr>
    <tr><td class="paramname">place</td><td>The point within the iterative loop where the operation will be performed. Each possible place is associated to one of the SPH hooks described in previously in section \techref{s:sph_hooks}. The corresponding enumerate keys that can be used to define those places are the following:<br  />
 <code>sphopPreForce</code><br  />
 <code>sphopPreForce1</code><br  />
 <code>sphopPreForce2</code><br  />
 <code>sphopPreForce3</code><br  />
 <code>sphopPreForce4</code><br  />
 <code>sphopForce</code><br  />
 <code>sphopPostForce</code><br  />
 <code>sphopPostForce1</code><br  />
 <code>sphopPostForce2</code><br  />
 <code>sphopPostForce3</code><br  />
 <code>sphopPostForce4</code><br  />
 <code>sphopPreMove</code><br  />
 <code>sphopPreMove1</code><br  />
 <code>sphopPreMove2</code><br  />
 <code>sphopPreMove3</code><br  />
 <code>sphopPreMove4</code><br  />
 <code>sphopPostMove</code><br  />
 <code>sphopPostMove1</code><br  />
 <code>sphopPostMove2</code><br  />
 <code>sphopPostMove3</code><br  />
 <code>sphopPostMove4</code><br  />
 <code>sphopHeatTransfer</code><br  />
 </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockySPHElementScalarsModel.xhtml">IRockySPHElementScalarsModel</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
