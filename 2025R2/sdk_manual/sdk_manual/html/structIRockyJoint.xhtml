<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockyJoint Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockyJoint.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockyJoint Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__joint__api_8hpp_source.xhtml">rocky_joint_api.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab006cbc3b38064611dfa5dae2cbdf672" id="r_ab006cbc3b38064611dfa5dae2cbdf672"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab006cbc3b38064611dfa5dae2cbdf672">get_elastic_force</a> () const</td></tr>
<tr class="separator:ab006cbc3b38064611dfa5dae2cbdf672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3447c9a4ef194097e8c3898b25ebe942" id="r_a3447c9a4ef194097e8c3898b25ebe942"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double3 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3447c9a4ef194097e8c3898b25ebe942">get_moments_due_to_force</a> (double3 force) const</td></tr>
<tr class="separator:a3447c9a4ef194097e8c3898b25ebe942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eeb46a9210aeaf532467ecb77c580e7" id="r_a8eeb46a9210aeaf532467ecb77c580e7"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8eeb46a9210aeaf532467ecb77c580e7">get_elastic_moment</a> () const</td></tr>
<tr class="separator:a8eeb46a9210aeaf532467ecb77c580e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c2d0b63f577c279227b2df8daffbf5c" id="r_a7c2d0b63f577c279227b2df8daffbf5c"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7c2d0b63f577c279227b2df8daffbf5c">get_damping_force</a> () const</td></tr>
<tr class="separator:a7c2d0b63f577c279227b2df8daffbf5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71de79fea3ed20ae451b5cb36d2b6349" id="r_a71de79fea3ed20ae451b5cb36d2b6349"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a71de79fea3ed20ae451b5cb36d2b6349">get_damping_moment</a> () const</td></tr>
<tr class="separator:a71de79fea3ed20ae451b5cb36d2b6349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add47e1c2a985abef3a9fef24c44902e2" id="r_add47e1c2a985abef3a9fef24c44902e2"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add47e1c2a985abef3a9fef24c44902e2">get_normal_deformation</a> () const</td></tr>
<tr class="separator:add47e1c2a985abef3a9fef24c44902e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d324dbcee8a4366284a5fb84547dd9d" id="r_a3d324dbcee8a4366284a5fb84547dd9d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d324dbcee8a4366284a5fb84547dd9d">get_tangential_deformation</a> () const</td></tr>
<tr class="separator:a3d324dbcee8a4366284a5fb84547dd9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd22a485b99c59a2141dff07e6f9b9e0" id="r_abd22a485b99c59a2141dff07e6f9b9e0"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abd22a485b99c59a2141dff07e6f9b9e0">get_normal_deformation_velocity</a> () const</td></tr>
<tr class="separator:abd22a485b99c59a2141dff07e6f9b9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e3299e0b5a35128aff0ca6f7604e38" id="r_a35e3299e0b5a35128aff0ca6f7604e38"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35e3299e0b5a35128aff0ca6f7604e38">get_tangential_deformation_velocity</a> () const</td></tr>
<tr class="separator:a35e3299e0b5a35128aff0ca6f7604e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c84ef4dad6d9e1f38b2d227ac1f083a" id="r_a7c84ef4dad6d9e1f38b2d227ac1f083a"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7c84ef4dad6d9e1f38b2d227ac1f083a">get_number_angular_deformations</a> () const</td></tr>
<tr class="separator:a7c84ef4dad6d9e1f38b2d227ac1f083a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46c8b6ca5aa8e78f55cb6c0a70f1cc6d" id="r_a46c8b6ca5aa8e78f55cb6c0a70f1cc6d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a46c8b6ca5aa8e78f55cb6c0a70f1cc6d">get_angular_deformation</a> (int deformation_direction) const</td></tr>
<tr class="separator:a46c8b6ca5aa8e78f55cb6c0a70f1cc6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1be4ec6e88935d14a4b900d09fdbfadf" id="r_a1be4ec6e88935d14a4b900d09fdbfadf"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1be4ec6e88935d14a4b900d09fdbfadf">get_angular_deformation_velocity</a> (int deformation_direction) const</td></tr>
<tr class="separator:a1be4ec6e88935d14a4b900d09fdbfadf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4c1028eba2077ae552c21aba43ce638" id="r_ae4c1028eba2077ae552c21aba43ce638"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4c1028eba2077ae552c21aba43ce638">get_angular_deformation_direction</a> (int deformation_direction) const</td></tr>
<tr class="separator:ae4c1028eba2077ae552c21aba43ce638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47718a93f4aa6bffe9ef0e03bfff3fa9" id="r_a47718a93f4aa6bffe9ef0e03bfff3fa9"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47718a93f4aa6bffe9ef0e03bfff3fa9">get_normal_stiffness</a> () const</td></tr>
<tr class="separator:a47718a93f4aa6bffe9ef0e03bfff3fa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48e95a4cc7245305980339ea8ddf43b3" id="r_a48e95a4cc7245305980339ea8ddf43b3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a48e95a4cc7245305980339ea8ddf43b3">get_tangential_stiffness</a> () const</td></tr>
<tr class="separator:a48e95a4cc7245305980339ea8ddf43b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a299b8659e8bb2ddba28de92d18055e5b" id="r_a299b8659e8bb2ddba28de92d18055e5b"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a299b8659e8bb2ddba28de92d18055e5b">get_angular_stiffness</a> (int deformation_direction) const</td></tr>
<tr class="separator:a299b8659e8bb2ddba28de92d18055e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad55375a544cfd11a0c0fb52986b1fc74" id="r_ad55375a544cfd11a0c0fb52986b1fc74"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad55375a544cfd11a0c0fb52986b1fc74">get_normal_damping_coefficient</a> () const</td></tr>
<tr class="separator:ad55375a544cfd11a0c0fb52986b1fc74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25c86f76033636ab37b3ff19ba60b41a" id="r_a25c86f76033636ab37b3ff19ba60b41a"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a25c86f76033636ab37b3ff19ba60b41a">get_tangential_damping_coefficient</a> () const</td></tr>
<tr class="separator:a25c86f76033636ab37b3ff19ba60b41a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83db4989103e17e6158b6e96a030457d" id="r_a83db4989103e17e6158b6e96a030457d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83db4989103e17e6158b6e96a030457d">get_angular_damping_coefficient</a> (int deformation_direction) const</td></tr>
<tr class="separator:a83db4989103e17e6158b6e96a030457d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af300e95bee5d2a332c3085e6fad91af2" id="r_af300e95bee5d2a332c3085e6fad91af2"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af300e95bee5d2a332c3085e6fad91af2">get_normal_vector</a> () const</td></tr>
<tr class="separator:af300e95bee5d2a332c3085e6fad91af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2ea637b5ce30f553c19f973411ef451" id="r_af2ea637b5ce30f553c19f973411ef451"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2ea637b5ce30f553c19f973411ef451">get_area</a> () const</td></tr>
<tr class="separator:af2ea637b5ce30f553c19f973411ef451"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22573a85d220d9db4afa1b0f67337196" id="r_a22573a85d220d9db4afa1b0f67337196"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22573a85d220d9db4afa1b0f67337196">get_area_moment_of_inertia</a> (int deformation_direction) const</td></tr>
<tr class="separator:a22573a85d220d9db4afa1b0f67337196"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d57d8f171e77be4e1de3f2eb2b10fb3" id="r_a2d57d8f171e77be4e1de3f2eb2b10fb3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2d57d8f171e77be4e1de3f2eb2b10fb3">get_young_modulus</a> () const</td></tr>
<tr class="separator:a2d57d8f171e77be4e1de3f2eb2b10fb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09693f2837c14dfb1a0fa4d40373553f" id="r_a09693f2837c14dfb1a0fa4d40373553f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09693f2837c14dfb1a0fa4d40373553f">get_poisson_ratio</a> () const</td></tr>
<tr class="separator:a09693f2837c14dfb1a0fa4d40373553f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0912316f01b3785c5f711aad2a3ebde1" id="r_a0912316f01b3785c5f711aad2a3ebde1"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0912316f01b3785c5f711aad2a3ebde1">get_normal_elastic_ratio</a> () const</td></tr>
<tr class="separator:a0912316f01b3785c5f711aad2a3ebde1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeae504e7d95c787e088c8dd5a55c83c" id="r_aeeae504e7d95c787e088c8dd5a55c83c"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeeae504e7d95c787e088c8dd5a55c83c">get_tangential_elastic_ratio</a> () const</td></tr>
<tr class="separator:aeeae504e7d95c787e088c8dd5a55c83c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23fa06ce00c95412142f49e82825bca1" id="r_a23fa06ce00c95412142f49e82825bca1"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23fa06ce00c95412142f49e82825bca1">get_torsion_elastic_ratio</a> () const</td></tr>
<tr class="separator:a23fa06ce00c95412142f49e82825bca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83474e7ee11615ca201de8fec94c8c22" id="r_a83474e7ee11615ca201de8fec94c8c22"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a83474e7ee11615ca201de8fec94c8c22">get_bending_elastic_ratio</a> () const</td></tr>
<tr class="separator:a83474e7ee11615ca201de8fec94c8c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a997ad60ff60b99d485c1d3d2fce74ff2" id="r_a997ad60ff60b99d485c1d3d2fce74ff2"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a997ad60ff60b99d485c1d3d2fce74ff2">get_joint_damping_ratio</a> () const</td></tr>
<tr class="separator:a997ad60ff60b99d485c1d3d2fce74ff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a200f5da4324981ce63eeca693082ce3f" id="r_a200f5da4324981ce63eeca693082ce3f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a200f5da4324981ce63eeca693082ce3f">get_angle_scaling_factor</a> () const</td></tr>
<tr class="separator:a200f5da4324981ce63eeca693082ce3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d243061f43d6e0a291de65afec3b3c" id="r_a53d243061f43d6e0a291de65afec3b3c"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a53d243061f43d6e0a291de65afec3b3c">get_equivalent_mass</a> () const</td></tr>
<tr class="separator:a53d243061f43d6e0a291de65afec3b3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78b35364784e0ffe09508d99facd5a3" id="r_ad78b35364784e0ffe09508d99facd5a3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad78b35364784e0ffe09508d99facd5a3">get_normal_stiffness_per_area</a> () const</td></tr>
<tr class="separator:ad78b35364784e0ffe09508d99facd5a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1444e28a82d898d15775180373952ee1" id="r_a1444e28a82d898d15775180373952ee1"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1444e28a82d898d15775180373952ee1">get_tangential_stiffness_per_area</a> () const</td></tr>
<tr class="separator:a1444e28a82d898d15775180373952ee1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f87ef623553e934f8fdca19d163669a" id="r_a2f87ef623553e934f8fdca19d163669a"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f87ef623553e934f8fdca19d163669a">get_young_modulus_multiplier</a> () const</td></tr>
<tr class="separator:a2f87ef623553e934f8fdca19d163669a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af78ec40df8e4715343434772668bf70d" id="r_af78ec40df8e4715343434772668bf70d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyJointScalars.xhtml">IRockyJointScalars</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af78ec40df8e4715343434772668bf70d">get_scalars</a> ()</td></tr>
<tr class="separator:af78ec40df8e4715343434772668bf70d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd6105a244aacfbbc5a833760c7ca1b9" id="r_acd6105a244aacfbbc5a833760c7ca1b9"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acd6105a244aacfbbc5a833760c7ca1b9">get_home_element_orientation</a> () const</td></tr>
<tr class="separator:acd6105a244aacfbbc5a833760c7ca1b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addfb58409bb1dc5703d9d3ab64b3e458" id="r_addfb58409bb1dc5703d9d3ab64b3e458"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#addfb58409bb1dc5703d9d3ab64b3e458">get_near_element_orientation</a> () const</td></tr>
<tr class="separator:addfb58409bb1dc5703d9d3ab64b3e458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4422c62fbad4e4f34c011d683fc0d859" id="r_a4422c62fbad4e4f34c011d683fc0d859"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4422c62fbad4e4f34c011d683fc0d859">get_home_element_centroid_position</a> () const</td></tr>
<tr class="separator:a4422c62fbad4e4f34c011d683fc0d859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a804cfa90d13e065de6d983d7a35caf" id="r_a3a804cfa90d13e065de6d983d7a35caf"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a804cfa90d13e065de6d983d7a35caf">get_near_element_centroid_position</a> () const</td></tr>
<tr class="separator:a3a804cfa90d13e065de6d983d7a35caf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a5ed840cdc8b276f3ff65ad8148a3c" id="r_a86a5ed840cdc8b276f3ff65ad8148a3c"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a86a5ed840cdc8b276f3ff65ad8148a3c">get_home_arm</a> () const</td></tr>
<tr class="separator:a86a5ed840cdc8b276f3ff65ad8148a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4129719851a851ff1ac7d0190d834ad3" id="r_a4129719851a851ff1ac7d0190d834ad3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4129719851a851ff1ac7d0190d834ad3">get_near_arm</a> () const</td></tr>
<tr class="separator:a4129719851a851ff1ac7d0190d834ad3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37e1bd3fb20a03cf9be8a2d4dd317d22" id="r_a37e1bd3fb20a03cf9be8a2d4dd317d22"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS thrust::tuple&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a37e1bd3fb20a03cf9be8a2d4dd317d22">get_element_tags</a> () const</td></tr>
<tr class="separator:a37e1bd3fb20a03cf9be8a2d4dd317d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><code><a class="el" href="structIRockyJoint.xhtml">IRockyJoint</a></code> is an interface for the internal joint object in Rocky. It contains methods that give access to joint physical properties and geometric data, in order to implement a custom model for the response of a joint to deformations. All property and variable values made available through <code><a class="el" href="structIRockyJoint.xhtml">IRockyJoint</a></code> are dimensionless.</p>
<p>When it is necessary to distinguish between the two elements linked by a joint, one is referred to as <em>home element</em>, whereas the other is referred to as <em>near element</em>. The local coordinate framework associated to a joint has the normal unit vector always pointing from the home element to the near element. Whenever the name of a method or object associated to a joint includes the prefix <em>home</em> or <em>near</em>, that means the method or object is related to the home or near element. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a200f5da4324981ce63eeca693082ce3f" name="a200f5da4324981ce63eeca693082ce3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a200f5da4324981ce63eeca693082ce3f">&#9670;&#160;</a></span>get_angle_scaling_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_angle_scaling_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>When the number of elements making up a flexible particle is increased,</dt><dd>the bending deformation angles tend to decrease, for the same configuration of external forces acting on the particle. This is a side effect of the discretized representation of a flexible particle. In order to prevent the abnormal influence of this phenomenon on models that have a bending angle as a parameter (for instance a threshold angle for the change of regime), that angle can be multiplied by the scaling factor provided by this function. This scaling factor is defined as the inverse of the number of elements of the particle, when it is a fiber. For shells, it is defined as the inverse of the square root of the number of elements.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The angle scaling factor defined above. </dd></dl>

</div>
</div>
<a id="a83db4989103e17e6158b6e96a030457d" name="a83db4989103e17e6158b6e96a030457d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83db4989103e17e6158b6e96a030457d">&#9670;&#160;</a></span>get_angular_damping_coefficient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_angular_damping_coefficient </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the damping coefficient for computing a viscous moment</dt><dd>in one of the three orthogonal local directions.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A damping coefficient calculated with one of the following equations of the DEM Technical Manual: equation 3.25 if deformation_direction = 0, equation 3.26 if deformation_direction = 1, or equation 3.27 if deformation_direction = 2. </dd></dl>

</div>
</div>
<a id="a46c8b6ca5aa8e78f55cb6c0a70f1cc6d" name="a46c8b6ca5aa8e78f55cb6c0a70f1cc6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46c8b6ca5aa8e78f55cb6c0a70f1cc6d">&#9670;&#160;</a></span>get_angular_deformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_angular_deformation </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the angular deformation of the joint in one of the</dt><dd>possible three mutually orthogonal directions. Figure 3.7 of the DEM Technical Manual illustrates those angles and directions for the shell case.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion direction, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value of the angle for the given direction. </dd></dl>

</div>
</div>
<a id="ae4c1028eba2077ae552c21aba43ce638" name="ae4c1028eba2077ae552c21aba43ce638"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4c1028eba2077ae552c21aba43ce638">&#9670;&#160;</a></span>get_angular_deformation_direction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_angular_deformation_direction </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Returns the unit vector in one of the three mutually orthogonal</dt><dd>directions that define the joint local framework.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The unit vector in Cartesian coordinates associated to for the given direction. </dd></dl>

</div>
</div>
<a id="a1be4ec6e88935d14a4b900d09fdbfadf" name="a1be4ec6e88935d14a4b900d09fdbfadf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1be4ec6e88935d14a4b900d09fdbfadf">&#9670;&#160;</a></span>get_angular_deformation_velocity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_angular_deformation_velocity </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the angular deformation velocity of the joint</dt><dd>in one of the possible three mutually orthogonal directions.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The magnitude of the angular deformation velocity for the given direction. </dd></dl>

</div>
</div>
<a id="a299b8659e8bb2ddba28de92d18055e5b" name="a299b8659e8bb2ddba28de92d18055e5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a299b8659e8bb2ddba28de92d18055e5b">&#9670;&#160;</a></span>get_angular_stiffness()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_angular_stiffness </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the stiffness value for computing a joint moment</dt><dd>in one of the three orthogonal local directions, according to the linear elastic model. This stiffness can be used as a reference stiffness value for calculating a joint moment with a custom joint model.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A stiffness value calculated with one of the following equations of the DEM Technical Manual: equation 3.10 if deformation_direction = 0, equation 3.11 if deformation_direction = 1, or equation 3.12 if deformation_direction = 2. </dd></dl>

</div>
</div>
<a id="af2ea637b5ce30f553c19f973411ef451" name="af2ea637b5ce30f553c19f973411ef451"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2ea637b5ce30f553c19f973411ef451">&#9670;&#160;</a></span>get_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_area </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The cross sectional area associated to the joint. For fibers, it will be the area of the circular section of the element with smaller diameter between the two connected by the joint. For shells, it will be the area of the rectangle whose dimensions are the shell thickness and the length of the corresponding triangle's edge. For polyhedra, it will be the area of the triangular face common to the two tetrahedral elements connected by the joint. </dd></dl>

</div>
</div>
<a id="a22573a85d220d9db4afa1b0f67337196" name="a22573a85d220d9db4afa1b0f67337196"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22573a85d220d9db4afa1b0f67337196">&#9670;&#160;</a></span>get_area_moment_of_inertia()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_area_moment_of_inertia </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>deformation_direction</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">deformation_direction</td><td>An integer index that identifies the deformation direction. The three possible values for this parameter are: 0 &ndash; torsion, 1 &ndash; first bending direction, 2 &ndash; second bending direction.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The area moment of inertia of the cross section of the joint associated to deformation_direction. If deformation_direction = 0, the polar area moment of inertia is returned. </dd></dl>

</div>
</div>
<a id="a83474e7ee11615ca201de8fec94c8c22" name="a83474e7ee11615ca201de8fec94c8c22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83474e7ee11615ca201de8fec94c8c22">&#9670;&#160;</a></span>get_bending_elastic_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_bending_elastic_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The bending elastic ratio is defined as the ratio between the Young's modulus</dt><dd>employed for calculating the stiffness for bending deformations to the Young's modulus specified for the particle's material.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>If the [Anisotropic] option is enabled in the Rocky UI, it will return the value specified for the elastic ratio for bending deformations. Otherwise, it is assumed an isotropic behavior and it will return the value specified for the only elastic ratio that appears in the Rocky UI. </dd></dl>

</div>
</div>
<a id="a7c2d0b63f577c279227b2df8daffbf5c" name="a7c2d0b63f577c279227b2df8daffbf5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c2d0b63f577c279227b2df8daffbf5c">&#9670;&#160;</a></span>get_damping_force()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_damping_force </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates a viscous force proportional to the linear deformation</dt><dd>velocity of the joint. The addition of this force introduces a mechanism of energy dissipation that may help to attenuate internal vibrations between elements in a flexible particle. The force provided by this method is defined as positive in relation to the home element, and negative in relation to the near element.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates, obtained as the vector sum of the forces defined in equations 3.18 and 3.19 of the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a71de79fea3ed20ae451b5cb36d2b6349" name="a71de79fea3ed20ae451b5cb36d2b6349"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71de79fea3ed20ae451b5cb36d2b6349">&#9670;&#160;</a></span>get_damping_moment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_damping_moment </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates a viscous moment proportional to the angular deformation velocity</dt><dd>of the joint. The addition of this moment introduces a mechanism of energy dissipation that may help to attenuate internal angular oscillations between elements in a flexible particle.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates, obtained as the vector sum of the moments defined in equations 3.20, 3.21 and 3.22 of the DEM Technical Manual. When the flexible particle is a fiber, equation 3.22 is disregarded because bending occurs in only one direction in that case. The moment provided by this method is defined as positive in relation to the home element, and negative in relation to the near element. </dd></dl>

</div>
</div>
<a id="ab006cbc3b38064611dfa5dae2cbdf672" name="ab006cbc3b38064611dfa5dae2cbdf672"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab006cbc3b38064611dfa5dae2cbdf672">&#9670;&#160;</a></span>get_elastic_force()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_elastic_force </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the resultant force according to the linear elastic model</dt><dd>described in the DEM Technical Manual. This is useful when the custom module is going to implement a new model only for joint moments, while using the standard linear elastic model for the joint force. The force provided by this method is defined as positive in relation to the home element, and negative in relation to the near element.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates, obtained as the vector sum of the normal and tangential forces, as defined in the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a8eeb46a9210aeaf532467ecb77c580e7" name="a8eeb46a9210aeaf532467ecb77c580e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eeb46a9210aeaf532467ecb77c580e7">&#9670;&#160;</a></span>get_elastic_moment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_elastic_moment </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the resultant moment according to the linear elastic model</dt><dd>described in section 3.2.1 of the DEM Technical Manual. This is useful when the custom module is going to implement a new model only for the joint forces, while using the standard linear elastic model for the joint moments. The moment provided by this method is defined as positive in relation to the home element, and negative in relation to the near element.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates, obtained as the vector sum of the moments defined in equations 3.5, 3.6 and 3.7 of the DEM Technical Manual. When the flexible particle is a fiber, equation 3.7 is disregarded, because only one bending moment exists in that case. </dd></dl>

</div>
</div>
<a id="a37e1bd3fb20a03cf9be8a2d4dd317d22" name="a37e1bd3fb20a03cf9be8a2d4dd317d22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37e1bd3fb20a03cf9be8a2d4dd317d22">&#9670;&#160;</a></span>get_element_tags()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS thrust::tuple&lt; int, int &gt; IRockyJoint::get_element_tags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The values of custom tags (integer values) assigned to the two elements attached to the joint. These tags are inherited from tags assigned to the segments that define the center line of a custom fiber. The values of those tags must be specified in the column labeled "tag" in the csv file that defines the geometry of a custom fiber. If tags are not defined for a custom fiber or if this function is used with flexible particles other than custom fibers, this function will return two values equal to -1. </dd></dl>

</div>
</div>
<a id="a53d243061f43d6e0a291de65afec3b3c" name="a53d243061f43d6e0a291de65afec3b3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53d243061f43d6e0a291de65afec3b3c">&#9670;&#160;</a></span>get_equivalent_mass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_equivalent_mass </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The equivalent or effective mass used for calculating joint damping coefficients as indicated, for instance. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a86a5ed840cdc8b276f3ff65ad8148a3c" name="a86a5ed840cdc8b276f3ff65ad8148a3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86a5ed840cdc8b276f3ff65ad8148a3c">&#9670;&#160;</a></span>get_home_arm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_home_arm </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The vector that joins the <em>home element</em> center to the joint center. </dd></dl>

</div>
</div>
<a id="a4422c62fbad4e4f34c011d683fc0d859" name="a4422c62fbad4e4f34c011d683fc0d859"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4422c62fbad4e4f34c011d683fc0d859">&#9670;&#160;</a></span>get_home_element_centroid_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_home_element_centroid_position </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The joint <em>home element</em> center point coordinates. </dd></dl>

</div>
</div>
<a id="acd6105a244aacfbbc5a833760c7ca1b9" name="acd6105a244aacfbbc5a833760c7ca1b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd6105a244aacfbbc5a833760c7ca1b9">&#9670;&#160;</a></span>get_home_element_orientation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt; IRockyJoint::get_home_element_orientation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A tuple whose two components define the axis-angle <em>home</em> element orientation. The first one is a three dimensional vector representing the orientation axis, the second one is a single value representing the angle. </dd></dl>

</div>
</div>
<a id="a997ad60ff60b99d485c1d3d2fce74ff2" name="a997ad60ff60b99d485c1d3d2fce74ff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a997ad60ff60b99d485c1d3d2fce74ff2">&#9670;&#160;</a></span>get_joint_damping_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_joint_damping_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the damping ratio specified for the joint, used in the joint damping model. This is a user input parameter with values between 0 and 1, which specifies the intensity of the damping applied to the joints. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a3447c9a4ef194097e8c3898b25ebe942" name="a3447c9a4ef194097e8c3898b25ebe942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3447c9a4ef194097e8c3898b25ebe942">&#9670;&#160;</a></span>get_moments_due_to_force()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double3 &gt; IRockyJoint::get_moments_due_to_force </td>
          <td>(</td>
          <td class="paramtype">double3</td>          <td class="paramname"><span class="paramname"><em>force</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the moments of the joint force on the two linked elements.</dt><dd>As the lever arm of the joint force can be different for the two elements, the corresponding moment on each one of them can have different magnitude. This method must be called always after calculating the joint force.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">force</td><td>The joint force as a vector in Cartesian coordinates.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A tuple of two vectors in Cartesian coordinates, the first one is the moment on the home element, the second one is the moment on the near element. </dd></dl>

</div>
</div>
<a id="a4129719851a851ff1ac7d0190d834ad3" name="a4129719851a851ff1ac7d0190d834ad3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4129719851a851ff1ac7d0190d834ad3">&#9670;&#160;</a></span>get_near_arm()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_near_arm </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The vector that joins the <em>near element</em> center to the joint center. </dd></dl>

</div>
</div>
<a id="a3a804cfa90d13e065de6d983d7a35caf" name="a3a804cfa90d13e065de6d983d7a35caf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a804cfa90d13e065de6d983d7a35caf">&#9670;&#160;</a></span>get_near_element_centroid_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_near_element_centroid_position </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The joint <em>near element</em> center point coordinates. </dd></dl>

</div>
</div>
<a id="addfb58409bb1dc5703d9d3ab64b3e458" name="addfb58409bb1dc5703d9d3ab64b3e458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addfb58409bb1dc5703d9d3ab64b3e458">&#9670;&#160;</a></span>get_near_element_orientation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt; IRockyJoint::get_near_element_orientation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A tuple whose two components define the axis-angle <em>near</em> element orientation. The first one is a three dimensional vector representing the orientation axis, the second one is a single value representing the angle. </dd></dl>

</div>
</div>
<a id="ad55375a544cfd11a0c0fb52986b1fc74" name="ad55375a544cfd11a0c0fb52986b1fc74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad55375a544cfd11a0c0fb52986b1fc74">&#9670;&#160;</a></span>get_normal_damping_coefficient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_normal_damping_coefficient </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the damping coefficient for computing the normal</dt><dd>component of the viscous force.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The damping coefficient calculated. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="add47e1c2a985abef3a9fef24c44902e2" name="add47e1c2a985abef3a9fef24c44902e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add47e1c2a985abef3a9fef24c44902e2">&#9670;&#160;</a></span>get_normal_deformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_normal_deformation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the normal component of the linear deformation of the joint.</dt><dd>The joint linear deformation is defined as the relative displacement vector between the joint center points in the two linked elements. This vector is oriented pointing from the home element to the near element.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates, calculated as the product of the magnitude given and the normal unit vector. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="abd22a485b99c59a2141dff07e6f9b9e0" name="abd22a485b99c59a2141dff07e6f9b9e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd22a485b99c59a2141dff07e6f9b9e0">&#9670;&#160;</a></span>get_normal_deformation_velocity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_normal_deformation_velocity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the normal component of the linear deformation</dt><dd>velocity of the joint. This velocity is the time derivative of the relative displacement vector between the center points associated to the joint in the two linked elements. The decomposition of this vector into normal and tangential directions is analogous to the one depicted in figure 3.3 of the DEM Technical Manual.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The normal component of the linear deformation velocity, expressed in Cartesian coordinates. </dd></dl>

</div>
</div>
<a id="a0912316f01b3785c5f711aad2a3ebde1" name="a0912316f01b3785c5f711aad2a3ebde1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0912316f01b3785c5f711aad2a3ebde1">&#9670;&#160;</a></span>get_normal_elastic_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_normal_elastic_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The normal elastic ratio is defined as the ratio between the Young's modulus</dt><dd>employed for calculating the stiffness in the normal direction to the Young's modulus specified for the particle's material.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>If the [Anisotropic] option is enabled in the Rocky UI, it will return the value specified for the elastic ratio in the normal direction. Otherwise, it is assumed an isotropic behavior and it will return the value specified for the only elastic ratio that appears in the Rocky UI. </dd></dl>

</div>
</div>
<a id="a47718a93f4aa6bffe9ef0e03bfff3fa9" name="a47718a93f4aa6bffe9ef0e03bfff3fa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47718a93f4aa6bffe9ef0e03bfff3fa9">&#9670;&#160;</a></span>get_normal_stiffness()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_normal_stiffness </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the stiffness value for computing the joint normal</dt><dd>force according to the linear elastic model. This stiffness can be used as a reference stiffness value for calculating the joint normal force with a custom joint model.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The stiffness value calculated. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="ad78b35364784e0ffe09508d99facd5a3" name="ad78b35364784e0ffe09508d99facd5a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad78b35364784e0ffe09508d99facd5a3">&#9670;&#160;</a></span>get_normal_stiffness_per_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_normal_stiffness_per_area </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the normal stiffness per area unit associated to the joint. Please refer to the DEM Technical Manual for an explanation of how this parameter is calculated for different flexible particle shapes. </dd></dl>

</div>
</div>
<a id="af300e95bee5d2a332c3085e6fad91af2" name="af300e95bee5d2a332c3085e6fad91af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af300e95bee5d2a332c3085e6fad91af2">&#9670;&#160;</a></span>get_normal_vector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_normal_vector </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The unit normal vector associated to the joint. This vector is defined as indicated in Figure 3.2. It is oriented pointing always to the home element. </dd></dl>

</div>
</div>
<a id="a7c84ef4dad6d9e1f38b2d227ac1f083a" name="a7c84ef4dad6d9e1f38b2d227ac1f083a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c84ef4dad6d9e1f38b2d227ac1f083a">&#9670;&#160;</a></span>get_number_angular_deformations()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS int IRockyJoint::get_number_angular_deformations </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An integer representing the number of possible angular deformations. For joints in a flexible fiber, it will return 2 (torsion and bending), while for joints in the other particle types, it will return 3 (torsion and two bending directions). </dd></dl>

</div>
</div>
<a id="a09693f2837c14dfb1a0fa4d40373553f" name="a09693f2837c14dfb1a0fa4d40373553f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09693f2837c14dfb1a0fa4d40373553f">&#9670;&#160;</a></span>get_poisson_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_poisson_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the Poisson's ratio specified in the Rocky UI for the material associated to the particle. If Poisson's ratio is configured as a variable property (i.e. each particle have a Poisson's ratio value), then the ratio is the average between home and near elements ratios. </dd></dl>

</div>
</div>
<a id="af78ec40df8e4715343434772668bf70d" name="af78ec40df8e4715343434772668bf70d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af78ec40df8e4715343434772668bf70d">&#9670;&#160;</a></span>get_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyJointScalars.xhtml">IRockyJointScalars</a> IRockyJoint::get_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>If a scalar variable was defined during the setup of the module,</dt><dd>this method can be used access such variables. Joint scalars are special variables that store custom values per joint, in order to preserve them between time iterations.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The class to manipulate joint's scalars </dd></dl>

</div>
</div>
<a id="a25c86f76033636ab37b3ff19ba60b41a" name="a25c86f76033636ab37b3ff19ba60b41a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25c86f76033636ab37b3ff19ba60b41a">&#9670;&#160;</a></span>get_tangential_damping_coefficient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_tangential_damping_coefficient </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the damping coefficient for computing the tangential</dt><dd>component of the viscous force.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The damping coefficient calculated. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a3d324dbcee8a4366284a5fb84547dd9d" name="a3d324dbcee8a4366284a5fb84547dd9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d324dbcee8a4366284a5fb84547dd9d">&#9670;&#160;</a></span>get_tangential_deformation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_tangential_deformation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the tangential component of the linear deformation of the joint.</dt><dd>The joint linear deformation is defined as the relative displacement vector between the joint center points in the two linked elements.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A vector in Cartesian coordinates. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a35e3299e0b5a35128aff0ca6f7604e38" name="a35e3299e0b5a35128aff0ca6f7604e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35e3299e0b5a35128aff0ca6f7604e38">&#9670;&#160;</a></span>get_tangential_deformation_velocity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyJoint::get_tangential_deformation_velocity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the tangential component of the linear deformation</dt><dd>velocity of the joint. This velocity is the time derivative of the relative displacement vector between the center points associated to the joint in the two linked elements. The decomposition of this vector into normal and tangential directions is analogous to the one depicted in figure 3.3 of the DEM Technical Manual.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The tangential component of the linear deformation velocity, expressed in Cartesian coordinates. </dd></dl>

</div>
</div>
<a id="aeeae504e7d95c787e088c8dd5a55c83c" name="aeeae504e7d95c787e088c8dd5a55c83c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeeae504e7d95c787e088c8dd5a55c83c">&#9670;&#160;</a></span>get_tangential_elastic_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_tangential_elastic_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The tangential elastic ratio is defined as the ratio between the Young's modulus</dt><dd>employed for calculating the stiffness in the tangential direction to the Young's modulus specified for the particle's material.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>If the [Anisotropic] option is enabled in the Rocky UI, it will return the value specified for the elastic ratio in the tangential direction. Otherwise, it is assumed an isotropic behavior and it will return the value specified for the only elastic ratio that appears in the Rocky UI. </dd></dl>

</div>
</div>
<a id="a48e95a4cc7245305980339ea8ddf43b3" name="a48e95a4cc7245305980339ea8ddf43b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48e95a4cc7245305980339ea8ddf43b3">&#9670;&#160;</a></span>get_tangential_stiffness()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_tangential_stiffness </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>Calculates the stiffness value for computing the joint tangential</dt><dd>force according to the linear elastic model. This stiffness can be used as a reference stiffness value for calculating the joint tangential force with a custom joint model.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>The stiffness value calculated. For more details, please refer to the DEM Technical Manual. </dd></dl>

</div>
</div>
<a id="a1444e28a82d898d15775180373952ee1" name="a1444e28a82d898d15775180373952ee1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1444e28a82d898d15775180373952ee1">&#9670;&#160;</a></span>get_tangential_stiffness_per_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_tangential_stiffness_per_area </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the tangential stiffness per area unit associated to the joint. Please refer to the DEM Technical Manual for an explanation of how this parameter is calculated for different flexible particle shapes. </dd></dl>

</div>
</div>
<a id="a23fa06ce00c95412142f49e82825bca1" name="a23fa06ce00c95412142f49e82825bca1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23fa06ce00c95412142f49e82825bca1">&#9670;&#160;</a></span>get_torsion_elastic_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_torsion_elastic_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The torsion elastic ratio is defined as the ratio between the Young's modulus</dt><dd>employed for calculating the stiffness for torsional deformations to the Young's modulus specified for the particle's material.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>If the [Anisotropic] option is enabled in the Rocky UI, it will return the value specified for the elastic ratio for torsional deformations. Otherwise, it is assumed an isotropic behavior and it will return the value specified for the only elastic ratio that appears in the Rocky UI. </dd></dl>

</div>
</div>
<a id="a2d57d8f171e77be4e1de3f2eb2b10fb3" name="a2d57d8f171e77be4e1de3f2eb2b10fb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d57d8f171e77be4e1de3f2eb2b10fb3">&#9670;&#160;</a></span>get_young_modulus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_young_modulus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the Young's modulus specified in the Rocky UI for the material associated to the particle. </dd></dl>

</div>
</div>
<a id="a2f87ef623553e934f8fdca19d163669a" name="a2f87ef623553e934f8fdca19d163669a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f87ef623553e934f8fdca19d163669a">&#9670;&#160;</a></span>get_young_modulus_multiplier()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyJoint::get_young_modulus_multiplier </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>For custom fibers only, this will return the factor in the right-hand side of equation 3.15 in the DEM Technical Manual. For any other particle type, it will return 1. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockyJoint.xhtml">IRockyJoint</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
