<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockyModel Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockyModel.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockyModel Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__api_8h_source.xhtml">rocky_api.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5dcfa443dbca79a9c34001fca9873b93" id="r_a5dcfa443dbca79a9c34001fca9873b93"><td class="memItemLeft" align="right" valign="top">double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5dcfa443dbca79a9c34001fca9873b93">get_gravity</a> () const</td></tr>
<tr class="separator:a5dcfa443dbca79a9c34001fca9873b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae85b1a5081581bd5c758d347d7e31c" id="r_a4ae85b1a5081581bd5c758d347d7e31c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4ae85b1a5081581bd5c758d347d7e31c">set_gravity</a> (const double3 &amp;gravity)</td></tr>
<tr class="separator:a4ae85b1a5081581bd5c758d347d7e31c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3caea658ae1557e11ed4e72dc80fb0a2" id="r_a3caea658ae1557e11ed4e72dc80fb0a2"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3caea658ae1557e11ed4e72dc80fb0a2">get_softening_factor</a> () const</td></tr>
<tr class="separator:a3caea658ae1557e11ed4e72dc80fb0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c0be64519ddd583f26570ece5a4aee1" id="r_a6c0be64519ddd583f26570ece5a4aee1"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6c0be64519ddd583f26570ece5a4aee1">get_timestep</a> () const</td></tr>
<tr class="separator:a6c0be64519ddd583f26570ece5a4aee1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada3d1d7b6e1de1d7e4ef0739a1f4dd8a" id="r_ada3d1d7b6e1de1d7e4ef0739a1f4dd8a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada3d1d7b6e1de1d7e4ef0739a1f4dd8a">trigger_update_timestep</a> () const</td></tr>
<tr class="separator:ada3d1d7b6e1de1d7e4ef0739a1f4dd8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1f146615e6b930769ff4008c4a0bb6c" id="r_ac1f146615e6b930769ff4008c4a0bb6c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac1f146615e6b930769ff4008c4a0bb6c">is_thermal_simulation</a> () const</td></tr>
<tr class="separator:ac1f146615e6b930769ff4008c4a0bb6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a021623b1b816354c3fe778f6de07c2e5" id="r_a021623b1b816354c3fe778f6de07c2e5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a021623b1b816354c3fe778f6de07c2e5">has_adhesion</a> () const</td></tr>
<tr class="separator:a021623b1b816354c3fe778f6de07c2e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9dd7ca3cdad5289325c080a10bf2ad7" id="r_ac9dd7ca3cdad5289325c080a10bf2ad7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9dd7ca3cdad5289325c080a10bf2ad7">set_adhesive_distance</a> (int home_index, int near_index, double adhesive_distance)</td></tr>
<tr class="separator:ac9dd7ca3cdad5289325c080a10bf2ad7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c30579eb47a2e20abd0fc393b3b2532" id="r_a8c30579eb47a2e20abd0fc393b3b2532"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c30579eb47a2e20abd0fc393b3b2532">set_minimum_restitution_coefficient</a> (int home_index, int near_index, double minimum_restitution)</td></tr>
<tr class="separator:a8c30579eb47a2e20abd0fc393b3b2532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9a1e9a6ac20f978dd08f6fc67fd0904" id="r_ac9a1e9a6ac20f978dd08f6fc67fd0904"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classIRockyInteractionCalculationsData.xhtml">IRockyInteractionCalculationsData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9a1e9a6ac20f978dd08f6fc67fd0904">get_interactions_data</a> () const</td></tr>
<tr class="separator:ac9a1e9a6ac20f978dd08f6fc67fd0904"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f71066b464f74b32fb560c8a58dd030" id="r_a4f71066b464f74b32fb560c8a58dd030"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyContactDataRecorder.xhtml">IRockyContactDataRecorder</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4f71066b464f74b32fb560c8a58dd030">get_contact_data_recorder</a> () const</td></tr>
<tr class="separator:a4f71066b464f74b32fb560c8a58dd030"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b8fe53d49b68f6097261e884fa769c5" id="r_a1b8fe53d49b68f6097261e884fa769c5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1b8fe53d49b68f6097261e884fa769c5">get_number_of_particle_groups</a> () const</td></tr>
<tr class="separator:a1b8fe53d49b68f6097261e884fa769c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c6cf48153d8b8278bcc67c3f31eff7b" id="r_a1c6cf48153d8b8278bcc67c3f31eff7b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c6cf48153d8b8278bcc67c3f31eff7b">get_number_of_particles</a> () const</td></tr>
<tr class="separator:a1c6cf48153d8b8278bcc67c3f31eff7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b2c41da7a4f9f719ac76fb83f0eb0a" id="r_a54b2c41da7a4f9f719ac76fb83f0eb0a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a54b2c41da7a4f9f719ac76fb83f0eb0a">get_number_of_geometries</a> () const</td></tr>
<tr class="separator:a54b2c41da7a4f9f719ac76fb83f0eb0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56c275ba379255adc3b2fc2af8ea83d7" id="r_a56c275ba379255adc3b2fc2af8ea83d7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a56c275ba379255adc3b2fc2af8ea83d7">get_number_of_materials</a> () const</td></tr>
<tr class="separator:a56c275ba379255adc3b2fc2af8ea83d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59425e7004ad5636d9a6dc06e31e288d" id="r_a59425e7004ad5636d9a6dc06e31e288d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a59425e7004ad5636d9a6dc06e31e288d">get_number_of_material_interactions</a> () const</td></tr>
<tr class="separator:a59425e7004ad5636d9a6dc06e31e288d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb2a67e2e5126c5140ce80ede04b713" id="r_a7fb2a67e2e5126c5140ce80ede04b713"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7fb2a67e2e5126c5140ce80ede04b713">get_geometry_name</a> (int geometry_index) const</td></tr>
<tr class="separator:a7fb2a67e2e5126c5140ce80ede04b713"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e185eee0bdd70cc84ad48459584823" id="r_a04e185eee0bdd70cc84ad48459584823"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a04e185eee0bdd70cc84ad48459584823">get_particle_group_name</a> (int particle_group_index) const</td></tr>
<tr class="separator:a04e185eee0bdd70cc84ad48459584823"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa6751b1d56262ace6eab52f3bdcee42" id="r_afa6751b1d56262ace6eab52f3bdcee42"><td class="memItemLeft" align="right" valign="top">EBoundaryType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa6751b1d56262ace6eab52f3bdcee42">get_geometry_type</a> (int geometry_index) const</td></tr>
<tr class="separator:afa6751b1d56262ace6eab52f3bdcee42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4788543c01a10a60e17c3623a6847708" id="r_a4788543c01a10a60e17c3623a6847708"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyParticleScalarsModel.xhtml">IRockyParticleScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4788543c01a10a60e17c3623a6847708">get_particle_scalars</a> () const</td></tr>
<tr class="separator:a4788543c01a10a60e17c3623a6847708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c78ff441fc0220adf389ae4b733c808" id="r_a9c78ff441fc0220adf389ae4b733c808"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyParticleTransferScalarsModel.xhtml">IRockyParticleTransferScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c78ff441fc0220adf389ae4b733c808">get_particle_transfer_scalars</a> () const</td></tr>
<tr class="separator:a9c78ff441fc0220adf389ae4b733c808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1076a0e1ada498f29c18caf6840e520a" id="r_a1076a0e1ada498f29c18caf6840e520a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyParticleBreakageScalarsModel.xhtml">IRockyParticleBreakageScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1076a0e1ada498f29c18caf6840e520a">get_particle_breakage_scalars</a> () const</td></tr>
<tr class="separator:a1076a0e1ada498f29c18caf6840e520a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6b0ba79dc72914434cfce14b9807e22" id="r_ac6b0ba79dc72914434cfce14b9807e22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyJointScalarsModel.xhtml">IRockyJointScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6b0ba79dc72914434cfce14b9807e22">get_joint_scalars</a> () const</td></tr>
<tr class="separator:ac6b0ba79dc72914434cfce14b9807e22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe828d3fb961280069bb549d49a52bc" id="r_a2fe828d3fb961280069bb549d49a52bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyPairScalarsModel.xhtml">IRockyPairScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fe828d3fb961280069bb549d49a52bc">get_pair_scalars</a> () const</td></tr>
<tr class="separator:a2fe828d3fb961280069bb549d49a52bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43441eb2d02d3dc9c691328eef5e99b5" id="r_a43441eb2d02d3dc9c691328eef5e99b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyGeometryScalarsModel.xhtml">IRockyGeometryScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a43441eb2d02d3dc9c691328eef5e99b5">get_geometry_scalars</a> () const</td></tr>
<tr class="separator:a43441eb2d02d3dc9c691328eef5e99b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3d81fcb670ecba5ab7ca97e520f0a7" id="r_a8a3d81fcb670ecba5ab7ca97e520f0a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyTriangleScalarsModel.xhtml">IRockyTriangleScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a3d81fcb670ecba5ab7ca97e520f0a7">get_triangle_scalars</a> () const</td></tr>
<tr class="separator:a8a3d81fcb670ecba5ab7ca97e520f0a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a552edce9a8cb94fc20d5286f43f2185b" id="r_a552edce9a8cb94fc20d5286f43f2185b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a552edce9a8cb94fc20d5286f43f2185b">get_particle_contact_scalars</a> () const</td></tr>
<tr class="separator:a552edce9a8cb94fc20d5286f43f2185b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d2028ca0b20101281cf8124a54509f1" id="r_a5d2028ca0b20101281cf8124a54509f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d2028ca0b20101281cf8124a54509f1">get_triangle_contact_scalars</a> () const</td></tr>
<tr class="separator:a5d2028ca0b20101281cf8124a54509f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93ef35ae1eb9cf50ca77ab2070a769ab" id="r_a93ef35ae1eb9cf50ca77ab2070a769ab"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a93ef35ae1eb9cf50ca77ab2070a769ab">get_current_time</a> () const</td></tr>
<tr class="separator:a93ef35ae1eb9cf50ca77ab2070a769ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98c232add53267e07db794e37304a25" id="r_ae98c232add53267e07db794e37304a25"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae98c232add53267e07db794e37304a25">get_output_interval</a> () const</td></tr>
<tr class="separator:ae98c232add53267e07db794e37304a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38a15145f4f2bb47b79ab785f50d8277" id="r_a38a15145f4f2bb47b79ab785f50d8277"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38a15145f4f2bb47b79ab785f50d8277">get_number_of_active_particles</a> () const</td></tr>
<tr class="separator:a38a15145f4f2bb47b79ab785f50d8277"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bfb9f69ea26364b55aaad33463de669" id="r_a4bfb9f69ea26364b55aaad33463de669"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4bfb9f69ea26364b55aaad33463de669">get_number_of_active_triangles</a> ()</td></tr>
<tr class="separator:a4bfb9f69ea26364b55aaad33463de669"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e03d46944ec6e42596ee5f2d5f8aaeb" id="r_a5e03d46944ec6e42596ee5f2d5f8aaeb"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e03d46944ec6e42596ee5f2d5f8aaeb">get_number_of_processes</a> () const</td></tr>
<tr class="separator:a5e03d46944ec6e42596ee5f2d5f8aaeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fd1011aa809fe64647e9cacf1956a11" id="r_a1fd1011aa809fe64647e9cacf1956a11"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1fd1011aa809fe64647e9cacf1956a11">get_number_of_devices</a> () const</td></tr>
<tr class="separator:a1fd1011aa809fe64647e9cacf1956a11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f8865c809a31988291f9180d7cda2b" id="r_ae8f8865c809a31988291f9180d7cda2b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8f8865c809a31988291f9180d7cda2b">get_device_id</a> (int device_index) const</td></tr>
<tr class="separator:ae8f8865c809a31988291f9180d7cda2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4797d71a2b43ae408fe83e317f818b7" id="r_ae4797d71a2b43ae408fe83e317f818b7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4797d71a2b43ae408fe83e317f818b7">find_point_cloud</a> (const std::string &amp;name)</td></tr>
<tr class="separator:ae4797d71a2b43ae408fe83e317f818b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabdba4a3eee5c51c75c45345f6cf6839" id="r_aabdba4a3eee5c51c75c45345f6cf6839"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabdba4a3eee5c51c75c45345f6cf6839">find_point_cloud_property</a> (int point_cloud_index, const std::string &amp;property_name)</td></tr>
<tr class="separator:aabdba4a3eee5c51c75c45345f6cf6839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c57d2cafc46d41dd8477e2521d62b12" id="r_a8c57d2cafc46d41dd8477e2521d62b12"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c57d2cafc46d41dd8477e2521d62b12">set_point_cloud_property_dimension</a> (int point_cloud_index, int property_index, double dimension)</td></tr>
<tr class="separator:a8c57d2cafc46d41dd8477e2521d62b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65411ff4a85f74e96457979f8158eccd" id="r_a65411ff4a85f74e96457979f8158eccd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structIRockyCurveCollectionData.xhtml">IRockyCurveCollectionData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a65411ff4a85f74e96457979f8158eccd">get_curve_collections</a> () const</td></tr>
<tr class="separator:a65411ff4a85f74e96457979f8158eccd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdec4e25234fe0304e441d82ccfc3192" id="r_acdec4e25234fe0304e441d82ccfc3192"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acdec4e25234fe0304e441d82ccfc3192">get_length_factor</a> () const</td></tr>
<tr class="separator:acdec4e25234fe0304e441d82ccfc3192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8c9acf215323ada8de9ff9344b1db94" id="r_ae8c9acf215323ada8de9ff9344b1db94"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae8c9acf215323ada8de9ff9344b1db94">get_mass_factor</a> () const</td></tr>
<tr class="separator:ae8c9acf215323ada8de9ff9344b1db94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadaee25a53bade557d45bf633e995690" id="r_aadaee25a53bade557d45bf633e995690"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aadaee25a53bade557d45bf633e995690">get_time_factor</a> () const</td></tr>
<tr class="separator:aadaee25a53bade557d45bf633e995690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12e90812c32e8092c0a67c28b5cc21b" id="r_aa12e90812c32e8092c0a67c28b5cc21b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa12e90812c32e8092c0a67c28b5cc21b">get_viscosity_factor</a> () const</td></tr>
<tr class="separator:aa12e90812c32e8092c0a67c28b5cc21b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdf327f827860b500a82c511492d2f1e" id="r_afdf327f827860b500a82c511492d2f1e"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afdf327f827860b500a82c511492d2f1e">get_temperature_factor</a> () const</td></tr>
<tr class="separator:afdf327f827860b500a82c511492d2f1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8800430b5e336d3fd04d0fce83f83883" id="r_a8800430b5e336d3fd04d0fce83f83883"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8800430b5e336d3fd04d0fce83f83883">get_force_factor</a> () const</td></tr>
<tr class="separator:a8800430b5e336d3fd04d0fce83f83883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb53bd424c9e2d61065410a0b2d53b8b" id="r_abb53bd424c9e2d61065410a0b2d53b8b"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abb53bd424c9e2d61065410a0b2d53b8b">get_pressure_factor</a> () const</td></tr>
<tr class="separator:abb53bd424c9e2d61065410a0b2d53b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fba76aa437dad8ff9674eedb0b6acc0" id="r_a9fba76aa437dad8ff9674eedb0b6acc0"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9fba76aa437dad8ff9674eedb0b6acc0">get_energy_factor</a> () const</td></tr>
<tr class="separator:a9fba76aa437dad8ff9674eedb0b6acc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a082f281ae2ca159cdb420d2fabbb8" id="r_a33a082f281ae2ca159cdb420d2fabbb8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a33a082f281ae2ca159cdb420d2fabbb8">get_power_factor</a> () const</td></tr>
<tr class="separator:a33a082f281ae2ca159cdb420d2fabbb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> includes auxiliary functions for setting up a custom module. Most of the preprocessing methods (such as <code>ROCKY_PLUGIN_SETUP</code>, <code>ROCKY_PLUGIN_INITIALIZE</code>, <code>ROCKY_PLUGIN_NON_DIMENSIONALIZE</code>, etc) provide an <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object as an argument. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ae4797d71a2b43ae408fe83e317f818b7" name="ae4797d71a2b43ae408fe83e317f818b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4797d71a2b43ae408fe83e317f818b7">&#9670;&#160;</a></span>find_point_cloud()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::find_point_cloud </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method searches for a point cloud dataset in the project, by name.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name given to the point cloud in the Rocky UI.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index that uniquely identifies the wanted point cloud, if it was actually found. It returns -1 otherwise. </dd></dl>

</div>
</div>
<a id="aabdba4a3eee5c51c75c45345f6cf6839" name="aabdba4a3eee5c51c75c45345f6cf6839"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabdba4a3eee5c51c75c45345f6cf6839">&#9670;&#160;</a></span>find_point_cloud_property()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::find_point_cloud_property </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>point_cloud_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>property_name</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method searches for a specific property name in a point cloud dataset </dt><dd>imported into Rocky.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">point_cloud_index</td><td>The index that uniquely identifies the point cloud.</td></tr>
    <tr><td class="paramname">property_name</td><td>The name given to the property in the file defining the point cloud.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index that uniquely identifies the wanted point cloud property, if it was actually found. It returns -1 otherwise. </dd></dl>

</div>
</div>
<a id="a4f71066b464f74b32fb560c8a58dd030" name="a4f71066b464f74b32fb560c8a58dd030"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f71066b464f74b32fb560c8a58dd030">&#9670;&#160;</a></span>get_contact_data_recorder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyContactDataRecorder.xhtml">IRockyContactDataRecorder</a> IRockyModel::get_contact_data_recorder </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyContactDataRecorder.xhtml">IRockyContactDataRecorder</a></code> object which allows a module to configure which physical magnitudes the internal contact data recorder will record for use in statistics processing later on. </dd></dl>

</div>
</div>
<a id="a93ef35ae1eb9cf50ca77ab2070a769ab" name="a93ef35ae1eb9cf50ca77ab2070a769ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93ef35ae1eb9cf50ca77ab2070a769ab">&#9670;&#160;</a></span>get_current_time()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_current_time </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the current simulation time. </dd></dl>

</div>
</div>
<a id="a65411ff4a85f74e96457979f8158eccd" name="a65411ff4a85f74e96457979f8158eccd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65411ff4a85f74e96457979f8158eccd">&#9670;&#160;</a></span>get_curve_collections()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyCurveCollectionData.xhtml">IRockyCurveCollectionData</a> IRockyModel::get_curve_collections </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyCurveCollectionData.xhtml">IRockyCurveCollectionData</a></code> object which allows to create and manage custom time curves and/or custom cross-plot curves that can be displayed in the Rocky UI. </dd></dl>

</div>
</div>
<a id="ae8f8865c809a31988291f9180d7cda2b" name="ae8f8865c809a31988291f9180d7cda2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8f8865c809a31988291f9180d7cda2b">&#9670;&#160;</a></span>get_device_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_device_id </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>device_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The index that identifies a given device when running a simulation in multi-GPU. </dd></dl>

</div>
</div>
<a id="a9fba76aa437dad8ff9674eedb0b6acc0" name="a9fba76aa437dad8ff9674eedb0b6acc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fba76aa437dad8ff9674eedb0b6acc0">&#9670;&#160;</a></span>get_energy_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_energy_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The energy factor in Joule, used to nondimensionalize energy parameters. </dd></dl>

</div>
</div>
<a id="a8800430b5e336d3fd04d0fce83f83883" name="a8800430b5e336d3fd04d0fce83f83883"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8800430b5e336d3fd04d0fce83f83883">&#9670;&#160;</a></span>get_force_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_force_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The force factor in Newton, used to nondimensionalize force parameters. </dd></dl>

</div>
</div>
<a id="a7fb2a67e2e5126c5140ce80ede04b713" name="a7fb2a67e2e5126c5140ce80ede04b713"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fb2a67e2e5126c5140ce80ede04b713">&#9670;&#160;</a></span>get_geometry_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string IRockyModel::get_geometry_name </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The name given in the Rocky UI the geometry identified by <code>geometry_index</code>. </dd></dl>

</div>
</div>
<a id="a43441eb2d02d3dc9c691328eef5e99b5" name="a43441eb2d02d3dc9c691328eef5e99b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43441eb2d02d3dc9c691328eef5e99b5">&#9670;&#160;</a></span>get_geometry_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyGeometryScalarsModel.xhtml">IRockyGeometryScalarsModel</a> IRockyModel::get_geometry_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyGeometryScalarsModel.xhtml">IRockyGeometryScalarsModel</a></code> object, which allows users to add new boundary scalars during a setup of a module. Boundary scalars are special variables that associate values to all geometries within a project. </dd></dl>

</div>
</div>
<a id="afa6751b1d56262ace6eab52f3bdcee42" name="afa6751b1d56262ace6eab52f3bdcee42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa6751b1d56262ace6eab52f3bdcee42">&#9670;&#160;</a></span>get_geometry_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">EBoundaryType IRockyModel::get_geometry_type </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An enum key indicating the type of a geometry contained in a project. The possible values are:<br  />
 <code>btReceivingConveyor = 1</code><br  />
 <code>btFeedConveyor = 2</code><br  />
 <code>btCustom = 3</code><br  />
 <code>btInlet = 4</code></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_index</td><td>The index that identifies a geometry within the Rocky solver. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5dcfa443dbca79a9c34001fca9873b93" name="a5dcfa443dbca79a9c34001fca9873b93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dcfa443dbca79a9c34001fca9873b93">&#9670;&#160;</a></span>get_gravity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double3 IRockyModel::get_gravity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This functions returns the current gravity acceleration</dt><dd>in the simulation.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A <code>double3</code> value representing the current gravity acceleration vector in Cartesian Coordinates. </dd></dl>

</div>
</div>
<a id="ac9a1e9a6ac20f978dd08f6fc67fd0904" name="ac9a1e9a6ac20f978dd08f6fc67fd0904"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9a1e9a6ac20f978dd08f6fc67fd0904">&#9670;&#160;</a></span>get_interactions_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classIRockyInteractionCalculationsData.xhtml">IRockyInteractionCalculationsData</a> IRockyModel::get_interactions_data </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="classIRockyInteractionCalculationsData.xhtml">IRockyInteractionCalculationsData</a> object, which can be used to access data and methods related to materials, materials interactions and particle groups. </dd></dl>

</div>
</div>
<a id="ac6b0ba79dc72914434cfce14b9807e22" name="ac6b0ba79dc72914434cfce14b9807e22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6b0ba79dc72914434cfce14b9807e22">&#9670;&#160;</a></span>get_joint_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyJointScalarsModel.xhtml">IRockyJointScalarsModel</a> IRockyModel::get_joint_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyJointScalarsModel.xhtml">IRockyJointScalarsModel</a></code> object, which allows users to add new joint scalars during a setup of a module. Joint scalars are special variables attached to joints in flexible particles that are able to store values that are preserved between time iterations. </dd></dl>

</div>
</div>
<a id="acdec4e25234fe0304e441d82ccfc3192" name="acdec4e25234fe0304e441d82ccfc3192"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acdec4e25234fe0304e441d82ccfc3192">&#9670;&#160;</a></span>get_length_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_length_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The length factor in meters, used to nondimensionalize length parameters. </dd></dl>

</div>
</div>
<a id="ae8c9acf215323ada8de9ff9344b1db94" name="ae8c9acf215323ada8de9ff9344b1db94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8c9acf215323ada8de9ff9344b1db94">&#9670;&#160;</a></span>get_mass_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_mass_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The length factor in kilograms, used to nondimensionalize mass parameters. </dd></dl>

</div>
</div>
<a id="a38a15145f4f2bb47b79ab785f50d8277" name="a38a15145f4f2bb47b79ab785f50d8277"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38a15145f4f2bb47b79ab785f50d8277">&#9670;&#160;</a></span>get_number_of_active_particles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_active_particles </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current number of active particles in the simulation. This number can vary throughout a simulation because new particles are injected and/or some particles leave the solution domain. </dd></dl>

</div>
</div>
<a id="a4bfb9f69ea26364b55aaad33463de669" name="a4bfb9f69ea26364b55aaad33463de669"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bfb9f69ea26364b55aaad33463de669">&#9670;&#160;</a></span>get_number_of_active_triangles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_active_triangles </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current number of active triangles in the simulation. This number can vary throughout a simulation because the active particle region changes due to particles moving, which will active or de-active triangles that are inside or outside the active region. </dd></dl>

</div>
</div>
<a id="a1fd1011aa809fe64647e9cacf1956a11" name="a1fd1011aa809fe64647e9cacf1956a11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fd1011aa809fe64647e9cacf1956a11">&#9670;&#160;</a></span>get_number_of_devices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_devices </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of devices set to run the simulation when using multi-GPU. </dd></dl>

</div>
</div>
<a id="a54b2c41da7a4f9f719ac76fb83f0eb0a" name="a54b2c41da7a4f9f719ac76fb83f0eb0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54b2c41da7a4f9f719ac76fb83f0eb0a">&#9670;&#160;</a></span>get_number_of_geometries()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_geometries </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The total number of boundaries defined in the Rocky project. </dd></dl>

</div>
</div>
<a id="a59425e7004ad5636d9a6dc06e31e288d" name="a59425e7004ad5636d9a6dc06e31e288d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59425e7004ad5636d9a6dc06e31e288d">&#9670;&#160;</a></span>get_number_of_material_interactions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_material_interactions </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The total number of material interactions that it is possible to define with the current materials defined in the Rocky project. </dd></dl>

</div>
</div>
<a id="a56c275ba379255adc3b2fc2af8ea83d7" name="a56c275ba379255adc3b2fc2af8ea83d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56c275ba379255adc3b2fc2af8ea83d7">&#9670;&#160;</a></span>get_number_of_materials()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_materials </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The total number of materials defined in the Rocky project. </dd></dl>

</div>
</div>
<a id="a1b8fe53d49b68f6097261e884fa769c5" name="a1b8fe53d49b68f6097261e884fa769c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b8fe53d49b68f6097261e884fa769c5">&#9670;&#160;</a></span>get_number_of_particle_groups()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_particle_groups </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The total number of particle groups defined in the Rocky project. A particle group is a category of particles of the same shape and material. </dd></dl>

</div>
</div>
<a id="a1c6cf48153d8b8278bcc67c3f31eff7b" name="a1c6cf48153d8b8278bcc67c3f31eff7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c6cf48153d8b8278bcc67c3f31eff7b">&#9670;&#160;</a></span>get_number_of_particles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_particles </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The total number of individual particles in a whole simulation. </dd></dl>

</div>
</div>
<a id="a5e03d46944ec6e42596ee5f2d5f8aaeb" name="a5e03d46944ec6e42596ee5f2d5f8aaeb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e03d46944ec6e42596ee5f2d5f8aaeb">&#9670;&#160;</a></span>get_number_of_processes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int IRockyModel::get_number_of_processes </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of allowed parallel processes when the simulation runs in CPU. </dd></dl>

</div>
</div>
<a id="ae98c232add53267e07db794e37304a25" name="ae98c232add53267e07db794e37304a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98c232add53267e07db794e37304a25">&#9670;&#160;</a></span>get_output_interval()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_output_interval </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the simulation output interval. </dd></dl>

</div>
</div>
<a id="a2fe828d3fb961280069bb549d49a52bc" name="a2fe828d3fb961280069bb549d49a52bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fe828d3fb961280069bb549d49a52bc">&#9670;&#160;</a></span>get_pair_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyPairScalarsModel.xhtml">IRockyPairScalarsModel</a> IRockyModel::get_pair_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyPairScalarsModel.xhtml">IRockyPairScalarsModel</a></code> object, which allows users to add new pair scalars during a setup of a module. Pair scalars are special variables that associate values to all combinations of particle groups and combinations of particle groups and geometries within a project. </dd></dl>

</div>
</div>
<a id="a1076a0e1ada498f29c18caf6840e520a" name="a1076a0e1ada498f29c18caf6840e520a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1076a0e1ada498f29c18caf6840e520a">&#9670;&#160;</a></span>get_particle_breakage_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyParticleBreakageScalarsModel.xhtml">IRockyParticleBreakageScalarsModel</a> IRockyModel::get_particle_breakage_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleBreakageScalarsModel.xhtml">IRockyParticleBreakageScalarsModel</a></code> object, which allows users to add new particle breakage scalars or activate particle breakage scalars known to Rocky during the setup of a module. Particle breakage scalars are special particle scalars used in conjunction with instantaneous breakage models, in order to transfer values calculated at a breakage event to the point at which the fragments size distribution is determined. </dd></dl>

</div>
</div>
<a id="a552edce9a8cb94fc20d5286f43f2185b" name="a552edce9a8cb94fc20d5286f43f2185b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a552edce9a8cb94fc20d5286f43f2185b">&#9670;&#160;</a></span>get_particle_contact_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a> IRockyModel::get_particle_contact_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a></code> object, which allows users to add new (particle-to-particle) contact scalars during the setup phase of a module. Contact scalars are special variables attached to contacts that are able to store values that are preserved between time iterations.<br  />
 For handling scalars related to particle-to-triangle contacts, please consult the <br  />
 <code><a class="el" href="#a5d2028ca0b20101281cf8124a54509f1">IRockyModel::get_triangle_contact_scalars</a></code> method. </dd></dl>

</div>
</div>
<a id="a04e185eee0bdd70cc84ad48459584823" name="a04e185eee0bdd70cc84ad48459584823"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04e185eee0bdd70cc84ad48459584823">&#9670;&#160;</a></span>get_particle_group_name()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string IRockyModel::get_particle_group_name </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>particle_group_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The name given in the Rocky UI the particle group identified by <code>particle_group_index</code>. </dd></dl>

</div>
</div>
<a id="a4788543c01a10a60e17c3623a6847708" name="a4788543c01a10a60e17c3623a6847708"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4788543c01a10a60e17c3623a6847708">&#9670;&#160;</a></span>get_particle_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyParticleScalarsModel.xhtml">IRockyParticleScalarsModel</a> IRockyModel::get_particle_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleScalarsModel.xhtml">IRockyParticleScalarsModel</a></code> object, which allows users to add new particle scalars or activate particle scalars known to Rocky during the setup of a module. Particle scalars are special variables attached to particles that are able to store values per particle that are preserved between time iterations. </dd></dl>

</div>
</div>
<a id="a9c78ff441fc0220adf389ae4b733c808" name="a9c78ff441fc0220adf389ae4b733c808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c78ff441fc0220adf389ae4b733c808">&#9670;&#160;</a></span>get_particle_transfer_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyParticleTransferScalarsModel.xhtml">IRockyParticleTransferScalarsModel</a> IRockyModel::get_particle_transfer_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleTransferScalarsModel.xhtml">IRockyParticleTransferScalarsModel</a></code> object, which allows users to add new particle transfer scalars or activate particle transfer scalars known to Rocky during the setup of a module. Particle transfer scalars are special particle scalars whose values are reset automatically to zero at the beginning of a new time iteration. Their typical use is the accumulation of values from all contacts or joints associated to a particle or an element at a given time iteration. </dd></dl>

</div>
</div>
<a id="a33a082f281ae2ca159cdb420d2fabbb8" name="a33a082f281ae2ca159cdb420d2fabbb8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33a082f281ae2ca159cdb420d2fabbb8">&#9670;&#160;</a></span>get_power_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_power_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The energy factor in Watts, used to nondimensionalize power parameters. </dd></dl>

</div>
</div>
<a id="abb53bd424c9e2d61065410a0b2d53b8b" name="abb53bd424c9e2d61065410a0b2d53b8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb53bd424c9e2d61065410a0b2d53b8b">&#9670;&#160;</a></span>get_pressure_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_pressure_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The pressure factor in Pascal, used to nondimensionalize pressure parameters. </dd></dl>

</div>
</div>
<a id="a3caea658ae1557e11ed4e72dc80fb0a2" name="a3caea658ae1557e11ed4e72dc80fb0a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3caea658ae1557e11ed4e72dc80fb0a2">&#9670;&#160;</a></span>get_softening_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_softening_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the numerical softening factor, which is a global reduction factor that multiplies all stiffness values computed throughout a simulation. This factor is commonly used to increase the timestep and, therefore, speed up the execution of simulations. </dd></dl>

</div>
</div>
<a id="afdf327f827860b500a82c511492d2f1e" name="afdf327f827860b500a82c511492d2f1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdf327f827860b500a82c511492d2f1e">&#9670;&#160;</a></span>get_temperature_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_temperature_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The temperature factor in Kelvin, used to nondimensionalize temperature parameters. </dd></dl>

</div>
</div>
<a id="aadaee25a53bade557d45bf633e995690" name="aadaee25a53bade557d45bf633e995690"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadaee25a53bade557d45bf633e995690">&#9670;&#160;</a></span>get_time_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_time_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The time factor in seconds, used to nondimensionalize time parameters. </dd></dl>

</div>
</div>
<a id="a6c0be64519ddd583f26570ece5a4aee1" name="a6c0be64519ddd583f26570ece5a4aee1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c0be64519ddd583f26570ece5a4aee1">&#9670;&#160;</a></span>get_timestep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_timestep </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the simulation timestep. </dd></dl>

</div>
</div>
<a id="a5d2028ca0b20101281cf8124a54509f1" name="a5d2028ca0b20101281cf8124a54509f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d2028ca0b20101281cf8124a54509f1">&#9670;&#160;</a></span>get_triangle_contact_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a> IRockyModel::get_triangle_contact_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyContactScalarsModel.xhtml">IRockyContactScalarsModel</a></code> object, which allows users to add new (particle-to-triangle) contact scalars during the setup phase of a module. Contact scalars are special variables attached to contacts that are able to store values that are preserved between time iterations.<br  />
 For handling scalars for particle-to-particle contacts, please consult the <br  />
 <code><a class="el" href="#a552edce9a8cb94fc20d5286f43f2185b">IRockyModel::get_particle_contact_scalars</a></code> method. </dd></dl>

</div>
</div>
<a id="a8a3d81fcb670ecba5ab7ca97e520f0a7" name="a8a3d81fcb670ecba5ab7ca97e520f0a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a3d81fcb670ecba5ab7ca97e520f0a7">&#9670;&#160;</a></span>get_triangle_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structIRockyTriangleScalarsModel.xhtml">IRockyTriangleScalarsModel</a> IRockyModel::get_triangle_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyTriangleScalarsModel.xhtml">IRockyTriangleScalarsModel</a></code> object, which allows users to add new triangle scalars during a setup of a module. Triangle scalars are special variables attached to geometry triangles that are able to store values that are preserved between time iterations. </dd></dl>

</div>
</div>
<a id="aa12e90812c32e8092c0a67c28b5cc21b" name="aa12e90812c32e8092c0a67c28b5cc21b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa12e90812c32e8092c0a67c28b5cc21b">&#9670;&#160;</a></span>get_viscosity_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double IRockyModel::get_viscosity_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The viscosity factor in Pa.s, used to nondimensionalize viscosity parameters. </dd></dl>

</div>
</div>
<a id="a021623b1b816354c3fe778f6de07c2e5" name="a021623b1b816354c3fe778f6de07c2e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a021623b1b816354c3fe778f6de07c2e5">&#9670;&#160;</a></span>has_adhesion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IRockyModel::has_adhesion </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>True if the current Rocky project has enabled some adhesion model. Adhesive contacts will exist in a simulation only if that condition is met. </dd></dl>

</div>
</div>
<a id="ac1f146615e6b930769ff4008c4a0bb6c" name="ac1f146615e6b930769ff4008c4a0bb6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1f146615e6b930769ff4008c4a0bb6c">&#9670;&#160;</a></span>is_thermal_simulation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IRockyModel::is_thermal_simulation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>True if the thermal option is enabled in the current Rocky project, false otherwise. </dd></dl>

</div>
</div>
<a id="ac9dd7ca3cdad5289325c080a10bf2ad7" name="ac9dd7ca3cdad5289325c080a10bf2ad7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9dd7ca3cdad5289325c080a10bf2ad7">&#9670;&#160;</a></span>set_adhesive_distance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyModel::set_adhesive_distance </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>home_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>near_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>adhesive_distance</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets a value of the adhesive distance per material interaction,</dt><dd>for a custom adhesive force model. Whenever a new value set for an adhesive distance is greater than the previous maximum adhesive distance among all material interactions, a new neighbors search operation will be triggered. For this reason, if adhesive distances are increased too frequently, the simulation performance can be compromised.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">home_index</td><td>The index of the first material in the material interaction. </td></tr>
    <tr><td class="paramname">near_index</td><td>The index of the second material in the material interaction. </td></tr>
    <tr><td class="paramname">adhesive_distance</td><td>The value of the adhesive distance for contacts involving entities with the specified combination of materials. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4ae85b1a5081581bd5c758d347d7e31c" name="a4ae85b1a5081581bd5c758d347d7e31c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ae85b1a5081581bd5c758d347d7e31c">&#9670;&#160;</a></span>set_gravity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyModel::set_gravity </td>
          <td>(</td>
          <td class="paramtype">const double3 &amp;</td>          <td class="paramname"><span class="paramname"><em>gravity</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This function sets the gravity acceleration to be used</dt><dd>globally in the simulation from that time onward.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gravity</td><td>A <code>double3</code> value representing the gravity acceleration vector in Cartesian Coordinates. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8c30579eb47a2e20abd0fc393b3b2532" name="a8c30579eb47a2e20abd0fc393b3b2532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c30579eb47a2e20abd0fc393b3b2532">&#9670;&#160;</a></span>set_minimum_restitution_coefficient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyModel::set_minimum_restitution_coefficient </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>home_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>near_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>minimum_restitution</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method is intended to be used by a module implementing a variable restitution</dt><dd>coefficient model. It allows the module to set the minimum expected value of the restitution coefficient associated to a given material interaction. The Rocky solver will use these values to calculate the stable timestep for the simulation. Every time the value of the minimum restitution coefficient of any material interaction is changed, a timestep calculation will be triggered. For this reason, if the restitution coefficient changes too frequently, the simulation performance can be compromised. The timestep will be changed only if the new calculated timestep is smaller than the previous one.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">home_index</td><td>The index of the first material in the material interaction. </td></tr>
    <tr><td class="paramname">near_index</td><td>The index of the second material in the material interaction. </td></tr>
    <tr><td class="paramname">minimum_restitution</td><td>The minimum expected value for the restitution coefficient in a collision involving entities with the specified combination of materials. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8c57d2cafc46d41dd8477e2521d62b12" name="a8c57d2cafc46d41dd8477e2521d62b12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c57d2cafc46d41dd8477e2521d62b12">&#9670;&#160;</a></span>set_point_cloud_property_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyModel::set_point_cloud_property_dimension </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>point_cloud_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>property_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor</dt><dd>to a point cloud property. This factor will be used to nondimensionalize all the associated values. For instance, if the property represents a force, a force dimensional factor must be associated through this method. Dimensional factors for the fundamental magnitudes are provided by functions of an <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">point_cloud_index</td><td>The index that uniquely identifies the point cloud.</td></tr>
    <tr><td class="paramname">property_index</td><td>The index that uniquely identifies the point cloud property.</td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the point cloud property. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ada3d1d7b6e1de1d7e4ef0739a1f4dd8a" name="ada3d1d7b6e1de1d7e4ef0739a1f4dd8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada3d1d7b6e1de1d7e4ef0739a1f4dd8a">&#9670;&#160;</a></span>trigger_update_timestep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyModel::trigger_update_timestep </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>When called, enable the timestep update calculation at the beginning of the next iteration. If the module implements the <code>ROCKY_PLUGIN_COMPUTE_TIMESTEP</code> method it will be called during the update process, changing the solver timestep if the new computed timestep is smaller than the current one.</p>
<dl class="section attention"><dt>Attention</dt><dd>If timestep is set using the advanced parameters, the update timestep calculation will be ignored. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
