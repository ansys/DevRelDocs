<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockyParticle Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockyParticle.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockyParticle Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__particle__api_8hpp_source.xhtml">rocky_particle_api.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a39ab5586c7a893cbe156d211a10c5efd" id="r_a39ab5586c7a893cbe156d211a10c5efd"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a39ab5586c7a893cbe156d211a10c5efd">get_material</a> () const</td></tr>
<tr class="separator:a39ab5586c7a893cbe156d211a10c5efd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6a1844166c571196740d7cb3e8331a2" id="r_ab6a1844166c571196740d7cb3e8331a2"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6a1844166c571196740d7cb3e8331a2">get_centroid_position</a> () const</td></tr>
<tr class="separator:ab6a1844166c571196740d7cb3e8331a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acf8ddfc5a9c3974e19e616193de571" id="r_a9acf8ddfc5a9c3974e19e616193de571"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9acf8ddfc5a9c3974e19e616193de571">get_mass</a> () const</td></tr>
<tr class="separator:a9acf8ddfc5a9c3974e19e616193de571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0239b6fe520fb1bc69196cf4c7c298ac" id="r_a0239b6fe520fb1bc69196cf4c7c298ac"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0239b6fe520fb1bc69196cf4c7c298ac">get_original_mass</a> () const</td></tr>
<tr class="separator:a0239b6fe520fb1bc69196cf4c7c298ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702b4bce44c268065cf9961ea88375c3" id="r_a702b4bce44c268065cf9961ea88375c3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a702b4bce44c268065cf9961ea88375c3">get_size</a> () const</td></tr>
<tr class="separator:a702b4bce44c268065cf9961ea88375c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2ebac6fa5a5f9dbb5c37423ef96c471" id="r_af2ebac6fa5a5f9dbb5c37423ef96c471"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2ebac6fa5a5f9dbb5c37423ef96c471">get_release_time</a> () const</td></tr>
<tr class="separator:af2ebac6fa5a5f9dbb5c37423ef96c471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad931e6e8afe554323408148c245a537e" id="r_ad931e6e8afe554323408148c245a537e"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad931e6e8afe554323408148c245a537e">get_cgm_scale_factor</a> () const</td></tr>
<tr class="separator:ad931e6e8afe554323408148c245a537e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a1df9319687462ce0c43b10e691299f" id="r_a9a1df9319687462ce0c43b10e691299f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a1df9319687462ce0c43b10e691299f">get_volume</a> () const</td></tr>
<tr class="separator:a9a1df9319687462ce0c43b10e691299f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fac38fa13ec5aa6495119247b8aa5d6" id="r_a0fac38fa13ec5aa6495119247b8aa5d6"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0fac38fa13ec5aa6495119247b8aa5d6">get_solid_volume</a> () const</td></tr>
<tr class="separator:a0fac38fa13ec5aa6495119247b8aa5d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2200149822388403dfd42afe5574f1f9" id="r_a2200149822388403dfd42afe5574f1f9"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2200149822388403dfd42afe5574f1f9">get_surface_area</a> () const</td></tr>
<tr class="separator:a2200149822388403dfd42afe5574f1f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5951469e0997dab052087895e2ebd95c" id="r_a5951469e0997dab052087895e2ebd95c"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5951469e0997dab052087895e2ebd95c">get_equivalent_diameter</a> () const</td></tr>
<tr class="separator:a5951469e0997dab052087895e2ebd95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60e62be9c1084b624f690d94ce0474b" id="r_ad60e62be9c1084b624f690d94ce0474b"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad60e62be9c1084b624f690d94ce0474b">get_sphericity</a> () const</td></tr>
<tr class="separator:ad60e62be9c1084b624f690d94ce0474b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38420bd69fec1d3a803cbc5d79ea0197" id="r_a38420bd69fec1d3a803cbc5d79ea0197"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a38420bd69fec1d3a803cbc5d79ea0197">get_translational_velocity</a> () const</td></tr>
<tr class="separator:a38420bd69fec1d3a803cbc5d79ea0197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1520d3fc8a40e54ad4c47ddb428fddff" id="r_a1520d3fc8a40e54ad4c47ddb428fddff"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1520d3fc8a40e54ad4c47ddb428fddff">get_rotational_velocity</a> () const</td></tr>
<tr class="separator:a1520d3fc8a40e54ad4c47ddb428fddff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35881133856b678e30b00dfa1c604b96" id="r_a35881133856b678e30b00dfa1c604b96"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35881133856b678e30b00dfa1c604b96">get_impact_energy</a> () const</td></tr>
<tr class="separator:a35881133856b678e30b00dfa1c604b96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3479e29c70b861ee7724b3dec473f126" id="r_a3479e29c70b861ee7724b3dec473f126"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3479e29c70b861ee7724b3dec473f126">get_strength</a> () const</td></tr>
<tr class="separator:a3479e29c70b861ee7724b3dec473f126"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a986a1659cf8a4374bf43ef6a53f63" id="r_a42a986a1659cf8a4374bf43ef6a53f63"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42a986a1659cf8a4374bf43ef6a53f63">get_gravity</a> () const</td></tr>
<tr class="separator:a42a986a1659cf8a4374bf43ef6a53f63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a063a7d183c621dfffd7fdd644635e51a" id="r_a063a7d183c621dfffd7fdd644635e51a"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a063a7d183c621dfffd7fdd644635e51a">get_particle_group_index</a> () const</td></tr>
<tr class="separator:a063a7d183c621dfffd7fdd644635e51a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f25fc898697efc23ee5576b936efa4" id="r_a42f25fc898697efc23ee5576b936efa4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42f25fc898697efc23ee5576b936efa4">get_material_index</a> () const</td></tr>
<tr class="separator:a42f25fc898697efc23ee5576b936efa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9ba593e2adb58a8273b23214b14b60b" id="r_ad9ba593e2adb58a8273b23214b14b60b"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad9ba593e2adb58a8273b23214b14b60b">get_rolling_resistance_coefficient</a> () const</td></tr>
<tr class="separator:ad9ba593e2adb58a8273b23214b14b60b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf12c219fb518212af2932b99c39ae52" id="r_adf12c219fb518212af2932b99c39ae52"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adf12c219fb518212af2932b99c39ae52">get_orientation_axis_angle</a> () const</td></tr>
<tr class="separator:adf12c219fb518212af2932b99c39ae52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd3262f90c7304197e8915b4d40a58f6" id="r_afd3262f90c7304197e8915b4d40a58f6"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double4&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd3262f90c7304197e8915b4d40a58f6">get_orientation_quaternion</a> () const</td></tr>
<tr class="separator:afd3262f90c7304197e8915b4d40a58f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac520e2ca9342f42a1260d42bb1f882a0" id="r_ac520e2ca9342f42a1260d42bb1f882a0"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac520e2ca9342f42a1260d42bb1f882a0">get_resultant_force</a> () const</td></tr>
<tr class="separator:ac520e2ca9342f42a1260d42bb1f882a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a9a71f0e2cd25a475c5681682a8c7e" id="r_a58a9a71f0e2cd25a475c5681682a8c7e"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a58a9a71f0e2cd25a475c5681682a8c7e">get_resultant_moment</a> () const</td></tr>
<tr class="separator:a58a9a71f0e2cd25a475c5681682a8c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3db18d0afb4ebe6d4654d833d904cb" id="r_a8c3db18d0afb4ebe6d4654d833d904cb"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c3db18d0afb4ebe6d4654d833d904cb">get_thermal_conductivity</a> () const</td></tr>
<tr class="separator:a8c3db18d0afb4ebe6d4654d833d904cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a876773eeef5269e1335ae8a43cbb2d97" id="r_a876773eeef5269e1335ae8a43cbb2d97"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a876773eeef5269e1335ae8a43cbb2d97">set_thermal_conductivity</a> (double value)</td></tr>
<tr class="separator:a876773eeef5269e1335ae8a43cbb2d97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d11bc8367e406b7a56f98d92871f059" id="r_a6d11bc8367e406b7a56f98d92871f059"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d11bc8367e406b7a56f98d92871f059">get_poisson_ratio</a> () const</td></tr>
<tr class="separator:a6d11bc8367e406b7a56f98d92871f059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7225418a496fdaae3dc3ba7bc3d7ebca" id="r_a7225418a496fdaae3dc3ba7bc3d7ebca"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7225418a496fdaae3dc3ba7bc3d7ebca">set_poisson_ratio</a> (double value)</td></tr>
<tr class="separator:a7225418a496fdaae3dc3ba7bc3d7ebca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5007ecaea7e26cfe50579a959ba91c07" id="r_a5007ecaea7e26cfe50579a959ba91c07"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5007ecaea7e26cfe50579a959ba91c07">get_specific_heat</a> () const</td></tr>
<tr class="separator:a5007ecaea7e26cfe50579a959ba91c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2949c9bf228226090d1e7cf95b63c38f" id="r_a2949c9bf228226090d1e7cf95b63c38f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2949c9bf228226090d1e7cf95b63c38f">get_tag</a> () const</td></tr>
<tr class="separator:a2949c9bf228226090d1e7cf95b63c38f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ea5a3cc6356d1b80b3e8cde1fe43211" id="r_a6ea5a3cc6356d1b80b3e8cde1fe43211"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6ea5a3cc6356d1b80b3e8cde1fe43211">set_specific_heat</a> (double value)</td></tr>
<tr class="separator:a6ea5a3cc6356d1b80b3e8cde1fe43211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305fe472ba945e793d450053dc3b092f" id="r_a305fe472ba945e793d450053dc3b092f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a305fe472ba945e793d450053dc3b092f">get_scalars</a> ()</td></tr>
<tr class="separator:a305fe472ba945e793d450053dc3b092f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0899498770cbebb4b538cbc736e82231" id="r_a0899498770cbebb4b538cbc736e82231"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS const <a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0899498770cbebb4b538cbc736e82231">get_scalars</a> () const</td></tr>
<tr class="separator:a0899498770cbebb4b538cbc736e82231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1bcfda3336619839953a01fbe7828ea" id="r_af1bcfda3336619839953a01fbe7828ea"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleTransferScalars.xhtml">IRockyParticleTransferScalars</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af1bcfda3336619839953a01fbe7828ea">get_transfer_scalars</a> ()</td></tr>
<tr class="separator:af1bcfda3336619839953a01fbe7828ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9efea10efd70526b3ffe3f723253e44e" id="r_a9efea10efd70526b3ffe3f723253e44e"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleBreakageScalars.xhtml">IRockyParticleBreakageScalars</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9efea10efd70526b3ffe3f723253e44e">get_breakage_scalars</a> ()</td></tr>
<tr class="separator:a9efea10efd70526b3ffe3f723253e44e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fdb4c9362bd6b650aba18ad2fb6c66d" id="r_a2fdb4c9362bd6b650aba18ad2fb6c66d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2fdb4c9362bd6b650aba18ad2fb6c66d">remove</a> ()</td></tr>
<tr class="separator:a2fdb4c9362bd6b650aba18ad2fb6c66d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc83f532d4bd643046c1c8a93e09f1d" id="r_aebc83f532d4bd643046c1c8a93e09f1d"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aebc83f532d4bd643046c1c8a93e09f1d">add_force</a> (const double3 &amp;force)</td></tr>
<tr class="separator:aebc83f532d4bd643046c1c8a93e09f1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bb789078434998231949cc5c7c5f3b4" id="r_a8bb789078434998231949cc5c7c5f3b4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8bb789078434998231949cc5c7c5f3b4">add_moment</a> (const double3 &amp;moment)</td></tr>
<tr class="separator:a8bb789078434998231949cc5c7c5f3b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c885d84af14576949205c3b9fb5bd5" id="r_ae6c885d84af14576949205c3b9fb5bd5"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6c885d84af14576949205c3b9fb5bd5">set_frozen</a> (bool frozen)</td></tr>
<tr class="separator:ae6c885d84af14576949205c3b9fb5bd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c502d7e6af16bbefdb1ff769810980" id="r_a98c502d7e6af16bbefdb1ff769810980"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a98c502d7e6af16bbefdb1ff769810980">disable_related_particle_contacts</a> ()</td></tr>
<tr class="separator:a98c502d7e6af16bbefdb1ff769810980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a964a3f27bd8217bbff4301539ecbc1fc" id="r_a964a3f27bd8217bbff4301539ecbc1fc"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a964a3f27bd8217bbff4301539ecbc1fc">enable_related_particle_contacts</a> ()</td></tr>
<tr class="separator:a964a3f27bd8217bbff4301539ecbc1fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c445981cc6ac5392560d863927b4211" id="r_a1c445981cc6ac5392560d863927b4211"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c445981cc6ac5392560d863927b4211">disable_related_triangle_contacts</a> ()</td></tr>
<tr class="separator:a1c445981cc6ac5392560d863927b4211"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d87618d43d29b5d2dcd7f5946e1d0f4" id="r_a6d87618d43d29b5d2dcd7f5946e1d0f4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6d87618d43d29b5d2dcd7f5946e1d0f4">enable_related_triangle_contacts</a> ()</td></tr>
<tr class="separator:a6d87618d43d29b5d2dcd7f5946e1d0f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ddf76406051617c1cf3ad5602230e74" id="r_a0ddf76406051617c1cf3ad5602230e74"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS const double3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ddf76406051617c1cf3ad5602230e74">get_moment_of_inertia</a> () const</td></tr>
<tr class="separator:a0ddf76406051617c1cf3ad5602230e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ede768e89206dcba2b8929eefa961e7" id="r_a0ede768e89206dcba2b8929eefa961e7"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ede768e89206dcba2b8929eefa961e7">is_element</a> () const</td></tr>
<tr class="separator:a0ede768e89206dcba2b8929eefa961e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7324f759e40ff9147728dd7e666f9816" id="r_a7324f759e40ff9147728dd7e666f9816"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7324f759e40ff9147728dd7e666f9816">is_assembly</a> () const</td></tr>
<tr class="separator:a7324f759e40ff9147728dd7e666f9816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7174efcf1264a05c6bd5cabe2e927148" id="r_a7174efcf1264a05c6bd5cabe2e927148"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7174efcf1264a05c6bd5cabe2e927148">get_number_of_assembly_parts</a> () const</td></tr>
<tr class="separator:a7174efcf1264a05c6bd5cabe2e927148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a737fd34952d960d93f4f8940fd804e" id="r_a1a737fd34952d960d93f4f8940fd804e"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS <a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1a737fd34952d960d93f4f8940fd804e">get_assembly_part_material</a> (size_t part_id) const</td></tr>
<tr class="separator:a1a737fd34952d960d93f4f8940fd804e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d25f3ada35c955fd0fe7ba24a244c4" id="r_af4d25f3ada35c955fd0fe7ba24a244c4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af4d25f3ada35c955fd0fe7ba24a244c4">remove_from_contacts_search</a> ()</td></tr>
<tr class="separator:af4d25f3ada35c955fd0fe7ba24a244c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe35f545701281de61b805237f4c5d8f" id="r_afe35f545701281de61b805237f4c5d8f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afe35f545701281de61b805237f4c5d8f">add_to_contacts_search</a> ()</td></tr>
<tr class="separator:afe35f545701281de61b805237f4c5d8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><code><a class="el" href="structIRockyParticle.xhtml">IRockyParticle</a></code> is an interface for the internal particle object in Rocky. A particle object is the code representation of an individual particle in a Rocky simulation. It has several access methods to particle-related properties, as well as <em>particle scalars</em>, which are special variables that store values per particle that are preserved between time iterations. Values of <em>particle scalars</em> can be displayed in a 3D window as any other built-in particle property in Rocky. All property and variable values made available through <code><a class="el" href="structIRockyParticle.xhtml">IRockyParticle</a></code> are dimensionless. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aebc83f532d4bd643046c1c8a93e09f1d" name="aebc83f532d4bd643046c1c8a93e09f1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebc83f532d4bd643046c1c8a93e09f1d">&#9670;&#160;</a></span>add_force()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::add_force </td>
          <td>(</td>
          <td class="paramtype">const double3 &amp;</td>          <td class="paramname"><span class="paramname"><em>force</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a custom calculated force to the contact and body forces</dt><dd>acting on the particle.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">force</td><td>The custom force vector in Cartesian coordinates. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8bb789078434998231949cc5c7c5f3b4" name="a8bb789078434998231949cc5c7c5f3b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8bb789078434998231949cc5c7c5f3b4">&#9670;&#160;</a></span>add_moment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::add_moment </td>
          <td>(</td>
          <td class="paramtype">const double3 &amp;</td>          <td class="paramname"><span class="paramname"><em>moment</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a custom calculated moment to the moments</dt><dd>acting on the particle.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">moment</td><td>The custom moment vector in Cartesian coordinates. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afe35f545701281de61b805237f4c5d8f" name="afe35f545701281de61b805237f4c5d8f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe35f545701281de61b805237f4c5d8f">&#9670;&#160;</a></span>add_to_contacts_search()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::add_to_contacts_search </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method enables the detection of all contacts for the particle.</dt><dd></dd></dl>

</div>
</div>
<a id="a98c502d7e6af16bbefdb1ff769810980" name="a98c502d7e6af16bbefdb1ff769810980"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98c502d7e6af16bbefdb1ff769810980">&#9670;&#160;</a></span>disable_related_particle_contacts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::disable_related_particle_contacts </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method activates the conditional disabling of particle-to-particle contacts detection.</dt><dd>A given particle-to-particle contact will be ignored during the detection stage only if this method has been applied to both particles. </dd></dl>

</div>
</div>
<a id="a1c445981cc6ac5392560d863927b4211" name="a1c445981cc6ac5392560d863927b4211"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c445981cc6ac5392560d863927b4211">&#9670;&#160;</a></span>disable_related_triangle_contacts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::disable_related_triangle_contacts </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method disables the detection of particle-to-triangle contacts for the particle.</dt><dd></dd></dl>

</div>
</div>
<a id="a964a3f27bd8217bbff4301539ecbc1fc" name="a964a3f27bd8217bbff4301539ecbc1fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a964a3f27bd8217bbff4301539ecbc1fc">&#9670;&#160;</a></span>enable_related_particle_contacts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::enable_related_particle_contacts </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method deactivates the conditional disabling of particle-to-particle contact detection,</dt><dd>previously activated using the <code><a class="el" href="#a98c502d7e6af16bbefdb1ff769810980">IRockyParticle::disable_related_particle_contacts</a></code> </dd></dl>

</div>
</div>
<a id="a6d87618d43d29b5d2dcd7f5946e1d0f4" name="a6d87618d43d29b5d2dcd7f5946e1d0f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d87618d43d29b5d2dcd7f5946e1d0f4">&#9670;&#160;</a></span>enable_related_triangle_contacts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::enable_related_triangle_contacts </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method enables the detection of particle-to-triangle contacts for the particle.</dt><dd></dd></dl>

</div>
</div>
<a id="a1a737fd34952d960d93f4f8940fd804e" name="a1a737fd34952d960d93f4f8940fd804e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a737fd34952d960d93f4f8940fd804e">&#9670;&#160;</a></span>get_assembly_part_material()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a> IRockyParticle::get_assembly_part_material </td>
          <td>(</td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>part_id</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part_id</td><td>The index of an assembly part. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a></code> object that gives access to the values of physical properties associated to the material from which the assembly part referent to <code>part_id</code> is made. </dd></dl>

</div>
</div>
<a id="a9efea10efd70526b3ffe3f723253e44e" name="a9efea10efd70526b3ffe3f723253e44e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9efea10efd70526b3ffe3f723253e44e">&#9670;&#160;</a></span>get_breakage_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleBreakageScalars.xhtml">IRockyParticleBreakageScalars</a> IRockyParticle::get_breakage_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleBreakageScalars.xhtml">IRockyParticleBreakageScalars</a></code> object, that gives access to all particle breakage scalars variables defined in the project. </dd></dl>

</div>
</div>
<a id="ab6a1844166c571196740d7cb3e8331a2" name="ab6a1844166c571196740d7cb3e8331a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6a1844166c571196740d7cb3e8331a2">&#9670;&#160;</a></span>get_centroid_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_centroid_position </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The Cartesian coordinates of the current position of the particle's centroid. </dd></dl>

</div>
</div>
<a id="ad931e6e8afe554323408148c245a537e" name="ad931e6e8afe554323408148c245a537e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad931e6e8afe554323408148c245a537e">&#9670;&#160;</a></span>get_cgm_scale_factor()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_cgm_scale_factor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's Coarse-grain Modeling (CGM) scale factor. </dd></dl>

</div>
</div>
<a id="a5951469e0997dab052087895e2ebd95c" name="a5951469e0997dab052087895e2ebd95c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5951469e0997dab052087895e2ebd95c">&#9670;&#160;</a></span>get_equivalent_diameter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_equivalent_diameter </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The equivalent diameter of the particle, which is defined as the diameter of a sphere of volume equal to the particle's volume. </dd></dl>

</div>
</div>
<a id="a42a986a1659cf8a4374bf43ef6a53f63" name="a42a986a1659cf8a4374bf43ef6a53f63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a986a1659cf8a4374bf43ef6a53f63">&#9670;&#160;</a></span>get_gravity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_gravity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The gravitational acceleration vector in Cartesian coordinates. </dd></dl>

</div>
</div>
<a id="a35881133856b678e30b00dfa1c604b96" name="a35881133856b678e30b00dfa1c604b96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35881133856b678e30b00dfa1c604b96">&#9670;&#160;</a></span>get_impact_energy()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_impact_energy </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The sum of the impact energy registered in all active contacts on the surface of the particle until the current time.</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>This value will be available only if an instantaneous breakage model is enabled in the simulation. </dd></dl>

</div>
</div>
<a id="a9acf8ddfc5a9c3974e19e616193de571" name="a9acf8ddfc5a9c3974e19e616193de571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9acf8ddfc5a9c3974e19e616193de571">&#9670;&#160;</a></span>get_mass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_mass </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the particle's mass. This value will be different from the original particle's mass only if the mass increment particle scalar is enabled in the simulation. </dd></dl>

</div>
</div>
<a id="a39ab5586c7a893cbe156d211a10c5efd" name="a39ab5586c7a893cbe156d211a10c5efd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39ab5586c7a893cbe156d211a10c5efd">&#9670;&#160;</a></span>get_material()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a> IRockyParticle::get_material </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyMaterial.xhtml">IRockyMaterial</a></code> object that gives access to the values of physical properties associated to the material from which the particle is made.</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>Invoking this method on assembly particles results on undefined behavior, as assembly particles may have multiple materials. Prefer to use <code><a class="el" href="#a1a737fd34952d960d93f4f8940fd804e">IRockyParticle::get_assembly_part_material</a></code> instead. </dd></dl>

</div>
</div>
<a id="a42f25fc898697efc23ee5576b936efa4" name="a42f25fc898697efc23ee5576b936efa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f25fc898697efc23ee5576b936efa4">&#9670;&#160;</a></span>get_material_index()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS int IRockyParticle::get_material_index </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The material index associated to that particle </dd></dl>

</div>
</div>
<a id="a0ddf76406051617c1cf3ad5602230e74" name="a0ddf76406051617c1cf3ad5602230e74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ddf76406051617c1cf3ad5602230e74">&#9670;&#160;</a></span>get_moment_of_inertia()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS const double3 IRockyParticle::get_moment_of_inertia </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A 3D vector whose components are the principal values of the particle's moment of inertia tensor. </dd></dl>

</div>
</div>
<a id="a7174efcf1264a05c6bd5cabe2e927148" name="a7174efcf1264a05c6bd5cabe2e927148"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7174efcf1264a05c6bd5cabe2e927148">&#9670;&#160;</a></span>get_number_of_assembly_parts()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS size_t IRockyParticle::get_number_of_assembly_parts </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The number of parts that compose the assembly. </dd></dl>

</div>
</div>
<a id="adf12c219fb518212af2932b99c39ae52" name="adf12c219fb518212af2932b99c39ae52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf12c219fb518212af2932b99c39ae52">&#9670;&#160;</a></span>get_orientation_axis_angle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS thrust::tuple&lt; double3, double &gt; IRockyParticle::get_orientation_axis_angle </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A tuple whose two components define the axis-angle particle orientation. The first one is a three dimensional vector representing the orientation axis, the second one is a single value representing the angle. </dd></dl>

</div>
</div>
<a id="afd3262f90c7304197e8915b4d40a58f6" name="afd3262f90c7304197e8915b4d40a58f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd3262f90c7304197e8915b4d40a58f6">&#9670;&#160;</a></span>get_orientation_quaternion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double4 IRockyParticle::get_orientation_quaternion </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The quaternion that represents the particle's orientation, expressed as a four-dimensional array \((q_r, q_i, q_j, q_k)\). </dd></dl>

</div>
</div>
<a id="a0239b6fe520fb1bc69196cf4c7c298ac" name="a0239b6fe520fb1bc69196cf4c7c298ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0239b6fe520fb1bc69196cf4c7c298ac">&#9670;&#160;</a></span>get_original_mass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_original_mass </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The original value of the mass of a particle when it enters into the simulation. </dd></dl>

</div>
</div>
<a id="a063a7d183c621dfffd7fdd644635e51a" name="a063a7d183c621dfffd7fdd644635e51a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a063a7d183c621dfffd7fdd644635e51a">&#9670;&#160;</a></span>get_particle_group_index()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS int IRockyParticle::get_particle_group_index </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The index that uniquely identifies the particle group to which the particle belongs. </dd></dl>

</div>
</div>
<a id="a6d11bc8367e406b7a56f98d92871f059" name="a6d11bc8367e406b7a56f98d92871f059"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d11bc8367e406b7a56f98d92871f059">&#9670;&#160;</a></span>get_poisson_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_poisson_ratio </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's Poisson's ratio value. If this property was defined as variable in the module's specification file, the method will return the value specifically assigned to the particle. Otherwise, it will return the value specified in the Rocky UI for the particle's associated material. </dd></dl>

</div>
</div>
<a id="af2ebac6fa5a5f9dbb5c37423ef96c471" name="af2ebac6fa5a5f9dbb5c37423ef96c471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2ebac6fa5a5f9dbb5c37423ef96c471">&#9670;&#160;</a></span>get_release_time()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_release_time </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The time at which the particle was released. </dd></dl>

</div>
</div>
<a id="ac520e2ca9342f42a1260d42bb1f882a0" name="ac520e2ca9342f42a1260d42bb1f882a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac520e2ca9342f42a1260d42bb1f882a0">&#9670;&#160;</a></span>get_resultant_force()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_resultant_force </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The resultant force vector acting on the particle, in Cartesian coordinates. This force is a combination of the forces calculated during the current time iteration that are applied on the particle, including contact forces, joint forces, fluid forces, and other forces coming from custom modules. If this method is called before the force calculation stage it will return a zero vector.</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>The force of gravity acting on the particle is not included in this resultant force. </dd></dl>

</div>
</div>
<a id="a58a9a71f0e2cd25a475c5681682a8c7e" name="a58a9a71f0e2cd25a475c5681682a8c7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58a9a71f0e2cd25a475c5681682a8c7e">&#9670;&#160;</a></span>get_resultant_moment()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_resultant_moment </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The resultant moment vector applied to the particle, in Cartesian coordinates. The resultant moment is the combination of all moments caused by the forces acting upon the particle, including contact forces, joint forces, fluid forces, and other forces coming from custom modules. If this method is called before the force calculation stage it will return a zero vector. </dd></dl>

</div>
</div>
<a id="ad9ba593e2adb58a8273b23214b14b60b" name="ad9ba593e2adb58a8273b23214b14b60b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9ba593e2adb58a8273b23214b14b60b">&#9670;&#160;</a></span>get_rolling_resistance_coefficient()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_rolling_resistance_coefficient </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's rolling resistance coefficient </dd></dl>

</div>
</div>
<a id="a1520d3fc8a40e54ad4c47ddb428fddff" name="a1520d3fc8a40e54ad4c47ddb428fddff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1520d3fc8a40e54ad4c47ddb428fddff">&#9670;&#160;</a></span>get_rotational_velocity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_rotational_velocity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current particle's rotational velocity vector expressed in Cartesian coordinates. </dd></dl>

</div>
</div>
<a id="a305fe472ba945e793d450053dc3b092f" name="a305fe472ba945e793d450053dc3b092f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a305fe472ba945e793d450053dc3b092f">&#9670;&#160;</a></span>get_scalars() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a> IRockyParticle::get_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a></code> object, that gives access to all particle scalars variables defined in the project. </dd></dl>

</div>
</div>
<a id="a0899498770cbebb4b538cbc736e82231" name="a0899498770cbebb4b538cbc736e82231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0899498770cbebb4b538cbc736e82231">&#9670;&#160;</a></span>get_scalars() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS const <a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a> IRockyParticle::get_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A const <code><a class="el" href="structIRockyParticleScalars.xhtml">IRockyParticleScalars</a></code> object, that gives access to all particle scalars variables defined in the project. </dd></dl>

</div>
</div>
<a id="a702b4bce44c268065cf9961ea88375c3" name="a702b4bce44c268065cf9961ea88375c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a702b4bce44c268065cf9961ea88375c3">&#9670;&#160;</a></span>get_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_size </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the particle's size. </dd></dl>

</div>
</div>
<a id="a0fac38fa13ec5aa6495119247b8aa5d6" name="a0fac38fa13ec5aa6495119247b8aa5d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fac38fa13ec5aa6495119247b8aa5d6">&#9670;&#160;</a></span>get_solid_volume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_solid_volume </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the particle's solid volume. If the particle is porous (porosity &gt; 0), the solid volume is the volume of the solid matrix. Otherwise, the volume returned by this function will coincide with the one returned by the <code>get_volume</code> function. </dd></dl>

</div>
</div>
<a id="a5007ecaea7e26cfe50579a959ba91c07" name="a5007ecaea7e26cfe50579a959ba91c07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5007ecaea7e26cfe50579a959ba91c07">&#9670;&#160;</a></span>get_specific_heat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_specific_heat </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's specific heat value. If this property was defined as variable in the module's specification file, the method will return the value specifically assigned to the particle. Otherwise, it will return the value specified in the Rocky UI for the particle's associated material. </dd></dl>

</div>
</div>
<a id="ad60e62be9c1084b624f690d94ce0474b" name="ad60e62be9c1084b624f690d94ce0474b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad60e62be9c1084b624f690d94ce0474b">&#9670;&#160;</a></span>get_sphericity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_sphericity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's sphericity value, which is defined as the ratio of \(A_s\) to \(A_p\), where \(A_s\) is the surface area of a sphere with the same volume as the particle, whereas \(A_p\) is the surface area of the particle itself. In general terms, the sphericity measures how closely the particle's actual shape resembles the shape of a perfect sphere. </dd></dl>

</div>
</div>
<a id="a3479e29c70b861ee7724b3dec473f126" name="a3479e29c70b861ee7724b3dec473f126"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3479e29c70b861ee7724b3dec473f126">&#9670;&#160;</a></span>get_strength()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_strength </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A random value between 0 and 1 assigned to a particle at the time of generation. This value can be related to the breakage probability in a custom instantaneous breakage model. </dd></dl>

</div>
</div>
<a id="a2200149822388403dfd42afe5574f1f9" name="a2200149822388403dfd42afe5574f1f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2200149822388403dfd42afe5574f1f9">&#9670;&#160;</a></span>get_surface_area()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_surface_area </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the particle's surface area. </dd></dl>

</div>
</div>
<a id="a2949c9bf228226090d1e7cf95b63c38f" name="a2949c9bf228226090d1e7cf95b63c38f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2949c9bf228226090d1e7cf95b63c38f">&#9670;&#160;</a></span>get_tag()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS int IRockyParticle::get_tag </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The tag value inherited from the tags assigned to the segments of a custom fiber, if the <code><a class="el" href="structIRockyParticle.xhtml">IRockyParticle</a></code> object represents an element of a custom fiber. The values of those tags must be specified in the column labeled "tag" in the csv file that defines the geometry of a custom fiber. All elements that arise from the subdivision of a given segment inherit the tag value assigned to that segment. If tags are not defined for a custom fiber or if this function is used with particles which are not elements of a custom fiber, this function will return -1. </dd></dl>

</div>
</div>
<a id="a8c3db18d0afb4ebe6d4654d833d904cb" name="a8c3db18d0afb4ebe6d4654d833d904cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c3db18d0afb4ebe6d4654d833d904cb">&#9670;&#160;</a></span>get_thermal_conductivity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_thermal_conductivity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The particle's thermal conductivity. If this property was defined as variable in the module's specification file, the method will return the value specifically assigned to the particle. Otherwise, it will return the value specified in the Rocky UI for the particle's associated material. </dd></dl>

</div>
</div>
<a id="af1bcfda3336619839953a01fbe7828ea" name="af1bcfda3336619839953a01fbe7828ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1bcfda3336619839953a01fbe7828ea">&#9670;&#160;</a></span>get_transfer_scalars()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS <a class="el" href="structIRockyParticleTransferScalars.xhtml">IRockyParticleTransferScalars</a> IRockyParticle::get_transfer_scalars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>An <code><a class="el" href="structIRockyParticleTransferScalars.xhtml">IRockyParticleTransferScalars</a></code> object, that gives access to all particle transfer scalars variables defined in the project. </dd></dl>

</div>
</div>
<a id="a38420bd69fec1d3a803cbc5d79ea0197" name="a38420bd69fec1d3a803cbc5d79ea0197"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38420bd69fec1d3a803cbc5d79ea0197">&#9670;&#160;</a></span>get_translational_velocity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double3 IRockyParticle::get_translational_velocity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current particle's translational velocity vector expressed in Cartesian coordinates. </dd></dl>

</div>
</div>
<a id="a9a1df9319687462ce0c43b10e691299f" name="a9a1df9319687462ce0c43b10e691299f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a1df9319687462ce0c43b10e691299f">&#9670;&#160;</a></span>get_volume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS double IRockyParticle::get_volume </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current value of the particle's volume. If the particle is porous (porosity &gt; 0), the volume returned is the particle's total or bulk volume, that is the volume obtained by summing the solid volume and the pore volume. </dd></dl>

</div>
</div>
<a id="a7324f759e40ff9147728dd7e666f9816" name="a7324f759e40ff9147728dd7e666f9816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7324f759e40ff9147728dd7e666f9816">&#9670;&#160;</a></span>is_assembly()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS bool IRockyParticle::is_assembly </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>True if the given particle is an assembly, false otherwise. </dd></dl>

</div>
</div>
<a id="a0ede768e89206dcba2b8929eefa961e7" name="a0ede768e89206dcba2b8929eefa961e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ede768e89206dcba2b8929eefa961e7">&#9670;&#160;</a></span>is_element()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS bool IRockyParticle::is_element </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>True if the given particle is an element within a flexible particle, false otherwise. </dd></dl>

</div>
</div>
<a id="a2fdb4c9362bd6b650aba18ad2fb6c66d" name="a2fdb4c9362bd6b650aba18ad2fb6c66d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fdb4c9362bd6b650aba18ad2fb6c66d">&#9670;&#160;</a></span>remove()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::remove </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method removes permanently the particle from the simulation.</dt><dd></dd></dl>

</div>
</div>
<a id="af4d25f3ada35c955fd0fe7ba24a244c4" name="af4d25f3ada35c955fd0fe7ba24a244c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4d25f3ada35c955fd0fe7ba24a244c4">&#9670;&#160;</a></span>remove_from_contacts_search()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::remove_from_contacts_search </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method disables the detection of all contacts for the particle.</dt><dd></dd></dl>

</div>
</div>
<a id="ae6c885d84af14576949205c3b9fb5bd5" name="ae6c885d84af14576949205c3b9fb5bd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6c885d84af14576949205c3b9fb5bd5">&#9670;&#160;</a></span>set_frozen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::set_frozen </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>frozen</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the frozen state of a particle. When the frozen state of a particle</dt><dd>is set to <code>true</code>, the solution of the motion equations for this particle are skipped afterwards.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">frozen</td><td>True if the particle should be frozen, false otherwise. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7225418a496fdaae3dc3ba7bc3d7ebca" name="a7225418a496fdaae3dc3ba7bc3d7ebca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7225418a496fdaae3dc3ba7bc3d7ebca">&#9670;&#160;</a></span>set_poisson_ratio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::set_poisson_ratio </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the Poisson's ratio value for the particle. This operation will</dt><dd>be allowed only if Poisson's ratio was defined as a variable property for particles in the module's specification file. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The Poisson's ratio to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6ea5a3cc6356d1b80b3e8cde1fe43211" name="a6ea5a3cc6356d1b80b3e8cde1fe43211"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ea5a3cc6356d1b80b3e8cde1fe43211">&#9670;&#160;</a></span>set_specific_heat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::set_specific_heat </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the specific heat value for the particle. This operation will</dt><dd>be allowed only if Poisson's ratio was defined as a variable property for particles in the module's specification file. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The specific heat to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a876773eeef5269e1335ae8a43cbb2d97" name="a876773eeef5269e1335ae8a43cbb2d97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a876773eeef5269e1335ae8a43cbb2d97">&#9670;&#160;</a></span>set_thermal_conductivity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockyParticle::set_thermal_conductivity </td>
          <td>(</td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sets the thermal conductivity value for the particle. This operation will</dt><dd>be allowed only if thermal conductivity was defined as a variable property for particles in the module's specification file. Otherwise, a segmentation fault will occur.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The thermal conductivity to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockyParticle.xhtml">IRockyParticle</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
