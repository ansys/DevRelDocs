<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: source/c++/rocky20/api/sph/api_device_sph.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('api__device__sph_8hpp_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">api_device_sph.hpp</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">// (C) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;rocky20/api/rocky_api_sph_functions.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;rocky20/api/rocky_model_api.hpp&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;rocky20/api/sph/rocky_sph_element_api.hpp&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;rocky20/api/sph/rocky_sph_interaction_api.hpp&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;rocky20/api/sph/rocky_sph_model_api.hpp&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">namespace </span>device {</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">struct </span>DefaultElementsOperator</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>        Callable function_ptr,</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>        <a class="code hl_struct" href="structIRockySPHElementInteraction.xhtml">IRockySPHElementInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    {</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>        function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    }</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>};</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="keyword">struct </span>DefaultTrianglesOperator</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>        Callable function_ptr,</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>        <a class="code hl_struct" href="structIRockySPHTriangleInteraction.xhtml">IRockySPHTriangleInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    {</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>        function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    }</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>};</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">struct </span>DefaultOperator</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>{</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>        Callable function_ptr,</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>        <a class="code hl_struct" href="structIRockySPHElement.xhtml">IRockySPHElement</a>&amp; sph_element_api,</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    {</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        function_ptr(device_model_api, sph_model, sph_element_api, udf_data);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>};</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">struct </span>HeatTransferElementsOperator</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        Callable function_ptr,</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        <a class="code hl_struct" href="structIRockySPHElementInteraction.xhtml">IRockySPHElementInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="comment">// Compute and add heat transfer</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        real_sph heat_transfer =</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>            function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>        <span class="keyword">auto</span> home_sph_element = sph_interaction_api.<a class="code hl_function" href="structIRockySPHElementInteraction.xhtml#a7eb0236ba9b25b58b0ca258b1e79976b">get_home_element</a>();</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>        <span class="keyword">auto</span> near_sph_element = sph_interaction_api.<a class="code hl_function" href="structIRockySPHElementInteraction.xhtml#a0e9d2687e1c8a66357730003f850fe26">get_near_element</a>();</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        home_sph_element.<a class="code hl_function" href="structIRockySPHElement.xhtml#a326bd60795936f9c4b77a9e000b1fa99">get_scalars</a>().<a class="code hl_function" href="structIRockySPHElementScalars.xhtml#ace6ee0291cca05f39eb04ba4c760afe0">add_heat_transfer</a>(heat_transfer);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        near_sph_element.get_scalars().add_heat_transfer(-heat_transfer);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        <span class="comment">// Recording coupled heat transfer</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        <span class="keywordflow">if</span> (home_sph_element.is_dem_coupled())</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        {</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>            <span class="keyword">auto</span> dem_particle = home_sph_element.get_linked_dem_particle(device_model_api);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>            <span class="keyword">auto</span> dem_scalars = dem_particle.get_transfer_scalars();</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>            dem_scalars.add_heat_transfer(heat_transfer);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>        }</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>        <span class="keywordflow">if</span> (near_sph_element.is_dem_coupled())</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>        {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>            <span class="keyword">auto</span> dem_particle = near_sph_element.get_linked_dem_particle(device_model_api);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>            <span class="keyword">auto</span> dem_scalars = dem_particle.get_transfer_scalars();</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>            dem_scalars.add_heat_transfer(-heat_transfer);</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>        }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    }</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>};</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">struct </span>HeatTransferTrianglesOperator</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>{</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        Callable function_ptr,</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        <a class="code hl_struct" href="structIRockySPHTriangleInteraction.xhtml">IRockySPHTriangleInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>        <span class="comment">// Compute and add heat transfer</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>        real_sph heat_transfer =</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>            function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>        <span class="comment">// reduction factor for SPH elements with multiple triangle interactions</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>        <span class="comment">// (1 / number of simultaneous triangle interactions)</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>        heat_transfer /= max(1.0f, sph_model._impl.device_model-&gt;bnd_force_coefficient[sph_interaction_api._impl-&gt;home_index]);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        sph_interaction_api.<a class="code hl_function" href="structIRockySPHTriangleInteraction.xhtml#ae83d8750e222b2a46e6f901fd20b80d5">get_home_element</a>().<a class="code hl_function" href="structIRockySPHElement.xhtml#a326bd60795936f9c4b77a9e000b1fa99">get_scalars</a>().<a class="code hl_function" href="structIRockySPHElementScalars.xhtml#ace6ee0291cca05f39eb04ba4c760afe0">add_heat_transfer</a>(heat_transfer);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        <span class="comment">// Recording data for SPH Boundary Statistics</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>        <span class="keyword">const</span> <span class="keyword">auto</span>&amp; data_recorder = sph_model._impl.device_model-&gt;boundary_data_recorder;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>        <span class="keywordflow">if</span> (data_recorder</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>            &amp;&amp; data_recorder-&gt;is_enabled(SPHBoundaryDataRecorder::tSPHTriangleHeatTransfer))</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        {</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>            <span class="keyword">const</span> <span class="keywordtype">int</span> index =</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>                data_recorder-&gt;get_scalar_index(SPHBoundaryDataRecorder::tSPHTriangleHeatTransfer);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>            <span class="keyword">auto</span> triangle_scalars = sph_interaction_api.<a class="code hl_function" href="structIRockySPHTriangleInteraction.xhtml#a469b4ac53234c9e707fee62725b0470a">get_near_triangle</a>().<a class="code hl_function" href="structIRockyGeometryTriangle.xhtml#a525086257224ba19ec3bbfec2522bdba">get_scalars</a>();</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>            triangle_scalars.<a class="code hl_function" href="structIRockyTriangleScalars.xhtml#ab9721444212bd5fe4e3af03fe3a70294">add_scalar</a>(index, heat_transfer * device_model_api.<a class="code hl_function" href="structIRockyDeviceModel.xhtml#ab03adbadfc1d2a7a8f3a1f849be73d1a">get_timestep</a>());</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>        }</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>        <span class="comment">// Accumulation in a scalar used for heat coupling (positive when triangles receive heat)</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>        <span class="keyword">auto</span>* triangle_scalars = device_model_api._impl.model-&gt;triangle_scalars;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>        <span class="keywordflow">if</span> (triangle_scalars &amp;&amp; triangle_scalars-&gt;is_heat_exchanged_enabled())</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>        {</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>            Backend::AtomicAdd(</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>                &amp;triangle_scalars-&gt;get_heat_exchanged(sph_interaction_api._impl-&gt;near_index),</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>                <span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(-heat_transfer * device_model_api.<a class="code hl_function" href="structIRockyDeviceModel.xhtml#ab03adbadfc1d2a7a8f3a1f849be73d1a">get_timestep</a>()));</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>        }</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>};</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="keyword">struct </span>ForceElementInteractionOperator</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>{</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>        Callable function_ptr,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        <a class="code hl_struct" href="structIRockySPHElementInteraction.xhtml">IRockySPHElementInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>        <span class="comment">// custom calculation of the element-to-element acceleration</span></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>        <span class="keyword">const</span> real_sph3 acceleration =</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>            function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        sph_interaction_api.<a class="code hl_function" href="structIRockySPHElementInteraction.xhtml#a713381036ee74bb8476435037c14124b">add_acceleration</a>(acceleration);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    }</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>};</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="keyword">struct </span>ForceTriangleInteractionOperator</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>{</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>        Callable function_ptr,</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        <a class="code hl_struct" href="structIRockySPHTriangleInteraction.xhtml">IRockySPHTriangleInteraction</a>&amp; sph_interaction_api,</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    {</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>        <span class="comment">// custom calculation of the element-to-triangle acceleration</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>        <span class="keyword">const</span> real_sph3 acceleration =</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>            function_ptr(device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>        sph_interaction_api.<a class="code hl_function" href="structIRockySPHTriangleInteraction.xhtml#a1578dfd6da083096eb169fe24913dd5b">add_acceleration</a>(acceleration);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    }</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>};</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">struct </span>ForceElementOperator</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>{</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>        Callable function_ptr,</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>        <a class="code hl_struct" href="structIRockySPHElement.xhtml">IRockySPHElement</a>&amp; sph_element_api,</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    {</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>        <span class="comment">// custom calculation of the element acceleration (due to a body force)</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        <span class="keyword">const</span> real_sph3 acceleration =</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>            function_ptr(device_model_api, sph_model, sph_element_api, udf_data);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        sph_element_api.<a class="code hl_function" href="structIRockySPHElement.xhtml#a2f90b3a2980c2fa73cd53e72ea277f76">add_acceleration</a>(acceleration);</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    }</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>};</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend&gt;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="keyword">struct </span>MolecularViscosityElementOperator</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>{</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Callable&gt;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    __host__ __device__ <span class="keywordtype">void</span> operator()(</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>        Callable function_ptr,</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>        <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a>&amp; device_model_api,</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>        <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a>&amp; sph_model,</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>        <a class="code hl_struct" href="structIRockySPHElement.xhtml">IRockySPHElement</a>&amp; sph_element_api,</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>        <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>        <span class="comment">// custom calculation of the element viscosity</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        <span class="keyword">const</span> real_sph molecular_viscosity =</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>            function_ptr(device_model_api, sph_model, sph_element_api, udf_data);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        sph_element_api.<a class="code hl_function" href="structIRockySPHElement.xhtml#abc6efc9b72adc7c3b487e760a2c53534">set_molecular_viscosity</a>(molecular_viscosity);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    }</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>};</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> backend, <span class="keyword">typename</span> Operator, <span class="keyword">typename</span> Functor&gt;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>__host__ __device__ <span class="keywordtype">void</span> launch_sph_particles_function(</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    SDeviceModel* device_data,</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    SPHDeviceModel* sph_device,</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>    <span class="keywordtype">double</span> current_time,</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    Functor function_ptr,</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>{</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a> device_model_api;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>    device_model_api._impl.model = device_data;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    device_model_api._impl.current_time = current_time;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a> sph_model(device_data, sph_device-&gt;gen_sph, sph_device);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    <span class="keywordtype">int</span> thread_start, thread_step, thread_stop;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    backend::ThreadIteration(</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>        thread_start, thread_step, thread_stop, sph_device-&gt;gen_sph-&gt;nprt_active);</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = thread_start; i &lt; thread_stop; i += thread_step)</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    {</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>        <span class="comment">// Particle Interface</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>        <a class="code hl_struct" href="structIRockySPHElement.xhtml">IRockySPHElement</a> sph_particle_api { RockySPHElement(sph_device, i), current_time };</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>        <span class="keywordflow">if</span> (sph_particle_api.is_enabled() &amp;&amp; !sph_particle_api._impl.is_ghost())</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>        {</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>            <span class="comment">// Trigger user kernel</span></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>            Operator caller{};</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>            caller(function_ptr, device_model_api, sph_model, sph_particle_api, udf_data);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>        }</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    }</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>}</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend, <span class="keyword">typename</span> Operator, <span class="keyword">typename</span> Functor, <span class="keyword">class</span> SPHNeighborsHandler&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>__host__ __device__ <span class="keywordtype">void</span> launch_sph_interactions_particles(</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    SDeviceModel* device_data,</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    SPHDeviceModel* sph_device,</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>    <span class="keywordtype">double</span> current_time,</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    Functor function_ptr,</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    <span class="keywordtype">void</span>* udf_data,</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    SPHNeighborsHandler&amp; handler)</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>{</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a> device_model_api;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    device_model_api._impl.model = device_data;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    device_model_api._impl.current_time = current_time;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a> sph_model(device_data, sph_device-&gt;gen_sph, sph_device);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    RockySPHElementInteraction sph_interaction(device_data, sph_device, current_time);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    <a class="code hl_struct" href="structIRockySPHElementInteraction.xhtml">IRockySPHElementInteraction</a> sph_interaction_api { &amp;sph_interaction };</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    sph::iterator::IterateElements(handler, [&amp;](<span class="keyword">const</span> <span class="keyword">auto</span>&amp; search_element)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    {</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        <span class="keyword">const</span> <span class="keywordtype">int</span> home_index = search_element.get_home_index();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>        <span class="comment">// Home Interaction Interface</span></div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        sph_interaction.reset_home_element(home_index);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        <span class="comment">// Loop over number of active interactions</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>        sph::iterator::IterateNeighbors(handler, [&amp;](<span class="keyword">const</span> <span class="keyword">auto</span>&amp; neighbor_element)</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>        {</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>            <span class="comment">// Near Interaction Interface</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>            sph_interaction.reset_near_element(</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>                neighbor_element.get_near_index(), neighbor_element.get_periodic());</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>            <span class="comment">// Trigger user kernel</span></div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>            Operator caller {};</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>            caller(function_ptr, device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>        });</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    });</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>}</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span> </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> Backend, <span class="keyword">typename</span> Operator, <span class="keyword">typename</span> Functor&gt;</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>__host__ __device__ <span class="keywordtype">void</span> launch_sph_interactions_triangles(</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    SDeviceModel* device_data,</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    SPHDeviceModel* sph_device,</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    <span class="keywordtype">double</span> current_time,</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    Functor function_ptr,</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    <span class="keywordtype">void</span>* udf_data)</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>{</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    <a class="code hl_struct" href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a> device_model_api;</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    device_model_api._impl.model = device_data;</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>    device_model_api._impl.current_time = current_time;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    <a class="code hl_struct" href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a> sph_model(device_data, sph_device-&gt;gen_sph, sph_device);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    RockySPHTriangleInteraction sph_interaction(device_data, sph_device, current_time);</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    <a class="code hl_struct" href="structIRockySPHTriangleInteraction.xhtml">IRockySPHTriangleInteraction</a> sph_interaction_api { &amp;sph_interaction };</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    <span class="keyword">const</span> <span class="keyword">auto</span>&amp; periodic_domain = device_data-&gt;gen-&gt;periodic_domain;</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>    <span class="comment">// loop only over element/triangle pairs with projection inside the triangle</span></div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>    <span class="keywordtype">int</span> thread_start, thread_step, thread_stop;</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>    Backend::ThreadIteration(thread_start, thread_step, thread_stop, sph_device-&gt;gen_sph-&gt;n_triangle_force_pairs);</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = thread_start; i &lt; thread_stop; i += thread_step)</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    {</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>        <span class="keyword">const</span> <span class="keywordtype">int</span> index = sph_device-&gt;triangle_force_pairs[i];</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>        cuda_sph_contact* _sph_interaction = sph_device-&gt;cnt_sph_t + index;</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>        PeriodicPosition cnt_per {};</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>        <span class="keywordflow">if</span> (periodic_domain.enabled())</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>            cnt_per = sph_device-&gt;per_sph_cnt_t[index];</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>        <span class="comment">// Interaction Interface</span></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>        sph_interaction.reset_triangle_contact(_sph_interaction, cnt_per);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>        <span class="comment">// ROCKY-17943: For periodic cases, skipping interaction w/ triangles, such that</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>        <span class="comment">// the projected point is positioned outside periodic domain</span></div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>        <span class="keywordflow">if</span> (periodic_domain.enabled()</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>            &amp;&amp; periodic_domain.is_outside_cartesian_periodic_bounds(sph_interaction.inside_point))</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>        {</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>            <span class="keywordflow">continue</span>;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>        }</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>        <span class="comment">// Trigger user kernel</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>        Operator caller {};</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>        caller(function_ptr, device_model_api, sph_model, sph_interaction_api, udf_data);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>    }</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>}</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>}  <span class="comment">// namespace device</span></div>
<div class="ttc" id="astructIRockyDeviceModel_xhtml"><div class="ttname"><a href="structIRockyDeviceModel.xhtml">IRockyDeviceModel</a></div><div class="ttdef"><b>Definition</b> rocky_model_api.hpp:20</div></div>
<div class="ttc" id="astructIRockyDeviceModel_xhtml_ab03adbadfc1d2a7a8f3a1f849be73d1a"><div class="ttname"><a href="structIRockyDeviceModel.xhtml#ab03adbadfc1d2a7a8f3a1f849be73d1a">IRockyDeviceModel::get_timestep</a></div><div class="ttdeci">ROCKY_FUNCTIONS double get_timestep() const</div><div class="ttdef"><b>Definition</b> rocky_model_api.hpp:104</div></div>
<div class="ttc" id="astructIRockyGeometryTriangle_xhtml_a525086257224ba19ec3bbfec2522bdba"><div class="ttname"><a href="structIRockyGeometryTriangle.xhtml#a525086257224ba19ec3bbfec2522bdba">IRockyGeometryTriangle::get_scalars</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockyTriangleScalars get_scalars()</div></div>
<div class="ttc" id="astructIRockySPHDeviceModel_xhtml"><div class="ttname"><a href="structIRockySPHDeviceModel.xhtml">IRockySPHDeviceModel</a></div><div class="ttdef"><b>Definition</b> rocky_sph_model_api.hpp:155</div></div>
<div class="ttc" id="astructIRockySPHElementInteraction_xhtml"><div class="ttname"><a href="structIRockySPHElementInteraction.xhtml">IRockySPHElementInteraction</a></div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:19</div></div>
<div class="ttc" id="astructIRockySPHElementInteraction_xhtml_a0e9d2687e1c8a66357730003f850fe26"><div class="ttname"><a href="structIRockySPHElementInteraction.xhtml#a0e9d2687e1c8a66357730003f850fe26">IRockySPHElementInteraction::get_near_element</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockySPHElement get_near_element() const</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:113</div></div>
<div class="ttc" id="astructIRockySPHElementInteraction_xhtml_a713381036ee74bb8476435037c14124b"><div class="ttname"><a href="structIRockySPHElementInteraction.xhtml#a713381036ee74bb8476435037c14124b">IRockySPHElementInteraction::add_acceleration</a></div><div class="ttdeci">ROCKY_FUNCTIONS void add_acceleration(float3 acceleration)</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:123</div></div>
<div class="ttc" id="astructIRockySPHElementInteraction_xhtml_a7eb0236ba9b25b58b0ca258b1e79976b"><div class="ttname"><a href="structIRockySPHElementInteraction.xhtml#a7eb0236ba9b25b58b0ca258b1e79976b">IRockySPHElementInteraction::get_home_element</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockySPHElement get_home_element() const</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:108</div></div>
<div class="ttc" id="astructIRockySPHElementScalars_xhtml_ace6ee0291cca05f39eb04ba4c760afe0"><div class="ttname"><a href="structIRockySPHElementScalars.xhtml#ace6ee0291cca05f39eb04ba4c760afe0">IRockySPHElementScalars::add_heat_transfer</a></div><div class="ttdeci">ROCKY_FUNCTIONS void add_heat_transfer(const float value)</div><div class="ttdef"><b>Definition</b> rocky_sph_element_scalars.hpp:291</div></div>
<div class="ttc" id="astructIRockySPHElement_xhtml"><div class="ttname"><a href="structIRockySPHElement.xhtml">IRockySPHElement</a></div><div class="ttdef"><b>Definition</b> rocky_sph_element_api.hpp:21</div></div>
<div class="ttc" id="astructIRockySPHElement_xhtml_a2f90b3a2980c2fa73cd53e72ea277f76"><div class="ttname"><a href="structIRockySPHElement.xhtml#a2f90b3a2980c2fa73cd53e72ea277f76">IRockySPHElement::add_acceleration</a></div><div class="ttdeci">ROCKY_FUNCTIONS void add_acceleration(const float3 &amp;acceleration)</div><div class="ttdef"><b>Definition</b> rocky_sph_element_api.hpp:69</div></div>
<div class="ttc" id="astructIRockySPHElement_xhtml_a326bd60795936f9c4b77a9e000b1fa99"><div class="ttname"><a href="structIRockySPHElement.xhtml#a326bd60795936f9c4b77a9e000b1fa99">IRockySPHElement::get_scalars</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockySPHElementScalars get_scalars()</div><div class="ttdef"><b>Definition</b> rocky_sph_element_api.hpp:260</div></div>
<div class="ttc" id="astructIRockySPHElement_xhtml_abc6efc9b72adc7c3b487e760a2c53534"><div class="ttname"><a href="structIRockySPHElement.xhtml#abc6efc9b72adc7c3b487e760a2c53534">IRockySPHElement::set_molecular_viscosity</a></div><div class="ttdeci">ROCKY_FUNCTIONS void set_molecular_viscosity(const float molecular_viscosity)</div><div class="ttdef"><b>Definition</b> rocky_sph_element_api.hpp:284</div></div>
<div class="ttc" id="astructIRockySPHTriangleInteraction_xhtml"><div class="ttname"><a href="structIRockySPHTriangleInteraction.xhtml">IRockySPHTriangleInteraction</a></div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:138</div></div>
<div class="ttc" id="astructIRockySPHTriangleInteraction_xhtml_a1578dfd6da083096eb169fe24913dd5b"><div class="ttname"><a href="structIRockySPHTriangleInteraction.xhtml#a1578dfd6da083096eb169fe24913dd5b">IRockySPHTriangleInteraction::add_acceleration</a></div><div class="ttdeci">ROCKY_FUNCTIONS void add_acceleration(float3 acceleration)</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:266</div></div>
<div class="ttc" id="astructIRockySPHTriangleInteraction_xhtml_a469b4ac53234c9e707fee62725b0470a"><div class="ttname"><a href="structIRockySPHTriangleInteraction.xhtml#a469b4ac53234c9e707fee62725b0470a">IRockySPHTriangleInteraction::get_near_triangle</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockyGeometryTriangle get_near_triangle() const</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:279</div></div>
<div class="ttc" id="astructIRockySPHTriangleInteraction_xhtml_ae83d8750e222b2a46e6f901fd20b80d5"><div class="ttname"><a href="structIRockySPHTriangleInteraction.xhtml#ae83d8750e222b2a46e6f901fd20b80d5">IRockySPHTriangleInteraction::get_home_element</a></div><div class="ttdeci">ROCKY_FUNCTIONS IRockySPHElement get_home_element() const</div><div class="ttdef"><b>Definition</b> rocky_sph_interaction_api.hpp:256</div></div>
<div class="ttc" id="astructIRockyTriangleScalars_xhtml_ab9721444212bd5fe4e3af03fe3a70294"><div class="ttname"><a href="structIRockyTriangleScalars.xhtml#ab9721444212bd5fe4e3af03fe3a70294">IRockyTriangleScalars::add_scalar</a></div><div class="ttdeci">ROCKY_FUNCTIONS void add_scalar(int scalar_index, double value) const</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b2f33c71d4aa5e7af42a1ca61ff5af1b.xhtml">source</a></li><li class="navelem"><a class="el" href="dir_5bec2c41045c5679e0f388d0726ce756.xhtml">c++</a></li><li class="navelem"><a class="el" href="dir_fc907dd8a19288f35eaf149283de05d4.xhtml">rocky20</a></li><li class="navelem"><a class="el" href="dir_04a4feaf085f2323de96e1b0ca127830.xhtml">api</a></li><li class="navelem"><a class="el" href="dir_73defce0f3034688ade5b24ad0c9ed4d.xhtml">sph</a></li><li class="navelem"><b>api_device_sph.hpp</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
