<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: source/c++/rocky20/api/rocky_scalars.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('rocky__scalars_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">rocky_scalars.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">// (C) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">// Includes ========================================================================================</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;rocky20/model/rocky_model.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;rocky20/api/device/api_backend.hpp&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;rocky20/api/rocky_statistics_data.hpp&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> _scalars&gt;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">struct </span>ScalarsModel</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>{</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    <span class="keywordtype">int</span> find(<span class="keyword">const</span> <span class="keywordtype">char</span>* name);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordtype">int</span> add(<span class="keyword">const</span> <span class="keywordtype">char</span>* _name, <span class="keyword">const</span> <span class="keywordtype">char</span>* _unit, <span class="keywordtype">bool</span> output = <span class="keyword">true</span>);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keyword">template</span>&lt;<span class="keyword">class</span> _data_type&gt;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordtype">int</span> add(<span class="keyword">const</span> <span class="keywordtype">char</span>* _name, <span class="keyword">const</span> <span class="keywordtype">char</span>* _unit, <span class="keywordtype">bool</span> output)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>        <span class="keywordflow">return</span> this-&gt;_impl.template add_scalars&lt;_data_type&gt;(</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>            _name, _unit, rocky20::ScalarsInfo::cotNone, output);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    }</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordtype">int</span> add_statistics_adder(<span class="keyword">const</span> <span class="keywordtype">char</span>* _name, <span class="keyword">const</span> <span class="keywordtype">char</span>* _unit);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    [[deprecated(<span class="stringliteral">&quot;IRockyStatisticsCounter is no longer needed for statistics&quot;</span>)]]</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keywordtype">int</span> add_statistics_counter(<span class="keyword">const</span> <span class="keywordtype">char</span>* _name);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keywordtype">int</span> add_statistics_accumulator(<span class="keyword">const</span> <span class="keywordtype">char</span>* _name, <span class="keyword">const</span> <span class="keywordtype">char</span>* _unit);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordtype">void</span> reset(<span class="keywordtype">int</span> scalar_index);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    <span class="keywordtype">void</span> set_dimension(<span class="keywordtype">int</span> scalar_index, <span class="keywordtype">double</span> dimension_factor);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="keyword">template</span>&lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    _data_type* get_scalars_array(<span class="keywordtype">int</span> scalar_index)</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    {</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>        <span class="keywordflow">return</span> this-&gt;_impl.template get_scalars&lt;_data_type&gt;(scalar_index);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    }</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    ScalarsModel(_scalars&amp; scalars, <span class="keyword">const</span> std::vector&lt; int &gt;&amp; device_ids);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    _scalars&amp; _impl;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    <span class="keyword">const</span> std::vector&lt; int &gt;&amp; device_ids;</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>};</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span> &lt;<span class="keyword">class</span> _scalars&gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keyword">struct </span>EntityScalars</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    <span class="keyword">typedef</span> <span class="keyword">typename</span> _scalars::KnownTypes KnownTypes;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    _scalars&amp; _impl;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    <span class="keywordtype">int</span> element_index;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    EntityScalars(_scalars&amp; scalars, <span class="keywordtype">int</span> _element_index) : _impl(scalars), element_index(_element_index)</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    {</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    }</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    _data_type&amp; get_known_scalar(KnownTypes scalars_type)</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    {</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_known_scalar&lt;_data_type&gt;(</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>            scalars_type, this-&gt;element_index);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    }</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        _data_type get_known_scalar(KnownTypes scalars_type)<span class="keyword"> const</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_known_scalar&lt;_data_type&gt;(</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>            scalars_type, this-&gt;element_index);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>    }</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        <span class="keywordtype">void</span> add_known_scalar(KnownTypes scalars_type, _data_type value)</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    {</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>        backend::atomic_add(</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>            &amp;this-&gt;_impl._scalars::template get_known_scalar&lt;_data_type&gt;(</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>                scalars_type, this-&gt;element_index),</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>            value);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        _data_type get_scalar(<span class="keywordtype">int</span> scalar_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_scalar&lt;_data_type&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    }</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>        <a class="code hl_struct" href="structIRockyStatisticsAdder.xhtml">IRockyStatisticsAdder</a> get_statistics_adder(<span class="keywordtype">int</span> scalar_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_scalar&lt;IRockyStatisticsAdder&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>        <a class="code hl_struct" href="structIRockyStatisticsAccumulator.xhtml">IRockyStatisticsAccumulator</a> get_statistics_accumulator(<span class="keywordtype">int</span> scalar_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_scalar&lt;IRockyStatisticsAccumulator&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    }</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    [[deprecated(<span class="stringliteral">&quot;IRockyStatisticsCounter is no longer needed for statistics&quot;</span>)]]</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>        IRockyStatisticsCounter get_statistics_counter(<span class="keywordtype">int</span> scalar_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_scalar&lt;IRockyStatisticsCounter&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    }</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>        <span class="keywordtype">void</span> set_scalar(<span class="keywordtype">int</span> scalars_index, _data_type value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>        this-&gt;_impl._scalars::template get_scalar&lt;_data_type&gt;(</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>            scalars_index, this-&gt;element_index) = value;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    }</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        <span class="keywordtype">void</span> add_scalar(<span class="keywordtype">int</span> scalar_index, _data_type value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>        backend::atomic_add(</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>            &amp;this-&gt;_impl._scalars::template get_scalar&lt;_data_type&gt;(scalar_index, this-&gt;element_index),</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>            value</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>        );</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    }</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> _data_type = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>        <span class="keywordtype">void</span> max_scalar(<span class="keywordtype">int</span> scalar_index, _data_type value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>        backend::atomic_max(</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>            &amp;this-&gt;_impl._scalars::template get_scalar&lt;_data_type&gt;(scalar_index, this-&gt;element_index),</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>            value</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>        );</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>    }</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    [[deprecated(<span class="stringliteral">&quot;IRockyStatisticsCounter is no longer needed for statistics&quot;</span>)]]</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    <span class="keywordtype">void</span> add_value_to_statistics_adder(<span class="keywordtype">int</span> scalar_index, <span class="keywordtype">double</span> value, <span class="keywordtype">double</span> count)</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    {</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>        rocky20::AAdder&amp; adder = this-&gt;_impl._scalars::template</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>            get_scalar&lt;rocky20::AAdder&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="preprocessor">#ifdef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>        adder.add_value&lt;CudaBackend&gt;(value);</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>        adder.add_value&lt;OMPBackend&gt;(value);</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    }</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    <span class="keywordtype">void</span> add_value_to_statistics_adder(<span class="keywordtype">int</span> scalar_index, <span class="keywordtype">double</span> value)</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    {</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>        rocky20::AAdder&amp; adder = this-&gt;_impl._scalars::template</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>            get_scalar&lt;rocky20::AAdder&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span><span class="preprocessor">#ifdef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>        adder.add_value&lt;CudaBackend&gt;(value);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>        adder.add_value&lt;OMPBackend&gt;(value);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    }</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    <span class="keywordtype">void</span> add_value_to_statistics_accumulator(<span class="keywordtype">int</span> scalar_index, <span class="keywordtype">double</span> value)</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    {</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>        rocky20::AAccumulator&amp; accumulator = this-&gt;_impl._scalars::template</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>            get_scalar&lt;rocky20::AAccumulator&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span><span class="preprocessor">#ifdef GPU_KERNEL_COMPILING_STAGE</span></div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>        accumulator.add_value&lt;CudaBackend&gt;(value);</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>        accumulator.add_value&lt;OMPBackend&gt;(value);</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>    }</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    [[deprecated(<span class="stringliteral">&quot;IRockyStatisticsCounter is no longer needed for statistics&quot;</span>)]]</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>    <span class="keywordtype">void</span> increment_statistics_counter(<span class="keywordtype">int</span> scalar_index)</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>    {</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>        <span class="keywordtype">int</span>&amp; counter =</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>            this-&gt;_impl._scalars::template get_scalar&lt;int&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>        backend::atomic_add(&amp;counter, 1);</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>    }</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>    [[deprecated(<span class="stringliteral">&quot;IRockyStatisticsCounter is no longer needed for statistics&quot;</span>)]]</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>    ROCKY_FUNCTIONS</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>    <span class="keywordtype">double</span> get_statistics_count(<span class="keywordtype">int</span> scalar_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>        <span class="keywordflow">return</span> this-&gt;_impl._scalars::template get_scalar&lt;int&gt;(scalar_index, this-&gt;element_index);</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>    }</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>};</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="ttc" id="astructIRockyStatisticsAccumulator_xhtml"><div class="ttname"><a href="structIRockyStatisticsAccumulator.xhtml">IRockyStatisticsAccumulator</a></div><div class="ttdef"><b>Definition</b> rocky_statistics_data.hpp:182</div></div>
<div class="ttc" id="astructIRockyStatisticsAdder_xhtml"><div class="ttname"><a href="structIRockyStatisticsAdder.xhtml">IRockyStatisticsAdder</a></div><div class="ttdef"><b>Definition</b> rocky_statistics_data.hpp:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b2f33c71d4aa5e7af42a1ca61ff5af1b.xhtml">source</a></li><li class="navelem"><a class="el" href="dir_5bec2c41045c5679e0f388d0726ce756.xhtml">c++</a></li><li class="navelem"><a class="el" href="dir_fc907dd8a19288f35eaf149283de05d4.xhtml">rocky20</a></li><li class="navelem"><a class="el" href="dir_04a4feaf085f2323de96e1b0ca127830.xhtml">api</a></li><li class="navelem"><b>rocky_scalars.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
