<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockySPHElementScalars Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockySPHElementScalars.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockySPHElementScalars Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__sph__element__scalars_8hpp_source.xhtml">rocky_sph_element_scalars.hpp</a>&gt;</code></p>

<p>Inherits EntityScalars&lt; rocky20::SPHParticleScalars &gt;.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf45b1ddd0d68df837ec264d2758693f" id="r_acf45b1ddd0d68df837ec264d2758693f"><td class="memTemplParams" colspan="2">template&lt;class _data_type  = float&gt; </td></tr>
<tr class="memitem:acf45b1ddd0d68df837ec264d2758693f"><td class="memTemplItemLeft" align="right" valign="top">ROCKY_FUNCTIONS _data_type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#acf45b1ddd0d68df837ec264d2758693f">get_scalar</a> (int scalar_index) const</td></tr>
<tr class="separator:acf45b1ddd0d68df837ec264d2758693f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70cf6bb3041f4c5e9a8c336ea47b201" id="r_af70cf6bb3041f4c5e9a8c336ea47b201"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af70cf6bb3041f4c5e9a8c336ea47b201">get_turbulent_viscosity</a> () const</td></tr>
<tr class="separator:af70cf6bb3041f4c5e9a8c336ea47b201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d031c763a7c8c643ec7a86c07ae6d3" id="r_aa7d031c763a7c8c643ec7a86c07ae6d3"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa7d031c763a7c8c643ec7a86c07ae6d3">get_temperature</a> () const</td></tr>
<tr class="separator:aa7d031c763a7c8c643ec7a86c07ae6d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a1580996da5f171f535de7e7487fe01" id="r_a8a1580996da5f171f535de7e7487fe01"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a1580996da5f171f535de7e7487fe01">get_heat_transfer</a> () const</td></tr>
<tr class="separator:a8a1580996da5f171f535de7e7487fe01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21d991fe945a35f8c7a1f4dffd7c5fe4" id="r_a21d991fe945a35f8c7a1f4dffd7c5fe4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a21d991fe945a35f8c7a1f4dffd7c5fe4">get_velocity_gradient_x</a> () const</td></tr>
<tr class="separator:a21d991fe945a35f8c7a1f4dffd7c5fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b6e39222f53c9977ed3cdcf74cb4a9f" id="r_a0b6e39222f53c9977ed3cdcf74cb4a9f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0b6e39222f53c9977ed3cdcf74cb4a9f">get_velocity_gradient_y</a> () const</td></tr>
<tr class="separator:a0b6e39222f53c9977ed3cdcf74cb4a9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace9533abcbc59ad7581a97d988d4c880" id="r_ace9533abcbc59ad7581a97d988d4c880"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS float3&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ace9533abcbc59ad7581a97d988d4c880">get_velocity_gradient_z</a> () const</td></tr>
<tr class="separator:ace9533abcbc59ad7581a97d988d4c880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dae91ede893e406367059aae00764d5" id="r_a5dae91ede893e406367059aae00764d5"><td class="memTemplParams" colspan="2">template&lt;class _data_type  = float&gt; </td></tr>
<tr class="memitem:a5dae91ede893e406367059aae00764d5"><td class="memTemplItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a5dae91ede893e406367059aae00764d5">set_scalar</a> (int scalar_index, _data_type value) const</td></tr>
<tr class="separator:a5dae91ede893e406367059aae00764d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb2bc65cb47b22517249ce65c8728a8" id="r_aebb2bc65cb47b22517249ce65c8728a8"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aebb2bc65cb47b22517249ce65c8728a8">set_turbulent_viscosity</a> (const float value)</td></tr>
<tr class="separator:aebb2bc65cb47b22517249ce65c8728a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04f956ddd857b6b6fd7e2a6fe44a494" id="r_aa04f956ddd857b6b6fd7e2a6fe44a494"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa04f956ddd857b6b6fd7e2a6fe44a494">set_temperature</a> (const float value)</td></tr>
<tr class="separator:aa04f956ddd857b6b6fd7e2a6fe44a494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40e66b6c4bbea654f110c9d42b3a72f" id="r_af40e66b6c4bbea654f110c9d42b3a72f"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af40e66b6c4bbea654f110c9d42b3a72f">set_heat_transfer</a> (const float value)</td></tr>
<tr class="separator:af40e66b6c4bbea654f110c9d42b3a72f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d99d6c1f69b32a5e9e77325974b1f1" id="r_a72d99d6c1f69b32a5e9e77325974b1f1"><td class="memTemplParams" colspan="2">template&lt;class _data_type  = float&gt; </td></tr>
<tr class="memitem:a72d99d6c1f69b32a5e9e77325974b1f1"><td class="memTemplItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#a72d99d6c1f69b32a5e9e77325974b1f1">add_scalar</a> (int scalar_index, _data_type value) const</td></tr>
<tr class="separator:a72d99d6c1f69b32a5e9e77325974b1f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22c42af1b9c839d1693a42ac889a09df" id="r_a22c42af1b9c839d1693a42ac889a09df"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22c42af1b9c839d1693a42ac889a09df">add_turbulent_viscosity</a> (const float value)</td></tr>
<tr class="separator:a22c42af1b9c839d1693a42ac889a09df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6f55ad8e1a6915cccbade3f199315a4" id="r_ae6f55ad8e1a6915cccbade3f199315a4"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae6f55ad8e1a6915cccbade3f199315a4">add_temperature</a> (const float value)</td></tr>
<tr class="separator:ae6f55ad8e1a6915cccbade3f199315a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace6ee0291cca05f39eb04ba4c760afe0" id="r_ace6ee0291cca05f39eb04ba4c760afe0"><td class="memItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ace6ee0291cca05f39eb04ba4c760afe0">add_heat_transfer</a> (const float value)</td></tr>
<tr class="separator:ace6ee0291cca05f39eb04ba4c760afe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af020615c90124b8fe6d7168e964515b6" id="r_af020615c90124b8fe6d7168e964515b6"><td class="memTemplParams" colspan="2">template&lt;class _data_type  = float&gt; </td></tr>
<tr class="memitem:af020615c90124b8fe6d7168e964515b6"><td class="memTemplItemLeft" align="right" valign="top">ROCKY_FUNCTIONS void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="#af020615c90124b8fe6d7168e964515b6">max_scalar</a> (int scalar_index, _data_type value) const</td></tr>
<tr class="separator:af020615c90124b8fe6d7168e964515b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>When running a simulation, an <code><a class="el" href="structIRockySPHElementScalars.xhtml">IRockySPHElementScalars</a></code> object gives access to all SPH element scalars defined in the project. These SPH element scalars can be built-in scalars defined within the Rocky solver, or custom SPH element scalars defined by the current module or other active modules. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ace6ee0291cca05f39eb04ba4c760afe0" name="ace6ee0291cca05f39eb04ba4c760afe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace6ee0291cca05f39eb04ba4c760afe0">&#9670;&#160;</a></span>add_heat_transfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::add_heat_transfer </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method can be used for accumulating the heat transfer rate values that a</dt><dd>SPH element interchanges with the surrounding SPH elements, DEM elements and geometries.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The heat transfer rate value to be added. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a72d99d6c1f69b32a5e9e77325974b1f1" name="a72d99d6c1f69b32a5e9e77325974b1f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72d99d6c1f69b32a5e9e77325974b1f1">&#9670;&#160;</a></span>add_scalar()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _data_type  = float&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::add_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_data_type</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to sum a value to the current one stored in it.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>The value that must be summed to the current stored value.<br  />
   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae6f55ad8e1a6915cccbade3f199315a4" name="ae6f55ad8e1a6915cccbade3f199315a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6f55ad8e1a6915cccbade3f199315a4">&#9670;&#160;</a></span>add_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::add_temperature </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a value to the current temperature of a SPH element.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value to be added to the temperature. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a22c42af1b9c839d1693a42ac889a09df" name="a22c42af1b9c839d1693a42ac889a09df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22c42af1b9c839d1693a42ac889a09df">&#9670;&#160;</a></span>add_turbulent_viscosity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::add_turbulent_viscosity </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method sums a value to the current turbulent viscosity stored for the SPH element.</dt><dd></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value summed to the turbulent viscosity. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8a1580996da5f171f535de7e7487fe01" name="a8a1580996da5f171f535de7e7487fe01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a1580996da5f171f535de7e7487fe01">&#9670;&#160;</a></span>get_heat_transfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float IRockySPHElementScalars::get_heat_transfer </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the total heat transfer rate towards/from the SPH element. Heat transfer rate is a built-in SPH element scalar defined by the Rocky solver, which is activated when a thermal model is enabled in a project. </dd></dl>

</div>
</div>
<a id="acf45b1ddd0d68df837ec264d2758693f" name="acf45b1ddd0d68df837ec264d2758693f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf45b1ddd0d68df837ec264d2758693f">&#9670;&#160;</a></span>get_scalar()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _data_type  = float&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS _data_type IRockySPHElementScalars::get_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>the value currently stored can be accessed with this method.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The value currently stored in the scalar variable.   </dd></dl>

</div>
</div>
<a id="aa7d031c763a7c8c643ec7a86c07ae6d3" name="aa7d031c763a7c8c643ec7a86c07ae6d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7d031c763a7c8c643ec7a86c07ae6d3">&#9670;&#160;</a></span>get_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float IRockySPHElementScalars::get_temperature </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the temperature of the SPH element. Temperature is a built-in SPH element scalar defined by the Rocky solver, which is activated when a thermal model is enabled in a project. </dd></dl>

</div>
</div>
<a id="af70cf6bb3041f4c5e9a8c336ea47b201" name="af70cf6bb3041f4c5e9a8c336ea47b201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af70cf6bb3041f4c5e9a8c336ea47b201">&#9670;&#160;</a></span>get_turbulent_viscosity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float IRockySPHElementScalars::get_turbulent_viscosity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The value of the turbulent viscosity. Turbulent viscosity is a built-in SPH element scalar defined in the Rocky solver, whose values can be calculated either by a built-in model or by a custom module. </dd></dl>

</div>
</div>
<a id="a21d991fe945a35f8c7a1f4dffd7c5fe4" name="a21d991fe945a35f8c7a1f4dffd7c5fe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21d991fe945a35f8c7a1f4dffd7c5fe4">&#9670;&#160;</a></span>get_velocity_gradient_x()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float3 IRockySPHElementScalars::get_velocity_gradient_x </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The gradient of the component of the SPH element velocity along the X-axis. Velocity gradients are built-in SPH element scalars defined by the Rocky solver, which is activated manually when a module calls <code>IRockySPHElementScalarsModel::enable_gradient_velocity()</code> at setup hook. </dd></dl>

</div>
</div>
<a id="a0b6e39222f53c9977ed3cdcf74cb4a9f" name="a0b6e39222f53c9977ed3cdcf74cb4a9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b6e39222f53c9977ed3cdcf74cb4a9f">&#9670;&#160;</a></span>get_velocity_gradient_y()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float3 IRockySPHElementScalars::get_velocity_gradient_y </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The gradient of the component of the SPH element velocity along the Y-axis. Velocity gradients are built-in SPH element scalars defined by the Rocky solver, which is activated manually when a module calls <code>IRockySPHElementScalarsModel::enable_gradient_velocity()</code> at setup hook. </dd></dl>

</div>
</div>
<a id="ace9533abcbc59ad7581a97d988d4c880" name="ace9533abcbc59ad7581a97d988d4c880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace9533abcbc59ad7581a97d988d4c880">&#9670;&#160;</a></span>get_velocity_gradient_z()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS float3 IRockySPHElementScalars::get_velocity_gradient_z </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The gradient of the component of the SPH element velocity along the Z-axis. Velocity gradients are built-in SPH element scalars defined by the Rocky solver, which is activated manually when a module calls <code>IRockySPHElementScalarsModel::enable_gradient_velocity()</code> at setup hook. </dd></dl>

</div>
</div>
<a id="af020615c90124b8fe6d7168e964515b6" name="af020615c90124b8fe6d7168e964515b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af020615c90124b8fe6d7168e964515b6">&#9670;&#160;</a></span>max_scalar()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _data_type  = float&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::max_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_data_type</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to make the scalar store the maximum of a set of values. A common use of this method is, for instance, to find the maximum among a set of values associated to the contacts of a particle.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>A value that must be checked if it is greater than the current stored value.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af40e66b6c4bbea654f110c9d42b3a72f" name="af40e66b6c4bbea654f110c9d42b3a72f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af40e66b6c4bbea654f110c9d42b3a72f">&#9670;&#160;</a></span>set_heat_transfer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::set_heat_transfer </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method can be used by a custom module implementing a thermal model in order to</dt><dd>set the calculated value of the total heat transfer towards/from a SPH element.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the heat transfer rate to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5dae91ede893e406367059aae00764d5" name="a5dae91ede893e406367059aae00764d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dae91ede893e406367059aae00764d5">&#9670;&#160;</a></span>set_scalar()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class _data_type  = float&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::set_scalar </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>scalar_index</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">_data_type</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p></p>
<dl class="section user"><dt>If a custom scalar variable was defined during the setup of the module,</dt><dd>this method can be used to store a value on it.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scalar_index</td><td>The integer index that was associated to the scalar variable during the setup of the module.</td></tr>
    <tr><td class="paramname">value</td><td>The value that must be stored.   </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa04f956ddd857b6b6fd7e2a6fe44a494" name="aa04f956ddd857b6b6fd7e2a6fe44a494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa04f956ddd857b6b6fd7e2a6fe44a494">&#9670;&#160;</a></span>set_temperature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::set_temperature </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method can be used by a custom module implementing a thermal model in order to</dt><dd>set the value of the temperature of a SPH element.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the temperature to be set. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aebb2bc65cb47b22517249ce65c8728a8" name="aebb2bc65cb47b22517249ce65c8728a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebb2bc65cb47b22517249ce65c8728a8">&#9670;&#160;</a></span>set_turbulent_viscosity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ROCKY_FUNCTIONS void IRockySPHElementScalars::set_turbulent_viscosity </td>
          <td>(</td>
          <td class="paramtype">const float</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method can be used by a custom module implementing a turbulent model in order to</dt><dd>set the value of the turbulent viscosity for later use in the flow equations.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value of the turbulent viscosity. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockySPHElementScalars.xhtml">IRockySPHElementScalars</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
