<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: Macros and specifiers</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('macros_and_specifiers.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Macros and specifiers</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p><a class="anchor" id="md_docs_2sdk__manual_2macros__and__specifiers"></a> <a class="el" href="glossary.xhtml#cuda">CUDA</a> is the parallel computing platform used by Rocky to enable the execution of simulations on CUDA-enabled GPU cards. In order to work properly on GPU simulations, custom <a class="el" href="glossary.xhtml#module">modules</a> must perform some basic operations of memory management on <a class="el" href="glossary.xhtml#device">devices</a> and data transfer between CPU and GPU.</p>
<p><em>Note: Although on GPU simulations most of the heavy operations are processed on GPU, there are many operations, such as setup, initialization and output, that are always performed on CPU</em></p>
<p>This section describes a set of available CUDA-related macros that may be used for performing basic memory operations in the code when implementing custom modules. It is worth noting that they must be used only in the CUDA-related <a class="el" href="glossary.xhtml#hook">hooks</a>*, and only when modules are intended to be used on simulations running on GPU. In order to enable CUDA-related macros and hooks, the <code>.cu</code> file implementing the module functionalities must define the preprocessor macro name <code>ROCKY_CUDA_API</code>.</p>
<p>**Currently, the CUDA-related hooks are four: <code>ROCKY_PLUGIN_INITIALIZE_CUDA</code>, <code>ROCKY_PLUGIN_BEGIN_ITERATION_CUDA</code>, <code>ROCKY_PLUGIN_PRE_OUTPUT_CUDA_SYNC_DATA</code>, and <code>ROCKY_PLUGIN_TEAR_DOWN_CUDA</code>.*</p>
<h2><a class="anchor" id="autotoc_md11"></a>
CUDA_MALLOC</h2>
<p>This macro must be used to allocate a block of memory in a device for storing custom data. This allocation must be made before any copy operation of custom data to a device.</p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">A pointer that after successful memory allocation will point to the memory address in a device at which the custom data will be stored. Prior to its utilization in the macro, this pointer must be a null pointer, otherwise a runtime error will be thrown.</p>
</li>
<li><p class="startli"><code>size</code></p>
<p class="startli">An integer value that indicates the number of bytes that must be allocated in the device.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md12"></a>
CUDA_MALLOC_TYPE</h2>
<p>A variant of <code>CUDA_MALLOC</code> that, instead of receiving the number of bytes that must be allocated in the device, receives the type of data that will be stored and the number of elements as parameters, if it happens to be an array.</p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">A pointer that after successful memory allocation will point to the memory address in a device at which the custom data will be stored. Prior to its utilization in the macro, this pointer must be a null pointer, otherwise a runtime error will be thrown.</p>
</li>
<li><p class="startli"><code>count</code></p>
<p class="startli">An integer value that indicates the number of elements of the same type that will be stored in the allocated memory.</p>
</li>
<li><p class="startli"><code>type</code></p>
<p class="startli">The type of variable that will be stored in the device, which can be a C++ built-in type or a custom data structure.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md13"></a>
CUDA_COPY_H2D</h2>
<p>This macro must be used to copy custom data from the <a class="el" href="glossary.xhtml#host">host</a> to a device. Prior to this copy operation, the right amount of memory must have already been allocated within the device, otherwise a segmentation fault will occur.</p>
<p><em>Note: The data type being copied must be trivially copyable otherwise a compilation error will raise.</em></p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">Destination memory address within a device.</p>
</li>
<li><p class="startli"><code>host_ptr</code></p>
<p class="startli">Source memory address within the host.</p>
</li>
<li><p class="startli"><code>count</code></p>
<p class="startli">An integer value that indicates the number of elements of the same type that will be copied.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md14"></a>
CUDA_COPY_D2H</h2>
<p>This macro performs the inverse operation of <code>CUDA_COPY_H2D</code>, that is, it copies data from the device back to the host. This operation may be needed when processed data must be made available to the host in order to be saved or delivered to the Rocky UI for visualization.</p>
<p><em>Note: The data type being copied must be trivially copyable otherwise a compilation error will raise.</em></p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>host_ptr</code></p>
<p class="startli">Destination memory address within the host.</p>
</li>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">Source memory address within a device.</p>
</li>
<li><p class="startli"><code>count</code></p>
<p class="startli">An integer value that indicates the number of elements of the same type that will be copied.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md15"></a>
CUDA_MEMSET</h2>
<p>This macro sets a memory block within a device to a given value. It is commonly used to reset a block of memory that previously contained some data to zero.</p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">Memory address within the device where the block begins.</p>
</li>
<li><p class="startli"><code>value</code></p>
<p class="startli">The value to be defined for each byte within the memory block.</p>
</li>
<li><p class="startli"><code>count</code></p>
<p class="startli">An integer value that indicates the number of elements of the same type that currently occupy the memory block.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md16"></a>
CUDA_FREE</h2>
<p>This macro must be used to free the memory block allocated previously by <code>CUDA_MALLOC</code>.</p>
<p><b>Parameters:</b></p>
<ul>
<li><p class="startli"><code>device_ptr</code></p>
<p class="startli">Device pointer that points to the memory block that must be freed.</p>
</li>
</ul>
<h2><a class="anchor" id="autotoc_md17"></a>
ROCKY_FUNCTIONS</h2>
<p>This is a function specifier that enables a function to be executed on CPU or on GPU. Its use is mandatory in the declaration of auxiliary functions that are intended to be called from hooks executed on GPU. This is the case for almost all hooks other than the initialization and termination hooks. </p>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
