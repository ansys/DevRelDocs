<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: IRockyCurveCollectionData Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('structIRockyCurveCollectionData.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle"><div class="title">IRockyCurveCollectionData Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rocky__output__collections__api_8hpp_source.xhtml">rocky_output_collections_api.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa3ea8900da748813b0e1eba05372cb53" id="r_aa3ea8900da748813b0e1eba05372cb53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa3ea8900da748813b0e1eba05372cb53">create_particles_dataset</a> (const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:aa3ea8900da748813b0e1eba05372cb53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17782fefaebd1a1f368510eff05dc6b3" id="r_a17782fefaebd1a1f368510eff05dc6b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17782fefaebd1a1f368510eff05dc6b3">create_solver_dataset</a> (const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:a17782fefaebd1a1f368510eff05dc6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6750ba6fce2ee80a5a1fe1edb356e4" id="r_aac6750ba6fce2ee80a5a1fe1edb356e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aac6750ba6fce2ee80a5a1fe1edb356e4">create_geometry_dataset</a> (int geometry_id, const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:aac6750ba6fce2ee80a5a1fe1edb356e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d540d1d87039559fe088e897504fd99" id="r_a9d540d1d87039559fe088e897504fd99"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9d540d1d87039559fe088e897504fd99">create_dataset</a> (const std::string &amp;owner_name, const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:a9d540d1d87039559fe088e897504fd99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88494c4828a9d06cea380ca4d21fdc73" id="r_a88494c4828a9d06cea380ca4d21fdc73"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a88494c4828a9d06cea380ca4d21fdc73">create_particles_curve</a> (const std::string &amp;domain_dataset, const std::string &amp;image_dataset)</td></tr>
<tr class="separator:a88494c4828a9d06cea380ca4d21fdc73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeda2a88bc1565623080026c55946b01e" id="r_aeda2a88bc1565623080026c55946b01e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeda2a88bc1565623080026c55946b01e">create_solver_curve</a> (const std::string &amp;domain_dataset, const std::string &amp;image_dataset)</td></tr>
<tr class="separator:aeda2a88bc1565623080026c55946b01e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add0cf572f25fb257dd0f007b53593f21" id="r_add0cf572f25fb257dd0f007b53593f21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add0cf572f25fb257dd0f007b53593f21">create_geometry_curve</a> (int geometry_id, const std::string &amp;domain_dataset, const std::string &amp;image_dataset)</td></tr>
<tr class="separator:add0cf572f25fb257dd0f007b53593f21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac4b935090edf6975d4f46cf74aa86e" id="r_a9ac4b935090edf6975d4f46cf74aa86e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ac4b935090edf6975d4f46cf74aa86e">add_curve</a> (const std::string &amp;owner_name, const std::string &amp;domain_dataset, const std::string &amp;image_dataset)</td></tr>
<tr class="separator:a9ac4b935090edf6975d4f46cf74aa86e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7942a28df7cd10c70ed086b9d11ebf2b" id="r_a7942a28df7cd10c70ed086b9d11ebf2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7942a28df7cd10c70ed086b9d11ebf2b">setup_particles_dataset_dimension</a> (const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:a7942a28df7cd10c70ed086b9d11ebf2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b3c581d4cfc117c0c2b4e9c9be61af" id="r_ab7b3c581d4cfc117c0c2b4e9c9be61af"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab7b3c581d4cfc117c0c2b4e9c9be61af">setup_solver_dataset_dimension</a> (const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:ab7b3c581d4cfc117c0c2b4e9c9be61af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5752c7598d6b2f21c090e470eb50d3b" id="r_ab5752c7598d6b2f21c090e470eb50d3b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab5752c7598d6b2f21c090e470eb50d3b">setup_geometry_dataset_dimension</a> (int geometry_id, const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:ab5752c7598d6b2f21c090e470eb50d3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4316fe7409b88eb683ed59d60d5b5fae" id="r_a4316fe7409b88eb683ed59d60d5b5fae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4316fe7409b88eb683ed59d60d5b5fae">setup_dataset_dimension</a> (const std::string &amp;owner_name, const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:a4316fe7409b88eb683ed59d60d5b5fae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f24452610d153c6f8da6e25f7bb1185" id="r_a7f24452610d153c6f8da6e25f7bb1185"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7f24452610d153c6f8da6e25f7bb1185">update_particles_dataset</a> (const std::string &amp;name, const double *dataset, size_t size)</td></tr>
<tr class="separator:a7f24452610d153c6f8da6e25f7bb1185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bc5b0a03bcb799edc02934e386e41ea" id="r_a6bc5b0a03bcb799edc02934e386e41ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6bc5b0a03bcb799edc02934e386e41ea">update_solver_dataset</a> (const std::string &amp;name, const double *dataset, size_t size)</td></tr>
<tr class="separator:a6bc5b0a03bcb799edc02934e386e41ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee59308015e7f60c741a0296a1c17a25" id="r_aee59308015e7f60c741a0296a1c17a25"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee59308015e7f60c741a0296a1c17a25">update_geometry_dataset</a> (int geometry_id, const std::string &amp;name, const double *dataset, size_t size)</td></tr>
<tr class="separator:aee59308015e7f60c741a0296a1c17a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d905fa54397c6f5b7fdc84795b01a6" id="r_a77d905fa54397c6f5b7fdc84795b01a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77d905fa54397c6f5b7fdc84795b01a6">update_dataset</a> (const std::string &amp;owner_name, const std::string &amp;name, const double *dataset, size_t size)</td></tr>
<tr class="separator:a77d905fa54397c6f5b7fdc84795b01a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae638f72f97d27b18d69ad0ded3b26d4b" id="r_ae638f72f97d27b18d69ad0ded3b26d4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae638f72f97d27b18d69ad0ded3b26d4b">create_particles_time_curve</a> (const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:ae638f72f97d27b18d69ad0ded3b26d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90860210505cb726accf7089cfec5ab2" id="r_a90860210505cb726accf7089cfec5ab2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a90860210505cb726accf7089cfec5ab2">create_solver_time_curve</a> (const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:a90860210505cb726accf7089cfec5ab2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab6ad0a64db6e08afcc4c09643f2fbaa" id="r_aab6ad0a64db6e08afcc4c09643f2fbaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aab6ad0a64db6e08afcc4c09643f2fbaa">create_geometry_time_curve</a> (int geometry_id, const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:aab6ad0a64db6e08afcc4c09643f2fbaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521adcdec892f96ea7b628c5aa1a3560" id="r_a521adcdec892f96ea7b628c5aa1a3560"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a521adcdec892f96ea7b628c5aa1a3560">create_time_curve</a> (const std::string &amp;owner_name, const std::string &amp;name, const std::string &amp;unit)</td></tr>
<tr class="separator:a521adcdec892f96ea7b628c5aa1a3560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a230f2f9be559dcb98d57a4e5c7218dd0" id="r_a230f2f9be559dcb98d57a4e5c7218dd0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a230f2f9be559dcb98d57a4e5c7218dd0">setup_particles_time_curve_dimension</a> (const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:a230f2f9be559dcb98d57a4e5c7218dd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec18b36979a9d48a3a48016d1d9b5b06" id="r_aec18b36979a9d48a3a48016d1d9b5b06"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec18b36979a9d48a3a48016d1d9b5b06">setup_solver_time_curve_dimension</a> (const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:aec18b36979a9d48a3a48016d1d9b5b06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa445fbd38bfb1770a1c197f806890908" id="r_aa445fbd38bfb1770a1c197f806890908"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa445fbd38bfb1770a1c197f806890908">setup_geometry_time_curve_dimension</a> (int geometry_id, const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:aa445fbd38bfb1770a1c197f806890908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad43383c1fe177dc20d46ec205f8cb675" id="r_ad43383c1fe177dc20d46ec205f8cb675"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad43383c1fe177dc20d46ec205f8cb675">setup_time_curve_dimension</a> (const std::string &amp;owner_name, const std::string &amp;name, double dimension)</td></tr>
<tr class="separator:ad43383c1fe177dc20d46ec205f8cb675"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650d74b4c42f6d63489f98ee5835d942" id="r_a650d74b4c42f6d63489f98ee5835d942"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a650d74b4c42f6d63489f98ee5835d942">update_particles_time_curve</a> (const std::string &amp;name, double value)</td></tr>
<tr class="separator:a650d74b4c42f6d63489f98ee5835d942"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a237fae8d13385fc04866ad4c4b24aa73" id="r_a237fae8d13385fc04866ad4c4b24aa73"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a237fae8d13385fc04866ad4c4b24aa73">update_solver_time_curve</a> (const std::string &amp;name, double value)</td></tr>
<tr class="separator:a237fae8d13385fc04866ad4c4b24aa73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3da24f758d62665100b5c43b8f1075d9" id="r_a3da24f758d62665100b5c43b8f1075d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3da24f758d62665100b5c43b8f1075d9">update_geometry_time_curve</a> (int geometry_id, const std::string &amp;name, double value)</td></tr>
<tr class="separator:a3da24f758d62665100b5c43b8f1075d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a024664c7b45eb7a6728a3207eeb82ee3" id="r_a024664c7b45eb7a6728a3207eeb82ee3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a024664c7b45eb7a6728a3207eeb82ee3">update_time_curve</a> (const std::string &amp;owner_name, const std::string &amp;name, double value)</td></tr>
<tr class="separator:a024664c7b45eb7a6728a3207eeb82ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><code><a class="el" href="structIRockyCurveCollectionData.xhtml">IRockyCurveCollectionData</a></code> is a data structure intended to hold data that will be used by Rocky to create a custom collection of cross plot curves and/or time curves for particles and geometries.</p>
<p>A curve is composed of a pair of domain and image datasets. A dataset is a set of values that may change over time in values and size. When creating a dataset, one must provide its name and unit. During the simulation, such datasets must be updated with custom data, which will be written on disk by Rocky at output times. The most adequate hook to perform that data update is <code>ROCKY_PLUGIN_PRE_OUTPUT</code>, because it is executed immediately before the data output. However, depending on the particular needs of the module, that operation can be done in other hooks as well. After an output operation, all dataset values are automatically erased, and must be updated again for the next output. At any given output, a domain and an image datasets for a cross-plot curve must have the same size, otherwise an error will be thrown. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9ac4b935090edf6975d4f46cf74aa86e" name="a9ac4b935090edf6975d4f46cf74aa86e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ac4b935090edf6975d4f46cf74aa86e">&#9670;&#160;</a></span>add_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::add_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>domain_dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>image_dataset</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a curve by specifying the names of domain and image datasets. Such</dt><dd>curve is related to a given named entity. Shown within the Rocky UI as a curve.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">domain_dataset</td><td>The name of the domain dataset. </td></tr>
    <tr><td class="paramname">image_dataset</td><td>The unit of the image dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9d540d1d87039559fe088e897504fd99" name="a9d540d1d87039559fe088e897504fd99"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d540d1d87039559fe088e897504fd99">&#9670;&#160;</a></span>create_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a dataset by specifying its name and the unit of the</dt><dd>physical magnitude associated. Such dataset is related to a given named owner entity. Initially empty, the dataset must be updated with values during the simulation by using <code><a class="el" href="#a77d905fa54397c6f5b7fdc84795b01a6">IRockyCurveCollectionData::update_dataset</a></code>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the related magnitude, which will be associated to an axis of the cross plot where the dataset will be displayed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="add0cf572f25fb257dd0f007b53593f21" name="add0cf572f25fb257dd0f007b53593f21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add0cf572f25fb257dd0f007b53593f21">&#9670;&#160;</a></span>create_geometry_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_geometry_curve </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>domain_dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>image_dataset</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a curve by specifying the names of domain and image datasets. Such</dt><dd>curve is related to a geometry. Shown within the Rocky UI as a curve.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">domain_dataset</td><td>The name of the domain dataset. </td></tr>
    <tr><td class="paramname">image_dataset</td><td>The unit of the image dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aac6750ba6fce2ee80a5a1fe1edb356e4" name="aac6750ba6fce2ee80a5a1fe1edb356e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac6750ba6fce2ee80a5a1fe1edb356e4">&#9670;&#160;</a></span>create_geometry_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_geometry_dataset </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a dataset related to a geometry by specifying </dt><dd>its name and the unit of the associated physical magnitude. Initially empty, the dataset must be updated with values by using <code><a class="el" href="#aee59308015e7f60c741a0296a1c17a25">IRockyCurveCollectionData::update_geometry_dataset</a></code>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the related magnitude, which will be associated to an axis of the cross plot where the dataset will be displayed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aab6ad0a64db6e08afcc4c09643f2fbaa" name="aab6ad0a64db6e08afcc4c09643f2fbaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab6ad0a64db6e08afcc4c09643f2fbaa">&#9670;&#160;</a></span>create_geometry_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_geometry_time_curve </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a time curve associated to a specific geometry, by specifying its</dt><dd>name and the unit of the physical magnitude associated. Initially empty, the time curve must be filled with data during a simulation by using <code><a class="el" href="#a3da24f758d62665100b5c43b8f1075d9">IRockyCurveCollectionData::update_geometry_time_curve</a></code>.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. Shown within the Rocky UI as the curve label. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the magnitude displayed in the vertical axis of the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a88494c4828a9d06cea380ca4d21fdc73" name="a88494c4828a9d06cea380ca4d21fdc73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88494c4828a9d06cea380ca4d21fdc73">&#9670;&#160;</a></span>create_particles_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_particles_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>domain_dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>image_dataset</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a curve by specifying the names of domain and image datasets. Such</dt><dd>curve is related to particles. Shown within the Rocky UI as a curve.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">domain_dataset</td><td>The name of the domain dataset. </td></tr>
    <tr><td class="paramname">image_dataset</td><td>The unit of the image dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa3ea8900da748813b0e1eba05372cb53" name="aa3ea8900da748813b0e1eba05372cb53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3ea8900da748813b0e1eba05372cb53">&#9670;&#160;</a></span>create_particles_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_particles_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a dataset related to particles by specifying its name </dt><dd>and the unit of the physical magnitude associated. Initially empty, the dataset must be updated with values by using <code><a class="el" href="#a7f24452610d153c6f8da6e25f7bb1185">IRockyCurveCollectionData::update_particles_dataset</a></code> during the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the related magnitude, which will be associated to an axis of the cross plot where the dataset will be displayed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae638f72f97d27b18d69ad0ded3b26d4b" name="ae638f72f97d27b18d69ad0ded3b26d4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae638f72f97d27b18d69ad0ded3b26d4b">&#9670;&#160;</a></span>create_particles_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_particles_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a time curve associated to particles by specifying its name and the</dt><dd>unit of the physical magnitude associated. Initially empty, the curve must be filled with data by using <code><a class="el" href="#a650d74b4c42f6d63489f98ee5835d942">IRockyCurveCollectionData::update_particles_time_curve</a></code> during the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. Shown within the Rocky UI as the curve label. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the magnitude displayed in the vertical axis of the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeda2a88bc1565623080026c55946b01e" name="aeda2a88bc1565623080026c55946b01e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeda2a88bc1565623080026c55946b01e">&#9670;&#160;</a></span>create_solver_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_solver_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>domain_dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>image_dataset</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a curve by specifying the names of domain and image datasets. Such</dt><dd>curve is related to the solver. Shown within the Rocky UI as a curve.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">domain_dataset</td><td>The name of the domain dataset. </td></tr>
    <tr><td class="paramname">image_dataset</td><td>The unit of the image dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a17782fefaebd1a1f368510eff05dc6b3" name="a17782fefaebd1a1f368510eff05dc6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17782fefaebd1a1f368510eff05dc6b3">&#9670;&#160;</a></span>create_solver_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_solver_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a dataset related to the solver by specifying its name</dt><dd>and the unit of the physical magnitude associated. Initially empty, the dataset must be updated with values by using <code><a class="el" href="#a6bc5b0a03bcb799edc02934e386e41ea">IRockyCurveCollectionData::update_solver_dataset</a></code> during the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the related magnitude, which will be associated to an axis of the cross plot where the dataset will be displayed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a90860210505cb726accf7089cfec5ab2" name="a90860210505cb726accf7089cfec5ab2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90860210505cb726accf7089cfec5ab2">&#9670;&#160;</a></span>create_solver_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_solver_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a time curve associated to the solver by specifying its name and the</dt><dd>unit of the physical magnitude associated. Initially empty, the curve must be filled with data by using <code><a class="el" href="#a237fae8d13385fc04866ad4c4b24aa73">IRockyCurveCollectionData::update_solver_time_curve</a></code> during the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. Shown within the Rocky UI as the curve label. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the magnitude displayed in the vertical axis of the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a521adcdec892f96ea7b628c5aa1a3560" name="a521adcdec892f96ea7b628c5aa1a3560"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a521adcdec892f96ea7b628c5aa1a3560">&#9670;&#160;</a></span>create_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::create_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>unit</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method creates a time curve associated to a given entity by specifying its</dt><dd>name and the unit of the physical magnitude associated. Initially empty, the time curve must be filled with data by using <code><a class="el" href="#a024664c7b45eb7a6728a3207eeb82ee3">IRockyCurveCollectionData::update_time_curve</a></code> during the simulation.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. Shown within the Rocky UI as the curve label. </td></tr>
    <tr><td class="paramname">unit</td><td>The unit of the magnitude displayed in the vertical axis of the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4316fe7409b88eb683ed59d60d5b5fae" name="a4316fe7409b88eb683ed59d60d5b5fae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4316fe7409b88eb683ed59d60d5b5fae">&#9670;&#160;</a></span>setup_dataset_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_dataset_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a dataset.</dt><dd>This factor will be used to nondimensionalize their values for calculations. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab5752c7598d6b2f21c090e470eb50d3b" name="ab5752c7598d6b2f21c090e470eb50d3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5752c7598d6b2f21c090e470eb50d3b">&#9670;&#160;</a></span>setup_geometry_dataset_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_geometry_dataset_dimension </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a dataset.</dt><dd>This factor will be used to nondimensionalize their values for the calculations. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa445fbd38bfb1770a1c197f806890908" name="aa445fbd38bfb1770a1c197f806890908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa445fbd38bfb1770a1c197f806890908">&#9670;&#160;</a></span>setup_geometry_time_curve_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_geometry_time_curve_dimension </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a time curve.</dt><dd>This factor will be used to nondimensionalize their values. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7942a28df7cd10c70ed086b9d11ebf2b" name="a7942a28df7cd10c70ed086b9d11ebf2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7942a28df7cd10c70ed086b9d11ebf2b">&#9670;&#160;</a></span>setup_particles_dataset_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_particles_dataset_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a dataset.</dt><dd>This factor will be used to nondimensionalize their values for the calculations. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a230f2f9be559dcb98d57a4e5c7218dd0" name="a230f2f9be559dcb98d57a4e5c7218dd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a230f2f9be559dcb98d57a4e5c7218dd0">&#9670;&#160;</a></span>setup_particles_time_curve_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_particles_time_curve_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a time curve.</dt><dd>This factor will be used to nondimensionalize their values. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab7b3c581d4cfc117c0c2b4e9c9be61af" name="ab7b3c581d4cfc117c0c2b4e9c9be61af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7b3c581d4cfc117c0c2b4e9c9be61af">&#9670;&#160;</a></span>setup_solver_dataset_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_solver_dataset_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a dataset.</dt><dd>This factor will be used to nondimensionalize their values for the calculations. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the dataset. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aec18b36979a9d48a3a48016d1d9b5b06" name="aec18b36979a9d48a3a48016d1d9b5b06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec18b36979a9d48a3a48016d1d9b5b06">&#9670;&#160;</a></span>setup_solver_time_curve_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_solver_time_curve_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a time curve.</dt><dd>This factor will be used to nondimensionalize their values. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad43383c1fe177dc20d46ec205f8cb675" name="ad43383c1fe177dc20d46ec205f8cb675"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad43383c1fe177dc20d46ec205f8cb675">&#9670;&#160;</a></span>setup_time_curve_dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::setup_time_curve_dimension </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>dimension</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>The purpose of this method is to associate a dimensional factor to a time curve.</dt><dd>This factor will be used to nondimensionalize their values. Dimensional factors for the fundamental magnitudes are provided by functions of a <code><a class="el" href="structIRockyModel.xhtml">IRockyModel</a></code> object.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. Shown within the Rocky UI as the curve label. </td></tr>
    <tr><td class="paramname">dimension</td><td>The appropriate dimensional factor for the time curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a77d905fa54397c6f5b7fdc84795b01a6" name="a77d905fa54397c6f5b7fdc84795b01a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77d905fa54397c6f5b7fdc84795b01a6">&#9670;&#160;</a></span>update_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *</td>          <td class="paramname"><span class="paramname"><em>dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a dataset by inserting new dataset values.</dt><dd>Intended to be used only at output times. The dataset to be added should correspond to the output time at which this method is called. It only works with datasets previously created using <code><a class="el" href="#a9d540d1d87039559fe088e897504fd99">IRockyCurveCollectionData::create_dataset</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dataset</td><td>A data pointer to the new dataset data to be copied into dataset. </td></tr>
    <tr><td class="paramname">size</td><td>The number of elements of the given dataset </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aee59308015e7f60c741a0296a1c17a25" name="aee59308015e7f60c741a0296a1c17a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee59308015e7f60c741a0296a1c17a25">&#9670;&#160;</a></span>update_geometry_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_geometry_dataset </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *</td>          <td class="paramname"><span class="paramname"><em>dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a dataset by inserting new dataset values.</dt><dd>Intended to be used only at output times. The dataset to be added should correspond to the output time at which this method is called. It only works with datasets previously created using <code><a class="el" href="#aac6750ba6fce2ee80a5a1fe1edb356e4">IRockyCurveCollectionData::create_geometry_dataset</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dataset</td><td>A data pointer to the new dataset data to be copied into dataset. </td></tr>
    <tr><td class="paramname">size</td><td>The number of elements of the given dataset </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3da24f758d62665100b5c43b8f1075d9" name="a3da24f758d62665100b5c43b8f1075d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3da24f758d62665100b5c43b8f1075d9">&#9670;&#160;</a></span>update_geometry_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_geometry_time_curve </td>
          <td>(</td>
          <td class="paramtype">int</td>          <td class="paramname"><span class="paramname"><em>geometry_id</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a time curve by inserting a new value.</dt><dd>Intended to be used only at output times. The value to be added should correspond to the output time at which this method is called. It only works with time curves previously created using <code><a class="el" href="#aab6ad0a64db6e08afcc4c09643f2fbaa">IRockyCurveCollectionData::create_geometry_time_curve</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">geometry_id</td><td>The geometry unique identifier (index) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">value</td><td>The value to be appended into the curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7f24452610d153c6f8da6e25f7bb1185" name="a7f24452610d153c6f8da6e25f7bb1185"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f24452610d153c6f8da6e25f7bb1185">&#9670;&#160;</a></span>update_particles_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_particles_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *</td>          <td class="paramname"><span class="paramname"><em>dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a dataset by inserting new values.</dt><dd>Intended to be used only at output times. The dataset to be added should correspond to the output time at which this method is called. It only works with datasets previously created using <code><a class="el" href="#aa3ea8900da748813b0e1eba05372cb53">IRockyCurveCollectionData::create_particles_dataset</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dataset</td><td>A data pointer to the new dataset data to be copied into dataset. </td></tr>
    <tr><td class="paramname">size</td><td>The number of elements of the given dataset </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a650d74b4c42f6d63489f98ee5835d942" name="a650d74b4c42f6d63489f98ee5835d942"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650d74b4c42f6d63489f98ee5835d942">&#9670;&#160;</a></span>update_particles_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_particles_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a time curve by inserting a new value.</dt><dd>Intended to be used only at output times. The value to be added should correspond to the output time at which this method is called. It only works with time curves previously created using <code><a class="el" href="#ae638f72f97d27b18d69ad0ded3b26d4b">IRockyCurveCollectionData::create_particles_time_curve</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">value</td><td>The value to be appended into the curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6bc5b0a03bcb799edc02934e386e41ea" name="a6bc5b0a03bcb799edc02934e386e41ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6bc5b0a03bcb799edc02934e386e41ea">&#9670;&#160;</a></span>update_solver_dataset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_solver_dataset </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *</td>          <td class="paramname"><span class="paramname"><em>dataset</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t</td>          <td class="paramname"><span class="paramname"><em>size</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a dataset by inserting new values.</dt><dd>Intended to be used only at output times. The dataset to be added should correspond to the output time at which this method is called. It only works with datasets previously created using <code><a class="el" href="#a17782fefaebd1a1f368510eff05dc6b3">IRockyCurveCollectionData::create_solver_dataset</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the dataset. </td></tr>
    <tr><td class="paramname">dataset</td><td>A data pointer to the new dataset data to be copied into dataset. </td></tr>
    <tr><td class="paramname">size</td><td>The number of elements of the given dataset </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a237fae8d13385fc04866ad4c4b24aa73" name="a237fae8d13385fc04866ad4c4b24aa73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a237fae8d13385fc04866ad4c4b24aa73">&#9670;&#160;</a></span>update_solver_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_solver_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a time curve by inserting a new value.</dt><dd>Intended to be used only at output times. The value to be added should correspond to the output time at which this method is called. It only works with time curves previously created using <code><a class="el" href="#a90860210505cb726accf7089cfec5ab2">IRockyCurveCollectionData::create_solver_time_curve</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">value</td><td>The value to be appended into the curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a024664c7b45eb7a6728a3207eeb82ee3" name="a024664c7b45eb7a6728a3207eeb82ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a024664c7b45eb7a6728a3207eeb82ee3">&#9670;&#160;</a></span>update_time_curve()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void IRockyCurveCollectionData::update_time_curve </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>owner_name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;</td>          <td class="paramname"><span class="paramname"><em>name</em>, </span></td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section user"><dt>This method updates a time curve by inserting a new value.</dt><dd>Intended to be used only at output times. The value to be added should correspond to the output time at which this method is called. It only works with time curves previously created using <code><a class="el" href="#a521adcdec892f96ea7b628c5aa1a3560">IRockyCurveCollectionData::create_time_curve</a></code>, otherwise it throws an error.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">owner_name</td><td>The entity unique identifier (string) </td></tr>
    <tr><td class="paramname">name</td><td>The name of the time curve. </td></tr>
    <tr><td class="paramname">value</td><td>The value to be appended into the curve. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="structIRockyCurveCollectionData.xhtml">IRockyCurveCollectionData</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
