<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.10.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Rocky solver SDK: source/c++/rocky20/api/rocky_point_cloud.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<script type="text/javascript" src="clipboard.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="cookie.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  extensions: ["tex2jax.js"],
  jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">Rocky solver SDK
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.10.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="getting_started.xhtml"><span>Getting&#160;started</span></a></li>
      <li><a href="module_specification.xhtml"><span>Module&#160;specification</span></a></li>
      <li><a href="solver_hooks.xhtml"><span>Solver&#160;hooks</span></a></li>
      <li><a href="macros_and_specifiers.xhtml"><span>Macros&#160;and&#160;specifiers</span></a></li>
      <li><a href="annotated.xhtml"><span>Class&#160;reference</span></a></li>
      <li><a href="usage_examples.xhtml"><span>Usage&#160;examples</span></a></li>
      <li><a href="glossary.xhtml"><span>Glossary</span></a></li>
      <li><a href="changelog.xhtml"><span>Changelog</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(0); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('rocky__point__cloud_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">rocky_point_cloud.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">// (C) 2024 ANSYS, Inc. Unauthorized use, distribution, or duplication is prohibited.</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;rocky20/model/point_cloud.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">// Forward declarations ===========================================================================</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">class </span>cuda_host;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">typedef</span> cuda_host RockyModel;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">struct </span><a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">namespace </span>rocky20</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">class </span>PointCloudCollection;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>}</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">namespace </span>device</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>{</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">struct </span>PointCloud;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>}</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="comment">// ================================================================================================</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="comment">// RockyPointCloud</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="comment">// ================================================================================================</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">struct </span>RockyPointCloud</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>{</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="keyword">inline</span> ROCKY_FUNCTIONS <span class="keywordtype">int</span> get_n_points()<span class="keyword"> const</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>        <span class="keywordflow">return</span> this-&gt;point_cloud-&gt;n_points;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    <span class="keyword">inline</span> ROCKY_FUNCTIONS <span class="keywordtype">int</span> get_n_properties()<span class="keyword"> const</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>        <span class="keywordflow">return</span> this-&gt;point_cloud-&gt;scalars-&gt;get_n_scalar_arrays();</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    }</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keyword">inline</span> ROCKY_FUNCTIONS double3 get_point_position(<span class="keywordtype">int</span> point_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>        <span class="keywordflow">return</span> this-&gt;point_cloud-&gt;get_point_position(point_index);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    }</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> DataType = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="keyword">inline</span> ROCKY_FUNCTIONS DataType get_point_property(<span class="keywordtype">int</span> point_index, <span class="keywordtype">int</span> property_index)<span class="keyword"> const</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>        <span class="keywordflow">return</span> this-&gt;point_cloud-&gt;get_point_property&lt;DataType&gt;(point_index, property_index);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    device::PointCloud *point_cloud;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>};</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="comment">// ================================================================================================</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="comment">// RockyPointCloudController</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="comment">// ================================================================================================</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">struct </span>RockyPointCloudController</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>{</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="keyword">explicit</span> RockyPointCloudController(<a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>&amp; _model);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    <span class="keyword">explicit</span> RockyPointCloudController(<span class="keyword">const</span> <a class="code hl_struct" href="structIRockyModel.xhtml">IRockyModel</a>&amp; _model);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    ~RockyPointCloudController();</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    <span class="keywordtype">int</span> find_point_cloud(<span class="keyword">const</span> std::string&amp; point_cloud_name)</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>        <span class="keywordflow">return</span> this-&gt;pc_data-&gt;get_point_cloud_index(point_cloud_name);</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    }</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    <span class="keywordtype">int</span> find_property(<span class="keywordtype">int</span> point_cloud_index, <span class="keyword">const</span> std::string&amp; property_name)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>        <span class="keyword">auto</span> pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        <span class="keywordflow">return</span> pc-&gt;find_property(property_name);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    }</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordtype">void</span> set_property_dimension(<span class="keywordtype">int</span> point_cloud_index, <span class="keywordtype">int</span> property_index, <span class="keywordtype">double</span> dimension)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>        <span class="keyword">auto</span> pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        pc-&gt;set_property_dimension(property_index, dimension);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    <span class="keywordtype">void</span> set_geometry_as_static(<span class="keywordtype">int</span> point_cloud_index)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    {</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>        <span class="keyword">auto</span> pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>        pc-&gt;set_geometry_transient(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>        <span class="comment">// If set geometry as static and no property is transient, we have a static point cloud</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>        <span class="keywordflow">if</span> (!pc-&gt;is_any_property_transient())</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>        {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>            pc-&gt;set_transient(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>        }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keywordtype">void</span> set_property_as_static(<span class="keywordtype">int</span> point_cloud_index, <span class="keywordtype">int</span> property_index)</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>        <span class="keyword">auto</span> pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        pc-&gt;scalars_controller.set_transient_attribute(property_index, <span class="keyword">false</span>);</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>        <span class="comment">// If geometry is static and point cloud has no transient property, it is static</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>        <span class="keywordflow">if</span> (!pc-&gt;is_geometry_transient() &amp;&amp; !pc-&gt;is_any_property_transient())</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>        {</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>            pc-&gt;set_transient(<span class="keyword">false</span>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        }</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    }</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> DataType = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="keywordtype">int</span> add_property(</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>        <span class="keywordtype">int</span> point_cloud_index,</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        <span class="keyword">const</span> std::string&amp; name,</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>        <span class="keyword">const</span> std::string&amp; unit,</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        rocky20::ScalarsInfo::CollectiveOperationType collective_type =</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>            rocky20::ScalarsInfo::cotIntegrated,</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>        <span class="keywordtype">bool</span> write = <span class="keyword">true</span>)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        PointCloud* pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>        <span class="keyword">auto</span>&amp; scalars = pc-&gt;scalars_controller;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>        <span class="keyword">auto</span> scalar_index = scalars.add_scalars(</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>            <span class="keyword">sizeof</span>(DataType),</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>            name,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>            unit,</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>            -1,</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>            rocky20::get_scalars_data_type&lt;DataType&gt;(),</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>            collective_type,</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>            write ? <span class="keyword">static_cast&lt;</span>uint32_t<span class="keyword">&gt;</span>(rocky20::ScalarsInfo::sWrite) : static_cast&lt;uint32_t&gt;(0),</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>            0);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>        <span class="comment">// By default, properties added using this method are transient.</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>        scalars.set_transient_attribute(scalar_index, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>        <span class="keywordflow">if</span> (pc-&gt;get_n_points() &gt; scalars.get_scalars_array_size())</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>            scalars.resize(pc-&gt;get_n_points());</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        <span class="keywordflow">return</span> scalar_index;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordtype">int</span> add_point_cloud(<span class="keyword">const</span> std::string&amp; point_cloud_name, <span class="keyword">const</span> std::vector&lt;double3&gt;&amp; points);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keywordtype">int</span> add_point_cloud(<span class="keyword">const</span> std::string&amp; point_cloud_name);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    <span class="keywordtype">void</span> enable_search_cut_off_distance(<span class="keywordtype">int</span> point_cloud_index) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordtype">void</span> disable_search_cut_off_distance(<span class="keywordtype">int</span> point_cloud_index) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keywordtype">void</span> enable_point_cloud(<span class="keywordtype">int</span> point_cloud_index);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="keywordtype">void</span> disable_point_cloud(<span class="keywordtype">int</span> point_cloud_index);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    <span class="keywordtype">void</span> update_point_cloud_geometry(</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>        <span class="keywordtype">int</span> point_cloud_index, <span class="keyword">const</span> std::vector&lt;double3&gt;&amp; new_coordinates);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    <span class="keyword">template</span> &lt;<span class="keyword">class</span> DataType = <span class="keywordtype">double</span>&gt;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>    <span class="keywordtype">void</span> update_point_cloud_property(</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        <span class="keywordtype">int</span> point_cloud_index, <span class="keywordtype">int</span> property_index, <span class="keyword">const</span> std::vector&lt;DataType&gt;&amp; property_values)</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    {</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        <span class="keyword">auto</span> pc = this-&gt;pc_data-&gt;at(point_cloud_index);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>        <span class="keyword">auto</span>&amp; scalars = pc-&gt;scalars_controller;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>        <span class="comment">// Block property changes if the target property is static</span></div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>        <span class="keywordflow">if</span> (!pc-&gt;is_new_point_cloud() &amp;&amp; !pc-&gt;is_property_transient(property_index))</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>        {</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>            <span class="keyword">auto</span>&amp; name = pc-&gt;scalars_controller.scalars_info[property_index].name;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>            ROCKY_RUNTIME_ERROR(</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>                <span class="stringliteral">&quot;Cannot update the static property \&quot;&quot;</span> &lt;&lt; name &lt;&lt; <span class="stringliteral">&quot;\&quot; of the point cloud.&quot;</span>)</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>        <span class="comment">// Must match in size of the number of points, either from the pc_data or from the point</span></div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>        <span class="comment">// cloud controller pc_points if it has already changed. pc_data will only change at the</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>        <span class="comment">// destructor</span></div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>        <span class="keywordtype">int</span> n_points = pc-&gt;get_n_points();</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>        <span class="keywordflow">if</span> (n_points == 0)</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>        {</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>            ROCKY_RUNTIME_ERROR(<span class="stringliteral">&quot;Cannot update property of a Point Cloud without any points.&quot;</span>)</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>        }</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>        <span class="keywordflow">if</span> (pc-&gt;must_build_kd_tree())</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>        {</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>            <span class="comment">// get size from pc_points instead</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>            n_points = this-&gt;pc_points[point_cloud_index].size();</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>        }</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>        <span class="keywordflow">if</span> (n_points != property_values.size())</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>        {</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>            ROCKY_RUNTIME_ERROR(</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>                <span class="stringliteral">&quot;Size mismatch between number of point cloud coordinates and properties.&quot;</span>)</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>        }</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>        <span class="keyword">const</span> <span class="keywordtype">int</span> n_vars = pc-&gt;get_n_properties();</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>        <span class="keywordflow">if</span> (property_index &gt;= n_vars)</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>        {</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>            ROCKY_RUNTIME_ERROR(<span class="stringliteral">&quot;Point Cloud property index mismatch.&quot;</span>)</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>        }</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>        <span class="comment">// Register that the property was updated, and we need to non dimensionalize it later.</span></div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>        scalars.set_updated_property_attribute(property_index, <span class="keyword">true</span>);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>        scalars.set_updated_by_geometry_attribute(property_index, <span class="keyword">false</span>);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>        <span class="comment">// Assign new values for property</span></div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>        <span class="keyword">auto</span> data = scalars.get_scalars&lt;DataType&gt;(property_index);</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>        std::copy_n(property_values.begin(), n_points, data);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>        pc-&gt;set_update_property(<span class="keyword">true</span>);</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>        this-&gt;any_change = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    }</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    <span class="keywordtype">void</span> update_point_cloud_topology(</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>        <span class="keywordtype">int</span> point_cloud_index, <span class="keyword">const</span> std::vector&lt;double3&gt;&amp; new_coordinates);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> setup_scalars(</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>        cuda_host&amp; solver_model, rocky20::PointCloudCollection&amp; pc_data_collection);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keywordtype">bool</span> is_enabled(<span class="keywordtype">int</span> point_cloud_index) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>    RockyModel* model;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    rocky20::PointCloudCollection* pc_data;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    <span class="comment">// Temporary input arrays to build point cloud kd tree and properties</span></div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    std::vector&lt;std::vector&lt;KDTreePoints&gt;&gt; pc_points;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    <span class="keywordtype">bool</span> any_change { <span class="keyword">false</span> };</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>};</div>
<div class="ttc" id="astructIRockyModel_xhtml"><div class="ttname"><a href="structIRockyModel.xhtml">IRockyModel</a></div><div class="ttdef"><b>Definition</b> rocky_api.h:58</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_b2f33c71d4aa5e7af42a1ca61ff5af1b.xhtml">source</a></li><li class="navelem"><a class="el" href="dir_5bec2c41045c5679e0f388d0726ce756.xhtml">c++</a></li><li class="navelem"><a class="el" href="dir_fc907dd8a19288f35eaf149283de05d4.xhtml">rocky20</a></li><li class="navelem"><a class="el" href="dir_04a4feaf085f2323de96e1b0ca127830.xhtml">api</a></li><li class="navelem"><b>rocky_point_cloud.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.10.0 </li>
  </ul>
</div>
</body>
</html>
