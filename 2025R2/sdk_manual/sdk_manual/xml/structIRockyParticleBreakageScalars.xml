<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyParticleBreakageScalars" kind="struct" language="C++" prot="public">
    <compoundname>IRockyParticleBreakageScalars</compoundname>
    <basecompoundref prot="public" virt="non-virtual">EntityScalars&lt; rocky20::ParticleBreakageScalars &gt;</basecompoundref>
    <includes refid="rocky__particle__scalars_8hpp" local="no">rocky_particle_scalars.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1af47b2e930c6a25249584df9d3600945b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyParticleBreakageScalars::get_t10</definition>
        <argsstring>() const</argsstring>
        <name>get_t10</name>
        <qualifiedname>IRockyParticleBreakageScalars::get_t10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the <formula id="3">$t_{10}$</formula> parameter set at an instantaneous breakage event. Please refer to the DEM Technical Manual for the definition of this parameter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="550" column="35" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.hpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1afde7cd6ccf288b6e0834357e74344578" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyParticleBreakageScalars::set_t10</definition>
        <argsstring>(const double value)</argsstring>
        <name>set_t10</name>
        <qualifiedname>IRockyParticleBreakageScalars::set_t10</qualifiedname>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method sets the value of the t10 parameter calculated at an instantaneous </title><para>breakage event. Please refer to the DEM Technical Manual for the definition of this parameter.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value of the <formula id="3">$t_{10}$</formula> parameter just calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="562" column="33" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.hpp" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1af101f19299a5a1d5d3da3fe1d2a0f74b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyParticleBreakageScalars::get_scalar</definition>
        <argsstring>(int scalar_index) const</argsstring>
        <name>get_scalar</name>
        <qualifiedname>IRockyParticleBreakageScalars::get_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>the value currently stored can be accessed with this method.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value currently stored in the scalar variable.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="570" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1a71109dbd97b7c53d5a001f6d8c66d66f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyParticleBreakageScalars::set_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>set_scalar</name>
        <qualifiedname>IRockyParticleBreakageScalars::set_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to store a value on it.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be stored.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="573" column="27"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1a8c8fe58709bc4dcc7becc23e716483d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyParticleBreakageScalars::add_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>add_scalar</name>
        <qualifiedname>IRockyParticleBreakageScalars::add_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to sum a value to the current one stored in it.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be summed to the current stored value.<linebreak/>
   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="576" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleBreakageScalars_1ad5d957f09f3fc73349741c296f66b7d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyParticleBreakageScalars::max_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>max_scalar</name>
        <qualifiedname>IRockyParticleBreakageScalars::max_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to make the scalar store the maximum of a set of values. A common use of this method is, for instance, to find the maximum among a set of values associated to the contacts of a particle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A value that must be checked if it is greater than the current stored value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="579" column="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>When running a simulation, an <computeroutput><ref refid="structIRockyParticleBreakageScalars" kindref="compound">IRockyParticleBreakageScalars</ref></computeroutput> gives access to all particle breakage scalars defined in the project. Particle breakage scalars are special particle scalars which can be used to transfer data from the point where the instantaneous breakage criterion is evaluated (at the <computeroutput>ROCKY_PLUGIN_COMPUTE_INSTANTANEOUS_BREAKAGE</computeroutput> hook) to the point where the fragment size distribution is calculated (at the <computeroutput>ROCKY_PLUGIN_COMPUTE_FRAGMENTS_SIZE_DISTRIBUTION</computeroutput> hook). </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="543" column="1" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.hpp" bodystart="544" bodyend="592"/>
    <listofallmembers>
      <member refid="structIRockyParticleBreakageScalars_1a8c8fe58709bc4dcc7becc23e716483d6" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>add_scalar</name></member>
      <member refid="structIRockyParticleBreakageScalars_1af101f19299a5a1d5d3da3fe1d2a0f74b" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>get_scalar</name></member>
      <member refid="structIRockyParticleBreakageScalars_1af47b2e930c6a25249584df9d3600945b" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>get_t10</name></member>
      <member refid="structIRockyParticleBreakageScalars_1ad5d957f09f3fc73349741c296f66b7d1" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>max_scalar</name></member>
      <member refid="structIRockyParticleBreakageScalars_1a71109dbd97b7c53d5a001f6d8c66d66f" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>set_scalar</name></member>
      <member refid="structIRockyParticleBreakageScalars_1afde7cd6ccf288b6e0834357e74344578" prot="public" virt="non-virtual"><scope>IRockyParticleBreakageScalars</scope><name>set_t10</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
