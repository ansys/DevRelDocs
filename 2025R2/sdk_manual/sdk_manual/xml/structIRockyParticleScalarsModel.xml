<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyParticleScalarsModel" kind="struct" language="C++" prot="public">
    <compoundname>IRockyParticleScalarsModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ScalarsModel&lt; rocky20::ParticleScalarsController &gt;</basecompoundref>
    <includes refid="rocky__particle__scalars_8hpp" local="no">rocky_particle_scalars.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a82310007a102c845cbb5e6163a8863b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::enable_mass_increment</definition>
        <argsstring>()</argsstring>
        <name>enable_mass_increment</name>
        <qualifiedname>IRockyParticleScalarsModel::enable_mass_increment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enables a known-scalar that associates a mass increment value to each particle in a simulation.</title><para>When this scalar is enabled, the instantaneous mass of a particle is equal to the original mass defined at the beginning of a simulation plus the value of that mass increment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="35" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1ab60645cee4e4e0dc368f0f11bc9b75d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::enable_volume_increment</definition>
        <argsstring>()</argsstring>
        <name>enable_volume_increment</name>
        <qualifiedname>IRockyParticleScalarsModel::enable_volume_increment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enables a known-scalar that associates a volume increment value to each particle in a simulation.</title><para>When this scalar is enabled, the instantaneous volume of a particle is equal to the original volume defined at the beginning of a simulation plus the value of that volume increment. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="42" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1aa415607030884508e190c512b1218856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::enable_variable_thermal_conductivity</definition>
        <argsstring>()</argsstring>
        <name>enable_variable_thermal_conductivity</name>
        <qualifiedname>IRockyParticleScalarsModel::enable_variable_thermal_conductivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enables a known-scalar that defines the thermal conductivity as a variable property between particles.</title><para>When this scalar is enabled, a different value of thermal conductivity can be specified for each particle in a simulation, and this value will be used everywhere in the Rocky solver instead of the constant value specified for the particle&apos;s material in the Rocky UI. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="50" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1acd067b0a46a10fd2c931702257974e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::enable_variable_poisson_ratio</definition>
        <argsstring>()</argsstring>
        <name>enable_variable_poisson_ratio</name>
        <qualifiedname>IRockyParticleScalarsModel::enable_variable_poisson_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enables a known-scalar defining Poisson&apos;s ratio value to each particle in a simulation.</title><para>When this scalar is enabled, the instantaneous Poisson&apos;s ratio is defined as a variable property, with possibly a different value and used everywhere in the simulation, instead of the constant value of particle&apos;s material </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="58" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a7527c9be8d999b23208f43917f13a5a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::enable_variable_specific_heat</definition>
        <argsstring>()</argsstring>
        <name>enable_variable_specific_heat</name>
        <qualifiedname>IRockyParticleScalarsModel::enable_variable_specific_heat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enables a known-scalar defining specific heat value to each particle in a simulation.</title><para>When this scalar is enabled, the instantaneous specific heat is defined as a variable property, with possibly a different value and used everywhere in the simulation, instead of the constant value of particle&apos;s material </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="66" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a2fe0d14a5fc4f803eb04374ec6d2a40f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyParticleScalarsModel::find</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find</name>
        <qualifiedname>IRockyParticleScalarsModel::find</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method searches for a scalar variable already created by other modules,</title><para>in order to allow access to its values, or store new values on it, during the execution of the simulation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name given to the scalar at the moment of its creation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index that uniquely identifies the wanted scalar if it was actually found. It returns -1 otherwise.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="71" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a6c5d694427108fb05dbe32f418394f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyParticleScalarsModel::add</definition>
        <argsstring>(const char *name, const char *unit, bool output=true)</argsstring>
        <name>add</name>
        <qualifiedname>IRockyParticleScalarsModel::add</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>output</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method creates a new scalar variable of type <computeroutput>double</computeroutput></title><para>for storing custom values during a simulation, preserving them between time iterations.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name given to the scalar variable. The purpose of this name is twofold. First, it enables to find this scalar variable from other module, in order to share their values. Second, if the scalar variable can be displayed in a 3D window as a property, this name will identify it in the Rocky UI.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>A string specifying the unit in S.I. associated to the scalar variable.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Enables/disables the storage in disk at output times, for the visualization and post-processing of the scalar values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index that will uniquely identify the scalar variable during the execution of the simulation.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="74" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a4884be92519fd1d4d274d7558864b85f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::reset</definition>
        <argsstring>(int scalar_index)</argsstring>
        <name>reset</name>
        <qualifiedname>IRockyParticleScalarsModel::reset</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method resets to zero all values stored in a scalar variable.</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index attributed to the scalar variable at the moment of its creation.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyParticleScalarsModel_1a40b74ee0226b8f635092a200a7be71b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyParticleScalarsModel::set_dimension</definition>
        <argsstring>(int scalar_index, double dimension_factor)</argsstring>
        <name>set_dimension</name>
        <qualifiedname>IRockyParticleScalarsModel::set_dimension</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dimension_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>The purpose of this method is to associate a dimensional factor</title><para>to a scalar variable. This factor will be used to nondimensionalize their values. For instance, if the scalar represents a force, a force dimensional factor must be associated through this method. Dimensional factors for the fundamental magnitudes are provided by functions of a <computeroutput><ref refid="structIRockyModel" kindref="compound">IRockyModel</ref></computeroutput> object.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index attributed to the scalar variable at the moment of its creation.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dimension_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>The appropriate dimensional factor for the scalar variable.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="80" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An <computeroutput><ref refid="structIRockyParticleScalarsModel" kindref="compound">IRockyParticleScalarsModel</ref></computeroutput> allows users to add new particle scalars, find particle scalars created in other modules or activate particle scalars known to Rocky, during the setup stage of a module. Particle scalars are special variables attached to particles, which are able to store values per particle that are preserved between time iterations during a simulation. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_particle_scalars.hpp" line="26" column="1" bodyfile="source/c++/rocky20/api/rocky_particle_scalars.hpp" bodystart="27" bodyend="93"/>
    <listofallmembers>
      <member refid="structIRockyParticleScalarsModel_1a6c5d694427108fb05dbe32f418394f71" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>add</name></member>
      <member refid="structIRockyParticleScalarsModel_1a82310007a102c845cbb5e6163a8863b0" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>enable_mass_increment</name></member>
      <member refid="structIRockyParticleScalarsModel_1acd067b0a46a10fd2c931702257974e2b" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>enable_variable_poisson_ratio</name></member>
      <member refid="structIRockyParticleScalarsModel_1a7527c9be8d999b23208f43917f13a5a0" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>enable_variable_specific_heat</name></member>
      <member refid="structIRockyParticleScalarsModel_1aa415607030884508e190c512b1218856" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>enable_variable_thermal_conductivity</name></member>
      <member refid="structIRockyParticleScalarsModel_1ab60645cee4e4e0dc368f0f11bc9b75d9" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>enable_volume_increment</name></member>
      <member refid="structIRockyParticleScalarsModel_1a2fe0d14a5fc4f803eb04374ec6d2a40f" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>find</name></member>
      <member refid="structIRockyParticleScalarsModel_1a4884be92519fd1d4d274d7558864b85f" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>reset</name></member>
      <member refid="structIRockyParticleScalarsModel_1a40b74ee0226b8f635092a200a7be71b1" prot="public" virt="non-virtual"><scope>IRockyParticleScalarsModel</scope><name>set_dimension</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
