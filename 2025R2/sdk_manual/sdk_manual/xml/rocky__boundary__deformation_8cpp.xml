<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="rocky__boundary__deformation_8cpp" kind="file" language="C++">
    <compoundname>rocky_boundary_deformation.cpp</compoundname>
    <includes refid="rocky__boundary__deformation_8h" local="yes">rocky_boundary_deformation.h</includes>
    <includes refid="rocky__boundary_8hpp" local="no">rocky20/api/rocky_boundary.hpp</includes>
    <includes local="no">rocky20/model/rocky_model.h</includes>
    <includes local="no">rocky20/model/triangles_sync.h</includes>
    <includes local="no">rocky20/sph/sph_model.h</includes>
    <incdepgraph>
      <node id="7">
        <label>rocky20/api/device/api_backend.hpp</label>
        <link refid="api__backend_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>rocky20/api/rocky_boundary.hpp</label>
        <link refid="rocky__boundary_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>source/c++/rocky20/api/rocky_boundary_deformation.cpp</label>
        <link refid="rocky__boundary__deformation_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rocky_boundary_deformation.h</label>
        <link refid="rocky__boundary__deformation_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>rocky20/api/rocky_material_api.hpp</label>
        <link refid="rocky__material__api_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>rocky_scalars.h</label>
        <link refid="rocky__scalars_8h_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>rocky20/api/rocky_statistics_data.hpp</label>
        <link refid="rocky__statistics__data_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>rocky_triangle_scalars.hpp</label>
        <link refid="rocky__triangle__scalars_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>rocky20/cuda/cuda_basics.hpp</label>
      </node>
      <node id="6">
        <label>rocky20/device/device_model.hpp</label>
      </node>
      <node id="8">
        <label>rocky20/device/omp_backend.hpp</label>
      </node>
      <node id="12">
        <label>rocky20/model/rocky_model.h</label>
      </node>
      <node id="14">
        <label>rocky20/model/statistics_data.hpp</label>
      </node>
      <node id="15">
        <label>rocky20/model/triangles_sync.h</label>
      </node>
      <node id="16">
        <label>rocky20/sph/sph_model.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="rocky__boundary__deformation_8cpp_1a9edc081e664bb49502592d6df17fdb66" prot="public" static="no">
        <type>SPHBoundaryDataRecorder::Type</type>
        <definition>using SPHSType =  SPHBoundaryDataRecorder::Type</definition>
        <argsstring></argsstring>
        <name>SPHSType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_deformation.cpp" line="11" column="1" bodyfile="source/c++/rocky20/api/rocky_boundary_deformation.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="rocky__boundary__deformation_8cpp_1a3978b0b2123adb2f8c6206b315d5353a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; int, int, int &gt;</type>
        <definition>std::tuple&lt; int, int, int &gt; get_sph_impulse_scalars_indexes</definition>
        <argsstring>(const RockyModel &amp;model)</argsstring>
        <name>get_sph_impulse_scalars_indexes</name>
        <param>
          <type>const RockyModel &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_deformation.cpp" line="45" column="19" bodyfile="source/c++/rocky20/api/rocky_boundary_deformation.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="rocky__boundary__deformation_8cpp_1a64f5fe910e0efdddc4cee0a2b6ff7951" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; double *, double *, double * &gt;</type>
        <definition>std::tuple&lt; double *, double *, double * &gt; get_sph_impulse_scalars</definition>
        <argsstring>(RockyModel &amp;model)</argsstring>
        <name>get_sph_impulse_scalars</name>
        <param>
          <type>RockyModel &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_deformation.cpp" line="54" column="19" bodyfile="source/c++/rocky20/api/rocky_boundary_deformation.cpp" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="rocky__boundary__deformation_8cpp_1af2492e57fa4bb56fb0438a93a258de5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool has_sph</definition>
        <argsstring>(const RockyModel &amp;model)</argsstring>
        <name>has_sph</name>
        <param>
          <type>const RockyModel &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_deformation.cpp" line="63" column="13" bodyfile="source/c++/rocky20/api/rocky_boundary_deformation.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(C)<sp/>2024<sp/>ANSYS,<sp/>Inc.<sp/>Unauthorized<sp/>use,<sp/>distribution,<sp/>or<sp/>duplication<sp/>is<sp/>prohibited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rocky_boundary_deformation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rocky20/api/rocky_boundary.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rocky20/model/rocky_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rocky20/model/triangles_sync.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rocky20/sph/sph_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>RockyDeformableWallsModel::IMPULSE_SCALAR_NAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Cumulative<sp/>Impulse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SPHSType<sp/>=<sp/>SPHBoundaryDataRecorder::Type;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">RockyDeformableWallsModel::RockyDeformableWallsModel(RockyModel&amp;<sp/>model)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_model(model)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>_impulse_scalar_idx(model.triangle_scalars_controller.find_scalars(IMPULSE_SCALAR_NAME))</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_impulse_scalar_idx<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROCKY_LOGIC_ERROR(</highlight><highlight class="stringliteral">&quot;Missing<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>IMPULSE_SCALAR_NAME<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>Deformable<sp/>Walls<sp/>Model.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">RockyDeformableWallsModel::RockyDeformableWallsModel(RockyModel&amp;<sp/>model,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>impulse_scalar_idx)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_model(model)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>_impulse_scalar_idx(impulse_scalar_idx)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::set_displacement_timestep(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>was_update_wear_set<sp/>=<sp/>this-&gt;_model.iteration.update_wear();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_model.iteration.wear_update_timestep<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(was_update_wear_set)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>wear_update<sp/>will<sp/>still<sp/>be<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_model.iteration.wear_update_time<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::get_displacement_timestep()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_model.iteration.wear_update_timestep;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::tuple&lt;int,<sp/>int,<sp/>int&gt;<sp/>get_sph_impulse_scalars_indexes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RockyModel&amp;<sp/>model)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>data_recorder<sp/>=<sp/>model.sph_model-&gt;sph_data_recorder_controller;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_recorder.get_scalar_index(SPHSType::tSPHTriangleImpulseX),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_recorder.get_scalar_index(SPHSType::tSPHTriangleImpulseY),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_recorder.get_scalar_index(SPHSType::tSPHTriangleImpulseZ));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::tuple&lt;double*,<sp/>double*,<sp/>double*&gt;<sp/>get_sph_impulse_scalars(RockyModel&amp;<sp/>model)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[impulse_x,<sp/>impulse_y,<sp/>impulse_z]<sp/>=<sp/>get_sph_impulse_scalars_indexes(model);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.triangle_scalars_controller.get_scalars&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(impulse_x),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.triangle_scalars_controller.get_scalars&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(impulse_y),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.triangle_scalars_controller.get_scalars&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(impulse_z));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_sph(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RockyModel&amp;<sp/>model)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model.sph_model<sp/>&amp;&amp;<sp/>model.sph_model-&gt;sph_data_recorder_controller.enabled;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::fetch_triangle_impulses()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_model.use_cuda)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rocky20::pull_triangle_scalars_from_devices(this-&gt;_model,<sp/>this-&gt;_impulse_scalar_idx);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_sph(this-&gt;_model))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[sph_impulse_x,<sp/>sph_impulse_y,<sp/>sph_impulse_z]<sp/>=</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_sph_impulse_scalars_indexes(this-&gt;_model);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rocky20::pull_triangle_scalars_from_devices(this-&gt;_model,<sp/>sph_impulse_x);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rocky20::pull_triangle_scalars_from_devices(this-&gt;_model,<sp/>sph_impulse_y);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rocky20::pull_triangle_scalars_from_devices(this-&gt;_model,<sp/>sph_impulse_z);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_sph(this-&gt;_model))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[sph_impulse_x,<sp/>sph_impulse_y,<sp/>sph_impulse_z]<sp/>=<sp/>get_sph_impulse_scalars(this-&gt;_model);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>host_data<sp/>=<sp/>this-&gt;_model.triangle_scalars_controller.host_data;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>impulse_scalar<sp/>=<sp/>host_data.get&lt;double3&gt;(this-&gt;_impulse_scalar_idx);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tri_count<sp/>=<sp/>this-&gt;_model.gen.ntrn;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>n_threads<sp/>=<sp/>this-&gt;_model.get_n_threads();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>num_threads(n_threads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tri_count;<sp/>i++)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>deformation_impulse<sp/>=<sp/>impulse_scalar<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*deformation_impulse<sp/>+=</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double3(*(sph_impulse_x<sp/>+<sp/>i),<sp/>*(sph_impulse_y<sp/>+<sp/>i),<sp/>*(sph_impulse_z<sp/>+<sp/>i));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::reset_triangles_impulses()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_model.triangle_scalars_controller.reset(this-&gt;_impulse_scalar_idx,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_sph(this-&gt;_model))</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[sph_impulse_x,<sp/>sph_impulse_y,<sp/>sph_impulse_z]<sp/>=<sp/>get_sph_impulse_scalars_indexes(this-&gt;_model);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model.triangle_scalars_controller.reset(sph_impulse_x,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model.triangle_scalars_controller.reset(sph_impulse_y,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_model.triangle_scalars_controller.reset(sph_impulse_z,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>double3&amp;<sp/>RockyDeformableWallsModel::get_triangle_impulse(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RockyBoundaryTriangle&lt;RockyModel&gt;&amp;<sp/>triangle)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="117"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_model.triangle_scalars_controller.host_data.get_scalar&lt;double3&gt;(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;_impulse_scalar_idx,<sp/>triangle.triangle_index);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::set_vertex_incremental_displacements(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wall_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertex_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>double3&amp;<sp/>displacement)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>idx<sp/>=<sp/>this-&gt;_model.get_boundary(wall_index).point_lower_index<sp/>+<sp/>vertex_index;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_model.con_pnt_wear[idx].dxl<sp/>=<sp/>displacement.x;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_model.con_pnt_wear[idx].dyl<sp/>=<sp/>displacement.y;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_model.con_pnt_wear[idx].dzl<sp/>=<sp/>displacement.z;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RockyDeformableWallsModel::is_displacement_timestep_completed()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="132"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_model.iteration.update_wear()<sp/>&amp;&amp;<sp/>!this-&gt;_model.gen.start_sim;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="source/c++/rocky20/api/rocky_boundary_deformation.cpp"/>
  </compounddef>
</doxygen>
