<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockySPHDeviceModel" kind="struct" language="C++" prot="public">
    <compoundname>IRockySPHDeviceModel</compoundname>
    <includes refid="rocky__sph__model__api_8hpp" local="no">rocky_sph_model_api.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a1b3b0ad0b9b4e4f723fed8cd6d859ff1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_sph_timestep</definition>
        <argsstring>() const</argsstring>
        <name>get_sph_timestep</name>
        <qualifiedname>IRockySPHDeviceModel::get_sph_timestep</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The timestep value used for the integration of all SPH model equations. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="159" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a2e07d8b951637326aa17c3869fa75f6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_element_mass</definition>
        <argsstring>() const</argsstring>
        <name>get_element_mass</name>
        <qualifiedname>IRockySPHDeviceModel::get_element_mass</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The mass associated to each one of the SPH elements in the simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="164" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1aa0dda18957c28775ae86803575275db2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_initial_element_spacing</definition>
        <argsstring>() const</argsstring>
        <name>get_initial_element_spacing</name>
        <qualifiedname>IRockySPHDeviceModel::get_initial_element_spacing</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The spacing between SPH elements when they enter into the simulation. This is a characteristic length considered in several expressions in the SPH model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="170" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a1c804b61e8d38f22cc1df2960b94e5e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS ESPHKernelType</type>
        <definition>ROCKY_FUNCTIONS ESPHKernelType IRockySPHDeviceModel::get_kernel_type</definition>
        <argsstring>() const</argsstring>
        <name>get_kernel_type</name>
        <qualifiedname>IRockySPHDeviceModel::get_kernel_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An <computeroutput>ESPHKernelType</computeroutput> enum indicating the kernel type used in the SPH model. Currently there are 3 kernel types implemented in Rocky:<linebreak/>
 <computeroutput>ktCubic = 0</computeroutput><linebreak/>
 <computeroutput>ktQuintic = 1</computeroutput><linebreak/>
 <computeroutput>ktWendland = 2</computeroutput><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="179" column="36" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1ac0f6dab31e47087f957b9c5f921044ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_kernel_weight</definition>
        <argsstring>(float distance) const</argsstring>
        <name>get_kernel_weight</name>
        <qualifiedname>IRockySPHDeviceModel::get_kernel_weight</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the kernel function evaluated at a point located at a given distance of the kernel&apos;s support region.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance from the kernel&apos;s support region at which the kernel function will be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="188" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="384" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a878401756bbf4517bd2dbf7c0b6f53b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_kernel_derivative</definition>
        <argsstring>(float distance) const</argsstring>
        <name>get_kernel_derivative</name>
        <qualifiedname>IRockySPHDeviceModel::get_kernel_derivative</qualifiedname>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the derivative of the kernel function evaluated at a point located at a given distance of the kernel&apos;s support region.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance from the kernel&apos;s support region at which the derivative of kernel function will be evaluated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="197" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a08276af5f02f29358b677c6c5c4eb623" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_smoothing_length</definition>
        <argsstring>() const</argsstring>
        <name>get_smoothing_length</name>
        <qualifiedname>IRockySPHDeviceModel::get_smoothing_length</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the smoothing length considered in the SPH discretization. The radius of the support region of the kernel function is normally an integer multiple of the smoothing length. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="204" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a11adf37fd1989526607c500a68f5a190" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_minimum_distance</definition>
        <argsstring>() const</argsstring>
        <name>get_minimum_distance</name>
        <qualifiedname>IRockySPHDeviceModel::get_minimum_distance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the minimum distance between any two neighbor SPH elements in a simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="210" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a02751c7624b5eebe898fd497fd368f7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_minimum_distance_squared</definition>
        <argsstring>() const</argsstring>
        <name>get_minimum_distance_squared</name>
        <qualifiedname>IRockySPHDeviceModel::get_minimum_distance_squared</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The squared value of the minimum distance between any two neighbor SPH elements in a simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="216" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a0e7d219d00a03afa23f4340f966f274f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_fluid_viscosity</definition>
        <argsstring>() const</argsstring>
        <name>get_fluid_viscosity</name>
        <qualifiedname>IRockySPHDeviceModel::get_fluid_viscosity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the fluid&apos;s dynamic viscosity. Not suitable when variable molecular viscosity is enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="222" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a30c701000a588378110aa2a163a07847" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_fluid_density</definition>
        <argsstring>() const</argsstring>
        <name>get_fluid_density</name>
        <qualifiedname>IRockySPHDeviceModel::get_fluid_density</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the fluid&apos;s density. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="227" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="420" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a53bf5a5c5dc38bed487a0ff75b4f881e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_fluid_thermal_conductivity</definition>
        <argsstring>() const</argsstring>
        <name>get_fluid_thermal_conductivity</name>
        <qualifiedname>IRockySPHDeviceModel::get_fluid_thermal_conductivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the fluid&apos;s thermal conductivity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="232" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a3f511dafb251e18d7dfc8a8f7c9cfcf1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_fluid_specific_heat</definition>
        <argsstring>() const</argsstring>
        <name>get_fluid_specific_heat</name>
        <qualifiedname>IRockySPHDeviceModel::get_fluid_specific_heat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the fluid&apos;s specific heat. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="237" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="430" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a085435fa6f49074b90d50686b5b6dd6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_turbulent_prandtl_number</definition>
        <argsstring>() const</argsstring>
        <name>get_turbulent_prandtl_number</name>
        <qualifiedname>IRockySPHDeviceModel::get_turbulent_prandtl_number</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the turbulent Prandtl number, which is the ratio between the momentum and the heat transfer diffusivities due turbulence. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="244" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="435" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a53367cb9b7f97cb102cb9e1703a95131" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_speed_of_sound</definition>
        <argsstring>() const</argsstring>
        <name>get_speed_of_sound</name>
        <qualifiedname>IRockySPHDeviceModel::get_speed_of_sound</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the speed of sound in the fluid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="249" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="440" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1ad52e0f31256e039c7043a7de165fadf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_surface_tension</definition>
        <argsstring>() const</argsstring>
        <name>get_surface_tension</name>
        <qualifiedname>IRockySPHDeviceModel::get_surface_tension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The user-prescribed value of the surface tension at a free surface. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="254" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="445" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1aa0fa9e6fb5e51db54a99a4bc45949409" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_stiffness</definition>
        <argsstring>() const</argsstring>
        <name>get_stiffness</name>
        <qualifiedname>IRockySPHDeviceModel::get_stiffness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the stiffness used when modeling the repulsive normal force at boundaries. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="260" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a7a1b280f7d23137f75cafb3eb29cf2bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_damping_coefficient</definition>
        <argsstring>() const</argsstring>
        <name>get_damping_coefficient</name>
        <qualifiedname>IRockySPHDeviceModel::get_damping_coefficient</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the damping coefficient used when modeling the dissipative force at boundaries. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="266" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a9a4ab5e39105ea7398fb0b3b15b2763c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS ESPHBoundaryType</type>
        <definition>ROCKY_FUNCTIONS ESPHBoundaryType IRockySPHDeviceModel::get_boundary_condition_type</definition>
        <argsstring>(int geometry_index) const</argsstring>
        <name>get_boundary_condition_type</name>
        <qualifiedname>IRockySPHDeviceModel::get_boundary_condition_type</qualifiedname>
        <param>
          <type>int</type>
          <declname>geometry_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An <computeroutput>ESPHBoundaryType</computeroutput> enum indicating the type of boundary condition applied at a given wall identified by geometry_index. Currently there are 3 boundary conditions types implemented in Rocky:<linebreak/>
 <computeroutput>btFreeSlip = 0</computeroutput><linebreak/>
 <computeroutput>btNoSlipLaminar = 1</computeroutput><linebreak/>
 <computeroutput>btNoSlipTurbulent = 2</computeroutput><linebreak/>
</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the wall to get the boundary type from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="278" column="38" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="495" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a98a93eadf944d6ad89416d384e1476c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS float</type>
        <definition>ROCKY_FUNCTIONS float IRockySPHDeviceModel::get_wall_turbulent_thermal_conductance</definition>
        <argsstring>(float velocity, float distance) const</argsstring>
        <name>get_wall_turbulent_thermal_conductance</name>
        <qualifiedname>IRockySPHDeviceModel::get_wall_turbulent_thermal_conductance</qualifiedname>
        <param>
          <type>float</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>float</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The thermal conductance between a SPH element and a geometry triangle, calculated using the thermal turbulent wall function. The corresponding heat transfer rate can be obtained by multiplying the thermal conductance by the temperature difference between the SPH element and the geometry triangle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The tangential component of the velocity of the SPH element relative to the nearest point on the geometry triangle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance of the SPH element to the nearest point on the geometry triangle. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="290" column="27" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="502" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1a707d2c43244e0a2db08047ba86dbfd78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS <ref refid="structIRockyCloudPoint" kindref="compound">IRockyCloudPoint</ref></type>
        <definition>ROCKY_FUNCTIONS IRockyCloudPoint IRockySPHDeviceModel::get_element_cloud_point</definition>
        <argsstring>(int point_cloud_index, const IRockySPHElement &amp;element)</argsstring>
        <name>get_element_cloud_point</name>
        <qualifiedname>IRockySPHDeviceModel::get_element_cloud_point</qualifiedname>
        <param>
          <type>int</type>
          <declname>point_cloud_index</declname>
        </param>
        <param>
          <type>const <ref refid="structIRockySPHElement" kindref="compound">IRockySPHElement</ref> &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This function gets an auxiliary object that gives access</title><para>to cloud point values of the nearest point to a given SPH element.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point_cloud_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index that uniquely identifies a point cloud dataset.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>A <computeroutput><ref refid="structIRockySPHElement" kindref="compound">IRockySPHElement</ref></computeroutput> whose position is used to determine the nearest cloud point.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <computeroutput>IRockySPHElementCloudPoint</computeroutput> object, which can be used to get cloud point values of the nearest point to the element passed as argument. For more information about point clouds, please refer to the Rocky User Manual. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="309" column="5" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="510" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="structIRockySPHDeviceModel_1aeafb1df061969bc91b4912460cebedb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS bool</type>
        <definition>ROCKY_FUNCTIONS bool IRockySPHDeviceModel::has_turbulence_modeling</definition>
        <argsstring>() const</argsstring>
        <name>has_turbulence_modeling</name>
        <qualifiedname>IRockySPHDeviceModel::has_turbulence_modeling</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if some turbulence model is active, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="314" column="26" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="519" bodyend="522"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="structIRockySPHDeviceModel" kindref="compound">IRockySPHDeviceModel</ref></computeroutput> implements methods that provide general configuration parameters of the SPH model. The data associated to an <computeroutput><ref refid="structIRockySPHDeviceModel" kindref="compound">IRockySPHDeviceModel</ref></computeroutput> object resides entirely on device memory, consequently, it can be accessed only within hooks executed on devices. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" line="154" column="1" bodyfile="source/c++/rocky20/api/sph/rocky_sph_model_api.hpp" bodystart="155" bodyend="348"/>
    <listofallmembers>
      <member refid="structIRockySPHDeviceModel_1a9a4ab5e39105ea7398fb0b3b15b2763c" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_boundary_condition_type</name></member>
      <member refid="structIRockySPHDeviceModel_1a7a1b280f7d23137f75cafb3eb29cf2bd" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_damping_coefficient</name></member>
      <member refid="structIRockySPHDeviceModel_1a707d2c43244e0a2db08047ba86dbfd78" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_element_cloud_point</name></member>
      <member refid="structIRockySPHDeviceModel_1a2e07d8b951637326aa17c3869fa75f6f" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_element_mass</name></member>
      <member refid="structIRockySPHDeviceModel_1a30c701000a588378110aa2a163a07847" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_fluid_density</name></member>
      <member refid="structIRockySPHDeviceModel_1a3f511dafb251e18d7dfc8a8f7c9cfcf1" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_fluid_specific_heat</name></member>
      <member refid="structIRockySPHDeviceModel_1a53bf5a5c5dc38bed487a0ff75b4f881e" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_fluid_thermal_conductivity</name></member>
      <member refid="structIRockySPHDeviceModel_1a0e7d219d00a03afa23f4340f966f274f" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_fluid_viscosity</name></member>
      <member refid="structIRockySPHDeviceModel_1aa0dda18957c28775ae86803575275db2" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_initial_element_spacing</name></member>
      <member refid="structIRockySPHDeviceModel_1a878401756bbf4517bd2dbf7c0b6f53b5" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_kernel_derivative</name></member>
      <member refid="structIRockySPHDeviceModel_1a1c804b61e8d38f22cc1df2960b94e5e5" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_kernel_type</name></member>
      <member refid="structIRockySPHDeviceModel_1ac0f6dab31e47087f957b9c5f921044ca" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_kernel_weight</name></member>
      <member refid="structIRockySPHDeviceModel_1a11adf37fd1989526607c500a68f5a190" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_minimum_distance</name></member>
      <member refid="structIRockySPHDeviceModel_1a02751c7624b5eebe898fd497fd368f7e" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_minimum_distance_squared</name></member>
      <member refid="structIRockySPHDeviceModel_1a08276af5f02f29358b677c6c5c4eb623" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_smoothing_length</name></member>
      <member refid="structIRockySPHDeviceModel_1a53367cb9b7f97cb102cb9e1703a95131" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_speed_of_sound</name></member>
      <member refid="structIRockySPHDeviceModel_1a1b3b0ad0b9b4e4f723fed8cd6d859ff1" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_sph_timestep</name></member>
      <member refid="structIRockySPHDeviceModel_1aa0fa9e6fb5e51db54a99a4bc45949409" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_stiffness</name></member>
      <member refid="structIRockySPHDeviceModel_1ad52e0f31256e039c7043a7de165fadf7" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_surface_tension</name></member>
      <member refid="structIRockySPHDeviceModel_1a085435fa6f49074b90d50686b5b6dd6c" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_turbulent_prandtl_number</name></member>
      <member refid="structIRockySPHDeviceModel_1a98a93eadf944d6ad89416d384e1476c3" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>get_wall_turbulent_thermal_conductance</name></member>
      <member refid="structIRockySPHDeviceModel_1aeafb1df061969bc91b4912460cebedb5" prot="public" virt="non-virtual"><scope>IRockySPHDeviceModel</scope><name>has_turbulence_modeling</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
