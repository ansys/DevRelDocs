<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="rocky__output__properties_8cpp" kind="file" language="C++">
    <compoundname>rocky_output_properties.cpp</compoundname>
    <includes refid="rocky__output__properties_8h" local="yes">rocky_output_properties.h</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="1">
        <label>source/c++/rocky20/api/rocky_output_properties.cpp</label>
        <link refid="rocky__output__properties_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rocky_output_properties.h</label>
        <link refid="rocky__output__properties_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>rocky20/core/utils/rocky_exception.hpp</label>
      </node>
      <node id="5">
        <label>rocky20/model/rocky_enums.h</label>
      </node>
      <node id="7">
        <label>rocky20/model/scalars.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="rocky__output__properties_8cpp_1adba10c302e107d8833e53ff49a5dead8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int create_property</definition>
        <argsstring>(std::vector&lt; OutputPropertyInfo &gt; &amp;infos, std::string name, std::string unit, OutputPropertyInfo::Location location, rocky20::EvaluationType evaluation, double dimension)</argsstring>
        <name>create_property</name>
        <param>
          <type>std::vector&lt; OutputPropertyInfo &gt; &amp;</type>
          <declname>infos</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>OutputPropertyInfo::Location</type>
          <declname>location</declname>
        </param>
        <param>
          <type>rocky20::EvaluationType</type>
          <declname>evaluation</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_output_properties.cpp" line="6" column="5" bodyfile="source/c++/rocky20/api/rocky_output_properties.cpp" bodystart="6" bodyend="27"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(C)<sp/>2024<sp/>ANSYS,<sp/>Inc.<sp/>Unauthorized<sp/>use,<sp/>distribution,<sp/>or<sp/>duplication<sp/>is<sp/>prohibited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rocky_output_properties.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create_property(</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;OutputPropertyInfo&gt;&amp;<sp/>infos,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>unit,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputPropertyInfo::Location<sp/>location,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>rocky20::EvaluationType<sp/>evaluation,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension</highlight></codeline>
<codeline lineno="13"><highlight class="normal">)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>std::find_if(infos.begin(),<sp/>infos.end(),</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;name](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>OutputPropertyInfo&amp;<sp/>info)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>{<sp/>return<sp/>info.name<sp/>==<sp/>name;<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target<sp/>==<sp/>infos.end())</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infos.emplace_back(name,<sp/>unit,<sp/>location,<sp/>evaluation,<sp/>dimension);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)infos.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(target<sp/>-<sp/>infos.begin());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_particles_instantaneous_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;particle_property_infos,<sp/>name,<sp/>unit,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onParticle,<sp/>rocky20::etInstantaneous,<sp/>dimension);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_particles_statistical_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;particle_property_infos,<sp/>name,<sp/>unit,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onParticle,<sp/>rocky20::etStatistical,<sp/>dimension);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_triangles_instantaneous_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;boundary_property_infos,<sp/>name,<sp/>unit,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onBoundaryCell,<sp/>rocky20::etInstantaneous,<sp/>dimension);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_triangles_statistical_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;boundary_property_infos,<sp/>name,<sp/>unit,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onBoundaryCell,<sp/>rocky20::etStatistical,<sp/>dimension);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_vertex_triangles_instantaneous_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension<sp/></highlight><highlight class="comment">/*=<sp/>1.0*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;boundary_property_infos,<sp/>name,<sp/>unit,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onBoundaryVertex,<sp/>rocky20::etInstantaneous,<sp/>dimension);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPropertiesSetup::create_vertex_triangles_statistical_property(std::string<sp/>name,<sp/>std::string<sp/>unit,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dimension<sp/></highlight><highlight class="comment">/*=<sp/>1.0*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_property(this-&gt;boundary_property_infos,<sp/>name,<sp/>unit,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPropertyInfo::onBoundaryVertex,<sp/>rocky20::etStatistical,<sp/>dimension);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="source/c++/rocky20/api/rocky_output_properties.cpp"/>
  </compounddef>
</doxygen>
