<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="rocky__breakage__api_8h" kind="file" language="C++">
    <compoundname>rocky_breakage_api.h</compoundname>
    <includes local="no">rocky20/model/rocky_model.h</includes>
    <includedby refid="rocky__breakage__api_8cpp" local="yes">source/c++/rocky20/api/rocky_breakage_api.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>source/c++/rocky20/api/rocky_breakage_api.h</label>
        <link refid="rocky__breakage__api_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>rocky20/model/rocky_model.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacebreakage">breakage</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>(C)<sp/>2024<sp/>ANSYS,<sp/>Inc.<sp/>Unauthorized<sp/>use,<sp/>distribution,<sp/>or<sp/>duplication<sp/>is<sp/>prohibited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rocky20/model/rocky_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">breakage</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">std::vector&lt;double&gt;<sp/>generate_fragment_sizes(</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>fragments_size_model*<sp/>model,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>particle_volume,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum_size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t10,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum_t10);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>calculate_minimum_t10_value(</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>fragments_size_model*<sp/>model,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>particle_volume,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimum_size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maximum_t10<sp/>=<sp/>100.0);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>breakage</highlight></codeline>
    </programlisting>
    <location file="source/c++/rocky20/api/rocky_breakage_api.h"/>
  </compounddef>
</doxygen>
