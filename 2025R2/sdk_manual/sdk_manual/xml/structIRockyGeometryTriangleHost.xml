<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyGeometryTriangleHost" kind="struct" language="C++" prot="public">
    <compoundname>IRockyGeometryTriangleHost</compoundname>
    <basecompoundref prot="public" virt="non-virtual">IRockyGeometryTriangleImpl&lt; RockyModel &gt;</basecompoundref>
    <includes refid="rocky__boundary__api_8hpp" local="no">rocky_boundary_api.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a4d4f0981020bd999343324777061578f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS <ref refid="structIRockyMaterial" kindref="compound">IRockyMaterial</ref></type>
        <definition>ROCKY_FUNCTIONS IRockyMaterial IRockyGeometryTriangleHost::get_material</definition>
        <argsstring>() const</argsstring>
        <name>get_material</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_material</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An <computeroutput><ref refid="structIRockyMaterial" kindref="compound">IRockyMaterial</ref></computeroutput> object that gives access to the values of physical properties associated to the material from which the geometry triangle is made.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="310" column="36"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1acf71ec5c2b5cf6d20f276e3e11cf5ede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyGeometryTriangleHost::get_normal_unit_vector</definition>
        <argsstring>() const</argsstring>
        <name>get_normal_unit_vector</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_normal_unit_vector</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A unit vector in the normal direction to the geometry triangle, in Cartesian coordinates. The orientation of this vector is arbitrary, since collision with particles can potentially happen on either side of the geometry triangle.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="313" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1ab782a5e82eba4116e3fdc03086ac6e70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyGeometryTriangleHost::get_area</definition>
        <argsstring>() const</argsstring>
        <name>get_area</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_area</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The unsigned area of the geometry triangle.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="316" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1ae049045265b3b4d44366e60086052049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyGeometryTriangleHost::get_centroid</definition>
        <argsstring>() const</argsstring>
        <name>get_centroid</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_centroid</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The centroid point of the geometry triangle in Cartesian coordinates.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="319" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a90f497b2b42411676707aae7b1c73dbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS int</type>
        <definition>ROCKY_FUNCTIONS int IRockyGeometryTriangleHost::get_geometry_index</definition>
        <argsstring>() const</argsstring>
        <name>get_geometry_index</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_geometry_index</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index that uniquely identifies the geometry to which the geometry triangle belongs.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="322" column="25"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1ab68909270e06bc1b702c11e54fc39b87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS int</type>
        <definition>ROCKY_FUNCTIONS int IRockyGeometryTriangleHost::get_material_index</definition>
        <argsstring>() const</argsstring>
        <name>get_material_index</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_material_index</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The material index that uniquely identifies the material associated to the geometry triangle.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="325" column="25"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1af55f61fe49b8582002b87e1c5d4db703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyGeometryTriangleHost::get_translational_velocity</definition>
        <argsstring>(double current_time) const</argsstring>
        <name>get_translational_velocity</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_translational_velocity</qualifiedname>
        <param>
          <type>double</type>
          <declname>current_time</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title></title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_time</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value of the simulation time.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The instantaneous triangle&apos;s translational velocity vector, expressed in Cartesian coordinates.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="328" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a1d39d94664969c8e81279f4d395cfd7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyGeometryTriangleHost::get_geometry_rotational_velocity</definition>
        <argsstring>() const</argsstring>
        <name>get_geometry_rotational_velocity</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_geometry_rotational_velocity</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The rotational velocity vector of the geometry to which the triangle belongs, expressed in Cartesian coordinates.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="331" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a35e0413744dea0b6d847172dec76ada4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyGeometryTriangleHost::get_geometry_rotation_center</definition>
        <argsstring>() const</argsstring>
        <name>get_geometry_rotation_center</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_geometry_rotation_center</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Cartesian coordinates of the rotation center of the motion frame attached to the geometry to which the triangle belongs.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="334" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1ad63935796d98370d0164f0e700639a82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyGeometryTriangleHost::get_temperature</definition>
        <argsstring>() const</argsstring>
        <name>get_temperature</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_temperature</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The temperature associated to the triangle. If that temperature was defined as a variable property in the module&apos;s specification file, each triangle in a geometry may have a different temperature value, set by a module using the <computeroutput><ref refid="structIRockyGeometryTriangle_1a4286e7ea37b1863c8ea48d2fcd729b9c" kindref="member">IRockyGeometryTriangle::set_temperature</ref></computeroutput> method. Otherwise, this method will return the temperature value specified in the UI for the geometry to which the geometry triangle belongs.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="337" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a2da990675204aa1b75f7d99d27d0edf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryTriangleHost::set_temperature</definition>
        <argsstring>(double value)</argsstring>
        <name>set_temperature</name>
        <qualifiedname>IRockyGeometryTriangleHost::set_temperature</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method can be used only if the temperature was defined as a variable property</title><para>for geometry triangles in the module&apos;s specification file. A segmentation fault will occur if this method is used otherwise. The temperature value specified with this method will be used by Rocky when solving the thermal balance equations for the particles in contact with the geometry triangle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The temperature value to be assigned to the geometry triangle.   <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="340" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a296b5f25ba526e166233ecc93a361840" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS bool</type>
        <definition>ROCKY_FUNCTIONS bool IRockyGeometryTriangleHost::is_adiabatic</definition>
        <argsstring>() const</argsstring>
        <name>is_adiabatic</name>
        <qualifiedname>IRockyGeometryTriangleHost::is_adiabatic</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the geometry to which the boundary triangle belongs is adiabatic (i.e. it is not enabled to exchange heat with particles).   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="343" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1aba16fb8ad2df2dc54ff931c091850675" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyGeometryTriangleHost::get_thermal_conductivity</definition>
        <argsstring>() const</argsstring>
        <name>get_thermal_conductivity</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_thermal_conductivity</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The triangle&apos;s thermal conductivity. If this property was defined as variable for triangles in the module&apos;s specification file, this method will return the value set specifically for the geometry triangle. Otherwise, the returned value will be the one specified for the triangle&apos;s material in the Rocky UI.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="346" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a4b7dc627f3943f1a897e28c3219da0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryTriangleHost::set_thermal_conductivity</definition>
        <argsstring>(double value)</argsstring>
        <name>set_thermal_conductivity</name>
        <qualifiedname>IRockyGeometryTriangleHost::set_thermal_conductivity</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method sets the triangle&apos;s thermal conductivity, if this property</title><para>was defined as variable in the module&apos;s specification file. If this method is used otherwise, a segmentation fault will occur.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The thermal conductivity to be set.   <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="349" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a48d3df84ac1785c1ada100faad008624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyGeometryTriangleHost::get_poisson_ratio</definition>
        <argsstring>() const</argsstring>
        <name>get_poisson_ratio</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_poisson_ratio</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The triangle&apos;s Poisson&apos;s ratio. If this property was defined as variable for triangles in the module&apos;s specification file, this method will return the value set specifically for the geometry triangle. Otherwise, the returned value will be the one specified for the triangle&apos;s material in the Rocky UI.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="352" column="28"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a53c07e03e2af77cfe1549d7ad9ac22ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryTriangleHost::set_poisson_ratio</definition>
        <argsstring>(double value)</argsstring>
        <name>set_poisson_ratio</name>
        <qualifiedname>IRockyGeometryTriangleHost::set_poisson_ratio</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method sets the triangle&apos;s Poisson&apos;s ratio, if this property</title><para>was defined as variable in the module&apos;s specification file. If this method is used otherwise, a segmentation fault will occur.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The Poisson&apos;s ratio to be set.   <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="355" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryTriangleHost_1a32507720156ec81050cfe8c9179a18a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS <ref refid="structIRockyTriangleScalars" kindref="compound">IRockyTriangleScalars</ref></type>
        <definition>ROCKY_FUNCTIONS IRockyTriangleScalars IRockyGeometryTriangleHost::get_scalars</definition>
        <argsstring>()</argsstring>
        <name>get_scalars</name>
        <qualifiedname>IRockyGeometryTriangleHost::get_scalars</qualifiedname>
        <briefdescription>
<para><linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <computeroutput><ref refid="structIRockyTriangleScalars" kindref="compound">IRockyTriangleScalars</ref></computeroutput> object that gives access to all triangle scalars variables defined in the project.   <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="358" column="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="structIRockyGeometryTriangleHost" kindref="compound">IRockyGeometryTriangleHost</ref></computeroutput> is the counterpart of <computeroutput><ref refid="structIRockyGeometryTriangleHost" kindref="compound">IRockyGeometryTriangleHost</ref></computeroutput> intended to be used during initialization operations, which is always performed on CPU. Both of them share the same methods. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_boundary_api.hpp" line="296" column="1" bodyfile="source/c++/rocky20/api/rocky_boundary_api.hpp" bodystart="297" bodyend="362"/>
    <listofallmembers>
      <member refid="structIRockyGeometryTriangleHost_1ab782a5e82eba4116e3fdc03086ac6e70" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_area</name></member>
      <member refid="structIRockyGeometryTriangleHost_1ae049045265b3b4d44366e60086052049" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_centroid</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a90f497b2b42411676707aae7b1c73dbc" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_geometry_index</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a35e0413744dea0b6d847172dec76ada4" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_geometry_rotation_center</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a1d39d94664969c8e81279f4d395cfd7e" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_geometry_rotational_velocity</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a4d4f0981020bd999343324777061578f" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_material</name></member>
      <member refid="structIRockyGeometryTriangleHost_1ab68909270e06bc1b702c11e54fc39b87" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_material_index</name></member>
      <member refid="structIRockyGeometryTriangleHost_1acf71ec5c2b5cf6d20f276e3e11cf5ede" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_normal_unit_vector</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a48d3df84ac1785c1ada100faad008624" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_poisson_ratio</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a32507720156ec81050cfe8c9179a18a2" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_scalars</name></member>
      <member refid="structIRockyGeometryTriangleHost_1ad63935796d98370d0164f0e700639a82" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_temperature</name></member>
      <member refid="structIRockyGeometryTriangleHost_1aba16fb8ad2df2dc54ff931c091850675" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_thermal_conductivity</name></member>
      <member refid="structIRockyGeometryTriangleHost_1af55f61fe49b8582002b87e1c5d4db703" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>get_translational_velocity</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a296b5f25ba526e166233ecc93a361840" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>is_adiabatic</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a53c07e03e2af77cfe1549d7ad9ac22ee" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>set_poisson_ratio</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a2da990675204aa1b75f7d99d27d0edf4" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>set_temperature</name></member>
      <member refid="structIRockyGeometryTriangleHost_1a4b7dc627f3943f1a897e28c3219da0ba" prot="public" virt="non-virtual"><scope>IRockyGeometryTriangleHost</scope><name>set_thermal_conductivity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
