<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyContactDataRecorder" kind="struct" language="C++" prot="public">
    <compoundname>IRockyContactDataRecorder</compoundname>
    <includes refid="rocky__contact__data__recorder__api_8h" local="no">rocky_contact_data_recorder_api.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyContactDataRecorder_1a36e9b7b9de7b99a0e4c6ca703fc7fb5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyContactDataRecorder::enable_contact_scalar</definition>
        <argsstring>(ContactScalar scalar, RecordingScope scope)</argsstring>
        <name>enable_contact_scalar</name>
        <qualifiedname>IRockyContactDataRecorder::enable_contact_scalar</qualifiedname>
        <param>
          <type>ContactScalar</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>RecordingScope</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method allows a module to select which physical magnitudes associated to a</title><para>collision must be recorded into contact scalars. The magnitudes available for recording are listed below. For a description of how these magnitudes are computed internally, please refer to the DEM Technical Manual.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>An enum key indicating the physical magnitude that must be recorded. The currently available magnitudes are:<linebreak/>
 <computeroutput>csDuration</computeroutput>: The duration of a collision.<linebreak/>
 <computeroutput>csImpactVelocityNormal</computeroutput>: The normal component of the impact velocity, i.e. the contact relative velocity at the moment a collision starts.<linebreak/>
 <computeroutput>csImpactVelocityTangential</computeroutput>: The tangential component of the impact velocity, i.e. the contact relative velocity at the moment a collision starts.<linebreak/>
 <computeroutput>csWorkDissipation</computeroutput>: The energy dissipated during an entire collision.<linebreak/>
 <computeroutput>csWorkImpact</computeroutput>: The work made by the normal contact force during the loading phase of a collision.<linebreak/>
 <computeroutput>csWorkShear</computeroutput>: The work made by the tangential contact force during an entire collision.<linebreak/>
 <computeroutput>csEnergyTransfer</computeroutput>: The energy transferred to a particle by a moving boundary during a collision at a particle-to-boundary contact.<linebreak/>
 <computeroutput>csImpulseNormal</computeroutput>: The impulse of the normal contact force during an entire collision.<linebreak/>
 <computeroutput>csImpulseTangential</computeroutput>: The impulse of the tangential contact force during an entire collision.<linebreak/>
 <computeroutput>csImpulseX</computeroutput>: The impulse of the x-component of the contact force.<linebreak/>
 <computeroutput>csImpulseY</computeroutput>: The impulse of the y-component of the contact force.<linebreak/>
 <computeroutput>csImpulseZ</computeroutput>: The impulse of the z-component of the contact force.<linebreak/>
 <computeroutput>csSlindingDistance</computeroutput>: The sliding distance during an entire collision.<linebreak/>
</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>An enum key indicating if the collision data will be recorded at particle-to-particle contacts, particle-to-geometry-triangle contacts or both. The valid keys are:<linebreak/>
 <computeroutput>rsParticleParticle</computeroutput> Record data only at particle-to-particle contacts.<linebreak/>
 <computeroutput>rsParticleTriangle</computeroutput> Record data only at particle-to-geometry-triangle contacts.<linebreak/>
 <computeroutput>rsBoth</computeroutput> Record data at both particle-to-particle and particle-to-geometry-triangle contacts. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_contact_data_recorder_api.h" line="96" column="10" bodyfile="source/c++/rocky20/api/rocky_contact_data_recorder_api.cpp" bodystart="10" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyContactDataRecorder_1a5ebed1613189e54bf4c202b5ec9553b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyContactDataRecorder::get_contact_scalar_index</definition>
        <argsstring>(ContactScalar scalar, RecordingScope scope)</argsstring>
        <name>get_contact_scalar_index</name>
        <qualifiedname>IRockyContactDataRecorder::get_contact_scalar_index</qualifiedname>
        <param>
          <type>ContactScalar</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>RecordingScope</type>
          <declname>scope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index that identifies a specific contact scalar where collision data will be stored. This index will be available only after the setup phase has concluded.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>See description on <computeroutput>enable_contact_scalar</computeroutput></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>An enum key indicating the index of which contact type will be returned. The valid keys are:<linebreak/>
 <computeroutput>rsParticleParticle</computeroutput> Return the index of a particle contact scalar.<linebreak/>
 <computeroutput>rsParticleTriangle</computeroutput> Return the index of a triangle contact scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_contact_data_recorder_api.h" line="109" column="9" bodyfile="source/c++/rocky20/api/rocky_contact_data_recorder_api.cpp" bodystart="36" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="structIRockyContactDataRecorder" kindref="compound">IRockyContactDataRecorder</ref></computeroutput> is an interface to the internal entity that records relevant collision data during the contact calculations. The data is stored in contact scalars in order to make it available to collision statistics modules for later processing. The methods in <computeroutput><ref refid="structIRockyContactDataRecorder" kindref="compound">IRockyContactDataRecorder</ref></computeroutput> allows a custom module to enable the physical magnitudes that must be recorded and to retrieve the indices of the contact scalars in which they will be stored. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_contact_data_recorder_api.h" line="18" column="1" bodyfile="source/c++/rocky20/api/rocky_contact_data_recorder_api.h" bodystart="19" bodyend="111"/>
    <listofallmembers>
      <member refid="structIRockyContactDataRecorder_1a36e9b7b9de7b99a0e4c6ca703fc7fb5d" prot="public" virt="non-virtual"><scope>IRockyContactDataRecorder</scope><name>enable_contact_scalar</name></member>
      <member refid="structIRockyContactDataRecorder_1a5ebed1613189e54bf4c202b5ec9553b8" prot="public" virt="non-virtual"><scope>IRockyContactDataRecorder</scope><name>get_contact_scalar_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
