<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyFluidScalarsModel" kind="struct" language="C++" prot="public">
    <compoundname>IRockyFluidScalarsModel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">ScalarsModel&lt; rocky20::FluidScalarsController &gt;</basecompoundref>
    <includes refid="rocky__fluid__scalars_8hpp" local="no">rocky_fluid_scalars.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4" prot="public" static="no" strong="no">
        <type></type>
        <name>SpeciesVariableType</name>
        <qualifiedname>IRockyFluidScalarsModel::SpeciesVariableType</qualifiedname>
        <enumvalue id="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a44a1737f86fd00acf12d92df0013d543" prot="public">
          <name>MoleFraction</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4afe8ce5347f023f3151d502f2941eebd3" prot="public">
          <name>MassDiffusivity</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a320e4c7d7e00d2d08a58569ef770bc64" prot="public">
          <name>MolecularWeight</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a5e73301a4198a91d715a1b5cc230a19a" prot="public">
          <name>MassSource</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Enumerate with the types of species variables</title><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="27" column="5" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.hpp" bodystart="28" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a6f1e21645261447c930050eff3ecb35b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyFluidScalarsModel::enable_storage_cell_volume</definition>
        <argsstring>()</argsstring>
        <name>enable_storage_cell_volume</name>
        <qualifiedname>IRockyFluidScalarsModel::enable_storage_cell_volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method enables the fluid cell volume scalar.</title><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="22" column="10" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.cpp" bodystart="23" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a427a7869774490548c1bf586eb982efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyFluidScalarsModel::find_species_scalar</definition>
        <argsstring>(const SpeciesVariableType type, const std::string species_name=&quot;&quot;, const std::string phase_name=&quot;&quot;)</argsstring>
        <name>find_species_scalar</name>
        <qualifiedname>IRockyFluidScalarsModel::find_species_scalar</qualifiedname>
        <param>
          <type>const <ref refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4" kindref="member">SpeciesVariableType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>species_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>phase_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method searches for a species scalar variable already created by the CFD module,</title><para>in order to allow access to its values, or store new values on it, during the execution of the simulation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the species variable according to the enum SpeciesVariableType </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>species_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The species name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phase_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The phase name</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index that uniquely identifies the wanted scalar if it was actually found. It returns -1 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="47" column="9" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.cpp" bodystart="32" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a42b5926c5293c2e9b6e1ae0bf6f3db2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string IRockyFluidScalarsModel::get_scalar_name</definition>
        <argsstring>(int index)</argsstring>
        <name>get_scalar_name</name>
        <qualifiedname>IRockyFluidScalarsModel::get_scalar_name</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method returns the scalar name if it exists.</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the scalar</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scalar name if the index is valid. Throws an error otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="56" column="17" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.cpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a702ee4844ebadeb36f72564dd8b6a732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string IRockyFluidScalarsModel::get_scalar_unit</definition>
        <argsstring>(int index)</argsstring>
        <name>get_scalar_unit</name>
        <qualifiedname>IRockyFluidScalarsModel::get_scalar_unit</qualifiedname>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method returns the scalar unit if it exists.</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the scalar</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scalar unit if the index is valid. Throws an error otherwise.. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="65" column="16" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.cpp" bodystart="65" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a9b9a2807854efdeaea33d558210c3901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyFluidScalarsModel::find</definition>
        <argsstring>(const char *name)</argsstring>
        <name>find</name>
        <qualifiedname>IRockyFluidScalarsModel::find</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method searches for a scalar variable already created by other modules,</title><para>in order to allow access to its values, or store new values on it, during the execution of the simulation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name given to the scalar at the moment of its creation.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index that uniquely identifies the wanted scalar if it was actually found. It returns -1 otherwise.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="78" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a9e0b69da64fd09543ff1b9a43c30e6b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyFluidScalarsModel::add</definition>
        <argsstring>(const char *name, const char *unit, bool output=true)</argsstring>
        <name>add</name>
        <qualifiedname>IRockyFluidScalarsModel::add</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>unit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>output</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method creates a new scalar variable of type <computeroutput>double</computeroutput></title><para>for storing custom values during a simulation, preserving them between time iterations.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name given to the scalar variable. The purpose of this name is twofold. First, it enables to find this scalar variable from other module, in order to share their values. Second, if the scalar variable can be displayed in a 3D window as a property, this name will identify it in the Rocky UI.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para>A string specifying the unit in S.I. associated to the scalar variable.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Enables/disables the storage in disk at output times, for the visualization and post-processing of the scalar values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index that will uniquely identify the scalar variable during the execution of the simulation.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="81" column="9" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1a91892f2da14aaaf2473361223db628c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyFluidScalarsModel::reset</definition>
        <argsstring>(int scalar_index)</argsstring>
        <name>reset</name>
        <qualifiedname>IRockyFluidScalarsModel::reset</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method resets to zero all values stored in a scalar variable.</title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index attributed to the scalar variable at the moment of its creation.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalarsModel_1aceb74d48527a53376833f9336f0073cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyFluidScalarsModel::set_dimension</definition>
        <argsstring>(int scalar_index, double dimension_factor)</argsstring>
        <name>set_dimension</name>
        <qualifiedname>IRockyFluidScalarsModel::set_dimension</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dimension_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>The purpose of this method is to associate a dimensional factor</title><para>to a scalar variable. This factor will be used to nondimensionalize their values. For instance, if the scalar represents a force, a force dimensional factor must be associated through this method. Dimensional factors for the fundamental magnitudes are provided by functions of a <computeroutput><ref refid="structIRockyModel" kindref="compound">IRockyModel</ref></computeroutput> object.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index attributed to the scalar variable at the moment of its creation.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dimension_factor</parametername>
</parameternamelist>
<parameterdescription>
<para>The appropriate dimensional factor for the scalar variable.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="87" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An <computeroutput><ref refid="structIRockyFluidScalarsModel" kindref="compound">IRockyFluidScalarsModel</ref></computeroutput> allows users to add new fluid scalars, or find fluid scalars created in other modules, all during the setup phase of a module. Fluid scalars are special variables attached to CFD cell elements that store per-cell values preserved between simulation time iterations. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="17" column="1" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.hpp" bodystart="18" bodyend="90"/>
    <listofallmembers>
      <member refid="structIRockyFluidScalarsModel_1a9e0b69da64fd09543ff1b9a43c30e6b3" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>add</name></member>
      <member refid="structIRockyFluidScalarsModel_1a6f1e21645261447c930050eff3ecb35b" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>enable_storage_cell_volume</name></member>
      <member refid="structIRockyFluidScalarsModel_1a9b9a2807854efdeaea33d558210c3901" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>find</name></member>
      <member refid="structIRockyFluidScalarsModel_1a427a7869774490548c1bf586eb982efd" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>find_species_scalar</name></member>
      <member refid="structIRockyFluidScalarsModel_1a42b5926c5293c2e9b6e1ae0bf6f3db2c" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>get_scalar_name</name></member>
      <member refid="structIRockyFluidScalarsModel_1a702ee4844ebadeb36f72564dd8b6a732" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>get_scalar_unit</name></member>
      <member refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4afe8ce5347f023f3151d502f2941eebd3" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>MassDiffusivity</name></member>
      <member refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a5e73301a4198a91d715a1b5cc230a19a" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>MassSource</name></member>
      <member refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a320e4c7d7e00d2d08a58569ef770bc64" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>MolecularWeight</name></member>
      <member refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4a44a1737f86fd00acf12d92df0013d543" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>MoleFraction</name></member>
      <member refid="structIRockyFluidScalarsModel_1a91892f2da14aaaf2473361223db628c4" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>reset</name></member>
      <member refid="structIRockyFluidScalarsModel_1aceb74d48527a53376833f9336f0073cd" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>set_dimension</name></member>
      <member refid="structIRockyFluidScalarsModel_1a1465371482cae63842154f22ab4ebbb4" prot="public" virt="non-virtual"><scope>IRockyFluidScalarsModel</scope><name>SpeciesVariableType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
