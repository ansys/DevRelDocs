<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyJointOutputData" kind="struct" language="C++" prot="public">
    <compoundname>IRockyJointOutputData</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyJointOutputData_1a73c6b5f900aa5916df2d2e10ba44cca3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyJointOutputData::set_force</definition>
        <argsstring>(const double3 &amp;value)</argsstring>
        <name>set_force</name>
        <qualifiedname>IRockyJointOutputData::set_force</qualifiedname>
        <param>
          <type>const double3 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be used to set the value of the joint force calculated by the module. Rocky will sum subsequently this force to other forces acting on the linked elements, considering the proper signs, in order to solve the motion equations of those elements. The use of this method by a module implementing a joint model is mandatory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>force</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector force in Cartesian coordinates, just calculated by the module. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_joint_api.hpp" line="779" column="26" bodyfile="source/c++/rocky20/api/rocky_joint_api.hpp" bodystart="815" bodyend="818"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyJointOutputData_1a4aa94a78c5ac86863e806a3948ee5a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyJointOutputData::set_home_moment</definition>
        <argsstring>(const double3 &amp;value)</argsstring>
        <name>set_home_moment</name>
        <qualifiedname>IRockyJointOutputData::set_home_moment</qualifiedname>
        <param>
          <type>const double3 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>This method must be used to set the value of the joint</title><para>moment acting on the home element. Rocky will sum subsequently this moment to other moments acting on that element, in order to solve the motion equations. The use of this method by a module implementing a joint model is mandatory.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moment</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector moment acting on the home element, in Cartesian coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_joint_api.hpp" line="792" column="26" bodyfile="source/c++/rocky20/api/rocky_joint_api.hpp" bodystart="820" bodyend="823"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyJointOutputData_1a98238da308b6ce50bfa243a63a9842ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyJointOutputData::set_near_moment</definition>
        <argsstring>(const double3 &amp;value)</argsstring>
        <name>set_near_moment</name>
        <qualifiedname>IRockyJointOutputData::set_near_moment</qualifiedname>
        <param>
          <type>const double3 &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be used to set the value of the joint moment acting on the near element. Rocky will sum subsequently this moment to other moments acting on that element, in order to solve the motion equations. The use of this method by a module implementing a joint model is mandatory.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>moment</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector moment acting on the near element, in Cartesian coordinates. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_joint_api.hpp" line="805" column="26" bodyfile="source/c++/rocky20/api/rocky_joint_api.hpp" bodystart="825" bodyend="828"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_joint_api.hpp" line="764" column="1" bodyfile="source/c++/rocky20/api/rocky_joint_api.hpp" bodystart="765" bodyend="813"/>
    <listofallmembers>
      <member refid="structIRockyJointOutputData_1a73c6b5f900aa5916df2d2e10ba44cca3" prot="public" virt="non-virtual"><scope>IRockyJointOutputData</scope><name>set_force</name></member>
      <member refid="structIRockyJointOutputData_1a4aa94a78c5ac86863e806a3948ee5a20" prot="public" virt="non-virtual"><scope>IRockyJointOutputData</scope><name>set_home_moment</name></member>
      <member refid="structIRockyJointOutputData_1a98238da308b6ce50bfa243a63a9842ae" prot="public" virt="non-virtual"><scope>IRockyJointOutputData</scope><name>set_near_moment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
