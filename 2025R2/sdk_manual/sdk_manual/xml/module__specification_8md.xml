<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="module__specification_8md" kind="file" language="Markdown">
    <compoundname>module_specification.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">##<sp/>Module<sp/>specification<sp/>{#module_specification}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>way<sp/>that<sp/>a<sp/>custom<sp/>[module](#module)<sp/>must<sp/>interact<sp/>with<sp/>the</highlight></codeline>
<codeline><highlight class="normal">Rocky<sp/>UI<sp/>is<sp/>specified<sp/>by<sp/>means<sp/>of<sp/>a<sp/>Python<sp/>file.<sp/>From<sp/>this<sp/>file,<sp/>Rocky</highlight></codeline>
<codeline><highlight class="normal">extracts<sp/>two<sp/>primary<sp/>kinds<sp/>of<sp/>information:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>The<sp/>definition<sp/>of<sp/>the<sp/>custom<sp/>parameters<sp/>that<sp/>must<sp/>be<sp/>displayed<sp/>at</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>specific<sp/>places<sp/>within<sp/>the<sp/>Rocky<sp/>UI.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Whether<sp/>or<sp/>not<sp/>the<sp/>module<sp/>implements<sp/>a<sp/>custom<sp/>model<sp/>that<sp/>will</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>override<sp/>a<sp/>built-in<sp/>model<sp/>or<sp/>will<sp/>be<sp/>added<sp/>to<sp/>the<sp/>existing<sp/>built-in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>models<sp/>in<sp/>Rocky.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>way<sp/>in<sp/>which<sp/>these<sp/>specifications<sp/>must<sp/>be<sp/>coded<sp/>is<sp/>described</highlight></codeline>
<codeline><highlight class="normal">throughout<sp/>this<sp/>chapter.<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>users<sp/>have<sp/>a<sp/>basic<sp/>knowledge</highlight></codeline>
<codeline><highlight class="normal">of<sp/>the<sp/>Python<sp/>language.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Structure<sp/>of<sp/>the<sp/>specification<sp/>file</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>first<sp/>operation<sp/>that<sp/>must<sp/>be<sp/>made<sp/>in<sp/>the<sp/>file<sp/>is<sp/>the<sp/>importation<sp/>of</highlight></codeline>
<codeline><highlight class="normal">some<sp/>utilities,<sp/>most<sp/>of<sp/>them<sp/>defined<sp/>by<sp/>the<sp/>Rocky<sp/>Solver<sp/>SDK<sp/>itself.<sp/>The</highlight></codeline>
<codeline><highlight class="normal">following<sp/>block<sp/>includes<sp/>the<sp/>most<sp/>commonly<sp/>needed<sp/>utilities:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">from<sp/>pathlib<sp/>import<sp/>Path</highlight></codeline>
<codeline><highlight class="normal">from<sp/>rocky20.addins.addin_models<sp/>import<sp/>data_model,<sp/>container_model</highlight></codeline>
<codeline><highlight class="normal">from<sp/>rocky20.addins.addin_specs<sp/>import<sp/>RockyAddinSpecs</highlight></codeline>
<codeline><highlight class="normal">from<sp/>rocky20.addins.addin_types<sp/>import<sp/>(Boolean,<sp/>Quantity,<sp/>String,<sp/>List,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ScalarProperties)</highlight></codeline>
<codeline><highlight class="normal">from<sp/>yapsy.IPlugin<sp/>import<sp/>IPlugin</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>most<sp/>important<sp/>class<sp/>that<sp/>must<sp/>be<sp/>defined<sp/>in<sp/>the<sp/>file<sp/>is<sp/>the<sp/>one</highlight></codeline>
<codeline><highlight class="normal">derived<sp/>from<sp/>the<sp/>`IPlugin`<sp/>class<sp/>because<sp/>it<sp/>implements<sp/>the<sp/>method<sp/>`get_addin_specs`.<sp/>It<sp/>is</highlight></codeline>
<codeline><highlight class="normal">through<sp/>the<sp/>`get_addin_specs`<sp/>method<sp/>that<sp/>Rocky<sp/>will<sp/>receive<sp/>in<sp/>runtime<sp/>all<sp/>the<sp/>specifications<sp/>for<sp/>the<sp/>module.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModule(IPlugin):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>get_addin_specs(self):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>CustomModuleSpecs</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>example<sp/>above,<sp/>`CustomModuleSpecs`<sp/>is<sp/>a<sp/>class<sp/>that<sp/>will</highlight></codeline>
<codeline><highlight class="normal">contain<sp/>all<sp/>the<sp/>specifications<sp/>for<sp/>the<sp/>module.<sp/>Its<sp/>implementation<sp/>can</highlight></codeline>
<codeline><highlight class="normal">follow<sp/>this<sp/>general<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModuleSpecs(RockyAddinSpecs):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>NAME</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>CustomGeneralParameters</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>instantaneous_breakage_model<sp/>=<sp/>CustomModel</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>material_properties<sp/>=<sp/>CustomMaterialProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>material_interaction_properties<sp/>=<sp/>CustomInteractionProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>geometry_properties<sp/>=<sp/>CustomGeometryProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>particle_group_properties<sp/>=<sp/>CustomParticleGroupProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>particle_input_properties<sp/>=<sp/>CustomParticleInputProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>CreateAddin(cls):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cls.CreateDynamicAddin(Path(__file__).parent,<sp/>&apos;custom_module_name&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>only<sp/>items<sp/>whose<sp/>inclusion<sp/>is<sp/>mandatory<sp/>in<sp/>this<sp/>code<sp/>block<sp/>are<sp/>the</highlight></codeline>
<codeline><highlight class="normal">definition<sp/>of<sp/>the<sp/>variables<sp/>`name`<sp/>and<sp/>`model`,<sp/>besides<sp/>the<sp/>definition<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">method<sp/>`CreateAddin`.<sp/>The<sp/>meaning<sp/>of<sp/>each<sp/>one<sp/>of<sp/>the<sp/>members<sp/>in<sp/>this<sp/>class<sp/>is</highlight></codeline>
<codeline><highlight class="normal">described<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`name`<sp/>is<sp/>the<sp/>string<sp/>label<sp/>that<sp/>will<sp/>identify<sp/>the<sp/>module<sp/>in<sp/>the<sp/>Rocky</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>UI.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`model`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>for<sp/>the<sp/>module&apos;s<sp/>general<sp/>parameters.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>These<sp/>parameters<sp/>are<sp/>not<sp/>associated<sp/>to<sp/>specific<sp/>entities<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>UI.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`instantaneous_breakage_model`<sp/>is<sp/>an<sp/>example<sp/>specification<sp/>of<sp/>a<sp/>new<sp/>custom<sp/>model<sp/>for<sp/>an<sp/>existing</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>category<sp/>of<sp/>models<sp/>in<sp/>Rocky.<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>module<sp/>is<sp/>indicating</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>that<sp/>it<sp/>implements<sp/>a<sp/>custom<sp/>model<sp/>for<sp/>[instantaneous</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>breakage](#instantaneous-breakage).<sp/>All<sp/>customizable<sp/>models<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>current<sp/>version<sp/>of<sp/>Rocky<sp/>are<sp/>listed<sp/>in<sp/>Table<sp/>2.1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`material_properties`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>of<sp/>the<sp/>module&apos;s<sp/>parameters<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>must<sp/>associate<sp/>to<sp/>[materials](#material).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`material_interaction_properties`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>of<sp/>the<sp/>module&apos;s<sp/>parameters<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>must<sp/>associate<sp/>to<sp/>[materials</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>interactions](#material-interaction).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`geometry_properties`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>of<sp/>the<sp/>module&apos;s<sp/>parameters<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>must<sp/>associate<sp/>to<sp/>[boundaries](#boundary)<sp/>(geometries).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`particle_group_properties`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>of<sp/>the<sp/>module&apos;s<sp/>parameters<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>must<sp/>associate<sp/>to<sp/>[particle<sp/>groups](#particle-group).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`particle_input_properties`<sp/>is<sp/>the<sp/>set<sp/>of<sp/>specifications<sp/>of<sp/>particle<sp/>[scalar](#scalar)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>variables<sp/>that<sp/>need<sp/>an<sp/>initial<sp/>value<sp/>when<sp/>particles<sp/>enter<sp/>into<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>solution<sp/>domain.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`CreateAddin`<sp/>is<sp/>a<sp/>method<sp/>that<sp/>handles<sp/>the<sp/>loading<sp/>of<sp/>the<sp/>compiled<sp/>library<sp/>file</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>the<sp/>module<sp/>when<sp/>the<sp/>simulation<sp/>starts.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>the<sp/>specification<sp/>of<sp/>a<sp/>module<sp/>to<sp/>be<sp/>complete,<sp/>each<sp/>one<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">variables<sp/>in<sp/>the<sp/>block<sp/>above<sp/>must<sp/>be<sp/>properly<sp/>defined.<sp/>The<sp/>simplest<sp/>case</highlight></codeline>
<codeline><highlight class="normal">is<sp/>`NAME`,<sp/>which<sp/>is<sp/>a<sp/>simple<sp/>string<sp/>label,<sp/>for</highlight></codeline>
<codeline><highlight class="normal">instance:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">NAME<sp/>=<sp/>&apos;Custom<sp/>Module&apos;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>other<sp/>variables<sp/>are<sp/>in<sp/>fact<sp/>classes<sp/>that<sp/>contain<sp/>the<sp/>specification</highlight></codeline>
<codeline><highlight class="normal">of<sp/>each<sp/>individual<sp/>parameter<sp/>needed<sp/>by<sp/>the<sp/>module.<sp/>Examples<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">implementation<sp/>of<sp/>such<sp/>classes<sp/>are<sp/>given<sp/>in<sp/>the<sp/>following<sp/>sections.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>general<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Module<sp/>general<sp/>properties<sp/>are<sp/>not<sp/>associated<sp/>to<sp/>specific<sp/>entities<sp/>in<sp/>a</highlight></codeline>
<codeline><highlight class="normal">Rocky<sp/>UI<sp/>as<sp/>are<sp/>the<sp/>other<sp/>types<sp/>of<sp/>properties<sp/>described<sp/>in<sp/>the<sp/>following</highlight></codeline>
<codeline><highlight class="normal">sections.<sp/>Therefore,<sp/>these<sp/>properties<sp/>are<sp/>displayed<sp/>in<sp/>the<sp/>**Data</highlight></codeline>
<codeline><highlight class="normal">Editors**<sp/>panel</highlight></codeline>
<codeline><highlight class="normal">associated<sp/>to<sp/>the<sp/>module<sp/>itself,<sp/>when<sp/>it<sp/>is<sp/>selected<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">**Data**<sp/>panel,<sp/>as</highlight></codeline>
<codeline><highlight class="normal">shown<sp/>in<sp/>the<sp/>example<sp/>of<sp/>Figure<sp/>2.1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/model_param_1.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.1:<sp/>General<sp/>module<sp/>parameters<sp/>in<sp/>the<sp/>Data<sp/>Editors<sp/>panel<sp/>of<sp/>the<sp/>Rocky<sp/>UI*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">An<sp/>example<sp/>of<sp/>the<sp/>specification<sp/>of<sp/>general<sp/>parameters<sp/>for<sp/>a<sp/>fictitious</highlight></codeline>
<codeline><highlight class="normal">module<sp/>is<sp/>shown<sp/>below:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@data_model(icon=None,<sp/>caption=NAME)</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomGeneralParameters:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_boolean<sp/>=<sp/>Boolean(value=True,<sp/>caption=&apos;Custom<sp/>Boolean<sp/>Parameter&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_quantity<sp/>=<sp/>Quantity(value=0.0,<sp/>unit=&apos;m&apos;,<sp/>caption=&apos;Custom<sp/>Quantity&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_string<sp/>=<sp/>String(value=&apos;string&apos;,<sp/>caption=&apos;Custom<sp/>String&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>class<sp/>defines<sp/>three<sp/>parameters,<sp/>each<sp/>one<sp/>of<sp/>a<sp/>different<sp/>type.<sp/>The</highlight></codeline>
<codeline><highlight class="normal">first<sp/>one<sp/>is<sp/>a<sp/>boolean<sp/>parameter,<sp/>the<sp/>second<sp/>one<sp/>is<sp/>a<sp/>numeric<sp/>parameter,</highlight></codeline>
<codeline><highlight class="normal">and<sp/>the<sp/>third<sp/>one<sp/>is<sp/>a<sp/>string.<sp/>When<sp/>the<sp/>module<sp/>is<sp/>activated<sp/>in<sp/>the<sp/>Rocky</highlight></codeline>
<codeline><highlight class="normal">UI,<sp/>these<sp/>parameters<sp/>are<sp/>displayed<sp/>in<sp/>the<sp/>**Data**<sp/>panel,<sp/>as</highlight></codeline>
<codeline><highlight class="normal">shown<sp/>in<sp/>Figure<sp/>2.1.<sp/>When<sp/>setting<sp/>up<sp/>a<sp/>project,<sp/>users<sp/>can<sp/>define</highlight></codeline>
<codeline><highlight class="normal">proper<sp/>values<sp/>for<sp/>these<sp/>parameters,<sp/>and<sp/>Rocky<sp/>will<sp/>deliver<sp/>them<sp/>to<sp/>the</highlight></codeline>
<codeline><highlight class="normal">module<sp/>when<sp/>the<sp/>simulation<sp/>starts.<sp/>In<sp/>the<sp/>specification<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">parameters,<sp/>it<sp/>must<sp/>be<sp/>indicated<sp/>the<sp/>default<sp/>value<sp/>(the<sp/>first<sp/>argument)</highlight></codeline>
<codeline><highlight class="normal">and<sp/>the<sp/>caption<sp/>that<sp/>must<sp/>displayed<sp/>in<sp/>the<sp/>UI<sp/>(the<sp/>last<sp/>argument).</highlight></codeline>
<codeline><highlight class="normal">Additionally,<sp/>the<sp/>corresponding<sp/>unit<sp/>must<sp/>be<sp/>specified<sp/>for<sp/>numeric</highlight></codeline>
<codeline><highlight class="normal">parameters<sp/>(the<sp/>second<sp/>argument).<sp/>Units<sp/>must<sp/>be<sp/>specified<sp/>as<sp/>strings</highlight></codeline>
<codeline><highlight class="normal">representing<sp/>valid<sp/>units.<sp/>Although<sp/>Rocky<sp/>supports<sp/>different<sp/>unit</highlight></codeline>
<codeline><highlight class="normal">systems,<sp/>it<sp/>is<sp/>advisable<sp/>that<sp/>custom<sp/>modules<sp/>define<sp/>parameters<sp/>using</highlight></codeline>
<codeline><highlight class="normal">only<sp/>units<sp/>from<sp/>the<sp/>SI<sp/>system.<sp/>Otherwise,<sp/>all<sp/>necessary<sp/>unit<sp/>conversions</highlight></codeline>
<codeline><highlight class="normal">will<sp/>have<sp/>to<sp/>be<sp/>handled<sp/>by<sp/>the<sp/>custom<sp/>C++<sp/>code<sp/>that<sp/>implements<sp/>the</highlight></codeline>
<codeline><highlight class="normal">module&apos;s<sp/>functionality.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Another<sp/>possibility<sp/>of<sp/>specifying<sp/>parameters<sp/>is<sp/>through<sp/>lists,<sp/>which<sp/>are</highlight></codeline>
<codeline><highlight class="normal">useful<sp/>when<sp/>a<sp/>module<sp/>must<sp/>allow<sp/>users<sp/>to<sp/>create<sp/>a<sp/>number<sp/>of<sp/>similar</highlight></codeline>
<codeline><highlight class="normal">parameters.<sp/>These<sp/>lists<sp/>are<sp/>displayed<sp/>in<sp/>the<sp/>UI<sp/>as<sp/>tables,<sp/>as<sp/>shown<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>example<sp/>of<sp/>Figure<sp/>2.2.<sp/>Rows<sp/>in<sp/>these<sp/>tables<sp/>can<sp/>be<sp/>added<sp/>or<sp/>removed</highlight></codeline>
<codeline><highlight class="normal">interactively<sp/>using<sp/>the<sp/>tools<sp/>provided<sp/>by<sp/>the<sp/>UI.<sp/>In<sp/>order<sp/>to<sp/>specify<sp/>a</highlight></codeline>
<codeline><highlight class="normal">list<sp/>as<sp/>the<sp/>one<sp/>in<sp/>the<sp/>example,<sp/>the<sp/>following<sp/>code<sp/>must<sp/>be<sp/>included:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@data_model(icon=None,<sp/>caption=NAME)</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomGeneralParameters:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_list<sp/>=<sp/>List(item_class=CustomListSpecs,<sp/>caption=&apos;Custom<sp/>List&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/model_param_2.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.2:<sp/>General<sp/>list<sp/>displayed<sp/>as<sp/>a<sp/>table<sp/>in<sp/>the<sp/>Rocky<sp/>UI.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Here,<sp/>`CustomListSpecs`<sp/>is<sp/>a<sp/>class<sp/>that<sp/>includes<sp/>the</highlight></codeline>
<codeline><highlight class="normal">specification<sp/>of<sp/>the<sp/>parameters<sp/>in<sp/>a<sp/>row<sp/>of<sp/>the<sp/>table.<sp/>It<sp/>is<sp/>possible<sp/>to</highlight></codeline>
<codeline><highlight class="normal">specify<sp/>any<sp/>number<sp/>of<sp/>parameters<sp/>per<sp/>row,<sp/>belonging<sp/>to<sp/>any<sp/>of<sp/>the<sp/>three</highlight></codeline>
<codeline><highlight class="normal">simple<sp/>types<sp/>mentioned<sp/>above:<sp/>numeric,<sp/>boolean<sp/>or<sp/>string.<sp/>The<sp/>parameters</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>Figure<sp/>2.2<sp/>example<sp/>are<sp/>specified<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@data_model(caption=&apos;ListItem&apos;)</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomListSpecs:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_list__boolean<sp/>=<sp/>Boolean(value=True,<sp/>caption=&apos;Boolean&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_list_quantity_1<sp/>=<sp/>Quantity(value=0.1,<sp/>unit=&apos;s&apos;,<sp/>caption=&apos;Quantity<sp/>1&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_list_quantity_2<sp/>=<sp/>Quantity(value=0.2,<sp/>unit=&apos;m&apos;,<sp/>caption=&apos;Quantity<sp/>2&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>material<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>module<sp/>can<sp/>add<sp/>custom<sp/>properties<sp/>to<sp/>[materials](#material)<sp/>apart</highlight></codeline>
<codeline><highlight class="normal">from<sp/>the<sp/>ones<sp/>defined<sp/>by<sp/>default<sp/>in<sp/>Rocky.<sp/>The<sp/>specification<sp/>of<sp/>these</highlight></codeline>
<codeline><highlight class="normal">new<sp/>properties<sp/>must<sp/>follow<sp/>the<sp/>pattern<sp/>described<sp/>in<sp/>the<sp/>previous<sp/>section</highlight></codeline>
<codeline><highlight class="normal">for<sp/>the<sp/>general<sp/>module<sp/>parameters.<sp/>The<sp/>difference<sp/>is<sp/>that<sp/>the<sp/>custom</highlight></codeline>
<codeline><highlight class="normal">material<sp/>properties<sp/>will<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>**Data<sp/>Editors**<sp/>panel</highlight></codeline>
<codeline><highlight class="normal">associated<sp/>to<sp/>each<sp/>one<sp/>of<sp/>the<sp/>materials<sp/>defined<sp/>in<sp/>a<sp/>project,<sp/>as<sp/>shown</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>example<sp/>of<sp/>Figure<sp/>2.3.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/mat_prop.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.3:<sp/>Module<sp/>material<sp/>properties<sp/>displayed<sp/>in<sp/>the<sp/>Rocky<sp/>UI*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>specification<sp/>of<sp/>the<sp/>parameters<sp/>shown<sp/>in<sp/>the<sp/>example<sp/>is<sp/>defined<sp/>as</highlight></codeline>
<codeline><highlight class="normal">follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomMaterialProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mat_prop_1<sp/>=<sp/>Quantity(value=0.1,<sp/>unit=&apos;m&apos;,<sp/>caption=&apos;Custom<sp/>Material<sp/>Property<sp/>1&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mat_prop_2<sp/>=<sp/>Quantity(value=300.0,<sp/>unit=&apos;K&apos;,<sp/>caption=&apos;Custom<sp/>Material<sp/>Property<sp/>2&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>materials<sp/>interactions<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Rocky<sp/>can<sp/>associate<sp/>module<sp/>parameters<sp/>to<sp/>[materials</highlight></codeline>
<codeline><highlight class="normal">interactions](#material-interaction)<sp/>so<sp/>that<sp/>each<sp/>pair<sp/>of</highlight></codeline>
<codeline><highlight class="normal">materials<sp/>can<sp/>have<sp/>different<sp/>values.<sp/>The<sp/>specification<sp/>of<sp/>these</highlight></codeline>
<codeline><highlight class="normal">parameters<sp/>is<sp/>similar<sp/>to<sp/>the<sp/>one<sp/>described<sp/>in<sp/>section<sp/>for</highlight></codeline>
<codeline><highlight class="normal">the<sp/>general<sp/>parameters.<sp/>In<sp/>principle,<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>specify</highlight></codeline>
<codeline><highlight class="normal">parameters<sp/>of<sp/>any<sp/>of<sp/>the<sp/>types<sp/>mentioned<sp/>there.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>materials<sp/>interactions<sp/>parameters<sp/>of<sp/>a<sp/>module<sp/>are<sp/>displayed<sp/>as<sp/>shown</highlight></codeline>
<codeline><highlight class="normal">in<sp/>Figure<sp/>2.4,</highlight></codeline>
<codeline><highlight class="normal">below<sp/>the<sp/>built-in<sp/>materials<sp/>interactions<sp/>parameters<sp/>in<sp/>the<sp/>**Data<sp/>Editors**<sp/>panel.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![<sp/>](images/mat_inter.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.4:<sp/>Module<sp/>materials<sp/>interaction<sp/>parameters<sp/>displayed<sp/>in<sp/>the<sp/>Rocky<sp/>UI.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>specification<sp/>of<sp/>the<sp/>parameters<sp/>shown<sp/>in<sp/>the<sp/>example<sp/>is<sp/>defined<sp/>as</highlight></codeline>
<codeline><highlight class="normal">follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomInteractionProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_mi_quantity_1<sp/>=<sp/>Quantity(value=0.0,<sp/>unit=&apos;Pa&apos;,<sp/>caption=&apos;Custom<sp/>Quantity<sp/>1&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_mi_quantity_2<sp/>=<sp/>Quantity(value=7.0,<sp/>unit=&apos;-&apos;,<sp/>caption=&apos;Custom<sp/>Quantity<sp/>2&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>geometry<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>Rocky<sp/>associates<sp/>module<sp/>parameters<sp/>to<sp/>each<sp/>one<sp/>of<sp/>the<sp/>individual</highlight></codeline>
<codeline><highlight class="normal">boundaries<sp/>in<sp/>a<sp/>project,<sp/>those<sp/>parameters<sp/>are<sp/>called<sp/>geometry</highlight></codeline>
<codeline><highlight class="normal">properties.<sp/>In<sp/>the<sp/>Rocky<sp/>UI,<sp/>they<sp/>are<sp/>displayed<sp/>in<sp/>the<sp/>**Data<sp/>Editors**<sp/>panel<sp/>as</highlight></codeline>
<codeline><highlight class="normal">shown<sp/>in<sp/>Figure<sp/>2.5,<sp/>when<sp/>an<sp/>individual<sp/>geometry<sp/>is<sp/>selected<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">**Data**<sp/>panel.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/geom_prop.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.5:<sp/>Module<sp/>geometry<sp/>properties<sp/>displayed<sp/>in<sp/>the<sp/>Rocky<sp/>UI.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Parameters<sp/>of<sp/>any<sp/>of<sp/>the<sp/>types<sp/>described<sp/>in<sp/>section<sp/>[Module<sp/>General<sp/>properties](#module-general-properties)<sp/>(numeric,<sp/>boolean,<sp/>string<sp/>or<sp/>list)<sp/>can<sp/>be<sp/>defined.<sp/>The<sp/>corresponding<sp/>specification<sp/>of<sp/>the<sp/>parameter<sp/>included<sp/>in<sp/>the<sp/>example<sp/>is<sp/>defined<sp/>as</highlight></codeline>
<codeline><highlight class="normal">follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomGeometryProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_property<sp/>=<sp/>Quantity(value=0.0,<sp/>unit=&apos;N&apos;,<sp/>caption=&apos;Custom<sp/>Geometry<sp/>Property&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>particle<sp/>group<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>this<sp/>type<sp/>of<sp/>property<sp/>is<sp/>defined<sp/>in<sp/>a<sp/>module,<sp/>different<sp/>values<sp/>can</highlight></codeline>
<codeline><highlight class="normal">be<sp/>associated<sp/>to<sp/>every<sp/>[particle<sp/>group](#particle-group)<sp/>in<sp/>a</highlight></codeline>
<codeline><highlight class="normal">project.<sp/>In<sp/>the<sp/>Rocky<sp/>UI,<sp/>when<sp/>a<sp/>specific<sp/>particle<sp/>group<sp/>is<sp/>selected<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>**Data**<sp/>panel,<sp/>a<sp/>new<sp/>sub-tab<sp/>**Modules**<sp/>must</highlight></codeline>
<codeline><highlight class="normal">appear<sp/>in<sp/>the<sp/>**Data<sp/>Editors**<sp/>panel,</highlight></codeline>
<codeline><highlight class="normal">including<sp/>the<sp/>custom<sp/>particle<sp/>group&apos;s<sp/>properties<sp/>defined<sp/>for<sp/>all<sp/>active</highlight></codeline>
<codeline><highlight class="normal">modules<sp/>in<sp/>the<sp/>project.<sp/>An<sp/>example<sp/>is<sp/>shown<sp/>in<sp/>Figure<sp/>2.6.<sp/>As<sp/>with</highlight></codeline>
<codeline><highlight class="normal">other<sp/>cases,<sp/>parameters<sp/>of<sp/>any<sp/>of<sp/>the<sp/>basic<sp/>types<sp/>can<sp/>be<sp/>defined</highlight></codeline>
<codeline><highlight class="normal">(numeric,<sp/>string,<sp/>boolean<sp/>or<sp/>list).<sp/>The<sp/>specification<sp/>of<sp/>the<sp/>parameter</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>example<sp/>is<sp/>defined<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomParticleGroupProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_pg_property<sp/>=<sp/>Quantity(value=0.0,<sp/>unit=&apos;K&apos;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caption=&apos;Custom<sp/>Particle<sp/>Group<sp/>Property&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/pg_prop.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.6:<sp/>Module<sp/>particle<sp/>group<sp/>properties<sp/>displayed<sp/>in<sp/>the<sp/>Rocky<sp/>UI*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>particle<sp/>input<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Rocky<sp/>supports<sp/>the<sp/>ability<sp/>to<sp/>associate<sp/>custom<sp/>values<sp/>to<sp/>every<sp/>particle</highlight></codeline>
<codeline><highlight class="normal">in<sp/>a<sp/>simulation.<sp/>In<sp/>Rocky,<sp/>these<sp/>values<sp/>are<sp/>associated<sp/>to<sp/>special</highlight></codeline>
<codeline><highlight class="normal">variables<sp/>called<sp/>particle<sp/>scalars.<sp/>They<sp/>can<sp/>be<sp/>used<sp/>to<sp/>store</highlight></codeline>
<codeline><highlight class="normal">particle-related<sp/>data<sp/>calculated<sp/>by<sp/>the<sp/>module<sp/>during<sp/>the<sp/>execution<sp/>of<sp/>a</highlight></codeline>
<codeline><highlight class="normal">simulation.<sp/>When<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>assign<sp/>a<sp/>specific<sp/>initial<sp/>value<sp/>to</highlight></codeline>
<codeline><highlight class="normal">those<sp/>particle<sp/>scalars<sp/>at<sp/>the<sp/>moment<sp/>particles<sp/>enter<sp/>the<sp/>simulation,<sp/>a</highlight></codeline>
<codeline><highlight class="normal">particle<sp/>input<sp/>property<sp/>can<sp/>be<sp/>defined.<sp/>In<sp/>this<sp/>way,<sp/>Rocky<sp/>will<sp/>include</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>**Data<sp/>Editors**<sp/>panel<sp/>corresponding<sp/>to<sp/>a</highlight></codeline>
<codeline><highlight class="normal">**Input**<sp/>an</highlight></codeline>
<codeline><highlight class="normal">additional<sp/>sub-tab<sp/>for<sp/>defining<sp/>module-specific<sp/>particle<sp/>input<sp/>data,<sp/>as</highlight></codeline>
<codeline><highlight class="normal">shown<sp/>in<sp/>Figure<sp/>2.7<sp/>for<sp/>a<sp/>**Continuous<sp/>Injection**.<sp/>An<sp/>identical</highlight></codeline>
<codeline><highlight class="normal">sub-tab<sp/>will<sp/>be<sp/>included<sp/>also<sp/>for<sp/>a<sp/>**Volume<sp/>Fill</highlight></codeline>
<codeline><highlight class="normal">Input**.<sp/>On<sp/>the<sp/>other<sp/>hand,<sp/>for<sp/>a<sp/>**Custom<sp/>Input**,<sp/>this<sp/>same</highlight></codeline>
<codeline><highlight class="normal">information<sp/>will<sp/>appear<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>corresponding<sp/>tab,<sp/>in<sp/>a</highlight></codeline>
<codeline><highlight class="normal">section<sp/>labeled<sp/>with<sp/>the<sp/>name<sp/>of<sp/>the<sp/>module.<sp/>The<sp/>values<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">parameters<sp/>defined<sp/>in<sp/>that<sp/>section<sp/>will<sp/>be<sp/>applied<sp/>to<sp/>all<sp/>particles<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>associated<sp/>particle<sp/>group,<sp/>since<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>associate</highlight></codeline>
<codeline><highlight class="normal">individual<sp/>values<sp/>per<sp/>particle<sp/>as<sp/>it<sp/>is<sp/>done<sp/>with<sp/>the<sp/>built-in<sp/>particle</highlight></codeline>
<codeline><highlight class="normal">properties.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/input_prop_sc.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.7:<sp/>Custom<sp/>scalar<sp/>displayed<sp/>in<sp/>the<sp/>Rocky<sp/>UI<sp/>with<sp/>the<sp/>initial<sp/>value<sp/>set<sp/>in<sp/>the<sp/>module’s<sp/>particle-input<sp/>properties<sp/>sub-tab.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>corresponding<sp/>specification<sp/>of<sp/>the<sp/>particle<sp/>input<sp/>property<sp/>for<sp/>the</highlight></codeline>
<codeline><highlight class="normal">example<sp/>shown<sp/>in<sp/>Figure<sp/>2.7<sp/>is<sp/>defined<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomParticleInputProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>custom_scalar<sp/>=<sp/>ScalarProperties(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value=1.0,<sp/>unit=&apos;kg&apos;,<sp/>caption=&apos;Custom<sp/>Scalar&apos;,<sp/>output=True,<sp/>input=True</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>specification<sp/>like<sp/>the<sp/>one<sp/>shown<sp/>above<sp/>defines<sp/>both<sp/>a<sp/>new<sp/>particle</highlight></codeline>
<codeline><highlight class="normal">scalar<sp/>variable<sp/>and<sp/>a<sp/>custom<sp/>particle<sp/>input<sp/>property.<sp/>As<sp/>shown<sp/>in<sp/>Figure<sp/>2.7,<sp/>in<sp/>this<sp/>way<sp/>users<sp/>will<sp/>be<sp/>able<sp/>to<sp/>enter<sp/>the</highlight></codeline>
<codeline><highlight class="normal">initial<sp/>value<sp/>of<sp/>the<sp/>new<sp/>particle<sp/>scalar<sp/>variable<sp/>through<sp/>the<sp/>Rocky<sp/>UI.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>last<sp/>argument<sp/>`input=True`<sp/>in<sp/>the<sp/>scalar<sp/>variable<sp/>specification<sp/>enables<sp/>that</highlight></codeline>
<codeline><highlight class="normal">option.<sp/>The<sp/>other<sp/>additional<sp/>argument,<sp/>`output=True`,<sp/>instructs<sp/>Rocky<sp/>that<sp/>the</highlight></codeline>
<codeline><highlight class="normal">values<sp/>of<sp/>the<sp/>new<sp/>particle<sp/>scalar<sp/>must<sp/>be<sp/>stored<sp/>in<sp/>disk<sp/>throughout<sp/>a</highlight></codeline>
<codeline><highlight class="normal">simulation,<sp/>and<sp/>be<sp/>able<sp/>to<sp/>be<sp/>displayed<sp/>in<sp/>a<sp/>3D<sp/>view<sp/>window<sp/>at<sp/>output</highlight></codeline>
<codeline><highlight class="normal">times,<sp/>as<sp/>shown<sp/>in<sp/>Figure<sp/>2.7.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Specification<sp/>of<sp/>custom<sp/>models</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">One<sp/>of<sp/>the<sp/>main<sp/>motivations<sp/>for<sp/>developing<sp/>custom<sp/>modules<sp/>is<sp/>to<sp/>add<sp/>new</highlight></codeline>
<codeline><highlight class="normal">models<sp/>and<sp/>capabilities<sp/>to<sp/>Rocky.<sp/>Currently,<sp/>most<sp/>of<sp/>the<sp/>categories<sp/>of</highlight></codeline>
<codeline><highlight class="normal">models<sp/>are<sp/>customizable<sp/>using<sp/>the<sp/>Rocky<sp/>Solver<sp/>SDK.<sp/>Table<sp/>2.1<sp/>summarizes<sp/>all<sp/>categories<sp/>of<sp/>models<sp/>that<sp/>can</highlight></codeline>
<codeline><highlight class="normal">be<sp/>implemented<sp/>in<sp/>the<sp/>current<sp/>version<sp/>of<sp/>Rocky<sp/>through<sp/>custom<sp/>modules.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>mentioned<sp/>in<sp/>section<sp/>[Structure<sp/>of<sp/>the<sp/>specification<sp/>file](#structure-of-the-specification-file),<sp/>the<sp/>module<sp/>specification<sp/>file<sp/>must<sp/>inform</highlight></codeline>
<codeline><highlight class="normal">Rocky<sp/>which<sp/>models<sp/>the<sp/>module<sp/>is<sp/>actually<sp/>implementing.<sp/>Based<sp/>on<sp/>this</highlight></codeline>
<codeline><highlight class="normal">specification,<sp/>Rocky<sp/>will<sp/>either<sp/>override<sp/>built-in<sp/>models<sp/>in<sp/>some</highlight></codeline>
<codeline><highlight class="normal">categories<sp/>or<sp/>add<sp/>the<sp/>implemented<sp/>custom<sp/>models<sp/>to<sp/>the<sp/>list<sp/>of<sp/>available</highlight></codeline>
<codeline><highlight class="normal">built-in<sp/>models<sp/>in<sp/>other<sp/>categories.<sp/>In<sp/>order<sp/>to<sp/>specify<sp/>that<sp/>a<sp/>module</highlight></codeline>
<codeline><highlight class="normal">will<sp/>implement<sp/>a<sp/>custom<sp/>model,<sp/>the<sp/>specification<sp/>class<sp/>must<sp/>include<sp/>an</highlight></codeline>
<codeline><highlight class="normal">attribute<sp/>member<sp/>with<sp/>a<sp/>predefined<sp/>name,<sp/>which<sp/>must<sp/>correspond<sp/>to<sp/>a</highlight></codeline>
<codeline><highlight class="normal">given<sp/>model<sp/>category.<sp/>The<sp/>second<sp/>column<sp/>of<sp/>Table<sp/>2.1<sp/>lists<sp/>all<sp/>attribute<sp/>names<sp/>recognized<sp/>by<sp/>Rocky</highlight></codeline>
<codeline><highlight class="normal">as<sp/>model<sp/>categories.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Model<sp/><sp/><sp/>category<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Class<sp/>attribute<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Behavior<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---------------------------------------------------------------------------------------------|-------------------------------------|-----------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Contact<sp/>force,<sp/>normal<sp/>component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>normal_force_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Contact<sp/>force,<sp/>tangential<sp/>component<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>tangential_force_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Impact<sp/>energy<sp/>for<sp/>instantaneous<sp/><sp/><sp/>breakage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>impact_energy_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Rolling<sp/>resistance<sp/>moments<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>rolling_resistance_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Adhesion<sp/>force<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>adhesion_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Joint<sp/>mechanics<sp/>in<sp/>flexible<sp/>particles<sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>joint_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Discrete<sp/>breakage<sp/>of<sp/>flexible<sp/><sp/><sp/>particles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>joint_breakage_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Instantaneous<sp/>breakage<sp/>of<sp/>rigid<sp/><sp/><sp/>polyhedral<sp/>particles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>instantaneous_breakage_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Distribution<sp/>of<sp/>fragment<sp/>sizes<sp/>for<sp/><sp/><sp/>instantaneous<sp/>breakage<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>fragments_size_distribution_model<sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Wear<sp/>of<sp/>surfaces<sp/>due<sp/>particle<sp/><sp/><sp/>collisions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>geometries_wear_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Conduction<sp/>heat<sp/>transfer<sp/>rate<sp/>at<sp/><sp/><sp/>contacts<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>heat_conduction_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Integration<sp/>of<sp/>the<sp/>particle<sp/>energy<sp/><sp/><sp/>equation<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>thermal_integration_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Custom<sp/>kernel<sp/>motion<sp/>for<sp/>moving<sp/><sp/><sp/>geometries<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>geometries_motion<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>–<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>CFD<sp/>coupling,<sp/>drag<sp/>force<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>cfd_drag_law_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>CFD<sp/>coupling,<sp/>lift<sp/>force<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>cfd_lift_law_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>CFD<sp/>coupling,<sp/>virtual<sp/>mass<sp/>force<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>cfd_virtual_mass_law_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>CFD<sp/>coupling,<sp/>flow-induced<sp/>torque<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>cfd_torque_law_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>CFD<sp/>coupling,<sp/>convection<sp/>heat<sp/>transfer<sp/><sp/><sp/>rate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>cfd_convection_law_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>addition<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>SPH<sp/>heat<sp/>transfer<sp/>between<sp/>fluid<sp/>elements<sp/><sp/><sp/>and<sp/>between<sp/>fluid<sp/>elements<sp/>and<sp/>geometries<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>sph_heat_transfer_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>All<sp/>SPH<sp/>forces<sp/>between<sp/>fluid<sp/>elements<sp/>and<sp/><sp/><sp/>between<sp/>fluid<sp/>elements<sp/>and<sp/>geometries<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>sph_force_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Only<sp/>SPH<sp/>viscous<sp/>forces<sp/>between<sp/>fluid<sp/><sp/><sp/>elements<sp/>and<sp/>between<sp/>fluid<sp/>elements<sp/>and<sp/>geometries<sp/><sp/>|<sp/><sp/>sph_viscous_force_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>SPH<sp/>forces<sp/>due<sp/>surface<sp/>tension<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>sph_surface_tension_model<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>override<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Table<sp/>2.1:<sp/>Class<sp/>attributes<sp/>associated<sp/>to</highlight></codeline>
<codeline><highlight class="normal">customizable<sp/>model<sp/>categories<sp/>in<sp/>Rocky*</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>support<sp/>of<sp/>custom<sp/>SPH<sp/>forces<sp/>through<sp/>the<sp/>`sph_force_model`<sp/>specification<sp/>was<sp/>an</highlight></codeline>
<codeline><highlight class="normal">experimental<sp/>feature<sp/>in<sp/>previous<sp/>versions<sp/>of<sp/>Rocky.<sp/>It<sp/>overrides<sp/>all</highlight></codeline>
<codeline><highlight class="normal">force<sp/>values<sp/>calculated<sp/>internally,<sp/>including<sp/>for<sp/>instance,<sp/>pressure,</highlight></codeline>
<codeline><highlight class="normal">viscous<sp/>and<sp/>surface<sp/>tension<sp/>forces.<sp/>Therefore,<sp/>a<sp/>custom<sp/>module<sp/>including</highlight></codeline>
<codeline><highlight class="normal">that<sp/>specification<sp/>is<sp/>supposed<sp/>to<sp/>implement<sp/>the<sp/>calculation<sp/>of<sp/>all<sp/>those</highlight></codeline>
<codeline><highlight class="normal">forces.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>is<sp/>an<sp/>example<sp/>of<sp/>the<sp/>specification<sp/>of<sp/>a<sp/>module<sp/>that</highlight></codeline>
<codeline><highlight class="normal">implements<sp/>a<sp/>custom<sp/>contact<sp/>model,<sp/>including<sp/>the<sp/>normal<sp/>and<sp/>tangential</highlight></codeline>
<codeline><highlight class="normal">components<sp/>of<sp/>the<sp/>contact<sp/>force:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModuleSpecs(RockyAddinSpecs):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>&apos;Custom<sp/>Module<sp/>Example&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>CustomGeneralParameters</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>normal_force_model<sp/>=<sp/>CustomModel</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tangential_force_model<sp/>=<sp/>CustomModel</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>CreateAddin(cls):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cls.CreateDynamicAddin(Path(__file__).parent,<sp/>&apos;custom_module_name&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Currently<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>associate<sp/>properties<sp/>to<sp/>a<sp/>custom<sp/>model</highlight></codeline>
<codeline><highlight class="normal">itself,<sp/>therefore<sp/>CustomModel<sp/>in<sp/>the<sp/>example<sp/>above<sp/>can</highlight></codeline>
<codeline><highlight class="normal">be<sp/>an<sp/>empty<sp/>class,<sp/>defined<sp/>as:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModel:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>pass</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>mentioned<sp/>earlier,<sp/>there<sp/>are<sp/>two<sp/>possible<sp/>ways<sp/>in<sp/>which<sp/>the<sp/>Rocky<sp/>UI</highlight></codeline>
<codeline><highlight class="normal">may<sp/>treat<sp/>a<sp/>custom<sp/>model:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>For<sp/>model<sp/>categories<sp/>with<sp/>global<sp/>scope,<sp/>like<sp/>contact<sp/>force<sp/>models,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>will<sp/>override<sp/>any<sp/>other<sp/>model<sp/>in<sp/>the<sp/>category<sp/>if<sp/>a<sp/>module<sp/>that</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>implements<sp/>a<sp/>custom<sp/>model<sp/>in<sp/>that<sp/>category<sp/>is<sp/>enabled<sp/>in<sp/>a<sp/>project.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>In<sp/>that<sp/>situation,<sp/>all<sp/>calculations<sp/>related<sp/>to<sp/>the<sp/>model<sp/>category</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>will<sp/>be<sp/>performed<sp/>by<sp/>the<sp/>code<sp/>in<sp/>the<sp/>custom<sp/>module.<sp/>As<sp/>an</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>illustration,<sp/>Figure<sp/>2.8<sp/>shows<sp/>how<sp/>the<sp/>contact<sp/>force<sp/>model<sp/>categories</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>are<sp/>displayed<sp/>in<sp/>the<sp/>**Physics**<sp/>panel<sp/>when<sp/>the<sp/>module<sp/>specified<sp/>by</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>previous<sp/>code<sp/>example<sp/>is<sp/>turned<sp/>on</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>the<sp/>project.<sp/>When<sp/>this<sp/>situation<sp/>occurs,<sp/>it<sp/>won&apos;t<sp/>be<sp/>possible<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>select<sp/>any<sp/>other<sp/>model<sp/>in<sp/>those<sp/>categories<sp/>until<sp/>the<sp/>referred<sp/>module</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>is<sp/>turned<sp/>off.<sp/>All<sp/>model<sp/>categories<sp/>that<sp/>behave<sp/>in<sp/>this<sp/>way<sp/>are</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>marked<sp/>with<sp/>the<sp/>word<sp/>&quot;override&quot;<sp/>in<sp/>the<sp/>third<sp/>column<sp/>of<sp/>Table<sp/>2.1</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/mod_override.png){html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.8:<sp/>Example<sp/>of<sp/>custom<sp/>models<sp/>overriding<sp/>other<sp/>models<sp/>in<sp/>the<sp/>Rocky<sp/>UI.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>For<sp/>model<sp/>categories<sp/>with<sp/>scope<sp/>per<sp/>particle<sp/>group<sp/>or<sp/>geometry,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Rocky<sp/>will<sp/>add<sp/>the<sp/>custom<sp/>model<sp/>implemented<sp/>by<sp/>a<sp/>module<sp/>to<sp/>the<sp/>list</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>of<sp/>available<sp/>models<sp/>in<sp/>the<sp/>category.<sp/>This<sp/>can<sp/>be<sp/>observed<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>example<sp/>shown<sp/>in<sp/>Figure<sp/>2.9,<sp/>in<sp/>which<sp/>a<sp/>custom<sp/>[joint](#joint)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>implemented<sp/>by<sp/>a<sp/>module<sp/>named<sp/>*Custom<sp/>Module<sp/>Example*<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>listed<sp/>along<sp/>with<sp/>the<sp/>built-in<sp/>joint<sp/>models.<sp/>All<sp/>model<sp/>categories</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>that<sp/>behave<sp/>in<sp/>this<sp/>way<sp/>are<sp/>marked<sp/>with<sp/>the<sp/>word<sp/>&quot;addition&quot;<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>third<sp/>column<sp/>of<sp/>Table<sp/>2.1.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![](images/mod_add.png)<sp/>{html:<sp/>width=30%}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure<sp/>2.9:<sp/>Example<sp/>of<sp/>a<sp/>custom<sp/>model<sp/>being<sp/>added<sp/>to<sp/>the<sp/>available<sp/>models<sp/>in<sp/>a<sp/>category.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Although<sp/>any<sp/>module<sp/>could<sp/>be,<sp/>in<sp/>principle,<sp/>include<sp/>the<sp/>implementation<sp/>of</highlight></codeline>
<codeline><highlight class="normal">several<sp/>custom<sp/>models,<sp/>it<sp/>is<sp/>advisable<sp/>to<sp/>restrict<sp/>only<sp/>one<sp/>custom<sp/>model</highlight></codeline>
<codeline><highlight class="normal">per<sp/>module.<sp/>The<sp/>exception<sp/>to<sp/>this<sp/>rule<sp/>would<sp/>be<sp/>those<sp/>models<sp/>that<sp/>have</highlight></codeline>
<codeline><highlight class="normal">strong<sp/>interdependence<sp/>or<sp/>that<sp/>may<sp/>share<sp/>data<sp/>between<sp/>them.<sp/>The<sp/>typical</highlight></codeline>
<codeline><highlight class="normal">example<sp/>of<sp/>the<sp/>former<sp/>case<sp/>is<sp/>the<sp/>trio<sp/>formed<sp/>by<sp/>the<sp/>normal<sp/>contact</highlight></codeline>
<codeline><highlight class="normal">force,<sp/>the<sp/>tangential<sp/>force<sp/>and<sp/>the<sp/>impact<sp/>energy<sp/>models,<sp/>in<sp/>which<sp/>the</highlight></codeline>
<codeline><highlight class="normal">second<sp/>one<sp/>depends<sp/>on<sp/>the<sp/>first,<sp/>and<sp/>the<sp/>third<sp/>one<sp/>may<sp/>depend<sp/>on<sp/>the</highlight></codeline>
<codeline><highlight class="normal">other<sp/>two.<sp/>An<sp/>example<sp/>of<sp/>the<sp/>latter<sp/>case<sp/>is<sp/>the<sp/>pair<sp/>of<sp/>models</highlight></codeline>
<codeline><highlight class="normal">instantaneous<sp/>breakage<sp/>and<sp/>fragment<sp/>size<sp/>distribution,<sp/>in<sp/>which<sp/>the</highlight></codeline>
<codeline><highlight class="normal">first<sp/>one<sp/>can<sp/>calculate<sp/>custom<sp/>data<sp/>needed<sp/>by<sp/>the<sp/>second<sp/>one.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Specification<sp/>of<sp/>variable<sp/>properties</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Since<sp/>Rocky<sp/>2022R1,<sp/>the<sp/>Rocky<sp/>Solver<sp/>SDK<sp/>gives<sp/>developers<sp/>the<sp/>ability</highlight></codeline>
<codeline><highlight class="normal">of<sp/>setting<sp/>values<sp/>of<sp/>selected<sp/>physical<sp/>properties<sp/>during<sp/>a<sp/>simulation.</highlight></codeline>
<codeline><highlight class="normal">In<sp/>that<sp/>way,<sp/>properties<sp/>that<sp/>normally<sp/>would<sp/>have<sp/>constant<sp/>values<sp/>during</highlight></codeline>
<codeline><highlight class="normal">a<sp/>whole<sp/>simulation<sp/>become<sp/>variable<sp/>properties<sp/>that<sp/>may<sp/>depend<sp/>on<sp/>time,</highlight></codeline>
<codeline><highlight class="normal">position<sp/>or<sp/>other<sp/>simulation<sp/>variables.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>module<sp/>that<sp/>will<sp/>calculate<sp/>and<sp/>set<sp/>values<sp/>of<sp/>such<sp/>variable<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">must<sp/>indicate<sp/>in<sp/>the<sp/>specification<sp/>file<sp/>which<sp/>properties<sp/>it<sp/>will</highlight></codeline>
<codeline><highlight class="normal">override.<sp/>An<sp/>example<sp/>of<sp/>how<sp/>that<sp/>specification<sp/>must<sp/>be<sp/>done<sp/>is<sp/>shown<sp/>in</highlight></codeline>
<codeline><highlight class="normal">the<sp/>following<sp/>code<sp/>snippet:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModuleSpecs(RockyAddinSpecs):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/>&apos;Custom<sp/>Properties<sp/>Example&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>CustomGeneralParameters</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>particle_material_properties<sp/>=<sp/>ParticleVariableProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>triangle_material_properties<sp/>=<sp/>TriangleVariableProperties</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>CreateAddin(cls):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>cls.CreateDynamicAddin(Path(__file__).parent,<sp/>&apos;custom_module_name&apos;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>two<sp/>specification<sp/>keys<sp/>`particle_material_properties`<sp/>and<sp/>`triangle_material_properties`<sp/>indicate<sp/>that<sp/>the<sp/>module<sp/>will</highlight></codeline>
<codeline><highlight class="normal">override<sp/>material<sp/>properties<sp/>affecting<sp/>particles<sp/>and<sp/>boundary<sp/>triangles.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>Table<sp/>2.2<sp/>lists<sp/>the<sp/>four<sp/>categories<sp/>of<sp/>properties<sp/>whose</highlight></codeline>
<codeline><highlight class="normal">values<sp/>can<sp/>be<sp/>overridden<sp/>by<sp/>custom<sp/>modules,<sp/>indicating<sp/>the<sp/>corresponding</highlight></codeline>
<codeline><highlight class="normal">specification<sp/>keys<sp/>that<sp/>must<sp/>be<sp/>used.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Category<sp/><sp/><sp/>of<sp/>properties<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Specification<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|--------------------------------------------------------------------------|-------------------------------------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Material<sp/>properties<sp/>used<sp/>by<sp/><sp/><sp/>particles<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>particle_material_properties<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Material<sp/>properties<sp/>used<sp/>by<sp/><sp/><sp/>boundaries<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>triangle_material_properties<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Material<sp/>interaction<sp/>properties<sp/>used<sp/>in<sp/><sp/><sp/>particle-to-particle<sp/>contacts<sp/><sp/>|<sp/><sp/>particle_material_interaction_properties<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Material<sp/>interaction<sp/>properties<sp/>used<sp/>in<sp/><sp/><sp/>particle-to-boundary<sp/>contacts<sp/><sp/>|<sp/><sp/>triangle_material_interaction_properties<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Geometry<sp/>properties<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>geometry_triangle_properties<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Table<sp/>2.2:<sp/>Specification<sp/>keys<sp/>for<sp/>different</highlight></codeline>
<codeline><highlight class="normal">categories<sp/>of<sp/>properties.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Besides<sp/>indicating<sp/>the<sp/>categories<sp/>of<sp/>properties,<sp/>the<sp/>module<sp/>must<sp/>specify</highlight></codeline>
<codeline><highlight class="normal">which<sp/>individual<sp/>properties<sp/>on<sp/>each<sp/>category<sp/>will<sp/>be<sp/>overridden.<sp/>This</highlight></codeline>
<codeline><highlight class="normal">must<sp/>be<sp/>done<sp/>by<sp/>defining<sp/>additional<sp/>classes,<sp/>as<sp/>indicated<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">following<sp/>code<sp/>snippets:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>ParticleVariableProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>thermal_conductivity<sp/>=<sp/>ThermalConductivity</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>specific_heat<sp/>=<sp/>SpecificHeat</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;br&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>TriangleVariableProperties:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>thermal_conductivity<sp/>=<sp/>ThermalConductivity</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Regarding<sp/>the<sp/>properties<sp/>for<sp/>particles,<sp/>the<sp/>first<sp/>snippet<sp/>code<sp/>above</highlight></codeline>
<codeline><highlight class="normal">indicates<sp/>that<sp/>the<sp/>thermal<sp/>conductivity<sp/>and<sp/>the<sp/>specific<sp/>heat<sp/>will<sp/>be</highlight></codeline>
<codeline><highlight class="normal">overridden<sp/>by<sp/>values<sp/>stored<sp/>in<sp/>particle<sp/>scalars<sp/>that<sp/>Rocky<sp/>will<sp/>define</highlight></codeline>
<codeline><highlight class="normal">internally.<sp/>By<sp/>specifying<sp/>that,<sp/>the<sp/>module<sp/>is<sp/>taking<sp/>responsibility<sp/>for</highlight></codeline>
<codeline><highlight class="normal">setting<sp/>values<sp/>of<sp/>those<sp/>properties<sp/>for<sp/>every<sp/>particle<sp/>in<sp/>a<sp/>simulation.</highlight></codeline>
<codeline><highlight class="normal">That<sp/>implies<sp/>that<sp/>values<sp/>specified<sp/>through<sp/>the<sp/>Rocky<sp/>UI<sp/>for<sp/>those<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">will<sp/>be<sp/>ignored<sp/>by<sp/>the<sp/>Rocky<sp/>solver.<sp/>Table<sp/>2.3<sp/>lists<sp/>all<sp/>the<sp/>material<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">associated<sp/>to<sp/>particles<sp/>that<sp/>can<sp/>be<sp/>overridden<sp/>by<sp/>custom<sp/>modules<sp/>in<sp/>the<sp/>current</highlight></codeline>
<codeline><highlight class="normal">version<sp/>of<sp/>Rocky.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Type<sp/>of<sp/><sp/><sp/>property<sp/><sp/><sp/><sp/>|<sp/><sp/>Specification<sp/>key<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Rocky&apos;s<sp/>internal<sp/>scalar<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|-----------------------|------------------------|--------------------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Thermal<sp/>conductivity<sp/><sp/>|<sp/><sp/>thermal_conductivity<sp/><sp/>|<sp/><sp/>ThermalConductivity<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Specific<sp/>heat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>specific_heat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>SpecificHeat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Poisson’s<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>poisson_ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>PoissonRatio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Table<sp/>2.3:<sp/>Particle<sp/>material<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">whose<sp/>values<sp/>may<sp/>be<sp/>overridden<sp/>by</highlight></codeline>
<codeline><highlight class="normal">custom<sp/>modules*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Similarly,<sp/>the<sp/>second<sp/>code<sp/>snippet<sp/>shown<sp/>above<sp/>indicates<sp/>that<sp/>the<sp/>module</highlight></codeline>
<codeline><highlight class="normal">will<sp/>replace<sp/>also<sp/>the<sp/>thermal<sp/>conductivity<sp/>values<sp/>specified<sp/>for</highlight></codeline>
<codeline><highlight class="normal">materials<sp/>associated<sp/>to<sp/>boundaries.<sp/>In<sp/>that<sp/>way,<sp/>the<sp/>constant<sp/>value</highlight></codeline>
<codeline><highlight class="normal">specified<sp/>normally<sp/>for<sp/>a<sp/>whole<sp/>boundary<sp/>will<sp/>be<sp/>effectively<sp/>replaced<sp/>by</highlight></codeline>
<codeline><highlight class="normal">a<sp/>set<sp/>of<sp/>values,<sp/>one<sp/>for<sp/>each<sp/>triangle<sp/>making<sp/>up<sp/>a<sp/>boundary,<sp/>that<sp/>the</highlight></codeline>
<codeline><highlight class="normal">module<sp/>will<sp/>have<sp/>to<sp/>specify<sp/>within<sp/>the<sp/>C++<sp/>code<sp/>associated<sp/>to<sp/>it.<sp/>Rocky</highlight></codeline>
<codeline><highlight class="normal">will<sp/>use<sp/>internally<sp/>a<sp/>triangle<sp/>scalar<sp/>for<sp/>storing<sp/>the<sp/>values<sp/>of<sp/>each<sp/>one</highlight></codeline>
<codeline><highlight class="normal">of<sp/>the<sp/>properties<sp/>that<sp/>the<sp/>module<sp/>will<sp/>override.<sp/>Table<sp/>2.4<sp/>lists<sp/>the</highlight></codeline>
<codeline><highlight class="normal">boundary<sp/>properties<sp/>that<sp/>a<sp/>custom<sp/>module<sp/>can<sp/>redefine<sp/>as<sp/>variable</highlight></codeline>
<codeline><highlight class="normal">properties<sp/>in<sp/>the<sp/>current<sp/>version<sp/>of<sp/>Rocky.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Type<sp/>of<sp/><sp/><sp/>property<sp/><sp/><sp/><sp/>|<sp/><sp/>Specification<sp/>key<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Rocky&apos;s<sp/>internal<sp/>scalar<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|-----------------------|------------------------|--------------------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Thermal<sp/>conductivity<sp/><sp/>|<sp/><sp/>thermal_conductivity<sp/><sp/>|<sp/><sp/>ThermalConductivity<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Poisson’s<sp/>ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>poisson_ratio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>PoissonRatio<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Table<sp/>2.4:<sp/>Boundary<sp/>material<sp/>properties<sp/>that<sp/>may<sp/>be<sp/>overridden<sp/>by<sp/>custom</highlight></codeline>
<codeline><highlight class="normal">modules,<sp/>setting<sp/>values<sp/>per<sp/>boundary</highlight></codeline>
<codeline><highlight class="normal">triangle*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>Rocky<sp/>Solver<sp/>SDK<sp/>also<sp/>supports<sp/>the<sp/>substitution<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">material<sp/>interaction<sp/>properties<sp/>indicated<sp/>in<sp/>Table</highlight></codeline>
<codeline><highlight class="normal">2.5.<sp/>In<sp/>that<sp/>case,<sp/>the<sp/>constant<sp/>values<sp/>originally<sp/>specified<sp/>for<sp/>those<sp/>properties<sp/>are</highlight></codeline>
<codeline><highlight class="normal">replaced<sp/>by<sp/>a<sp/>set<sp/>of<sp/>values,<sp/>each<sp/>one<sp/>for<sp/>a<sp/>particle-to-particle<sp/>contact</highlight></codeline>
<codeline><highlight class="normal">or<sp/>a<sp/>particle-to-boundary<sp/>contact,<sp/>which<sp/>Rocky<sp/>will<sp/>store<sp/>internally<sp/>in</highlight></codeline>
<codeline><highlight class="normal">contact<sp/>scalars.<sp/>The<sp/>specification<sp/>of<sp/>the<sp/>overriding<sp/>of<sp/>material</highlight></codeline>
<codeline><highlight class="normal">interaction<sp/>properties<sp/>is<sp/>equivalent<sp/>to<sp/>the<sp/>one<sp/>shown<sp/>previously<sp/>for</highlight></codeline>
<codeline><highlight class="normal">material<sp/>properties.<sp/>The<sp/>main<sp/>difference<sp/>is<sp/>that<sp/>it<sp/>uses<sp/>`particle_material_interaction_properties`<sp/>or<sp/>`triangle_material_interaction_properties`<sp/>as<sp/>specification<sp/>key,<sp/>as<sp/>indicated<sp/>in<sp/>Table<sp/>2.2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Type<sp/>of<sp/>property<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Specification<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Rocky&apos;s<sp/>internal<sp/>scalar<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---------------------------------------|---------------------------|--------------------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Coefficient<sp/>of<sp/>restitution<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>restitution_coefficient<sp/><sp/>|<sp/><sp/>RestitutionCoefficient<sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Coefficient<sp/>of<sp/>static<sp/>friction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>static_friction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>StaticFriction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Coefficient<sp/>of<sp/>dynamic<sp/>friction<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>dynamic_friction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>DynamicFriction<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Table<sp/>2.5:<sp/>Material<sp/>interaction<sp/>properties</highlight></codeline>
<codeline><highlight class="normal">whose<sp/>values<sp/>may<sp/>be<sp/>overridden<sp/>by</highlight></codeline>
<codeline><highlight class="normal">custom<sp/>modules,<sp/>for<sp/>both<sp/>particle-to-particle<sp/>and<sp/>particle-to-boundary<sp/>contacts.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>Rocky<sp/>Solver<sp/>SDK<sp/>also<sp/>allows<sp/>developers<sp/>to<sp/>override<sp/>the</highlight></codeline>
<codeline><highlight class="normal">temperature<sp/>prescribed<sp/>per<sp/>geometry,<sp/>replacing<sp/>it<sp/>by<sp/>a<sp/>set<sp/>of</highlight></codeline>
<codeline><highlight class="normal">temperature<sp/>values<sp/>per<sp/>triangle.<sp/>As<sp/>shown<sp/>in<sp/>Table<sp/>2.6,<sp/>currently</highlight></codeline>
<codeline><highlight class="normal">this<sp/>is<sp/>the<sp/>only<sp/>geometry<sp/>property<sp/>that<sp/>is<sp/>enabled<sp/>to<sp/>be<sp/>replaced<sp/>by<sp/>a</highlight></codeline>
<codeline><highlight class="normal">custom<sp/>module.<sp/>An<sp/>example<sp/>is<sp/>presented<sp/>later<sp/>on<sp/>in<sp/>section</highlight></codeline>
<codeline><highlight class="normal">[A<sp/>module<sp/>implementing<sp/>variable<sp/>properties](#a-module-implementing-variable-properties)<sp/>that<sp/>shows</highlight></codeline>
<codeline><highlight class="normal">how<sp/>a<sp/>module<sp/>can<sp/>perform<sp/>that<sp/>replacement.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Type<sp/>of<sp/>property<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Specification<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Rocky&apos;s<sp/>internal<sp/>scalar<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|------------------------|---------------------------|--------------------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Temperature<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>temperature<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>Temperature<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>The<sp/>.plugin<sp/>file</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>addition<sp/>to<sp/>the<sp/>Python<sp/>file<sp/>containing<sp/>an<sp/>`IPlugin`<sp/>subclass,<sp/>every<sp/>module</highlight></codeline>
<codeline><highlight class="normal">needs<sp/>a<sp/>`<sp/>.plugin`<sp/>file<sp/>that<sp/>contains<sp/>metadata<sp/>about<sp/>the<sp/>module<sp/>itself.<sp/>Most<sp/>of</highlight></codeline>
<codeline><highlight class="normal">this<sp/>metadata<sp/>is<sp/>not<sp/>used<sp/>by<sp/>Rocky<sp/>and<sp/>serves<sp/>informational<sp/>purposes<sp/>for</highlight></codeline>
<codeline><highlight class="normal">module<sp/>users<sp/>only.<sp/>However,<sp/>the<sp/>file<sp/>itself<sp/>is<sp/>necessary<sp/>because<sp/>it<sp/>is</highlight></codeline>
<codeline><highlight class="normal">how<sp/>the<sp/>application<sp/>discovers<sp/>the<sp/>module<sp/>at<sp/>runtime.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>file<sp/>is<sp/>written<sp/>in<sp/>a<sp/>configuration<sp/>language<sp/>similar<sp/>to<sp/>the<sp/>INI</highlight></codeline>
<codeline><highlight class="normal">format<sp/>used<sp/>in<sp/>Microsoft<sp/>Windows<sp/>configuration<sp/>files.<sp/>Here&apos;s<sp/>a<sp/>sample<sp/>of<sp/>its<sp/>contents<sp/>and<sp/>a</highlight></codeline>
<codeline><highlight class="normal">description<sp/>of<sp/>the<sp/>fields:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">[Core]</highlight></codeline>
<codeline><highlight class="normal">Name<sp/>=<sp/>Sample<sp/>Module</highlight></codeline>
<codeline><highlight class="normal">Module<sp/>=<sp/>sample_module</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[Documentation]</highlight></codeline>
<codeline><highlight class="normal">Author<sp/>=<sp/>Module<sp/>Author</highlight></codeline>
<codeline><highlight class="normal">Version<sp/>=<sp/>1.0</highlight></codeline>
<codeline><highlight class="normal">Website<sp/>=<sp/>www.example.com</highlight></codeline>
<codeline><highlight class="normal">Description<sp/>=<sp/>A<sp/>short<sp/>description<sp/>of<sp/>the<sp/>module&apos;s<sp/>functionalities.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>You<sp/>can<sp/>span<sp/>multiple<sp/>lines<sp/>by<sp/>indenting<sp/>after<sp/>the<sp/>first<sp/>one,<sp/>like<sp/>this.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">where:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Name`<sp/>is<sp/>the<sp/>human-readable<sp/>name<sp/>of<sp/>the<sp/>Module,<sp/>and<sp/>should<sp/>match<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>provided<sp/>in<sp/>the<sp/>specification<sp/>class<sp/>(section</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[Structure<sp/>of<sp/>the<sp/>specification<sp/>file](#structure-of-the-specification-file)).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Module`<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Python<sp/>file<sp/>that<sp/>contains<sp/>the<sp/>`IPlugin`<sp/>subclass,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>without<sp/>the<sp/>`.py`<sp/>extension.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Author`<sp/>is<sp/>the<sp/>name<sp/>of<sp/>the<sp/>module&apos;s<sp/>author.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Version`<sp/>is<sp/>the<sp/>version<sp/>of<sp/>the<sp/>module<sp/>itself,<sp/>which<sp/>is<sp/>used<sp/>when<sp/>updating</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>module<sp/>with<sp/>new<sp/>features<sp/>and<sp/>bug<sp/>fixes<sp/>(see<sp/>section</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>[Module<sp/>version](#module-version)).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Website`<sp/>is<sp/>the<sp/>website<sp/>or<sp/>email,<sp/>used<sp/>as<sp/>contact<sp/>information.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`Description`<sp/>is<sp/>a<sp/>free-form<sp/>short<sp/>description<sp/>of<sp/>the<sp/>module&apos;s<sp/>purpose<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>features.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>Section<sp/>[Reference](annotated.xhtml)<sp/>for<sp/>an<sp/>example<sp/>plugin<sp/>file.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Module<sp/>version<sp/>{#module-version}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Every<sp/>module<sp/>has<sp/>two<sp/>versions:<sp/>one<sp/>&quot;explicit&quot;<sp/>version,<sp/>defined<sp/>by<sp/>the</highlight></codeline>
<codeline><highlight class="normal">module<sp/>author<sp/>in<sp/>its<sp/>`.plugin`<sp/>file<sp/>(section</highlight></codeline>
<codeline><highlight class="normal">[Plugin<sp/>File](#plugin-file)),<sp/>and<sp/>the<sp/>version<sp/>of<sp/>the<sp/>Solver<sp/>SDK<sp/>for<sp/>which<sp/>the</highlight></codeline>
<codeline><highlight class="normal">module<sp/>was<sp/>built.<sp/>While<sp/>Rocky<sp/>doesn&apos;t<sp/>impose<sp/>any<sp/>kind<sp/>of<sp/>semantics<sp/>on</highlight></codeline>
<codeline><highlight class="normal">the<sp/>author-defined<sp/>version,<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>convey<sp/>to<sp/>module<sp/>users<sp/>the<sp/>expected<sp/>stability<sp/>and</highlight></codeline>
<codeline><highlight class="normal">completeness<sp/>of<sp/>modules.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">One<sp/>suggestion<sp/>is<sp/>to<sp/>use<sp/>[semantic<sp/>versioning](https://semver.org/)<sp/>when</highlight></codeline>
<codeline><highlight class="normal">defining<sp/>a<sp/>module&apos;s<sp/>version.<sp/>Briefly,<sp/>the<sp/>module<sp/>can<sp/>follow<sp/>a<sp/>&quot;X.Y.Z&quot;</highlight></codeline>
<codeline><highlight class="normal">format,<sp/>where:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Increment<sp/>the<sp/>major<sp/>version<sp/>*X*<sp/>when<sp/>your<sp/>module<sp/>changes<sp/>in<sp/>a<sp/>way</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>that<sp/>is<sp/>incompatible<sp/>with<sp/>previous<sp/>versions;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Increment<sp/>the<sp/>minor<sp/>version<sp/>*Y*<sp/>when<sp/>your<sp/>module<sp/>gains<sp/>new<sp/>features</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in<sp/>a<sp/>backwards-compatible<sp/>way;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Increment<sp/>the<sp/>patch<sp/>version<sp/>*Z*<sp/>when<sp/>your<sp/>make<sp/>backwards-compatible</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bug<sp/>fixes<sp/>only.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Migrating<sp/>between<sp/>module<sp/>versions</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>a<sp/>module<sp/>is<sp/>changed<sp/>in<sp/>a<sp/>way<sp/>that<sp/>makes<sp/>the<sp/>new<sp/>specification</highlight></codeline>
<codeline><highlight class="normal">incompatible<sp/>with<sp/>the<sp/>old<sp/>one,<sp/>the<sp/>author<sp/>can<sp/>write<sp/>a<sp/>function<sp/>to</highlight></codeline>
<codeline><highlight class="normal">*migrate*<sp/>module<sp/>properties<sp/>defined<sp/>in<sp/>the<sp/>old<sp/>format<sp/>to<sp/>the<sp/>new<sp/>one.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>can<sp/>happen,<sp/>for<sp/>example,<sp/>when<sp/>a<sp/>Rocky<sp/>project<sp/>containing<sp/>data<sp/>saved</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>old<sp/>specification<sp/>is<sp/>opened<sp/>when<sp/>the<sp/>new<sp/>specification<sp/>is</highlight></codeline>
<codeline><highlight class="normal">available.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>module<sp/>author<sp/>can<sp/>indicate<sp/>that<sp/>the<sp/>specification<sp/>handles<sp/>these</highlight></codeline>
<codeline><highlight class="normal">migrations<sp/>by<sp/>implementing<sp/>the<sp/>following<sp/>function<sp/>in<sp/>their<sp/>specification</highlight></codeline>
<codeline><highlight class="normal">subclass:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModuleSpecs(RockyAddinSpecs):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>MigrateProperties(self,<sp/>previous,<sp/>current):</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">where<sp/>`previous`<sp/>and<sp/>`current`<sp/>contain<sp/>data<sp/>related<sp/>to<sp/>the<sp/>previous<sp/>and<sp/>current</highlight></codeline>
<codeline><highlight class="normal">versions<sp/>of<sp/>the<sp/>module,<sp/>respectively.<sp/>Each<sp/>object<sp/>contains<sp/>the<sp/>following</highlight></codeline>
<codeline><highlight class="normal">attributes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`addin_version`<sp/>is<sp/>the<sp/>version<sp/>of<sp/>the<sp/>module;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`sdk_version`<sp/>is<sp/>the<sp/>version<sp/>of<sp/>the<sp/>SDK;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>`snapshot`<sp/>is<sp/>a<sp/>Python<sp/>dictionary<sp/>containing<sp/>the<sp/>user-provided<sp/>values<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>the<sp/>properties<sp/>described<sp/>by<sp/>the<sp/>module&apos;s<sp/>specification.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>an<sp/>example:<sp/>suppose<sp/>that<sp/>the<sp/>author<sp/>of<sp/>`CustomModuleSpecs`&apos;s<sp/>module<sp/>renamed<sp/>a<sp/>material</highlight></codeline>
<codeline><highlight class="normal">property<sp/>from<sp/>`old_name`<sp/>to<sp/>`new_name`<sp/>and<sp/>updated<sp/>the<sp/>module&apos;s<sp/>version<sp/>from<sp/>&quot;1.0.0&quot;</highlight></codeline>
<codeline><highlight class="normal">to<sp/>&quot;2.0.0&quot;.<sp/>When<sp/>opening<sp/>an<sp/>existing<sp/>project<sp/>that<sp/>was<sp/>originally<sp/>saved</highlight></codeline>
<codeline><highlight class="normal">using<sp/>version<sp/>&quot;1.0.0&quot;<sp/>of<sp/>the<sp/>module,<sp/>the<sp/>following<sp/>code<sp/>would<sp/>copy<sp/>the</highlight></codeline>
<codeline><highlight class="normal">value<sp/>of<sp/>the<sp/>property<sp/>called<sp/>`old_name`<sp/>in<sp/>the<sp/>previous<sp/>snapshot<sp/>to<sp/>the<sp/>property</highlight></codeline>
<codeline><highlight class="normal">called<sp/>`new_name`<sp/>in<sp/>the<sp/>current<sp/>snapshot,<sp/>for<sp/>every<sp/>material<sp/>defined<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">project<sp/>that<sp/>is<sp/>being<sp/>loaded:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@container_model()</highlight></codeline>
<codeline><highlight class="normal">class<sp/>CustomModuleSpecs(RockyAddinSpecs):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>classmethod</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>MigrateProperties(self,<sp/>previous,<sp/>current):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>previous.addin_version<sp/>==<sp/>&apos;1.0.0&apos;<sp/>and<sp/>current.addin_version<sp/>==<sp/>&apos;2.0.0&apos;:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_materials<sp/>=<sp/>previous.snapshot[&apos;material_properties&apos;]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_materials<sp/>=<sp/>current.snapshot[&apos;material_properties&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>previous_material,<sp/>current_material<sp/>in<sp/>zip(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous_materials.values(),<sp/>current_materials.values()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_material[&apos;new_name&apos;]<sp/>=<sp/>previous_material[&apos;old_name&apos;]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>True</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>False</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="docs/sdk_manual/module_specification.md"/>
  </compounddef>
</doxygen>
