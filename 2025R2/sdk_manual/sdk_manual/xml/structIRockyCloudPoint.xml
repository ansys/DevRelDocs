<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyCloudPoint" kind="struct" language="C++" prot="public">
    <compoundname>IRockyCloudPoint</compoundname>
    <includes refid="rocky__point__cloud__api_8hpp" local="no">rocky_point_cloud_api.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyCloudPoint_1a1d06a1eb80ad0811ab2794f2a494fe17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double3</type>
        <definition>ROCKY_FUNCTIONS double3 IRockyCloudPoint::get_position</definition>
        <argsstring>() const</argsstring>
        <name>get_position</name>
        <qualifiedname>IRockyCloudPoint::get_position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The Cartesian coordinates of the referred point in the cloud point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_point_cloud_api.hpp" line="20" column="36" bodyfile="source/c++/rocky20/api/rocky_point_cloud_api.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyCloudPoint_1a51d29e82619836ed172e8f3135bf0f51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _data_type</type>
            <defval>double</defval>
          </param>
        </templateparamlist>
        <type>ROCKY_FUNCTIONS _data_type</type>
        <definition>ROCKY_FUNCTIONS _data_type IRockyCloudPoint::get_property</definition>
        <argsstring>(int property_index) const</argsstring>
        <name>get_property</name>
        <qualifiedname>IRockyCloudPoint::get_property</qualifiedname>
        <param>
          <type>int</type>
          <declname>property_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of a property in the cloud point dataset, corresponding to the referred point in the point cloud. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_point_cloud_api.hpp" line="27" column="39" bodyfile="source/c++/rocky20/api/rocky_point_cloud_api.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyCloudPoint_1ae9e37938664d6977e49593d1ec8f3dbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS bool</type>
        <definition>ROCKY_FUNCTIONS bool IRockyCloudPoint::is_enabled</definition>
        <argsstring>() const</argsstring>
        <name>is_enabled</name>
        <qualifiedname>IRockyCloudPoint::is_enabled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the current point cloud is enabled, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_point_cloud_api.hpp" line="32" column="33" bodyfile="source/c++/rocky20/api/rocky_point_cloud_api.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyCloudPoint_1a79dfeecd7f7360ed1e25135ed54ed312" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ROCKY_FUNCTIONS bool</type>
        <definition>bool IRockyCloudPoint::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <qualifiedname>IRockyCloudPoint::is_valid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the nearest point is a valid one for the particle passed to get_particle_cloud_point or get_element_cloud_point. Invalid nearest points are only marked when search_cut_off_distance is enabled for the point cloud. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_point_cloud_api.hpp" line="39" column="33" bodyfile="source/c++/rocky20/api/rocky_point_cloud_api.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="structIRockyCloudPoint" kindref="compound">IRockyCloudPoint</ref></computeroutput> is an interface to the data of the nearest point to a given particle or SPH element at a given time. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_point_cloud_api.hpp" line="15" column="1" bodyfile="source/c++/rocky20/api/rocky_point_cloud_api.hpp" bodystart="16" bodyend="53"/>
    <listofallmembers>
      <member refid="structIRockyCloudPoint_1a1d06a1eb80ad0811ab2794f2a494fe17" prot="public" virt="non-virtual"><scope>IRockyCloudPoint</scope><name>get_position</name></member>
      <member refid="structIRockyCloudPoint_1a51d29e82619836ed172e8f3135bf0f51" prot="public" virt="non-virtual"><scope>IRockyCloudPoint</scope><name>get_property</name></member>
      <member refid="structIRockyCloudPoint_1ae9e37938664d6977e49593d1ec8f3dbd" prot="public" virt="non-virtual"><scope>IRockyCloudPoint</scope><name>is_enabled</name></member>
      <member refid="structIRockyCloudPoint_1a79dfeecd7f7360ed1e25135ed54ed312" prot="public" virt="non-virtual"><scope>IRockyCloudPoint</scope><name>is_valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
