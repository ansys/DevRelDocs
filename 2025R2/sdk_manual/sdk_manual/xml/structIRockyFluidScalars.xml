<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyFluidScalars" kind="struct" language="C++" prot="public">
    <compoundname>IRockyFluidScalars</compoundname>
    <basecompoundref prot="public" virt="non-virtual">EntityScalars&lt; rocky20::FluidScalars &gt;</basecompoundref>
    <includes refid="rocky__fluid__scalars_8hpp" local="no">rocky_fluid_scalars.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyFluidScalars_1a75d5c92f06422a5d29704788404405d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyFluidScalars::get_scalar</definition>
        <argsstring>(int scalar_index) const</argsstring>
        <name>get_scalar</name>
        <qualifiedname>IRockyFluidScalars::get_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>the value currently stored can be accessed with this method.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value currently stored in the scalar variable.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="113" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalars_1aec66ca90576555d400f9c6d401b049e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyFluidScalars::set_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>set_scalar</name>
        <qualifiedname>IRockyFluidScalars::set_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to store a value on it. </para>
</simplesect>
<simplesect kind="par"><title>In the case of fluid scalars that are marked as additional variables to be shared with Fluent, </title><para>the value refers to the particle&apos;s contribution to the fluid cell, since Rocky will convert it to the cell value automatically by dividing by the cell volume [m3] which the particle belongs to, and by the CFD timestep [s]. </para>
</simplesect>
<simplesect kind="par"><title>For example, when adding a mass source [kg] to the fluid, the value</title><para>will be converted to kg/m3.s before sending it to Fluent.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be stored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="130" column="27"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalars_1a536c29f3a14dc5bbed6047f43baa37ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyFluidScalars::add_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>add_scalar</name>
        <qualifiedname>IRockyFluidScalars::add_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to sum a value to the current one stored in it. </para>
</simplesect>
<simplesect kind="par"><title>In the case of fluid scalars that are marked as additional variables to be shared with Fluent, </title><para>the value refers to the particle&apos;s contribution to the fluid cell, since Rocky will convert it to the cell value automatically by dividing by the cell volume [m3] which the particle belongs to, and by the CFD timestep [s]. </para>
</simplesect>
<simplesect kind="par"><title>For example, when adding a mass source [kg] to the fluid, the value</title><para>will be converted to kg/m3.s before sending it to Fluent.</para>
</simplesect>
<simplesect kind="par"><title>In the case of fluid scalars which are Fluent additional inputs, </title><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be summed to the current stored value.<linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="148" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyFluidScalars_1aaa969c416dea0ac4eb4721c5b8d75b24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyFluidScalars::max_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>max_scalar</name>
        <qualifiedname>IRockyFluidScalars::max_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to make the scalar store the maximum of a set of values. A common use of this method is, for instance, to find the maximum among a set of values associated to the contacts of a particle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A value that must be checked if it is greater than the current stored value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="150" column="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>During the iterative process of a simulation, <computeroutput><ref refid="structIRockyFluidScalars" kindref="compound">IRockyFluidScalars</ref></computeroutput> gives access to all fluid scalars defined in the project. These fluid scalars can be built-in scalars defined in the Rocky solver, or custom fluid scalars defined by the current module or other active modules. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_fluid_scalars.hpp" line="102" column="1" bodyfile="source/c++/rocky20/api/rocky_fluid_scalars.hpp" bodystart="103" bodyend="154"/>
    <listofallmembers>
      <member refid="structIRockyFluidScalars_1a536c29f3a14dc5bbed6047f43baa37ec" prot="public" virt="non-virtual"><scope>IRockyFluidScalars</scope><name>add_scalar</name></member>
      <member refid="structIRockyFluidScalars_1a75d5c92f06422a5d29704788404405d0" prot="public" virt="non-virtual"><scope>IRockyFluidScalars</scope><name>get_scalar</name></member>
      <member refid="structIRockyFluidScalars_1aaa969c416dea0ac4eb4721c5b8d75b24" prot="public" virt="non-virtual"><scope>IRockyFluidScalars</scope><name>max_scalar</name></member>
      <member refid="structIRockyFluidScalars_1aec66ca90576555d400f9c6d401b049e4" prot="public" virt="non-virtual"><scope>IRockyFluidScalars</scope><name>set_scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
