<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyBreakableParticle" kind="struct" language="C++" prot="public">
    <compoundname>IRockyBreakableParticle</compoundname>
    <includes refid="rocky__particle__api_8hpp" local="no">rocky_particle_api.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyBreakableParticle_1a39311189362162e429f060557815729c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IRockyBreakableParticle::get_minimum_fragment_size</definition>
        <argsstring>() const</argsstring>
        <name>get_minimum_fragment_size</name>
        <qualifiedname>IRockyBreakableParticle::get_minimum_fragment_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The minimum size that a fragment generated at a breakage event of the particle can have. Please refer to the DEM Technical Manual for more information about how this parameter is defined. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="654" column="12" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="711" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1a22690da66add12be7a332bc4a0e596cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IRockyBreakableParticle::get_original_volume</definition>
        <argsstring>() const</argsstring>
        <name>get_original_volume</name>
        <qualifiedname>IRockyBreakableParticle::get_original_volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The volume of the particle at the moment it enters a simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="659" column="12" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="716" bodyend="719"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1a6c9870ef714ee07eeb24bef485dac1b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int IRockyBreakableParticle::get_particle_group_index</definition>
        <argsstring>() const</argsstring>
        <name>get_particle_group_index</name>
        <qualifiedname>IRockyBreakableParticle::get_particle_group_index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The index that identifies internally the particle group to which the particle belongs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="665" column="9" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="721" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1abaff8573c455f7cf3793fefd8c43a793" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IRockyBreakableParticle::get_strength</definition>
        <argsstring>() const</argsstring>
        <name>get_strength</name>
        <qualifiedname>IRockyBreakableParticle::get_strength</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A random value between 0 and 1 assigned to a particle at the time of generation. This value can be related to the breakage probability in a custom instantaneous breakage model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="672" column="12" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="726" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1aca4e9c89438f779e191757c12103c65f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double IRockyBreakableParticle::get_original_size</definition>
        <argsstring>() const</argsstring>
        <name>get_original_size</name>
        <qualifiedname>IRockyBreakableParticle::get_original_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The value of the particle&apos;s size at the moment it enters a simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="677" column="12" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="731" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1a685c12928a91ee0fe62a243f35167d42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void IRockyBreakableParticle::set_as_unbreakable</definition>
        <argsstring>() const</argsstring>
        <name>set_as_unbreakable</name>
        <qualifiedname>IRockyBreakableParticle::set_as_unbreakable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If this method is called during breakage initialization, the particle</title><para>will be marked to be ignored at all instantaneous breakage-related procedures during the simulation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="684" column="10" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1a624157a56984db93a967eb5cad75fa83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structIRockyParticleScalars" kindref="compound">IRockyParticleScalars</ref></type>
        <definition>IRockyParticleScalars IRockyBreakableParticle::get_scalars</definition>
        <argsstring>()</argsstring>
        <name>get_scalars</name>
        <qualifiedname>IRockyBreakableParticle::get_scalars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An <computeroutput><ref refid="structIRockyParticleScalars" kindref="compound">IRockyParticleScalars</ref></computeroutput> object, that gives access to all particle scalars variables defined in the project. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="690" column="27" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="741" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyBreakableParticle_1a5ccd372c25b095a9739c11dae8f02ab7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structIRockyParticleBreakageScalars" kindref="compound">IRockyParticleBreakageScalars</ref></type>
        <definition>IRockyParticleBreakageScalars IRockyBreakableParticle::get_breakage_scalars</definition>
        <argsstring>()</argsstring>
        <name>get_breakage_scalars</name>
        <qualifiedname>IRockyBreakableParticle::get_breakage_scalars</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An <computeroutput><ref refid="structIRockyParticleBreakageScalars" kindref="compound">IRockyParticleBreakageScalars</ref></computeroutput> object, that gives access to all particle breakage scalars variables defined in the project. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="696" column="35" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="746" bodyend="749"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><computeroutput><ref refid="structIRockyBreakableParticle" kindref="compound">IRockyBreakableParticle</ref></computeroutput> is an interface for particles enabled to break through instantaneous breakage during a simulation. It may used for the initialization of <computeroutput><ref refid="structIRockyParticleBreakageScalars" kindref="compound">IRockyParticleBreakageScalars</ref></computeroutput> that custom instantaneous breakage and/or fragment size distribution models may need. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_particle_api.hpp" line="647" column="1" bodyfile="source/c++/rocky20/api/rocky_particle_api.hpp" bodystart="648" bodyend="704"/>
    <listofallmembers>
      <member refid="structIRockyBreakableParticle_1a5ccd372c25b095a9739c11dae8f02ab7" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_breakage_scalars</name></member>
      <member refid="structIRockyBreakableParticle_1a39311189362162e429f060557815729c" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_minimum_fragment_size</name></member>
      <member refid="structIRockyBreakableParticle_1aca4e9c89438f779e191757c12103c65f" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_original_size</name></member>
      <member refid="structIRockyBreakableParticle_1a22690da66add12be7a332bc4a0e596cc" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_original_volume</name></member>
      <member refid="structIRockyBreakableParticle_1a6c9870ef714ee07eeb24bef485dac1b9" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_particle_group_index</name></member>
      <member refid="structIRockyBreakableParticle_1a624157a56984db93a967eb5cad75fa83" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_scalars</name></member>
      <member refid="structIRockyBreakableParticle_1abaff8573c455f7cf3793fefd8c43a793" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>get_strength</name></member>
      <member refid="structIRockyBreakableParticle_1a685c12928a91ee0fe62a243f35167d42" prot="public" virt="non-virtual"><scope>IRockyBreakableParticle</scope><name>set_as_unbreakable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
