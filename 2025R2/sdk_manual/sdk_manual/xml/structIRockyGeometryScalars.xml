<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structIRockyGeometryScalars" kind="struct" language="C++" prot="public">
    <compoundname>IRockyGeometryScalars</compoundname>
    <basecompoundref prot="public" virt="non-virtual">EntityScalars&lt; rocky20::BoundaryScalars &gt;</basecompoundref>
    <includes refid="rocky__boundary__scalars_8hpp" local="no">rocky_boundary_scalars.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structIRockyGeometryScalars_1aa943cd14cadc5673b99e273f135e82e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS double</type>
        <definition>ROCKY_FUNCTIONS double IRockyGeometryScalars::get_scalar</definition>
        <argsstring>(int scalar_index) const</argsstring>
        <name>get_scalar</name>
        <qualifiedname>IRockyGeometryScalars::get_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>the value currently stored can be accessed with this method.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value currently stored in the scalar variable.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_scalars.hpp" line="110" column="29"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryScalars_1a566039747df70cbffa7bba5225906a5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryScalars::set_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>set_scalar</name>
        <qualifiedname>IRockyGeometryScalars::set_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to store a value on it.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be stored.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_scalars.hpp" line="113" column="27"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryScalars_1a870beada21c47f75239b2f523e1dfca1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryScalars::add_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>add_scalar</name>
        <qualifiedname>IRockyGeometryScalars::add_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to sum a value to the current one stored in it.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value that must be summed to the current stored value.<linebreak/>
   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_scalars.hpp" line="116" column="26"/>
      </memberdef>
      <memberdef kind="function" id="structIRockyGeometryScalars_1aa5bd66e1850855de607d9499a7dfc0b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ROCKY_FUNCTIONS void</type>
        <definition>ROCKY_FUNCTIONS void IRockyGeometryScalars::max_scalar</definition>
        <argsstring>(int scalar_index, double value) const</argsstring>
        <name>max_scalar</name>
        <qualifiedname>IRockyGeometryScalars::max_scalar</qualifiedname>
        <param>
          <type>int</type>
          <declname>scalar_index</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>If a custom scalar variable was defined during the setup of the module,</title><para>this method can be used to make the scalar store the maximum of a set of values. A common use of this method is, for instance, to find the maximum among a set of values associated to the contacts of a particle.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar_index</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer index that was associated to the scalar variable during the setup of the module.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>A value that must be checked if it is greater than the current stored value.   </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/c++/rocky20/api/rocky_boundary_scalars.hpp" line="119" column="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>When running a simulation, an <computeroutput><ref refid="structIRockyGeometryScalars" kindref="compound">IRockyGeometryScalars</ref></computeroutput> gives access to all geometry scalars defined in the project. Geometry scalars are special variables with a different value associated to every geometry in a project. </para>
    </detaileddescription>
    <location file="source/c++/rocky20/api/rocky_boundary_scalars.hpp" line="96" column="1" bodyfile="source/c++/rocky20/api/rocky_boundary_scalars.hpp" bodystart="97" bodyend="122"/>
    <listofallmembers>
      <member refid="structIRockyGeometryScalars_1a870beada21c47f75239b2f523e1dfca1" prot="public" virt="non-virtual"><scope>IRockyGeometryScalars</scope><name>add_scalar</name></member>
      <member refid="structIRockyGeometryScalars_1aa943cd14cadc5673b99e273f135e82e1" prot="public" virt="non-virtual"><scope>IRockyGeometryScalars</scope><name>get_scalar</name></member>
      <member refid="structIRockyGeometryScalars_1aa5bd66e1850855de607d9499a7dfc0b4" prot="public" virt="non-virtual"><scope>IRockyGeometryScalars</scope><name>max_scalar</name></member>
      <member refid="structIRockyGeometryScalars_1a566039747df70cbffa7bba5225906a5e" prot="public" virt="non-virtual"><scope>IRockyGeometryScalars</scope><name>set_scalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
