{
    "openapi": "3.0.1",
    "info": {
        "title": "Ansys ID",
        "description": "API endpoints for managing groups, members, and roles for Ansys ID Portal",
        "version": "v2",
        "contact" : {
            "name": "Ajay Kushwaha",
            "email": "Ajay.Kushwaha@ansys.com"
          }
    },
    "paths": {
        "/account": {
            "post": {
                "operationId": "post-account",
                "tags": [
                    "Account"
                ],
                "summary": "Create a new account",
                "description": "# Account - Create\r\nCreate new account by providing the basic details.\r\n## Access Controls\r\nThis request requires authorization by Ansys ID SSO bearer token to establish user credentials. \r\n<br /> The SSO user must be associated with one or more customer accounts.\r\n## Role\r\nAccessible only to `Ansys Administrator`",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }            
      },
        "/accounts":{
            "post": {
                "operationId": "post-accounts",
                "tags": [
                    "Account"
                ],
                "summary": "Get list of all accounts",
                "description": "# Account - Get All\r\nGet all the account from data store.\r\n## Role\r\nAccessible only to `Ansys Administrator` and `Ansys Viewer`",
                "parameters": [
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To provide a search on Accounts using account name or number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDeatilsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}": {
            "get": {
                "operationId": "get-account",
                "tags": [
                    "Account"
                ],
                "summary": "Get account by Account Id",
                "description": "# Account - Get\r\nGet the account deatils by providing the Account Id.\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDeatilsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete",
                "tags": [
                    "Account"
                ],
                "summary": "Delete account by Account Id",
                "description": "# Account - Delete\r\nDelete existing by providing the Account Id. \r\n<br />Deleteing account can delete account permanently and remove the membership.\r\n<br />But the user reamins in the backend.\r\n## Role\r\nAccessible only to `Ansys Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },                               
        "/user": {
            "post": {
                "operationId": "post-user",
                "tags": [
                    "User"
                ],
                "summary": "Create new user",
                "description": "# User - Create\r\nCreate new user by providing the basic details.\r\n## Access Controls\r\nThis request requires authorization by Ansys ID SSO bearer token to establish user credentials. \r\n<br /> The SSO user must be associated with one or more customer accounts.\r\n## Role\r\nAccessible only to `Ansys Administrator`",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }          
        },
        "/users": {
            "get": {
                "operationId": "post-users",
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "# Users\r\nGet all the users\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`",
                "parameters": [
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To Provide search using `First Name`,`Last Name` and `Email`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },  
        "/users/{userId}": {
            "get": {
                "operationId": "get-user",
                "tags": [
                    "User"
                ],
                "summary": "Get user by User Id",
                "description": "# User - Get\r\nGet the user details by User Id\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetailsResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-user",
                "tags": [
                    "User"
                ],
                "summary": "Delete a user by User Id",
                "description": "# User - Delete\r\nDelete a user\r\n## Role\r\nAccessible only to `Ansys Administrator`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/{userId}/{status}": {
            "put": {
                "operationId": "put-user",
                "tags": [
                    "User"
                ],
                "summary": "Disable a user by User Id",
                "description": "# User - Disable\r\nDisable a user\r\n## Role\r\nAccessible only to `Ansys Administrator`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "description": "To enable or disable the users",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    }                    
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/user/groups": {
            "post": {
                "operationId": "post-user-groups",
                "tags": [
                    "User"
                ],
                "summary": "Get groups for user for any account",
                "description": "# User - Groups\r\nGet groups for user for any account\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "User Identifiers",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account Identifiers",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To provide search using `Group Name` or `Description`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupsFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupsFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGroupsFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupDetailsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },        
        "/users/accounts": {
            "post": {
                "operationId": "post-user-accounts",
                "tags": [
                    "User"
                ],
                "summary": "Get all accounts for user including their roles information",
                "description": "# User - Accounts\r\nGet all accounts for user including their roles information\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "User Identifiers",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To provide search using `Account Name` or `Number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UsersAccountDetailsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/details": {
            "get": {
                "operationId": "get-user-details",
                "tags": [
                    "User"
                ],
                "summary": "Get all accounts, groups and roles for given user",
                "description": "# User - Details\r\nGet all accounts, groups and roles for given user\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "style": "form",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/roles": {
            "get": {
                "operationId": "get-roles",
                "tags": [
                    "Role"
                ],
                "summary": "Get the list of all roles",
                "description": "# Roles\r\nGet the list of all roles\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoleResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/roles/{roleId}": {
            "get": {
                "operationId": "get-role",
                "tags": [
                    "Role"
                ],
                "summary": "Get a role by Role Id",
                "description": "# Roles - GetById\r\nGet a role by Role Id\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "RoleId",
                        "in": "path",
                        "description": "Role Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/users/{userId}/roles/{roleId}": {
            "put": {
                "operationId": "put-user-role",
                "tags": [
                    "UserRole"
                ],
                "summary": "Add role for user",
                "description": "# UserRole - Add\r\nAssign role to the user\r\n## Access Controls\r\nThis request requires authorization by Ansys ID SSO bearer token to establish user credentials. \r\n<br /> The SSO user must be associated with one or more customer accounts.\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RoleId",
                        "in": "path",
                        "description": "Role Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-user-role",
                "tags": [
                    "UserRole"
                ],
                "summary": "Delete role for user",
                "description": "# UserRole - Delete\r\nDelete role assigned to the user\r\n## Access Controls\r\nThis request requires authorization by Ansys ID SSO bearer token to establish user credentials. \r\n<br /> The SSO user must be associated with one or more customer accounts.\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RoleId",
                        "in": "path",
                        "description": "Role Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/users": {
            "post": {
                "operationId": "post-account-user",
                "tags": [
                    "AccountUser"
                ],
                "summary": "Get users in account",
                "description": "# AccountUsers - Get\r\nGet all the user from the given account by just providing the account id.\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To Provide search on users using first name, last name or email",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUserFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUserFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountUserFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountUserDeatilsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "put-account-user",
                "tags": [
                    "AccountUser"
                ],
                "summary": "Import multiple users into an account",
                "description": "# Users - Import\r\nGet all accounts, groups and roles for given user\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC` and `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateUserRequest"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateUserRequest"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CreateUserRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddUserToAccountResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/users/{userId}": {
            "put": {
                "operationId": "put-account-userid",
                "tags": [
                    "AccountUser"
                ],
                "summary": "Add user in account",
                "description": "# AccountUsers - Add\r\nAdd existing user to an given account\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC` and `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-account-user",
                "tags": [
                    "AccountUser"
                ],
                "summary": "Remove user from account",
                "description": "# AccountUsers - Delete\r\nRemove a user from given account by account id and user id.\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC` and `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/group": {
            "post": {
                "operationId": "post-group",
                "tags": [
                    "Group"
                ],
                "summary": "Create a new group for a given account",
                "description": "# Group - Create\r\nCreate new group by providing the basic details.  \r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC` and `Customer Administrator`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/groups/{groupId}": {
            "put": {
                "operationId": "put-group",
                "tags": [
                    "Group"
                ],
                "summary": "Update a group details",
                "description": "# Group - Update\r\nUpdate existing group details.  \r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGroupRequest"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGroupRequest"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGroupRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateGroupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "get-group",
                "tags": [
                    "Group"
                ],
                "summary": "Get group details by Group Id",
                "description": "# Group - GetById\r\nGet group details by group Id\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupDetailsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-group",
                "tags": [
                    "Group"
                ],
                "summary": "Delete a group by Group Id",
                "description": "# Group - Delete\r\nDelete group by Id\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/groups": {
            "post": {
                "operationId": "post-groups",
                "tags": [
                    "Group"
                ],
                "summary": "Get group list for an account",
                "description": "# Group - GetAll\r\nFetch group details by accountID\r\n## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "orderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderByField",
                        "in": "query",
                        "description": "Field values are `name` or `description`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To Provide search using `Group Name` and `Description`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and`CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupDetailsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/groups/types": {
            "get": {
                "operationId": "get-group-types",
                "description": "Get Group Types",
                "tags": [
                    "Group"
                ],
                "summary": "Get all group type",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupTypeResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/{accountId}/groups/{groupId}/{status}": {
            "post": {
                "operationId": "post-group-member",
                "tags": [
                    "GroupMember"
                ],
                "summary": "Get all members for a single group or non members",
                "description": "# Members - Get\r\nGet the list of members for a group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`\r\n<br /><br /> `Member`: If group type is `Private` or `0`. Members for the group should NOT be able to access this API. \r\n<br /> `Member`: If group type is `General` or `1`. Members for the group should be able to access this API.",
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "To get members or non members",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string"
                        }
                    },                  
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `DisplayName` and `IsGroupAsMember`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "To Provide search using `DisplayName` or `MemberEmail`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "To apply filter mentions the field `type` and `filter`. Available option are `EQUALS`, `NOTEQUALS` and `CONTAINS`",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemberListResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "put": {
                "operationId": "put-group-member",
                "tags": [
                    "GroupMember"
                ],
                "summary": "Add members to a group",
                "description": "# Members - Add\r\nAdd users or groups as member to group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddMembersInGroupResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-group-members",
                "tags": [
                    "GroupMember"
                ],
                "summary": "Remove members from group",
                "description": "# Member - Delete\r\nDelete members from group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberInGroupRequestModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteMembersInGroupResponseModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/groups/{groupId}/members/{memberId}": {
            "put": {
                "operationId": "put-group-memberid",
                "tags": [
                    "GroupMember"
                ],
                "summary": "Add member to a group",
                "description": "# Member - Add\r\nAdd user or group as member to group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "MemberId",
                        "in": "path",
                        "description": "Member Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-group-member",
                "tags": [
                    "GroupMember"
                ],
                "summary": "Remove a member from group",
                "description": "# Member - Delete\r\nDelete member from group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "MemberId",
                        "in": "path",
                        "description": "Member Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/groups/{groupId}/owners": {
            "get": {
                "operationId": "get-group-member",
                "tags": [
                    "GroupOwner"
                ],
                "summary": "Get a group owner",
                "description": "# Owner - Get\r\nGet owner details from group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OwnerResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/groups/{groupId}/owners/{userId}": {
            "put": {
                "operationId": "put-group-owner",
                "tags": [
                    "GroupOwner"
                ],
                "summary": "Add group owner",
                "description": "# Owner - Add\r\nAdd owner to a group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "delete-group-owner",
                "tags": [
                    "GroupOwner"
                ],
                "summary": "Delete group owner",
                "description": "# Owner - Delete\r\nDelete owner from group\r\n## Role\r\nAccessible only to `Ansys Administrator`, `ASC`, `Customer Administrator` and `Member` as Owner of the group.",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "Account Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "path",
                        "description": "Group Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "UserId",
                        "in": "path",
                        "description": "User Identifiers",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/activities/{activityId}": {
            "get": {
                "operationId": "get-activities",
                "tags": [
                    "Activities"
                ],
                "summary": "Get activity details by Activity Id",
                "description": "## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ActivityId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityDeatilsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/accounts/{accountId}/activities": {
            "post": {
                "operationId": "post-activities",
                "tags": [
                    "Activities"
                ],
                "summary": "Get the list of activities",
                "description": "## Role\r\nAccessible to `Ansys Administrator`, `Ansys Viewer`, `ASC`, `Customer Administrator` and `Member`",
                "parameters": [
                    {
                        "name": "AccountId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "style": "simple",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "OrderBy",
                        "in": "query",
                        "description": "This can be ordered by `asc` or `desc`.",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OrderByField",
                        "in": "query",
                        "description": "Field values are `name` or `number`",
                        "style": "form",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number starts from `0 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Page size starts from `1 to n`",
                        "style": "form",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`Start Date` and `End Date` are require field and `Email` is an optinal field.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFilterModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFilterModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityFilterModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityDeatilsListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccountDeatilsListResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountDeatilsResponse"
                        },
                        "description": "List of accounts.",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of records.",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Total number of pages.",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page.",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Order of sort records [asc, desc].",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "Name of the field by which records should be sorted.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account detail list response model."
            },
            "AccountDeatilsResponse": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account identifier.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the account.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the account.",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of the account.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Account number.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account details response."
            },
            "AccountFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/AccountFilterModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account filter model."
            },
            "AccountFilterModelFields": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "number": {
                        "$ref": "#/components/schemas/FilterStringType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the fields in the account filter model."
            },
            "AccountUserDeatilsListResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountUserDetailsResponse"
                        },
                        "description": "The list of users.",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "The total number of records.",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "The total number of pages.",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "The current page.",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "The order of sort records [asc, desc].",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "The name of the field by which records should be sorted.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account user details list response model."
            },
            "AccountUserDetailsResponse": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "Gets or sets the ID of the user.",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the first name of the user.",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the last name of the user.",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "Gets or sets the email address of the user.",
                        "nullable": true
                    },
                    "contactNumber": {
                        "type": "string",
                        "description": "Gets or sets the contact number which came from Siebel/Salesforce.",
                        "nullable": true
                    },
                    "uid": {
                        "type": "string",
                        "description": "Gets or sets the Azure ADB2C ID.",
                        "format": "uuid"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAccountRolesResponseModel"
                        },
                        "description": "Gets or sets the user roles.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account user details model."
            },
            "AccountUserFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/AccountUserFilterModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the account user filter model."
            },
            "AccountUserFilterModelFields": {
                "type": "object",
                "properties": {
                    "userId": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "email": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "role": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "contactNumber": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "uid": {
                        "$ref": "#/components/schemas/FilterStringType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model for account user fields."
            },
            "Accounts": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Gets or sets the account identifier.",
                        "format": "uuid"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Gets or sets the account number from Salesforce/Siebel.",
                        "nullable": true
                    },
                    "accountName": {
                        "type": "string",
                        "description": "Gets or sets the account name.",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        },
                        "description": "Gets or sets the user roles.",
                        "nullable": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Group"
                        },
                        "description": "Gets or sets the user groups.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the accounts response model."
            },
            "ActivityDeatilsListResponse": {
                "type": "object",
                "properties": {
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityDeatilsResponse"
                        },
                        "description": "List of activities",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Order of sort records [asc, desc]",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "Name of the field by which records should be sort",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent the activity deatil list response model"
            },
            "ActivityDeatilsResponse": {
                "type": "object",
                "properties": {
                    "activityId": {
                        "type": "string",
                        "description": "Activity identifier",
                        "format": "uuid"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Activity comment",
                        "nullable": true
                    },
                    "userEmail": {
                        "type": "string",
                        "description": "Activity created by",
                        "nullable": true
                    },
                    "createdOnUtc": {
                        "type": "string",
                        "description": "Activity created on, UTC Date",
                        "format": "date-time"
                    },
                    "accountId": {
                        "type": "string",
                        "description": "Account identifier",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Activity deatils response"
            },
            "ActivityFilterModel": {
                "type": "object",
                "properties": {
                    "activityFilterModel": {
                        "$ref": "#/components/schemas/ActivityFilterModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model for activity."
            },
            "ActivityFilterModelFields": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "$ref": "#/components/schemas/FilterDateType"
                    },
                    "endDate": {
                        "$ref": "#/components/schemas/FilterDateType"
                    },
                    "email": {
                        "$ref": "#/components/schemas/FilterStringOnlyType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model fields for activity."
            },
            "AddMembersInGroupResponseModel": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        },
                        "description": "Gets the list of successfully added members.",
                        "nullable": true
                    },
                    "notModified": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        },
                        "description": "Gets the list of members that were not modified.",
                        "nullable": true
                    },
                    "error": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        },
                        "description": "Gets the list of members that encountered an error during the operation.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the response model for adding members to a group."
            },
            "AddUserToAccountResponse": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateUserResponse"
                        },
                        "description": "Gets or sets the list of newly created users added to the account.",
                        "nullable": true
                    },
                    "updated": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateUserResponse"
                        },
                        "description": "Gets or sets the list of users that already exist and were added to the account.",
                        "nullable": true
                    },
                    "rejected": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateUserResponse"
                        },
                        "description": "Gets or sets the list of users that were already added to the account.",
                        "nullable": true
                    },
                    "failed": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateUserRequest"
                        },
                        "description": "Gets or sets the list of users that failed to be added to the account due to errors.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the response when adding a user to an account."
            },
            "BadRequestError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message containing diagnostic information",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "BaseResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "boolean",
                        "description": "Gets or sets the status of the response."
                    },
                    "message": {
                        "type": "string",
                        "description": "Gets or sets the message of the response.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the base response model."
            },
            "CreateAccountRequest": {
                "required": [
                    "name",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the account."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the account.",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "description": "The address of the account.",
                        "nullable": true
                    },
                    "number": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The number of the account. This account number is mapped with Siebel/Salesforce."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the create account request model.",
                "example": {
                    "name": "AppDev team",
                    "description": "All developer from application development team.",
                    "address": "Ansys Pune",
                    "number": "1010101010"
                }
            },
            "CreateGroupRequest": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the group"
                    },
                    "description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Description of the group",
                        "nullable": true
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "additionalProperties": false,
                "description": "Represent the create group request model",
                "example": {
                    "name": "AppDev team",
                    "description": "All developer from application development team.",
                    "groupType": 1
                }
            },
            "CreateGroupResponse": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "Gets or sets the group identifier.",
                        "format": "uuid"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "Gets or sets the group name.",
                        "nullable": true
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "Gets or sets the created date.",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Gets or sets the user who created the group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the response model for creating a group."
            },
            "CreateResponseModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the unique identification of the record.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the account.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description of the account.",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "description": "Gets or sets the address of the account.",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Gets or sets the number of the account.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the base response model."
            },
            "CreateUserRequest": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the last name of the user."
                    },
                    "lastName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the first name of the user."
                    },
                    "email": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the email of the user.",
                        "format": "email"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the create user request."
            },
            "CreateUserResponse": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the last name of the user."
                    },
                    "lastName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the first name of the user."
                    },
                    "email": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Gets or sets the email of the user.",
                        "format": "email"
                    },
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID of the user.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the create user response."
            },
            "DeleteMembersInGroupResponseModel": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        },
                        "description": "Gets the list of successfully deleted members.",
                        "nullable": true
                    },
                    "fail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        },
                        "description": "Gets the list of members that failed to be deleted.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the response model for deleting members from a group."
            },
            "FilterBoolType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type of the filter.",
                        "nullable": true
                    },
                    "filter": {
                        "type": "boolean",
                        "description": "Gets or sets the filter value as a boolean."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter type for boolean values."
            },
            "FilterDateType": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Gets or sets the filter value of type DateTime.",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter type for date."
            },
            "FilterIntType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type of the filter.",
                        "nullable": true
                    },
                    "filter": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "description": "Gets or sets the filter values as an array of integers.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter type for integer values."
            },
            "FilterStringOnlyType": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "Gets or sets the filter value of type string.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter type for string."
            },
            "FilterStringType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Gets or sets the type of the filter.",
                        "nullable": true
                    },
                    "filter": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Gets or sets the filter values as an array of strings.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter type for string values."
            },
            "Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID of the group.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the group.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description of the group.",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the group model."
            },
            "GroupDetailsListResponse": {
                "type": "object",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupDetailsResponse"
                        },
                        "description": "List of groups",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Order of sort records [asc, desc]",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "Name of the field by which records should be sort",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent group detail list response"
            },
            "GroupDetailsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of group",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the group",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of group",
                        "nullable": true
                    },
                    "isOwner": {
                        "type": "boolean",
                        "description": "To determine whether the user is the owner of the group or not."
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/GroupType"
                    },
                    "created": {
                        "type": "string",
                        "description": "Created",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Created By",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent the group response model"
            },
            "GroupFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/GroupFilterModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model for retrieving groups."
            },
            "GroupFilterModelFields": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/FilterIntType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model fields for retrieving groups."
            },
            "GroupType": {
                "enum": [
                    1,
                    2
                ],
                "type": "integer",
                "format": "int32"
            },
            "GroupTypeResponse": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "integer",
                        "description": "Group type identifier",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the group type",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the group type",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Respresnts the group type response model"
            },
            "InternalServerError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message containing diagnostic information",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Member": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string",
                        "description": "Gets or sets the identifier of the member.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a member in a group."
            },
            "MemberFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/MemberFilterModelModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model for filtering members."
            },
            "MemberFilterModelModelFields": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "email": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "isGroupAsMember": {
                        "$ref": "#/components/schemas/FilterBoolType"
                    },
                    "isOwner": {
                        "$ref": "#/components/schemas/FilterBoolType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the fields in the member filter model."
            },
            "MemberInGroupRequestModel": {
                "type": "object",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membership"
                        },
                        "description": "Gets or sets the list of members in the group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the request model for adding members to a group."
            },
            "MemberListResponseModel": {
                "type": "object",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MemberResponseModel"
                        },
                        "description": "Gets or sets the list of users.",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Gets or sets the total number of records.",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Gets or sets the total number of pages.",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Gets or sets the current page.",
                        "format": "int32"
                    },
                    "sortOrder": {
                        "type": "string",
                        "description": "Gets or sets the order of sorting records [asc, desc].",
                        "nullable": true
                    },
                    "sortField": {
                        "type": "string",
                        "description": "Gets or sets the name of the field by which records should be sorted.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the member list response model."
            },
            "MemberResponseModel": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string",
                        "description": "Gets or sets the ID of the member.",
                        "format": "uuid"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the name of the member.",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "Gets or sets the email of the member.",
                        "nullable": true
                    },
                    "isGroupAsMember": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the member is a group of members."
                    },
                    "isOwner": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the member is the owner of a group."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the member response model."
            },
            "Membership": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string",
                        "description": "Gets or sets the member identifier.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Represents a member in a group."
            },
            "NotFoundError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message containing diagnostic information",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "NotGroupMember": {
                "type": "object",
                "properties": {
                    "memberId": {
                        "type": "string",
                        "description": "Gets or sets the identifier of the member.",
                        "format": "uuid"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the display name of the member.",
                        "nullable": true
                    },
                    "isGroupAsMember": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the member is a group itself or not."
                    }
                },
                "additionalProperties": false,
                "description": "Represents a member who is not a part of a group."
            },
            "NotMemberFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/NotMemberFilterModelField"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model for non-members.\r\n<br /><br />- `displayName` supports [`CONTAINS`] filtering."
            },
            "NotMemberFilterModelField": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "isGroupAsMember": {
                        "$ref": "#/components/schemas/FilterBoolType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model fields for non-members."
            },
            "NotMemberListResponseModel": {
                "type": "object",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotGroupMember"
                        },
                        "description": "Gets or sets the list of users.",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Gets or sets the total number of records.",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Gets or sets the total number of pages.",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Gets or sets the current page.",
                        "format": "int32"
                    },
                    "sortOrder": {
                        "type": "string",
                        "description": "Gets or sets the order of sorting records [asc, desc].",
                        "nullable": true
                    },
                    "sortField": {
                        "type": "string",
                        "description": "Gets or sets the name of the field by which records should be sorted.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the not member list response model."
            },
            "OwnerResponseModel": {
                "type": "object",
                "properties": {
                    "ownerId": {
                        "type": "string",
                        "description": "Gets or sets the ID of the owner.",
                        "format": "uuid"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Gets or sets the name of the owner.",
                        "nullable": true
                    },
                    "isGroupAsOwner": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the owner is a group or a user."
                    }
                },
                "additionalProperties": false,
                "description": "Represents the owner response model."
            },
            "Role": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the ID of the role.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the role.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the role model."
            },
            "RoleResponseModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Gets or sets the role identifier.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Gets or sets the name of the role.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Gets or sets the description of the role.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the role response model."
            },
            "UnauthorizedError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "The error message containing diagnostic information",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateGroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the group",
                        "nullable": true
                    },
                    "description": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "Description of the group",
                        "nullable": true
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/GroupType"
                    }
                },
                "additionalProperties": false,
                "description": "Represent the create group request model",
                "example": {
                    "name": "AppDev team",
                    "description": "All developer from application development team.",
                    "groupType": 1
                }
            },
            "UpdateGroupResponse": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "Gets or sets the group identifier.",
                        "format": "uuid"
                    },
                    "lastModifiedDate": {
                        "type": "string",
                        "description": "Gets or sets the last modified date of the group.",
                        "format": "date-time"
                    },
                    "lastModifiedBy": {
                        "type": "string",
                        "description": "Gets or sets the last user who modified the group.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the response model for updating a group."
            },
            "UserAccountRolesResponseModel": {
                "type": "object",
                "properties": {
                    "roleId": {
                        "type": "string",
                        "description": "Id fo role",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of role",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Respresent the user account roles response model"
            },
            "UserDetails": {
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "Gets or sets the user identifier.",
                        "format": "uuid"
                    },
                    "uid": {
                        "type": "string",
                        "description": "Gets or sets the user ADB2C identifier.",
                        "format": "uuid"
                    },
                    "email": {
                        "type": "string",
                        "description": "Gets or sets the user email address.",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Gets or sets the user first name.",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Gets or sets the user last name.",
                        "nullable": true
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Gets or sets a value indicating whether the user is deleted or not."
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Accounts"
                        },
                        "description": "Gets or sets the list of accounts that the user is associated with.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represents the user details model."
            },
            "UserDetailsListResponse": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDetailsResponseModel"
                        },
                        "description": "List of users",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Order of sort records [asc, desc]",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "Name of the field by which records should be sort",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent the user detail list response model"
            },
            "UserDetailsResponseModel": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "Email of the user",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the user",
                        "format": "uuid"
                    },
                    "uid": {
                        "type": "string",
                        "description": "UID of the user",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "First name of the user",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Last name of the user",
                        "nullable": true
                    },
                    "contactNumber": {
                        "type": "string",
                        "description": "Contact number of the user",
                        "nullable": true
                    },
                    "isDisabled": {
                        "type": "boolean",
                        "description": "IsDisabled is set to false by default, TRUE=Disabled, FALSE=Not Disabled"
                    },
                    "isImported": {
                        "type": "boolean",
                        "description": "Value is TRUE if the user imported by the Ansys portal not by the Siebel/Salesforce"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the user details response model"
            },
            "UserFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/UserFilterModellFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the user filter model."
            },
            "UserFilterModellFields": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "lastName": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "email": {
                        "$ref": "#/components/schemas/FilterStringType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the filter model fields for user filtering."
            },
            "UserGroupsFilterModel": {
                "type": "object",
                "properties": {
                    "filterModel": {
                        "$ref": "#/components/schemas/UserGroupsFilterModelFields"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the user groups filter model."
            },
            "UserGroupsFilterModelFields": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "name": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "description": {
                        "$ref": "#/components/schemas/FilterStringType"
                    },
                    "groupType": {
                        "$ref": "#/components/schemas/FilterIntType"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the fields in the user groups filter model."
            },
            "UsersAccountDetailsListResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UsersAccountDetailsResponse"
                        },
                        "description": "List of accounts",
                        "nullable": true
                    },
                    "totalCount": {
                        "type": "integer",
                        "description": "Total number of records",
                        "format": "int32"
                    },
                    "totalPage": {
                        "type": "integer",
                        "description": "Total number of pages",
                        "format": "int32"
                    },
                    "currentPage": {
                        "type": "integer",
                        "description": "Current page",
                        "format": "int32"
                    },
                    "orderBy": {
                        "type": "string",
                        "description": "Order of sort records [asc, desc]",
                        "nullable": true
                    },
                    "orderByField": {
                        "type": "string",
                        "description": "Name of the field by which records should be sort",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent the users account detail list response model"
            },
            "UsersAccountDetailsResponse": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Id of account",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of account",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "DEcsription of account",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "description": "Address of account, location",
                        "nullable": true
                    },
                    "number": {
                        "type": "string",
                        "description": "Number of account that comes from Seibel/Salesforce",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAccountRolesResponseModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Represent the user account deatils response model"
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "Please insert JWT with `Bearer` into field. Example: `Bearer eXterwe012yt...`",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}