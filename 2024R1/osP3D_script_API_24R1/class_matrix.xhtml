<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Matrix Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_matrix.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Matrix Class Reference<div class="ingroups"><a class="el" href="group__tmath.xhtml">tmath</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Standard matrix class.  
 <a href="class_matrix.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a973c5b26a9107f3517a08587cff16bd2"><td class="memItemLeft" align="right" valign="top"><a id="a973c5b26a9107f3517a08587cff16bd2"></a>
typedef Eigen::Matrix&lt; <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a973c5b26a9107f3517a08587cff16bd2">Base</a></td></tr>
<tr class="memdesc:a973c5b26a9107f3517a08587cff16bd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">the type of the ancestor class <br /></td></tr>
<tr class="separator:a973c5b26a9107f3517a08587cff16bd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3541a03e0ef75e0b541a5969c9c998a2"><td class="memItemLeft" align="right" valign="top"><a id="a3541a03e0ef75e0b541a5969c9c998a2"></a>
typedef <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a3541a03e0ef75e0b541a5969c9c998a2">TBuffer</a></td></tr>
<tr class="memdesc:a3541a03e0ef75e0b541a5969c9c998a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">the data type of the dynamic data buffer (pointer) <br /></td></tr>
<tr class="separator:a3541a03e0ef75e0b541a5969c9c998a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353dbc81e718cd4640b7c719b512892f"><td class="memItemLeft" align="right" valign="top"><a id="a353dbc81e718cd4640b7c719b512892f"></a>
typedef Base::Index&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a></td></tr>
<tr class="memdesc:a353dbc81e718cd4640b7c719b512892f"><td class="mdescLeft">&#160;</td><td class="mdescRight">index type for Eigen matrices <br /></td></tr>
<tr class="separator:a353dbc81e718cd4640b7c719b512892f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad33f729eda6e45412aac71cee702012f"><td class="memItemLeft" align="right" valign="top"><a id="ad33f729eda6e45412aac71cee702012f"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a></td></tr>
<tr class="memdesc:ad33f729eda6e45412aac71cee702012f"><td class="mdescLeft">&#160;</td><td class="mdescRight">the floating point number type of a mtrix element <br /></td></tr>
<tr class="separator:ad33f729eda6e45412aac71cee702012f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab423d248b103558b5903c702c13335ae"><td class="memItemLeft" align="right" valign="top"><a id="ab423d248b103558b5903c702c13335ae"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a></td></tr>
<tr class="memdesc:ab423d248b103558b5903c702c13335ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">an unsigned index type <br /></td></tr>
<tr class="separator:ab423d248b103558b5903c702c13335ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a409c220b0818155c19d4c4db187e38ae"><td class="memItemLeft" align="right" valign="top"><a id="a409c220b0818155c19d4c4db187e38ae"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>__getstate__</b> ()</td></tr>
<tr class="separator:a409c220b0818155c19d4c4db187e38ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c73883479858e4c1c7b5f10120d384d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a2c73883479858e4c1c7b5f10120d384d">__neg__</a> () const</td></tr>
<tr class="separator:a2c73883479858e4c1c7b5f10120d384d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93055c15dec0379a5aa9246794ecc970"><td class="memItemLeft" align="right" valign="top"><a id="a93055c15dec0379a5aa9246794ecc970"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>__setstate_internal</b> (string state)</td></tr>
<tr class="separator:a93055c15dec0379a5aa9246794ecc970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb0255d0035cd7783ce87f41a3cae5cc"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#adb0255d0035cd7783ce87f41a3cae5cc">__str__</a> ()</td></tr>
<tr class="memdesc:adb0255d0035cd7783ce87f41a3cae5cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">transforms this objects into a string, required by SWIG  <a href="#adb0255d0035cd7783ce87f41a3cae5cc">More...</a><br /></td></tr>
<tr class="separator:adb0255d0035cd7783ce87f41a3cae5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae390486e349048d81ac273eb7aa9670"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aae390486e349048d81ac273eb7aa9670">Add</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:aae390486e349048d81ac273eb7aa9670"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the matrix sum A+B  <a href="#aae390486e349048d81ac273eb7aa9670">More...</a><br /></td></tr>
<tr class="separator:aae390486e349048d81ac273eb7aa9670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e0ea5c8f9b3101114cbb16faf410f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a25e0ea5c8f9b3101114cbb16faf410f5">Add</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:a25e0ea5c8f9b3101114cbb16faf410f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the matrix sum A+B  <a href="#a25e0ea5c8f9b3101114cbb16faf410f5">More...</a><br /></td></tr>
<tr class="separator:a25e0ea5c8f9b3101114cbb16faf410f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4912b06072bc88055919100dd4df444"><td class="memItemLeft" align="right" valign="top"><a id="af4912b06072bc88055919100dd4df444"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#af4912b06072bc88055919100dd4df444">AddCol</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> m)</td></tr>
<tr class="memdesc:af4912b06072bc88055919100dd4df444"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object including new data data <br /></td></tr>
<tr class="separator:af4912b06072bc88055919100dd4df444"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a316e7446fe396ef7395fdd7eb9470858"><td class="memItemLeft" align="right" valign="top"><a id="a316e7446fe396ef7395fdd7eb9470858"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AddRow</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> m)</td></tr>
<tr class="separator:a316e7446fe396ef7395fdd7eb9470858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d45e6e20e2284a40d69bf343b0b0359"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a8d45e6e20e2284a40d69bf343b0b0359">AppendCols</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> m)</td></tr>
<tr class="memdesc:a8d45e6e20e2284a40d69bf343b0b0359"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object with modified data  <a href="#a8d45e6e20e2284a40d69bf343b0b0359">More...</a><br /></td></tr>
<tr class="separator:a8d45e6e20e2284a40d69bf343b0b0359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab43482ffc988b4e4fee38e3f4d7bfe50"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ab43482ffc988b4e4fee38e3f4d7bfe50">AppendRows</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> m)</td></tr>
<tr class="memdesc:ab43482ffc988b4e4fee38e3f4d7bfe50"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object with modified data  <a href="#ab43482ffc988b4e4fee38e3f4d7bfe50">More...</a><br /></td></tr>
<tr class="separator:ab43482ffc988b4e4fee38e3f4d7bfe50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a087ab2e312c3f5ce4e20173db757fdf8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a087ab2e312c3f5ce4e20173db757fdf8">Assign</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> ar)</td></tr>
<tr class="memdesc:a087ab2e312c3f5ce4e20173db757fdf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The assignment operator for matrices (data only)  <a href="#a087ab2e312c3f5ce4e20173db757fdf8">More...</a><br /></td></tr>
<tr class="separator:a087ab2e312c3f5ce4e20173db757fdf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d654d1ab1ea88faee2c64103aec6703"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a6d654d1ab1ea88faee2c64103aec6703">Assign</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> ar)</td></tr>
<tr class="memdesc:a6d654d1ab1ea88faee2c64103aec6703"><td class="mdescLeft">&#160;</td><td class="mdescRight">The assignment operator for blocks (data only)  <a href="#a6d654d1ab1ea88faee2c64103aec6703">More...</a><br /></td></tr>
<tr class="separator:a6d654d1ab1ea88faee2c64103aec6703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8879d4398a0c2f56fe0fcfd5daa2e2a1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a8879d4398a0c2f56fe0fcfd5daa2e2a1">Block</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> numrows, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> numcols)</td></tr>
<tr class="memdesc:a8879d4398a0c2f56fe0fcfd5daa2e2a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a reference to a block starting at 'row','column' with size 'numrows'*'numcols'  <a href="#a8879d4398a0c2f56fe0fcfd5daa2e2a1">More...</a><br /></td></tr>
<tr class="separator:a8879d4398a0c2f56fe0fcfd5daa2e2a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08daeaee307e7a167c01319997a0fdd0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a08daeaee307e7a167c01319997a0fdd0">Col</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col)</td></tr>
<tr class="memdesc:a08daeaee307e7a167c01319997a0fdd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a reference to the 'col'th column  <a href="#a08daeaee307e7a167c01319997a0fdd0">More...</a><br /></td></tr>
<tr class="separator:a08daeaee307e7a167c01319997a0fdd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca933e9807a041c96c0ff00dce7fe81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aeca933e9807a041c96c0ff00dce7fe81">Cols</a> () const</td></tr>
<tr class="separator:aeca933e9807a041c96c0ff00dce7fe81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68d169caa3b3dbc2d105237205de4816"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a68d169caa3b3dbc2d105237205de4816">Cols</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col1, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> ncol)</td></tr>
<tr class="memdesc:a68d169caa3b3dbc2d105237205de4816"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a block containing the ncol columns starting at column index col1  <a href="#a68d169caa3b3dbc2d105237205de4816">More...</a><br /></td></tr>
<tr class="separator:a68d169caa3b3dbc2d105237205de4816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8c24eb13027a50ecf2ab7406af4cc6b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ab8c24eb13027a50ecf2ab7406af4cc6b">ConservativeResize</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> rows, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> cols=1)</td></tr>
<tr class="memdesc:ab8c24eb13027a50ecf2ab7406af4cc6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">resizes the matrix to its new dimensions without destroying the contents.  <a href="#ab8c24eb13027a50ecf2ab7406af4cc6b">More...</a><br /></td></tr>
<tr class="separator:ab8c24eb13027a50ecf2ab7406af4cc6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1c2d29afd675d763db255b6fd3362f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_c_wise.xhtml">MatrixCWise</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ae1c2d29afd675d763db255b6fd3362f7">CW</a> ()</td></tr>
<tr class="separator:ae1c2d29afd675d763db255b6fd3362f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4ffbe13f1929444cbb608d5b941fb7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a2e4ffbe13f1929444cbb608d5b941fb7">Div</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> other)</td></tr>
<tr class="memdesc:a2e4ffbe13f1929444cbb608d5b941fb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the scalar matrix quotient A/s  <a href="#a2e4ffbe13f1929444cbb608d5b941fb7">More...</a><br /></td></tr>
<tr class="separator:a2e4ffbe13f1929444cbb608d5b941fb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfed915b7780c75668a49b9c9029e8be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#abfed915b7780c75668a49b9c9029e8be">Dot</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:abfed915b7780c75668a49b9c9029e8be"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the scalar product of two vectors (a'b)  <a href="#abfed915b7780c75668a49b9c9029e8be">More...</a><br /></td></tr>
<tr class="separator:abfed915b7780c75668a49b9c9029e8be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab4bd2af115bd460e3cf5a789dc5108d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aab4bd2af115bd460e3cf5a789dc5108d">Dot</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:aab4bd2af115bd460e3cf5a789dc5108d"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the scalar product of two vectors (a'b)  <a href="#aab4bd2af115bd460e3cf5a789dc5108d">More...</a><br /></td></tr>
<tr class="separator:aab4bd2af115bd460e3cf5a789dc5108d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae92c980182f755faafdac5613004c20"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aae92c980182f755faafdac5613004c20">Dott</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:aae92c980182f755faafdac5613004c20"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the weighted scalar product of this matrix and the given vector multiplied once from left and once from right (b'Ab)  <a href="#aae92c980182f755faafdac5613004c20">More...</a><br /></td></tr>
<tr class="separator:aae92c980182f755faafdac5613004c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67c5a1cc69b21c0cad7c3765e093840f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a67c5a1cc69b21c0cad7c3765e093840f">Dott</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:a67c5a1cc69b21c0cad7c3765e093840f"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the weighted scalar product of this matrix and the given vector multiplied once from left and once from right (b'Ab)  <a href="#a67c5a1cc69b21c0cad7c3765e093840f">More...</a><br /></td></tr>
<tr class="separator:a67c5a1cc69b21c0cad7c3765e093840f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e9b9a6341a21706e7ab7fa74d85fb6b"><td class="memItemLeft" align="right" valign="top"><a id="a8e9b9a6341a21706e7ab7fa74d85fb6b"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a8e9b9a6341a21706e7ab7fa74d85fb6b">GetCols</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col1, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> ncol=1)</td></tr>
<tr class="memdesc:a8e9b9a6341a21706e7ab7fa74d85fb6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object providing copy of data <br /></td></tr>
<tr class="separator:a8e9b9a6341a21706e7ab7fa74d85fb6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e2f6212a71005206146c73eff303623"><td class="memItemLeft" align="right" valign="top"><a id="a2e2f6212a71005206146c73eff303623"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetCols</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> indices)</td></tr>
<tr class="separator:a2e2f6212a71005206146c73eff303623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa759de5ec4f041efcd591f813c386ad9"><td class="memItemLeft" align="right" valign="top"><a id="aa759de5ec4f041efcd591f813c386ad9"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetColsThread</b> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> ncols)</td></tr>
<tr class="separator:aa759de5ec4f041efcd591f813c386ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd3fbaa37c0588fd4903b38447b089b9"><td class="memItemLeft" align="right" valign="top"><a id="acd3fbaa37c0588fd4903b38447b089b9"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRows</b> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row1, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> nrow=1)</td></tr>
<tr class="separator:acd3fbaa37c0588fd4903b38447b089b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0edad89b0b68029ed1832f062589d1d"><td class="memItemLeft" align="right" valign="top"><a id="ac0edad89b0b68029ed1832f062589d1d"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRows</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> indices)</td></tr>
<tr class="separator:ac0edad89b0b68029ed1832f062589d1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7489eccfc7609116ff5f3986b3d7b3c"><td class="memItemLeft" align="right" valign="top"><a id="ab7489eccfc7609116ff5f3986b3d7b3c"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRowsThread</b> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> nrows)</td></tr>
<tr class="separator:ab7489eccfc7609116ff5f3986b3d7b3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9ff4aabff3596abf5955bae04b910ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ac9ff4aabff3596abf5955bae04b910ac">InnerProduct</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:ac9ff4aabff3596abf5955bae04b910ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the inner product of two matrices/vectors (a'*b)  <a href="#ac9ff4aabff3596abf5955bae04b910ac">More...</a><br /></td></tr>
<tr class="separator:ac9ff4aabff3596abf5955bae04b910ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3959900c4fac029b062c2becab74189"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ae3959900c4fac029b062c2becab74189">InnerProduct</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:ae3959900c4fac029b062c2becab74189"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the inner product of two matrices/vectors (a'*b)  <a href="#ae3959900c4fac029b062c2becab74189">More...</a><br /></td></tr>
<tr class="separator:ae3959900c4fac029b062c2becab74189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e294708c28b3276177033f775b07959"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a5e294708c28b3276177033f775b07959">IsApprox</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other, <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s) const</td></tr>
<tr class="memdesc:a5e294708c28b3276177033f775b07959"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if other and this are approx. identical  <a href="#a5e294708c28b3276177033f775b07959">More...</a><br /></td></tr>
<tr class="separator:a5e294708c28b3276177033f775b07959"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6b5ff21f6e6dace60d84b61dca1be06"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ac6b5ff21f6e6dace60d84b61dca1be06">IsApproxToConstant</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> value, <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:ac6b5ff21f6e6dace60d84b61dca1be06"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is constant and approx. equal s  <a href="#ac6b5ff21f6e6dace60d84b61dca1be06">More...</a><br /></td></tr>
<tr class="separator:ac6b5ff21f6e6dace60d84b61dca1be06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01f5dd6f597e652c42bd3015ad507191"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a01f5dd6f597e652c42bd3015ad507191">IsDiagonal</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:a01f5dd6f597e652c42bd3015ad507191"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is a diagonal matrix by precision s  <a href="#a01f5dd6f597e652c42bd3015ad507191">More...</a><br /></td></tr>
<tr class="separator:a01f5dd6f597e652c42bd3015ad507191"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac69c6571245195e236f0c642c4a4a97"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aac69c6571245195e236f0c642c4a4a97">IsIdentity</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:aac69c6571245195e236f0c642c4a4a97"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is the identity matrix by precision s  <a href="#aac69c6571245195e236f0c642c4a4a97">More...</a><br /></td></tr>
<tr class="separator:aac69c6571245195e236f0c642c4a4a97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52353850b8d700400f021350033e1d1f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a52353850b8d700400f021350033e1d1f">IsLowerTriangular</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:a52353850b8d700400f021350033e1d1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is a lower triangular matrix by precision s  <a href="#a52353850b8d700400f021350033e1d1f">More...</a><br /></td></tr>
<tr class="separator:a52353850b8d700400f021350033e1d1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a087c6c345ee2a195620c445edce6ac3e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a087c6c345ee2a195620c445edce6ac3e">IsScalar</a> ()</td></tr>
<tr class="separator:a087c6c345ee2a195620c445edce6ac3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532f94f1b94ee8d7c37b5778e665e171"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a532f94f1b94ee8d7c37b5778e665e171">IsUnitary</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:a532f94f1b94ee8d7c37b5778e665e171"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is a unitary matrix by precision s (is an orthonormal basis)  <a href="#a532f94f1b94ee8d7c37b5778e665e171">More...</a><br /></td></tr>
<tr class="separator:a532f94f1b94ee8d7c37b5778e665e171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa1b06c2e42742d84cf52d0339718d74"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aaa1b06c2e42742d84cf52d0339718d74">IsUpperTriangular</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="memdesc:aaa1b06c2e42742d84cf52d0339718d74"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if array is an upper triangular matrix by precision s  <a href="#aaa1b06c2e42742d84cf52d0339718d74">More...</a><br /></td></tr>
<tr class="separator:aaa1b06c2e42742d84cf52d0339718d74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bf46091a7288ba42f1df85840d905a7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a4bf46091a7288ba42f1df85840d905a7">IsVector</a> ()</td></tr>
<tr class="separator:a4bf46091a7288ba42f1df85840d905a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf6af85eb9b71f6e502c05cef31a4add"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aaf6af85eb9b71f6e502c05cef31a4add">IsZero</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> s)</td></tr>
<tr class="separator:aaf6af85eb9b71f6e502c05cef31a4add"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aede62f513da27e6f61ae7a972b4f96"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a3aede62f513da27e6f61ae7a972b4f96">Matrix</a> ()</td></tr>
<tr class="memdesc:a3aede62f513da27e6f61ae7a972b4f96"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#a3aede62f513da27e6f61ae7a972b4f96">More...</a><br /></td></tr>
<tr class="separator:a3aede62f513da27e6f61ae7a972b4f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5224f99e6ff6e4fb950942127f7e6a7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ae5224f99e6ff6e4fb950942127f7e6a7">Matrix</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> ar)</td></tr>
<tr class="memdesc:ae5224f99e6ff6e4fb950942127f7e6a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#ae5224f99e6ff6e4fb950942127f7e6a7">More...</a><br /></td></tr>
<tr class="separator:ae5224f99e6ff6e4fb950942127f7e6a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02871da8f44599d14514aa0151bf069e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a02871da8f44599d14514aa0151bf069e">Matrix</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> nrow, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> ncol=1)</td></tr>
<tr class="memdesc:a02871da8f44599d14514aa0151bf069e"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructs a matrix and allocates nrow*ncol elements  <a href="#a02871da8f44599d14514aa0151bf069e">More...</a><br /></td></tr>
<tr class="separator:a02871da8f44599d14514aa0151bf069e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fdd420eadda66bc8985006bc2bf33f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#af6fdd420eadda66bc8985006bc2bf33f">Matrix</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> x)</td></tr>
<tr class="memdesc:af6fdd420eadda66bc8985006bc2bf33f"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructs a matrix from a matrix block  <a href="#af6fdd420eadda66bc8985006bc2bf33f">More...</a><br /></td></tr>
<tr class="separator:af6fdd420eadda66bc8985006bc2bf33f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cca63ba6c0409c3ead928e2344df131"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a0cca63ba6c0409c3ead928e2344df131">Matrix</a> (sparse::SparseMatrix x)</td></tr>
<tr class="memdesc:a0cca63ba6c0409c3ead928e2344df131"><td class="mdescLeft">&#160;</td><td class="mdescRight">copies from a sparse matrix  <a href="#a0cca63ba6c0409c3ead928e2344df131">More...</a><br /></td></tr>
<tr class="separator:a0cca63ba6c0409c3ead928e2344df131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0ed2c94ee6d96d9f03d8e56b3e41730"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ab0ed2c94ee6d96d9f03d8e56b3e41730">Matrix</a> (sparse::SymSparseMatrix x)</td></tr>
<tr class="memdesc:ab0ed2c94ee6d96d9f03d8e56b3e41730"><td class="mdescLeft">&#160;</td><td class="mdescRight">copies from a symmetric sparse matrix  <a href="#ab0ed2c94ee6d96d9f03d8e56b3e41730">More...</a><br /></td></tr>
<tr class="separator:ab0ed2c94ee6d96d9f03d8e56b3e41730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02269c910dc4d6e7962201306589c136"><td class="memItemLeft" align="right" valign="top"><a id="a02269c910dc4d6e7962201306589c136"></a>
<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MaxCoeff</b> (<a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *OUTPUT, <a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *OUTPUT) const</td></tr>
<tr class="separator:a02269c910dc4d6e7962201306589c136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f341a74fe43447f9cd684a645ea55b1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a2f341a74fe43447f9cd684a645ea55b1">MinCoeff</a> (<a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *OUTPUT, <a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *OUTPUT) const</td></tr>
<tr class="memdesc:a2f341a74fe43447f9cd684a645ea55b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">find the smallest element in the array returns the minimum element in the array  <a href="#a2f341a74fe43447f9cd684a645ea55b1">More...</a><br /></td></tr>
<tr class="separator:a2f341a74fe43447f9cd684a645ea55b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67ad9262c1ebdd144f96accf0222b777"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a67ad9262c1ebdd144f96accf0222b777">Mul</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> other)</td></tr>
<tr class="memdesc:a67ad9262c1ebdd144f96accf0222b777"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the scalar matrix product A*s  <a href="#a67ad9262c1ebdd144f96accf0222b777">More...</a><br /></td></tr>
<tr class="separator:a67ad9262c1ebdd144f96accf0222b777"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e90840f4d196f9fd74cf8f59b94cb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a29e90840f4d196f9fd74cf8f59b94cb9">operator*</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other) const</td></tr>
<tr class="memdesc:a29e90840f4d196f9fd74cf8f59b94cb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix product A*B  <a href="#a29e90840f4d196f9fd74cf8f59b94cb9">More...</a><br /></td></tr>
<tr class="separator:a29e90840f4d196f9fd74cf8f59b94cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53936030c84cd000ecbf81d5fa6fb005"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a53936030c84cd000ecbf81d5fa6fb005">operator*</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other) const</td></tr>
<tr class="memdesc:a53936030c84cd000ecbf81d5fa6fb005"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix product A*B  <a href="#a53936030c84cd000ecbf81d5fa6fb005">More...</a><br /></td></tr>
<tr class="separator:a53936030c84cd000ecbf81d5fa6fb005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab37a095452e105c76034aca0303000d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ab37a095452e105c76034aca0303000d9">operator*</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> other) const</td></tr>
<tr class="memdesc:ab37a095452e105c76034aca0303000d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the scalar matrix product A*s  <a href="#ab37a095452e105c76034aca0303000d9">More...</a><br /></td></tr>
<tr class="separator:ab37a095452e105c76034aca0303000d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab49eb12364bb2a0a4341e884029dfea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aab49eb12364bb2a0a4341e884029dfea">operator+</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other) const</td></tr>
<tr class="memdesc:aab49eb12364bb2a0a4341e884029dfea"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix sum A+B  <a href="#aab49eb12364bb2a0a4341e884029dfea">More...</a><br /></td></tr>
<tr class="separator:aab49eb12364bb2a0a4341e884029dfea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0cebd5d95ee9c112d3e835b1eb2f184"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ae0cebd5d95ee9c112d3e835b1eb2f184">operator+</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other) const</td></tr>
<tr class="memdesc:ae0cebd5d95ee9c112d3e835b1eb2f184"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix sum A+B  <a href="#ae0cebd5d95ee9c112d3e835b1eb2f184">More...</a><br /></td></tr>
<tr class="separator:ae0cebd5d95ee9c112d3e835b1eb2f184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2277ad125549453bb0e2e986287ead45"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a2277ad125549453bb0e2e986287ead45">operator-</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other) const</td></tr>
<tr class="memdesc:a2277ad125549453bb0e2e986287ead45"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix difference A-B  <a href="#a2277ad125549453bb0e2e986287ead45">More...</a><br /></td></tr>
<tr class="separator:a2277ad125549453bb0e2e986287ead45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb471a658b8d9f65134fb3ef7163d8c5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#adb471a658b8d9f65134fb3ef7163d8c5">operator-</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other) const</td></tr>
<tr class="memdesc:adb471a658b8d9f65134fb3ef7163d8c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix difference A-B  <a href="#adb471a658b8d9f65134fb3ef7163d8c5">More...</a><br /></td></tr>
<tr class="separator:adb471a658b8d9f65134fb3ef7163d8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a380ed928adb0f77541239d3ed8a56f43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a380ed928adb0f77541239d3ed8a56f43">operator/</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> other) const</td></tr>
<tr class="memdesc:a380ed928adb0f77541239d3ed8a56f43"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the scalar matrix quotient A/s  <a href="#a380ed928adb0f77541239d3ed8a56f43">More...</a><br /></td></tr>
<tr class="separator:a380ed928adb0f77541239d3ed8a56f43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a872a8318f4c9b443d9268a2ac27ece7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a872a8318f4c9b443d9268a2ac27ece7a">operator&lt;</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> x) const</td></tr>
<tr class="memdesc:a872a8318f4c9b443d9268a2ac27ece7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a matrix of 1 and 0 indicating which element is less than x  <a href="#a872a8318f4c9b443d9268a2ac27ece7a">More...</a><br /></td></tr>
<tr class="separator:a872a8318f4c9b443d9268a2ac27ece7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af745b2c8e2616be12145fc40d890125a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#af745b2c8e2616be12145fc40d890125a">operator=</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> ar)</td></tr>
<tr class="memdesc:af745b2c8e2616be12145fc40d890125a"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy assignment operator  <a href="#af745b2c8e2616be12145fc40d890125a">More...</a><br /></td></tr>
<tr class="separator:af745b2c8e2616be12145fc40d890125a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac64b04d3ca8a4e032beeb4f5eeffeb02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ac64b04d3ca8a4e032beeb4f5eeffeb02">OuterProduct</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:ac64b04d3ca8a4e032beeb4f5eeffeb02"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the outer product of two matrices/vectors (a*b')  <a href="#ac64b04d3ca8a4e032beeb4f5eeffeb02">More...</a><br /></td></tr>
<tr class="separator:ac64b04d3ca8a4e032beeb4f5eeffeb02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad12dccec7451d37c6d3a5d5dcac42c65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ad12dccec7451d37c6d3a5d5dcac42c65">OuterProduct</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:ad12dccec7451d37c6d3a5d5dcac42c65"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the outer product of two matrices/vectors (a*b')  <a href="#ad12dccec7451d37c6d3a5d5dcac42c65">More...</a><br /></td></tr>
<tr class="separator:ad12dccec7451d37c6d3a5d5dcac42c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a84471f08e9842cce4e162251b007fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a6a84471f08e9842cce4e162251b007fd">Print</a> (string format=&quot;%g &quot;, TUnsignedIndex rows=20, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> cols=20) const</td></tr>
<tr class="memdesc:a6a84471f08e9842cce4e162251b007fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints the matrix up to the given rows and columns  <a href="#a6a84471f08e9842cce4e162251b007fd">More...</a><br /></td></tr>
<tr class="separator:a6a84471f08e9842cce4e162251b007fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7053eeaaf953b070ec4c3058f456cf3"><td class="memItemLeft" align="right" valign="top"><a id="af7053eeaaf953b070ec4c3058f456cf3"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#af7053eeaaf953b070ec4c3058f456cf3">RemoveCol</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col)</td></tr>
<tr class="memdesc:af7053eeaaf953b070ec4c3058f456cf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object of corresponding smaller size <br /></td></tr>
<tr class="separator:af7053eeaaf953b070ec4c3058f456cf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae11bf64c4bf72314db394048d27c82ef"><td class="memItemLeft" align="right" valign="top"><a id="ae11bf64c4bf72314db394048d27c82ef"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveRow</b> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row)</td></tr>
<tr class="separator:ae11bf64c4bf72314db394048d27c82ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b7fd2d31acbef1bf30eef064fd5348"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a90b7fd2d31acbef1bf30eef064fd5348">Row</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row)</td></tr>
<tr class="memdesc:a90b7fd2d31acbef1bf30eef064fd5348"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a reference to the 'row'th row  <a href="#a90b7fd2d31acbef1bf30eef064fd5348">More...</a><br /></td></tr>
<tr class="separator:a90b7fd2d31acbef1bf30eef064fd5348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc99715ea9c71ed92be5142140f505c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a9bc99715ea9c71ed92be5142140f505c">Rows</a> () const</td></tr>
<tr class="separator:a9bc99715ea9c71ed92be5142140f505c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60a48880d61ca9103ae8725dd71980d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a60a48880d61ca9103ae8725dd71980d6">Rows</a> (<a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row1, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> nrow)</td></tr>
<tr class="memdesc:a60a48880d61ca9103ae8725dd71980d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a block containing the nrow columns starting at column index row1  <a href="#a60a48880d61ca9103ae8725dd71980d6">More...</a><br /></td></tr>
<tr class="separator:a60a48880d61ca9103ae8725dd71980d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01aeb9db4f7058ce09c4cbc03d4ed0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aa01aeb9db4f7058ce09c4cbc03d4ed0e">SetCols</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> m, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col)</td></tr>
<tr class="memdesc:aa01aeb9db4f7058ce09c4cbc03d4ed0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns an object providing copy of data  <a href="#aa01aeb9db4f7058ce09c4cbc03d4ed0e">More...</a><br /></td></tr>
<tr class="separator:aa01aeb9db4f7058ce09c4cbc03d4ed0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47dbe58637a7ce3f27c018201e0d8c86"><td class="memItemLeft" align="right" valign="top"><a id="a47dbe58637a7ce3f27c018201e0d8c86"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>SetColsThread</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> m, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> col)</td></tr>
<tr class="separator:a47dbe58637a7ce3f27c018201e0d8c86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9b8781289e118b3ea0fddfca5626d4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a7e9b8781289e118b3ea0fddfca5626d4">SetConstant</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> value)</td></tr>
<tr class="memdesc:a7e9b8781289e118b3ea0fddfca5626d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with constant values  <a href="#a7e9b8781289e118b3ea0fddfca5626d4">More...</a><br /></td></tr>
<tr class="separator:a7e9b8781289e118b3ea0fddfca5626d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14985545f226fa39181250a3f2616d8f"><td class="memItemLeft" align="right" valign="top"><a id="a14985545f226fa39181250a3f2616d8f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a14985545f226fa39181250a3f2616d8f">SetIdentity</a> ()</td></tr>
<tr class="memdesc:a14985545f226fa39181250a3f2616d8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix as identity matrix <br /></td></tr>
<tr class="separator:a14985545f226fa39181250a3f2616d8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad075cdbd31856a54e55560db2e051d3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ad075cdbd31856a54e55560db2e051d3a">SetLinearCols</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>, <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> b)</td></tr>
<tr class="memdesc:ad075cdbd31856a54e55560db2e051d3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with linear columns  <a href="#ad075cdbd31856a54e55560db2e051d3a">More...</a><br /></td></tr>
<tr class="separator:ad075cdbd31856a54e55560db2e051d3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af141c5f38b1ec802761d4554daca44e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#af141c5f38b1ec802761d4554daca44e4">SetLinearRows</a> (<a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>, <a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> b)</td></tr>
<tr class="memdesc:af141c5f38b1ec802761d4554daca44e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with linear rows  <a href="#af141c5f38b1ec802761d4554daca44e4">More...</a><br /></td></tr>
<tr class="separator:af141c5f38b1ec802761d4554daca44e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c651523d502a1e36640b61815c4e365"><td class="memItemLeft" align="right" valign="top"><a id="a3c651523d502a1e36640b61815c4e365"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a3c651523d502a1e36640b61815c4e365">SetOnes</a> ()</td></tr>
<tr class="memdesc:a3c651523d502a1e36640b61815c4e365"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with constant values "1" <br /></td></tr>
<tr class="separator:a3c651523d502a1e36640b61815c4e365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec924a4e001d87c82eaa2caad4dc8a74"><td class="memItemLeft" align="right" valign="top"><a id="aec924a4e001d87c82eaa2caad4dc8a74"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#aec924a4e001d87c82eaa2caad4dc8a74">SetRandom</a> ()</td></tr>
<tr class="memdesc:aec924a4e001d87c82eaa2caad4dc8a74"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with random values <br /></td></tr>
<tr class="separator:aec924a4e001d87c82eaa2caad4dc8a74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a297992c3debc4bcb956444e9b541ce5f"><td class="memItemLeft" align="right" valign="top"><a id="a297992c3debc4bcb956444e9b541ce5f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRows</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> m, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row)</td></tr>
<tr class="separator:a297992c3debc4bcb956444e9b541ce5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f14e9f42ba1ee3585bdda826844d5b9"><td class="memItemLeft" align="right" valign="top"><a id="a3f14e9f42ba1ee3585bdda826844d5b9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>SetRowsThread</b> (<a class="el" href="class_matrix.xhtml">Matrix</a> m, <a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> row)</td></tr>
<tr class="separator:a3f14e9f42ba1ee3585bdda826844d5b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae57e5aca5db002545e4b9335c8d9dbfa"><td class="memItemLeft" align="right" valign="top"><a id="ae57e5aca5db002545e4b9335c8d9dbfa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ae57e5aca5db002545e4b9335c8d9dbfa">SetZero</a> ()</td></tr>
<tr class="memdesc:ae57e5aca5db002545e4b9335c8d9dbfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the matrix with zeros <br /></td></tr>
<tr class="separator:ae57e5aca5db002545e4b9335c8d9dbfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fbbdfc36bec89e69078091d5e3fc724"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a4fbbdfc36bec89e69078091d5e3fc724">Sub</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:a4fbbdfc36bec89e69078091d5e3fc724"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the matrix difference A-B  <a href="#a4fbbdfc36bec89e69078091d5e3fc724">More...</a><br /></td></tr>
<tr class="separator:a4fbbdfc36bec89e69078091d5e3fc724"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff14282011c997c57439e80c5e2f624"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a8ff14282011c997c57439e80c5e2f624">Sub</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> other)</td></tr>
<tr class="memdesc:a8ff14282011c997c57439e80c5e2f624"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies this matrix by the matrix difference A-B  <a href="#a8ff14282011c997c57439e80c5e2f624">More...</a><br /></td></tr>
<tr class="separator:a8ff14282011c997c57439e80c5e2f624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c07d898b8b4a9af07820bb9ff22ba6e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a8c07d898b8b4a9af07820bb9ff22ba6e">Swap</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> ar)</td></tr>
<tr class="memdesc:a8c07d898b8b4a9af07820bb9ff22ba6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The swap operator for matrices (data only)  <a href="#a8c07d898b8b4a9af07820bb9ff22ba6e">More...</a><br /></td></tr>
<tr class="separator:a8c07d898b8b4a9af07820bb9ff22ba6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada11290ae7810df3f90734047053700b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#ada11290ae7810df3f90734047053700b">Transpose</a> () const</td></tr>
<tr class="separator:ada11290ae7810df3f90734047053700b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a19e2c82194b4c92c8a17f7b64469e9"><td class="memItemLeft" align="right" valign="top"><a id="a4a19e2c82194b4c92c8a17f7b64469e9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a4a19e2c82194b4c92c8a17f7b64469e9">TransposeInPlace</a> ()</td></tr>
<tr class="memdesc:a4a19e2c82194b4c92c8a17f7b64469e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">transposes this matrix <br /></td></tr>
<tr class="separator:a4a19e2c82194b4c92c8a17f7b64469e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0824d20c454aab42f337b2a6c0a81dc2"><td class="memItemLeft" align="right" valign="top">apply&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix.xhtml#a0824d20c454aab42f337b2a6c0a81dc2">int</a> { <a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> }</td></tr>
<tr class="memdesc:a0824d20c454aab42f337b2a6c0a81dc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">find the largest element in the array returns the maximum element in the array  <a href="#a0824d20c454aab42f337b2a6c0a81dc2">More...</a><br /></td></tr>
<tr class="separator:a0824d20c454aab42f337b2a6c0a81dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd1212808e1ac01b27618f74766603b6"><td class="memItemLeft" align="right" valign="top"><a id="abd1212808e1ac01b27618f74766603b6"></a>
apply <a class="el" href="class_matrix.xhtml#a0824d20c454aab42f337b2a6c0a81dc2">int</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>OUTPUT</b> { <a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *OUTPUT }</td></tr>
<tr class="separator:abd1212808e1ac01b27618f74766603b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Standard matrix class. </p>
<p>A class that represents storage for dense linalg objects.</p>
<p>The storage scheme is column_major (FORTRAN). It is derived from Eigen::Matrix. Many operations have been added/overwritten for compatibility with scripting requirements. Most operations of Eigen2 are still available.</p>
<p>Basic Eigen linalg operators have been overloaded. To access a linalg operator from C++, for example the matrix product, type </p><div class="fragment"><div class="line"><a class="code" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> x,y,z;</div><div class="line">...</div><div class="line">z = x.Base::operator*(z)</div></div><!-- fragment --><p> This will give you the fastest operation possible within the Eigen library. The overloaded operators have some if-clauses and do not make use of expression templates what may harm performance.</p>
<p><a class="el" href="class_matrix.xhtml">Matrix</a> offers a handling for complex numbers which differs from Eigen: The odd columns are the real parts and the odd columns contain the imaginary parts.</p>
<p>Some of the underlying Eigen methods are available for SWIG. They are not integrated into the error chacking system, though! neverthelesse, ften they are the most efficient methods. To distuingish between Eigen and own methods, the Eigen methods identifiers start with a noncapital first letter, our own methods start with a capital letter.</p>
<p>Operators for SWIG are provided using the methods <b>add</b>, etc., The SWIG-operators must be safeguarded, whereas the C++-operators should be the original Eigen2 operators. Therefore they must be defined separately on C++ level.</p>
<p><a class="el" href="class_matrix.xhtml">Matrix</a> is useing a reference counter system. It is advised not to use 'delete <a class="el" href="class_matrix.xhtml#a3aede62f513da27e6f61ae7a972b4f96" title="destructor ">Matrix()</a>;' to remove it from memory, but to use removeReference. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3aede62f513da27e6f61ae7a972b4f96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aede62f513da27e6f61ae7a972b4f96">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>destructor </p>
<p>default constructor </p>

</div>
</div>
<a id="ae5224f99e6ff6e4fb950942127f7e6a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5224f99e6ff6e4fb950942127f7e6a7">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the object to be copied </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a02871da8f44599d14514aa0151bf069e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02871da8f44599d14514aa0151bf069e">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>nrow</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>ncol</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructs a matrix and allocates nrow*ncol elements </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nrow</td><td>the number of rows </td></tr>
    <tr><td class="paramname">ncol</td><td>the number of columns </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af6fdd420eadda66bc8985006bc2bf33f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6fdd420eadda66bc8985006bc2bf33f">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructs a matrix from a matrix block </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the object to be copied from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0cca63ba6c0409c3ead928e2344df131"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0cca63ba6c0409c3ead928e2344df131">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype">sparse::SparseMatrix&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copies from a sparse matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the object to be copied from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab0ed2c94ee6d96d9f03d8e56b3e41730"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0ed2c94ee6d96d9f03d8e56b3e41730">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype">sparse::SymSparseMatrix&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copies from a symmetric sparse matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the object to be copied from </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2c73883479858e4c1c7b5f10120d384d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c73883479858e4c1c7b5f10120d384d">&#9670;&nbsp;</a></span>__neg__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> __neg__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>unary minus (B=-A) Used by SWIG. </dd></dl>

</div>
</div>
<a id="adb0255d0035cd7783ce87f41a3cae5cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb0255d0035cd7783ce87f41a3cae5cc">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* __str__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>transforms this objects into a string, required by SWIG </p>
<dl class="section return"><dt>Returns</dt><dd>a string </dd></dl>

</div>
</div>
<a id="aae390486e349048d81ac273eb7aa9670"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae390486e349048d81ac273eb7aa9670">&#9670;&nbsp;</a></span>Add() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the matrix sum A+B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a25e0ea5c8f9b3101114cbb16faf410f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25e0ea5c8f9b3101114cbb16faf410f5">&#9670;&nbsp;</a></span>Add() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the matrix sum A+B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8d45e6e20e2284a40d69bf343b0b0359"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d45e6e20e2284a40d69bf343b0b0359">&#9670;&nbsp;</a></span>AppendCols()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> AppendCols </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns an object with modified data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the columns to be appended </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> with columns appended </dd></dl>

</div>
</div>
<a id="ab43482ffc988b4e4fee38e3f4d7bfe50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab43482ffc988b4e4fee38e3f4d7bfe50">&#9670;&nbsp;</a></span>AppendRows()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> AppendRows </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>m</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns an object with modified data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">m</td><td>the rows to be appended </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> with rows appended </dd></dl>

</div>
</div>
<a id="a087ab2e312c3f5ce4e20173db757fdf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a087ab2e312c3f5ce4e20173db757fdf8">&#9670;&nbsp;</a></span>Assign() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The assignment operator for matrices (data only) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the source object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6d654d1ab1ea88faee2c64103aec6703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d654d1ab1ea88faee2c64103aec6703">&#9670;&nbsp;</a></span>Assign() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The assignment operator for blocks (data only) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the source object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8879d4398a0c2f56fe0fcfd5daa2e2a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8879d4398a0c2f56fe0fcfd5daa2e2a1">&#9670;&nbsp;</a></span>Block()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> Block </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>numrows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>numcols</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a reference to a block starting at 'row','column' with size 'numrows'*'numcols' </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row</td><td>the top left row index </td></tr>
    <tr><td class="paramname">col</td><td>the top left column index </td></tr>
    <tr><td class="paramname">numrows</td><td>the number of rows of the matrix part </td></tr>
    <tr><td class="paramname">numcols</td><td>the number of columns of the matrix part </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a matrix block serving as a reference to the specified matrix part </dd></dl>

</div>
</div>
<a id="a08daeaee307e7a167c01319997a0fdd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08daeaee307e7a167c01319997a0fdd0">&#9670;&nbsp;</a></span>Col()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> Col </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>col</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a reference to the 'col'th column </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">col</td><td>the requested column index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a matrix block serving as a reference to the column </dd></dl>

</div>
</div>
<a id="aeca933e9807a041c96c0ff00dce7fe81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca933e9807a041c96c0ff00dce7fe81">&#9670;&nbsp;</a></span>Cols() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> Cols </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of cols </dd></dl>

</div>
</div>
<a id="a68d169caa3b3dbc2d105237205de4816"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68d169caa3b3dbc2d105237205de4816">&#9670;&nbsp;</a></span>Cols() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> Cols </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>col1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>ncol</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a block containing the ncol columns starting at column index col1 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">col1</td><td>the left column index </td></tr>
    <tr><td class="paramname">ncol</td><td>the number of columns of the matrix part </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a matrix block serving as a reference to the specified matrix part </dd></dl>

</div>
</div>
<a id="ab8c24eb13027a50ecf2ab7406af4cc6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8c24eb13027a50ecf2ab7406af4cc6b">&#9670;&nbsp;</a></span>ConservativeResize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ConservativeResize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>cols</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>resizes the matrix to its new dimensions without destroying the contents. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rows</td><td>the number of rows after resize </td></tr>
    <tr><td class="paramname">cols</td><td>the number of columns after resize Internally it creates a copy of the object (nothing if memory is crucial). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae1c2d29afd675d763db255b6fd3362f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1c2d29afd675d763db255b6fd3362f7">&#9670;&nbsp;</a></span>CW()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_c_wise.xhtml">MatrixCWise</a> CW </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>an object providing cwise access </dd></dl>

</div>
</div>
<a id="a2e4ffbe13f1929444cbb608d5b941fb7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e4ffbe13f1929444cbb608d5b941fb7">&#9670;&nbsp;</a></span>Div()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Div </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the scalar matrix quotient A/s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the scalar s </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abfed915b7780c75668a49b9c9029e8be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfed915b7780c75668a49b9c9029e8be">&#9670;&nbsp;</a></span>Dot() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> Dot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the scalar product of two vectors (a'b) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="aab4bd2af115bd460e3cf5a789dc5108d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab4bd2af115bd460e3cf5a789dc5108d">&#9670;&nbsp;</a></span>Dot() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> Dot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the scalar product of two vectors (a'b) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="aae92c980182f755faafdac5613004c20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae92c980182f755faafdac5613004c20">&#9670;&nbsp;</a></span>Dott() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> Dott </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the weighted scalar product of this matrix and the given vector multiplied once from left and once from right (b'Ab) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a67c5a1cc69b21c0cad7c3765e093840f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67c5a1cc69b21c0cad7c3765e093840f">&#9670;&nbsp;</a></span>Dott() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> Dott </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the weighted scalar product of this matrix and the given vector multiplied once from left and once from right (b'Ab) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ac9ff4aabff3596abf5955bae04b910ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9ff4aabff3596abf5955bae04b910ac">&#9670;&nbsp;</a></span>InnerProduct() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> InnerProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the inner product of two matrices/vectors (a'*b) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector/matrix b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ae3959900c4fac029b062c2becab74189"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3959900c4fac029b062c2becab74189">&#9670;&nbsp;</a></span>InnerProduct() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> InnerProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the inner product of two matrices/vectors (a'*b) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector/matrix b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a5e294708c28b3276177033f775b07959"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e294708c28b3276177033f775b07959">&#9670;&nbsp;</a></span>IsApprox()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsApprox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if other and this are approx. identical </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the object to be compared </td></tr>
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ac6b5ff21f6e6dace60d84b61dca1be06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6b5ff21f6e6dace60d84b61dca1be06">&#9670;&nbsp;</a></span>IsApproxToConstant()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsApproxToConstant </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is constant and approx. equal s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the constant value to be compared with </td></tr>
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a01f5dd6f597e652c42bd3015ad507191"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01f5dd6f597e652c42bd3015ad507191">&#9670;&nbsp;</a></span>IsDiagonal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDiagonal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is a diagonal matrix by precision s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="aac69c6571245195e236f0c642c4a4a97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac69c6571245195e236f0c642c4a4a97">&#9670;&nbsp;</a></span>IsIdentity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsIdentity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is the identity matrix by precision s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a52353850b8d700400f021350033e1d1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52353850b8d700400f021350033e1d1f">&#9670;&nbsp;</a></span>IsLowerTriangular()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsLowerTriangular </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is a lower triangular matrix by precision s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a087c6c345ee2a195620c445edce6ac3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a087c6c345ee2a195620c445edce6ac3e">&#9670;&nbsp;</a></span>IsScalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsScalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if array is a scalar </dd></dl>

</div>
</div>
<a id="a532f94f1b94ee8d7c37b5778e665e171"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a532f94f1b94ee8d7c37b5778e665e171">&#9670;&nbsp;</a></span>IsUnitary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsUnitary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is a unitary matrix by precision s (is an orthonormal basis) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="aaa1b06c2e42742d84cf52d0339718d74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa1b06c2e42742d84cf52d0339718d74">&#9670;&nbsp;</a></span>IsUpperTriangular()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsUpperTriangular </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if array is an upper triangular matrix by precision s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a4bf46091a7288ba42f1df85840d905a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bf46091a7288ba42f1df85840d905a7">&#9670;&nbsp;</a></span>IsVector()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsVector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if array is a vector </dd></dl>

</div>
</div>
<a id="aaf6af85eb9b71f6e502c05cef31a4add"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf6af85eb9b71f6e502c05cef31a4add">&#9670;&nbsp;</a></span>IsZero()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsZero </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if array is a zero matrix by precision s </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>a tolerance for the equality test </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2f341a74fe43447f9cd684a645ea55b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f341a74fe43447f9cd684a645ea55b1">&#9670;&nbsp;</a></span>MinCoeff()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> MinCoeff </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *&#160;</td>
          <td class="paramname"><em>OUTPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> *&#160;</td>
          <td class="paramname"><em>OUTPUT</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>find the smallest element in the array returns the minimum element in the array </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row</td><td>will be modified and will contain the row position of the found value on return </td></tr>
    <tr><td class="paramname">col</td><td>will be modified and will contain the column position of the found value on return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>smallest elment </dd></dl>

</div>
</div>
<a id="a67ad9262c1ebdd144f96accf0222b777"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67ad9262c1ebdd144f96accf0222b777">&#9670;&nbsp;</a></span>Mul()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mul </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the scalar matrix product A*s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the scalar s </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a29e90840f4d196f9fd74cf8f59b94cb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29e90840f4d196f9fd74cf8f59b94cb9">&#9670;&nbsp;</a></span>operator*() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix product A*B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a53936030c84cd000ecbf81d5fa6fb005"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53936030c84cd000ecbf81d5fa6fb005">&#9670;&nbsp;</a></span>operator*() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix product A*B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ab37a095452e105c76034aca0303000d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab37a095452e105c76034aca0303000d9">&#9670;&nbsp;</a></span>operator*() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the scalar matrix product A*s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the scalar s </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="aab49eb12364bb2a0a4341e884029dfea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab49eb12364bb2a0a4341e884029dfea">&#9670;&nbsp;</a></span>operator+() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix sum A+B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ae0cebd5d95ee9c112d3e835b1eb2f184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0cebd5d95ee9c112d3e835b1eb2f184">&#9670;&nbsp;</a></span>operator+() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix sum A+B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a2277ad125549453bb0e2e986287ead45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2277ad125549453bb0e2e986287ead45">&#9670;&nbsp;</a></span>operator-() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix difference A-B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="adb471a658b8d9f65134fb3ef7163d8c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb471a658b8d9f65134fb3ef7163d8c5">&#9670;&nbsp;</a></span>operator-() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the matrix difference A-B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a380ed928adb0f77541239d3ed8a56f43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a380ed928adb0f77541239d3ed8a56f43">&#9670;&nbsp;</a></span>operator/()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator/ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the scalar matrix quotient A/s </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the scalar s </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a872a8318f4c9b443d9268a2ac27ece7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a872a8318f4c9b443d9268a2ac27ece7a">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator&lt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a matrix of 1 and 0 indicating which element is less than x </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the scalar x </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="af745b2c8e2616be12145fc40d890125a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af745b2c8e2616be12145fc40d890125a">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy assignment operator </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the object to be copy-assigned </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac64b04d3ca8a4e032beeb4f5eeffeb02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac64b04d3ca8a4e032beeb4f5eeffeb02">&#9670;&nbsp;</a></span>OuterProduct() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> OuterProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the outer product of two matrices/vectors (a*b') </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector/matrix b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="ad12dccec7451d37c6d3a5d5dcac42c65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad12dccec7451d37c6d3a5d5dcac42c65">&#9670;&nbsp;</a></span>OuterProduct() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> OuterProduct </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the outer product of two matrices/vectors (a*b') </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the vector/matrix b </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="a6a84471f08e9842cce4e162251b007fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a84471f08e9842cce4e162251b007fd">&#9670;&nbsp;</a></span>Print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Print </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>format</em> = <code>&quot;%g&#160;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>rows</em> = <code>20</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>cols</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prints the matrix up to the given rows and columns </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">format</td><td>the format according to printf() </td></tr>
    <tr><td class="paramname">rows</td><td>the maximum number of rows to be printed </td></tr>
    <tr><td class="paramname">cols</td><td>the maximum number of columns to be printed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a90b7fd2d31acbef1bf30eef064fd5348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b7fd2d31acbef1bf30eef064fd5348">&#9670;&nbsp;</a></span>Row()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> Row </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>row</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a reference to the 'row'th row </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row</td><td>the requested row index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a matrix block serving as a reference to the row </dd></dl>

</div>
</div>
<a id="a9bc99715ea9c71ed92be5142140f505c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bc99715ea9c71ed92be5142140f505c">&#9670;&nbsp;</a></span>Rows() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> Rows </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of rows </dd></dl>

</div>
</div>
<a id="a60a48880d61ca9103ae8725dd71980d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60a48880d61ca9103ae8725dd71980d6">&#9670;&nbsp;</a></span>Rows() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> Rows </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>row1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>nrow</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a block containing the nrow columns starting at column index row1 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row1</td><td>the right row index </td></tr>
    <tr><td class="paramname">nrow</td><td>the number of rows of the matrix part </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a matrix block serving as a reference to the specified matrix part </dd></dl>

</div>
</div>
<a id="aa01aeb9db4f7058ce09c4cbc03d4ed0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa01aeb9db4f7058ce09c4cbc03d4ed0e">&#9670;&nbsp;</a></span>SetCols()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetCols </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>m</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>col</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns an object providing copy of data </p>
<p>changes object data in place </p>

</div>
</div>
<a id="a7e9b8781289e118b3ea0fddfca5626d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e9b8781289e118b3ea0fddfca5626d4">&#9670;&nbsp;</a></span>SetConstant()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SetConstant </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>initializes the matrix with constant values </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>the scalar value of the matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad075cdbd31856a54e55560db2e051d3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad075cdbd31856a54e55560db2e051d3a">&#9670;&nbsp;</a></span>SetLinearCols()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SetLinearCols </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>initializes the matrix with linear columns </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>the value of the first row </td></tr>
    <tr><td class="paramname">b</td><td>the value of the last row </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af141c5f38b1ec802761d4554daca44e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af141c5f38b1ec802761d4554daca44e4">&#9670;&nbsp;</a></span>SetLinearRows()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SetLinearRows </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>initializes the matrix with linear rows </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>the value of the first column </td></tr>
    <tr><td class="paramname">b</td><td>the value of the last column </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4fbbdfc36bec89e69078091d5e3fc724"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fbbdfc36bec89e69078091d5e3fc724">&#9670;&nbsp;</a></span>Sub() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Sub </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the matrix difference A-B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8ff14282011c997c57439e80c5e2f624"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff14282011c997c57439e80c5e2f624">&#9670;&nbsp;</a></span>Sub() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Sub </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies this matrix by the matrix difference A-B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the matrix B </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8c07d898b8b4a9af07820bb9ff22ba6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c07d898b8b4a9af07820bb9ff22ba6e">&#9670;&nbsp;</a></span>Swap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The swap operator for matrices (data only) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the other object. On output *this will contain the input value of ar while ar contains the input value of *this. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ada11290ae7810df3f90734047053700b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada11290ae7810df3f90734047053700b">&#9670;&nbsp;</a></span>Transpose()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Transpose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the transpose </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0824d20c454aab42f337b2a6c0a81dc2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0824d20c454aab42f337b2a6c0a81dc2">&#9670;&nbsp;</a></span>int</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">apply int { <a class="el" href="class_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a> }</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>find the largest element in the array returns the maximum element in the array </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row</td><td>will be modified and will contain the row position of the found value on return </td></tr>
    <tr><td class="paramname">col</td><td>will be modified and will contain the column position of the found value on return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>largest elment </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
