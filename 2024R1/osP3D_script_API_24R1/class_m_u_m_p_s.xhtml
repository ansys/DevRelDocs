<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): MUMPS Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_m_u_m_p_s.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_m_u_m_p_s-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MUMPS Class Reference<div class="ingroups"><a class="el" href="group__tmath.xhtml">tmath</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>solver for sparse matrices using <a class="el" href="class_m_u_m_p_s.xhtml" title="solver for sparse matrices using MUMPS. ">MUMPS</a>.  
 <a href="class_m_u_m_p_s.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad33f729eda6e45412aac71cee702012f"><td class="memItemLeft" align="right" valign="top"><a id="ad33f729eda6e45412aac71cee702012f"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a></td></tr>
<tr class="memdesc:ad33f729eda6e45412aac71cee702012f"><td class="mdescLeft">&#160;</td><td class="mdescRight">data type of matrix elements <br /></td></tr>
<tr class="separator:ad33f729eda6e45412aac71cee702012f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ce6eae547dc1456730d2df72d9c29cb"><td class="memItemLeft" align="right" valign="top"><a id="a0ce6eae547dc1456730d2df72d9c29cb"></a>
typedef Eigen::SparseMatrix&lt; <a class="el" href="class_sparse_solver.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#a0ce6eae547dc1456730d2df72d9c29cb">TSparseMatrix</a></td></tr>
<tr class="memdesc:a0ce6eae547dc1456730d2df72d9c29cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">the sparse matrix base type <br /></td></tr>
<tr class="separator:a0ce6eae547dc1456730d2df72d9c29cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a79c58864d591ecafc1ef6fc3c5f2e8fc"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#a79c58864d591ecafc1ef6fc3c5f2e8fc">Compute</a> (<a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a>)</td></tr>
<tr class="memdesc:a79c58864d591ecafc1ef6fc3c5f2e8fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the factorization, returns true if succeeded  <a href="#a79c58864d591ecafc1ef6fc3c5f2e8fc">More...</a><br /></td></tr>
<tr class="separator:a79c58864d591ecafc1ef6fc3c5f2e8fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5526f969e26fc63c313b4aa589c764d8"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#a5526f969e26fc63c313b4aa589c764d8">Compute</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>)</td></tr>
<tr class="memdesc:a5526f969e26fc63c313b4aa589c764d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the factorization, returns true if succeeded  <a href="#a5526f969e26fc63c313b4aa589c764d8">More...</a><br /></td></tr>
<tr class="separator:a5526f969e26fc63c313b4aa589c764d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06236a425fff803e79e7f6d791825364"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#a06236a425fff803e79e7f6d791825364">MUMPS</a> (bool use_matrix_buffer_as_MUMPS_input_data=false)</td></tr>
<tr class="memdesc:a06236a425fff803e79e7f6d791825364"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#a06236a425fff803e79e7f6d791825364">More...</a><br /></td></tr>
<tr class="separator:a06236a425fff803e79e7f6d791825364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0cd807c82df729b9448fb73b5e08b9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#aca0cd807c82df729b9448fb73b5e08b9">MUMPS</a> (<a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a> ar)</td></tr>
<tr class="memdesc:aca0cd807c82df729b9448fb73b5e08b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor which already factorizes the matrix  <a href="#aca0cd807c82df729b9448fb73b5e08b9">More...</a><br /></td></tr>
<tr class="separator:aca0cd807c82df729b9448fb73b5e08b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87bae4b2fd0071ea275bdd7ccf0943e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#a87bae4b2fd0071ea275bdd7ccf0943e0">MUMPS</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> ar)</td></tr>
<tr class="memdesc:a87bae4b2fd0071ea275bdd7ccf0943e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor which already factorizes the matrix  <a href="#a87bae4b2fd0071ea275bdd7ccf0943e0">More...</a><br /></td></tr>
<tr class="separator:a87bae4b2fd0071ea275bdd7ccf0943e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab575d53b6b3741bf8b54ca4dad896322"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#ab575d53b6b3741bf8b54ca4dad896322">operator*</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> other)</td></tr>
<tr class="memdesc:ab575d53b6b3741bf8b54ca4dad896322"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the matrix product inv(A)*B  <a href="#ab575d53b6b3741bf8b54ca4dad896322">More...</a><br /></td></tr>
<tr class="separator:ab575d53b6b3741bf8b54ca4dad896322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef33fc57fc01313826cabdebfc1ca8bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#aef33fc57fc01313826cabdebfc1ca8bd">SetPositive</a> (bool pos)</td></tr>
<tr class="memdesc:aef33fc57fc01313826cabdebfc1ca8bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell <a class="el" href="class_m_u_m_p_s.xhtml" title="solver for sparse matrices using MUMPS. ">MUMPS</a> if the matrix is positive definite (default: false)  <a href="#aef33fc57fc01313826cabdebfc1ca8bd">More...</a><br /></td></tr>
<tr class="separator:aef33fc57fc01313826cabdebfc1ca8bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03c9937003c1c78404c778f1ce257cfd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#a03c9937003c1c78404c778f1ce257cfd">Solve</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> INPUT, <a class="el" href="class_matrix.xhtml">Matrix</a> **OUTPUT, bool **OUTPUT)</td></tr>
<tr class="memdesc:a03c9937003c1c78404c778f1ce257cfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Solves the given vector on return; returns true if succeeded.  <a href="#a03c9937003c1c78404c778f1ce257cfd">More...</a><br /></td></tr>
<tr class="separator:a03c9937003c1c78404c778f1ce257cfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed85b6e6bc9e10b49a5eacee4930dc12"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#aed85b6e6bc9e10b49a5eacee4930dc12">Solve</a> (<a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a> INPUT, <a class="el" href="class_matrix.xhtml">Matrix</a> **OUTPUT, bool **OUTPUT)</td></tr>
<tr class="memdesc:aed85b6e6bc9e10b49a5eacee4930dc12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Solves the given sparse RHS on return; returns true if succeeded.  <a href="#aed85b6e6bc9e10b49a5eacee4930dc12">More...</a><br /></td></tr>
<tr class="separator:aed85b6e6bc9e10b49a5eacee4930dc12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6facb69b91b239c79f8272159402c4f4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_u_m_p_s.xhtml#a6facb69b91b239c79f8272159402c4f4">SolveInPlace</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> b)</td></tr>
<tr class="memdesc:a6facb69b91b239c79f8272159402c4f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Factorizes this matrix and solves the given vector in place;.  <a href="#a6facb69b91b239c79f8272159402c4f4">More...</a><br /></td></tr>
<tr class="separator:a6facb69b91b239c79f8272159402c4f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb600a838ac25ea5705191ddcd35d5aa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#aeb600a838ac25ea5705191ddcd35d5aa">SolveTransposed</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> INPUT, <a class="el" href="class_matrix.xhtml">Matrix</a> **OUTPUT, bool **OUTPUT)</td></tr>
<tr class="memdesc:aeb600a838ac25ea5705191ddcd35d5aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Solves the system (transpose(Matrix)*x=b for x; returns true if succeeded.  <a href="#aeb600a838ac25ea5705191ddcd35d5aa">More...</a><br /></td></tr>
<tr class="separator:aeb600a838ac25ea5705191ddcd35d5aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bab1e661cce06aa1bab0b15bc3f5f9e"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sparse_solver.xhtml#a4bab1e661cce06aa1bab0b15bc3f5f9e">typeIdent</a> ()</td></tr>
<tr class="separator:a4bab1e661cce06aa1bab0b15bc3f5f9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>solver for sparse matrices using <a class="el" href="class_m_u_m_p_s.xhtml" title="solver for sparse matrices using MUMPS. ">MUMPS</a>. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a06236a425fff803e79e7f6d791825364"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06236a425fff803e79e7f6d791825364">&#9670;&nbsp;</a></span>MUMPS() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_m_u_m_p_s.xhtml">MUMPS</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_matrix_buffer_as_MUMPS_input_data</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>destructor </p>
<p>default constructor (inits m_use_matrix_buffer_as_MUMPS_input_data) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">use_matrix_buffer_as_MUMPS_input_data</td><td>if true then the algorithm will not create internal temporary arrays used for factorization, but will act on the existing data arrays. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aca0cd807c82df729b9448fb73b5e08b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca0cd807c82df729b9448fb73b5e08b9">&#9670;&nbsp;</a></span>MUMPS() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_m_u_m_p_s.xhtml">MUMPS</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor which already factorizes the matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the matrix to be factorized </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a87bae4b2fd0071ea275bdd7ccf0943e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87bae4b2fd0071ea275bdd7ccf0943e0">&#9670;&nbsp;</a></span>MUMPS() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_m_u_m_p_s.xhtml">MUMPS</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor which already factorizes the matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the matrix to be factorized </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a79c58864d591ecafc1ef6fc3c5f2e8fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79c58864d591ecafc1ef6fc3c5f2e8fc">&#9670;&nbsp;</a></span>Compute() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Compute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a>&#160;</td>
          <td class="paramname"><em>A</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>computes the factorization, returns true if succeeded </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">A</td><td>the matrix to be factorized </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true of successful </dd></dl>

<p>Reimplemented from <a class="el" href="class_sparse_solver.xhtml#a198e988cd87fa6915dd1aa906d1fb87c">SparseSolver</a>.</p>

</div>
</div>
<a id="a5526f969e26fc63c313b4aa589c764d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5526f969e26fc63c313b4aa589c764d8">&#9670;&nbsp;</a></span>Compute() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Compute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>A</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>computes the factorization, returns true if succeeded </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">A</td><td>the matrix to be factorized </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true of successful </dd></dl>

<p>Reimplemented from <a class="el" href="class_sparse_solver.xhtml#ac6480ddf60c975e344ad332af27eba9b">SparseSolver</a>.</p>

</div>
</div>
<a id="ab575d53b6b3741bf8b54ca4dad896322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab575d53b6b3741bf8b54ca4dad896322">&#9670;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>returns the matrix product inv(A)*B </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the second argument of inv(A)*B </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the product of the factorized matrix multiplied with <em>other</em> </dd></dl>

</div>
</div>
<a id="aef33fc57fc01313826cabdebfc1ca8bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef33fc57fc01313826cabdebfc1ca8bd">&#9670;&nbsp;</a></span>SetPositive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SetPositive </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell <a class="el" href="class_m_u_m_p_s.xhtml" title="solver for sparse matrices using MUMPS. ">MUMPS</a> if the matrix is positive definite (default: false) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>true if positive definite </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a03c9937003c1c78404c778f1ce257cfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03c9937003c1c78404c778f1ce257cfd">&#9670;&nbsp;</a></span>Solve() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Solve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>INPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a> **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Solves the given vector on return; returns true if succeeded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b</td><td>the right hand side </td></tr>
    <tr><td class="paramname">x</td><td>the solution </td></tr>
    <tr><td class="paramname">success</td><td>the return value of <em>Solve(b,x)</em> allow the SWIG syntax (x,bool)=Solve(b) for solving x in Ax=b in script bindings </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aed85b6e6bc9e10b49a5eacee4930dc12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed85b6e6bc9e10b49a5eacee4930dc12">&#9670;&nbsp;</a></span>Solve() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Solve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sparse_matrix.xhtml">SparseMatrix</a>&#160;</td>
          <td class="paramname"><em>INPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a> **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Solves the given sparse RHS on return; returns true if succeeded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b</td><td>the right hand side </td></tr>
    <tr><td class="paramname">x</td><td>the solution </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfulallows the SWIG syntax (x,bool)=Solve(b) for solving x in Ax=b in script </dd></dl>

</div>
</div>
<a id="a6facb69b91b239c79f8272159402c4f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6facb69b91b239c79f8272159402c4f4">&#9670;&nbsp;</a></span>SolveInPlace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool SolveInPlace </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>b</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Factorizes this matrix and solves the given vector in place;. </p>
<dl class="section return"><dt>Returns</dt><dd>returns true if succeeded </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b</td><td>on input: the right hand side. On output: the solution x </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="class_sparse_solver.xhtml#a6facb69b91b239c79f8272159402c4f4">SparseSolver</a>.</p>

</div>
</div>
<a id="aeb600a838ac25ea5705191ddcd35d5aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb600a838ac25ea5705191ddcd35d5aa">&#9670;&nbsp;</a></span>SolveTransposed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SolveTransposed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>INPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a> **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool **&#160;</td>
          <td class="paramname"><em>OUTPUT</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Solves the system (transpose(Matrix)*x=b for x; returns true if succeeded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">b</td><td>the right hand side </td></tr>
    <tr><td class="paramname">x</td><td>the solution </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successful allows the SWIG syntax (x,bool)=Solve(b) for solving x in Ax=b in script. </dd></dl>

</div>
</div>
<a id="a4bab1e661cce06aa1bab0b15bc3f5f9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bab1e661cce06aa1bab0b15bc3f5f9e">&#9670;&nbsp;</a></span>typeIdent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string typeIdent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the name of the datatype </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
