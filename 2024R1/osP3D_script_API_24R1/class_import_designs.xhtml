<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ImportDesigns Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_import_designs.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_import_designs-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ImportDesigns Class Reference<div class="ingroups"><a class="el" href="group__import.xhtml">Import</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A class collecting import information for various design directories.  
 <a href="class_import_designs.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a47c34ec1e578c2ce27cf1c5fcd0d1704">check</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks validity of these data.  <a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">More...</a><br /></td></tr>
<tr class="separator:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c801245230e33fcaa093d72cba5f117"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a5c801245230e33fcaa093d72cba5f117">filterDesignsByOptiSLang</a> (string filename)</td></tr>
<tr class="memdesc:a5c801245230e33fcaa093d72cba5f117"><td class="mdescLeft">&#160;</td><td class="mdescRight">reads the given optiSLang binary file and removes all design numbers which are marked as 'failed'  <a href="#a5c801245230e33fcaa093d72cba5f117">More...</a><br /></td></tr>
<tr class="separator:a5c801245230e33fcaa093d72cba5f117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34c4b23f216aeb33d79984bca8041ea4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a34c4b23f216aeb33d79984bca8041ea4">getDesignNumbers</a> ()</td></tr>
<tr class="memdesc:a34c4b23f216aeb33d79984bca8041ea4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a list of all design sample numbers.  <a href="#a34c4b23f216aeb33d79984bca8041ea4">More...</a><br /></td></tr>
<tr class="separator:a34c4b23f216aeb33d79984bca8041ea4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91d115ad2f6b884384893cb38c794ea7"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a91d115ad2f6b884384893cb38c794ea7">getDesignNumbersString</a> ()</td></tr>
<tr class="memdesc:a91d115ad2f6b884384893cb38c794ea7"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates the defined design range intervals as a string  <a href="#a91d115ad2f6b884384893cb38c794ea7">More...</a><br /></td></tr>
<tr class="separator:a91d115ad2f6b884384893cb38c794ea7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abec8ff4bd28cc81e9c577b482291b498"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#abec8ff4bd28cc81e9c577b482291b498">getDesignPathNames</a> ()</td></tr>
<tr class="memdesc:abec8ff4bd28cc81e9c577b482291b498"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates a list of all design directory path names  <a href="#abec8ff4bd28cc81e9c577b482291b498">More...</a><br /></td></tr>
<tr class="separator:abec8ff4bd28cc81e9c577b482291b498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73dd3f56399568385400db0c3fc08295"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a73dd3f56399568385400db0c3fc08295">import</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a73dd3f56399568385400db0c3fc08295"><td class="mdescLeft">&#160;</td><td class="mdescRight">imports multiple designs from disk This method tries to import as much data as possible and does even proceed in case of errors.  <a href="#a73dd3f56399568385400db0c3fc08295">More...</a><br /></td></tr>
<tr class="separator:a73dd3f56399568385400db0c3fc08295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a172a1dfa5c3ddbbfee43f7dd0d9a4d9c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a172a1dfa5c3ddbbfee43f7dd0d9a4d9c">ImportDesigns</a> (<a class="el" href="class_reference_design.xhtml">ReferenceDesign</a> <a class="el" href="class_import_designs.xhtml#ab0f4ff8e7cbf191376f5487872de03f7">reference_design</a>)</td></tr>
<tr class="memdesc:a172a1dfa5c3ddbbfee43f7dd0d9a4d9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes defaults and starts a first filesystem scan.  <a href="#a172a1dfa5c3ddbbfee43f7dd0d9a4d9c">More...</a><br /></td></tr>
<tr class="separator:a172a1dfa5c3ddbbfee43f7dd0d9a4d9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54f34c64e9326398eaaf5cdcb8127e08"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a54f34c64e9326398eaaf5cdcb8127e08">scanDesignRanges</a> ()</td></tr>
<tr class="memdesc:a54f34c64e9326398eaaf5cdcb8127e08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scans the base path for design directories.  <a href="#a54f34c64e9326398eaaf5cdcb8127e08">More...</a><br /></td></tr>
<tr class="separator:a54f34c64e9326398eaaf5cdcb8127e08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c914c9ef85b4d3a481ed5e3b56da7f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a2c914c9ef85b4d3a481ed5e3b56da7f1">setDesignNumbers</a> (string design_ranges)</td></tr>
<tr class="memdesc:a2c914c9ef85b4d3a481ed5e3b56da7f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the design number intervals given as string The method calls <a class="el" href="class_import_designs.xhtml#ad011ce88ed992315a48040de3edbf675" title="Unifies the design numbers This method ensures that each design number appears at most once in the de...">unifyDesignNumbers()</a>; to ensure uniqueness of the defined design numbers.  <a href="#a2c914c9ef85b4d3a481ed5e3b56da7f1">More...</a><br /></td></tr>
<tr class="separator:a2c914c9ef85b4d3a481ed5e3b56da7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad011ce88ed992315a48040de3edbf675"><td class="memItemLeft" align="right" valign="top"><a id="ad011ce88ed992315a48040de3edbf675"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#ad011ce88ed992315a48040de3edbf675">unifyDesignNumbers</a> ()</td></tr>
<tr class="memdesc:ad011ce88ed992315a48040de3edbf675"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unifies the design numbers This method ensures that each design number appears at most once in the design interval definition. <br /></td></tr>
<tr class="separator:ad011ce88ed992315a48040de3edbf675"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a1be53c8e392d898f99ddc804ff403c84"><td class="memItemLeft" align="right" valign="top"><a id="a1be53c8e392d898f99ddc804ff403c84"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a1be53c8e392d898f99ddc804ff403c84">base_path</a></td></tr>
<tr class="memdesc:a1be53c8e392d898f99ddc804ff403c84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base path (absolute path) <br /></td></tr>
<tr class="separator:a1be53c8e392d898f99ddc804ff403c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa25e23bc102293eb390ebd22691c1a90"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#aa25e23bc102293eb390ebd22691c1a90">design_name_format</a></td></tr>
<tr class="memdesc:aa25e23bc102293eb390ebd22691c1a90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Format string for identifying design directories.  <a href="#aa25e23bc102293eb390ebd22691c1a90">More...</a><br /></td></tr>
<tr class="separator:aa25e23bc102293eb390ebd22691c1a90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00d7e5b521806ef2f1ac2e9e45fee82"><td class="memItemLeft" align="right" valign="top"><a id="ab00d7e5b521806ef2f1ac2e9e45fee82"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#ab00d7e5b521806ef2f1ac2e9e45fee82">max_num_threads</a></td></tr>
<tr class="memdesc:ab00d7e5b521806ef2f1ac2e9e45fee82"><td class="mdescLeft">&#160;</td><td class="mdescRight">If set to 0 (default=4), then multiple designs may be imported in parallel using the default OpenMP settings. Else each design is imported using the defined number of threads. <br /></td></tr>
<tr class="separator:ab00d7e5b521806ef2f1ac2e9e45fee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a845f0717e285151b07a57d047b4dd84e"><td class="memItemLeft" align="right" valign="top"><a id="a845f0717e285151b07a57d047b4dd84e"></a>
<a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a845f0717e285151b07a57d047b4dd84e">ranges_from</a></td></tr>
<tr class="memdesc:a845f0717e285151b07a57d047b4dd84e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines ranges of the design directories, specifically the left interval boundaries. <br /></td></tr>
<tr class="separator:a845f0717e285151b07a57d047b4dd84e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1cd6c172f196f452af5d57b7299b471"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#ac1cd6c172f196f452af5d57b7299b471">ranges_to</a></td></tr>
<tr class="memdesc:ac1cd6c172f196f452af5d57b7299b471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines ranges of the design directories, specifically the right interval boundaries.  <a href="#ac1cd6c172f196f452af5d57b7299b471">More...</a><br /></td></tr>
<tr class="separator:ac1cd6c172f196f452af5d57b7299b471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0f4ff8e7cbf191376f5487872de03f7"><td class="memItemLeft" align="right" valign="top"><a id="ab0f4ff8e7cbf191376f5487872de03f7"></a>
<a class="el" href="class_reference_design.xhtml">ReferenceDesign</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#ab0f4ff8e7cbf191376f5487872de03f7">reference_design</a></td></tr>
<tr class="memdesc:ab0f4ff8e7cbf191376f5487872de03f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores the information on the reference design/design template (defines which data to be imported) <br /></td></tr>
<tr class="separator:ab0f4ff8e7cbf191376f5487872de03f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72dfcf1d918d2b4c2eaa79e34becc576"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_import_designs.xhtml#a72dfcf1d918d2b4c2eaa79e34becc576">start_design_number</a></td></tr>
<tr class="memdesc:a72dfcf1d918d2b4c2eaa79e34becc576"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associates the start design number to the specified design ranges.  <a href="#a72dfcf1d918d2b4c2eaa79e34becc576">More...</a><br /></td></tr>
<tr class="separator:a72dfcf1d918d2b4c2eaa79e34becc576"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A class collecting import information for various design directories. </p>
<p>In a typical SoS workflow the user imports varying outcomes of a repeated experiment. These outcome needs to be saved somewhere, and as SoS orgins the Post-optiSLang area, the program expects this data stored in several directories. Each directory contains at least one file which contains one or several outcome(s) of one of specific experiment. While its expected that the directory name varies for each experiment, the filenames must be constant. At best, the design directory name contains a number which might be directly used by SoS on import to insert the outcomes into its database with a unique design number ident. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a172a1dfa5c3ddbbfee43f7dd0d9a4d9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a172a1dfa5c3ddbbfee43f7dd0d9a4d9c">&#9670;&nbsp;</a></span>ImportDesigns()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_import_designs.xhtml">ImportDesigns</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_reference_design.xhtml">ReferenceDesign</a>&#160;</td>
          <td class="paramname"><em>reference_design</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes defaults and starts a first filesystem scan. </p>
<p>At first, the constructor tries to generate a suiteable base path and design template string:</p><ul>
<li>Usually, the <a class="el" href="class_reference_design.xhtml" title="defines information on imported data and files given a reference design ">ReferenceDesign</a> object will contain at least one file to be imported. If this is the case, its completed file path will be analyzed using the #DesignPath object. At best, this analysis will return a reliable <a class="el" href="class_import_designs.xhtml#a1be53c8e392d898f99ddc804ff403c84" title="Base path (absolute path) ">base_path</a> as well as <a class="el" href="class_import_designs.xhtml#aa25e23bc102293eb390ebd22691c1a90" title="Format string for identifying design directories. ">design_name_format</a>.</li>
<li>Otherwise the <a class="el" href="class_reference_design.xhtml#a1be53c8e392d898f99ddc804ff403c84" title="Specifies the base path. Must be changed only via setBasePath()! ">ReferenceDesign::base_path</a> of reference_design given will be separated. Its parent path will be re-used as <a class="el" href="class_import_designs.xhtml#a1be53c8e392d898f99ddc804ff403c84" title="Base path (absolute path) ">base_path</a> and the other part as <a class="el" href="class_import_designs.xhtml#aa25e23bc102293eb390ebd22691c1a90" title="Format string for identifying design directories. ">design_name_format</a> Afterwards, <a class="el" href="class_import_designs.xhtml#a54f34c64e9326398eaaf5cdcb8127e08" title="Scans the base path for design directories. ">ImportDesigns::scanDesignRanges()</a> will be called automatically and the first design range number re-used as start design ident. Otherise, the design ranges remain empty and the <a class="el" href="class_import_designs.xhtml#a72dfcf1d918d2b4c2eaa79e34becc576" title="Associates the start design number to the specified design ranges. ">ImportDesigns::start_design_number</a> will be initialized to one.</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reference_design</td><td>The reference design object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a47c34ec1e578c2ce27cf1c5fcd0d1704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">check </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks validity of these data. </p>
<ul>
<li>If any of the specified directories, design IDs or files does not exist, an exception is thrown</li>
<li>It also checks the validity of the reference design</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the data base where the data is going to be imported to </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5c801245230e33fcaa093d72cba5f117"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c801245230e33fcaa093d72cba5f117">&#9670;&nbsp;</a></span>filterDesignsByOptiSLang()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">filterDesignsByOptiSLang </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>reads the given optiSLang binary file and removes all design numbers which are marked as 'failed' </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the optiSLang file name, either absolute path or relative to the reference design </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a34c4b23f216aeb33d79984bca8041ea4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34c4b23f216aeb33d79984bca8041ea4">&#9670;&nbsp;</a></span>getDesignNumbers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a> getDesignNumbers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates a list of all design sample numbers. </p>
<dl class="section return"><dt>Returns</dt><dd>A vector of integer numbers where each number represents the design identifier used in the SoS database. The vector indices correspond to the vector of <a class="el" href="class_import_designs.xhtml#abec8ff4bd28cc81e9c577b482291b498" title="generates a list of all design directory path names ">ImportDesigns::getDesignPathNames</a> </dd></dl>

</div>
</div>
<a id="a91d115ad2f6b884384893cb38c794ea7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91d115ad2f6b884384893cb38c794ea7">&#9670;&nbsp;</a></span>getDesignNumbersString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string getDesignNumbersString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>generates the defined design range intervals as a string </p>
<dl class="section return"><dt>Returns</dt><dd>the design range string, eg. "1-4;6-10;12;15-20" </dd></dl>

</div>
</div>
<a id="abec8ff4bd28cc81e9c577b482291b498"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abec8ff4bd28cc81e9c577b482291b498">&#9670;&nbsp;</a></span>getDesignPathNames()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a> getDesignPathNames </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>generates a list of all design directory path names </p>
<dl class="section return"><dt>Returns</dt><dd>A vector of strings where each string represents the design path name. Each path name is a valid directory name (already includes the base_path). </dd></dl>

</div>
</div>
<a id="a73dd3f56399568385400db0c3fc08295"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73dd3f56399568385400db0c3fc08295">&#9670;&nbsp;</a></span>import()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">import </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>imports multiple designs from disk This method tries to import as much data as possible and does even proceed in case of errors. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the data base where all data is to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a54f34c64e9326398eaaf5cdcb8127e08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54f34c64e9326398eaaf5cdcb8127e08">&#9670;&nbsp;</a></span>scanDesignRanges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">scanDesignRanges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scans the base path for design directories. </p>
<p>Depending on the currently storred information (base path, design name properties, defined files in the reference design) the design directories are determined and the ranges of the indicies are stored in ranges_from and ranges_to. Only design directories are accepted which contain ALL of the files being contained in the reference path! </p>

</div>
</div>
<a id="a2c914c9ef85b4d3a481ed5e3b56da7f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c914c9ef85b4d3a481ed5e3b56da7f1">&#9670;&nbsp;</a></span>setDesignNumbers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setDesignNumbers </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_ranges</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the design number intervals given as string The method calls <a class="el" href="class_import_designs.xhtml#ad011ce88ed992315a48040de3edbf675" title="Unifies the design numbers This method ensures that each design number appears at most once in the de...">unifyDesignNumbers()</a>; to ensure uniqueness of the defined design numbers. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_ranges</td><td>The string to be interpreted, must be of format "1-4;12;15-20;" or "1-4" or "1" or "". </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">an</td><td>exception If the string can not be interpreted. In this case, the definition is not changed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa25e23bc102293eb390ebd22691c1a90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa25e23bc102293eb390ebd22691c1a90">&#9670;&nbsp;</a></span>design_name_format</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string design_name_format</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Format string for identifying design directories. </p>
<p>Format strings shall be defined as <a href="http://www.boost.org/doc/libs/1_59_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html">Perl Regular Expressions</a> including one sub-expression which defines the design ID, eg. </p><div class="fragment"><div class="line">Design_?(\d+)$</div></div><!-- fragment --><p> which matches the string Design, followed by one or no underscore and a sub-expression of one or more digits until the end of the string. The digit group will be used as unique design number within the database. Other examples might be </p><div class="fragment"><div class="line">Design_?(\d\d)$</div></div><!-- fragment --><p> which expects exactly 2 digits, or </p><div class="fragment"><div class="line">first/.*/Design_?(\d{1,5})/dp\d{2}/mech$</div></div><!-- fragment --><p> which matches the directory 'first' relative to <em>base_path</em>, any of its subdirectories, a Design directory consisting of one or 5 digits (zero should be avoided as internal design numbers must be generated in that case), an ANSYS dp subdirectory composed of the dp string followed by exactly 2 digits and as last acceptable subdirectory the string mech. For further common pittfalls - like the maximum sub directory level - refer to DesignScanner::filter ( string ) </p>

</div>
</div>
<a id="ac1cd6c172f196f452af5d57b7299b471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1cd6c172f196f452af5d57b7299b471">&#9670;&nbsp;</a></span>ranges_to</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a> ranges_to</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines ranges of the design directories, specifically the right interval boundaries. </p>
<p>Must have the same dimensions as #ImportDesings::ranges_from </p>

</div>
</div>
<a id="a72dfcf1d918d2b4c2eaa79e34becc576"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72dfcf1d918d2b4c2eaa79e34becc576">&#9670;&nbsp;</a></span>start_design_number</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number start_design_number</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Associates the start design number to the specified design ranges. </p>
<p>This member offers the possibility to control the design number range associated to the imported designs. For example, for some reason it might be necessary to import the same design range twice into SoS. So the first time the user simply accepts the design directory deduced design number suggestion, but on the second run the user decides to import the same design with an arbitrary chosen start design number. The design number range used on import preserves any range definition on the the design directory range side. In other words, holes within the design directory ranges will be reprocuded. For example, the design directory range '1;5-10;12;14-100' with a <a class="el" href="class_import_designs.xhtml#a72dfcf1d918d2b4c2eaa79e34becc576" title="Associates the start design number to the specified design ranges. ">start_design_number</a> set to 200 leads to the following used design number range on import '200;204-209;211;213-299' </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
