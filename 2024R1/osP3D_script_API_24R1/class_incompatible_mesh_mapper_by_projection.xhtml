<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): IncompatibleMeshMapperByProjection Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_incompatible_mesh_mapper_by_projection.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_incompatible_mesh_mapper_by_projection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">IncompatibleMeshMapperByProjection Class Reference<div class="ingroups"><a class="el" href="group__meshmapper.xhtml">Mesh mapper</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Imports data from an incompatible mesh.  
 <a href="class_incompatible_mesh_mapper_by_projection.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a7c3eb7b21b8e3254d697b15a4192a7fe"><td class="memItemLeft" align="right" valign="top"><a id="a7c3eb7b21b8e3254d697b15a4192a7fe"></a>
typedef boost::shared_ptr&lt; <a class="el" href="class_coor_transformation_base.xhtml">CoorTransformationBase</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mesh_mapper_base.xhtml#a7c3eb7b21b8e3254d697b15a4192a7fe">CoorTransformationBasePtr</a></td></tr>
<tr class="memdesc:a7c3eb7b21b8e3254d697b15a4192a7fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer to a rigid transformation algorithm object <br /></td></tr>
<tr class="separator:a7c3eb7b21b8e3254d697b15a4192a7fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> { <br />
&#160;&#160;<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a459203ce56429dc8706ca2740bd69841">eCOMPATIBLE</a> =0, 
<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7abb012f96e4409688aa1c1b06b645f184">eINCOMPATIBLE</a>, 
<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a29ad298ad8ef76fee66b8f94a6d463c3">eINCOMPATIBLE_CPP</a>, 
<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a5a8514eef49d57792d68c382249f7e77">eINCOMPATIBLE_RAY</a>, 
<br />
&#160;&#160;<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a284b6ad33acf2df5fcd062adc42ad59c">eGRID</a>, 
<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7adede4088d718f7458095afc816edd231">eP2VOLUME</a>, 
<a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7afc6b02161f5d04720e7f94015730e580">eMORPHED_MESH</a>
<br />
 }</td></tr>
<tr class="memdesc:a1d1cfd8ffb84e947f82999c682b666a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">an enum type defining the type of the derived class  <a href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">More...</a><br /></td></tr>
<tr class="separator:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac225d733c7c2cc84e76682c9f5b4c7d2"><td class="memItemLeft" align="right" valign="top"><a id="ac225d733c7c2cc84e76682c9f5b4c7d2"></a>
virtual string&#160;</td><td class="memItemRight" valign="bottom"><b>generateScriptOfSettingsDefinition</b> (string variable_ident)</td></tr>
<tr class="separator:ac225d733c7c2cc84e76682c9f5b4c7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd4e3d7fb752e8344c8477fb74d9b079"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#afd4e3d7fb752e8344c8477fb74d9b079">IncompatibleMeshMapperByProjection</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:afd4e3d7fb752e8344c8477fb74d9b079"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor  <a href="#afd4e3d7fb752e8344c8477fb74d9b079">More...</a><br /></td></tr>
<tr class="separator:afd4e3d7fb752e8344c8477fb74d9b079"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed5aa97ce27c71905a5f29493dbffef6"><td class="memItemLeft" align="right" valign="top"><a id="aed5aa97ce27c71905a5f29493dbffef6"></a>
virtual <a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><b>mapperType</b> ()</td></tr>
<tr class="separator:aed5aa97ce27c71905a5f29493dbffef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c42ba8c9ccf82aa3241bea39388223d"><td class="memItemLeft" align="right" valign="top"><a id="a5c42ba8c9ccf82aa3241bea39388223d"></a>
virtual string&#160;</td><td class="memItemRight" valign="bottom"><b>mapperTypeIdent</b> ()</td></tr>
<tr class="separator:a5c42ba8c9ccf82aa3241bea39388223d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae7320dfe5b79f04926b5794f5593b9de"><td class="memItemLeft" align="right" valign="top"><a id="ae7320dfe5b79f04926b5794f5593b9de"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#ae7320dfe5b79f04926b5794f5593b9de">deviations_along_boundary_normal</a></td></tr>
<tr class="memdesc:ae7320dfe5b79f04926b5794f5593b9de"><td class="mdescLeft">&#160;</td><td class="mdescRight">if true, then the algorithm will enforce colinearity of the normal vectors of the reference mesh boundary and the coordinate deviations. Default: true <br /></td></tr>
<tr class="separator:ae7320dfe5b79f04926b5794f5593b9de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2671490b3d6f1995d621f6a567d64f0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#aa2671490b3d6f1995d621f6a567d64f0">number_sided_projection</a></td></tr>
<tr class="memdesc:aa2671490b3d6f1995d621f6a567d64f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#aa2671490b3d6f1995d621f6a567d64f0">More...</a><br /></td></tr>
<tr class="separator:aa2671490b3d6f1995d621f6a567d64f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#ade25e60bd85c8b4abd4f5b416cae0eb9">overwrite_existing</a></td></tr>
<tr class="memdesc:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, then existing data objects will be replaced.  <a href="#ade25e60bd85c8b4abd4f5b416cae0eb9">More...</a><br /></td></tr>
<tr class="separator:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae79cc32e0a89d7a67bb2cfc469d95e6a"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#ae79cc32e0a89d7a67bb2cfc469d95e6a">transferred_data_ident_prefix</a></td></tr>
<tr class="memdesc:ae79cc32e0a89d7a67bb2cfc469d95e6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The prefix for re-transferred data.  <a href="#ae79cc32e0a89d7a67bb2cfc469d95e6a">More...</a><br /></td></tr>
<tr class="separator:ae79cc32e0a89d7a67bb2cfc469d95e6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25dc38ad33af95b4c9b51c09e532c46f"><td class="memItemLeft" align="right" valign="top"><a id="a25dc38ad33af95b4c9b51c09e532c46f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml#a25dc38ad33af95b4c9b51c09e532c46f">use_half_space_test_for_associating_faces</a></td></tr>
<tr class="memdesc:a25dc38ad33af95b4c9b51c09e532c46f"><td class="mdescLeft">&#160;</td><td class="mdescRight">if true, the algorithm tries to associate the correct boundary segments by assuming that the normal vectors of linked segments point into the same half space. Default: true <br /></td></tr>
<tr class="separator:a25dc38ad33af95b4c9b51c09e532c46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Imports data from an incompatible mesh. </p>
<ul>
<li>The meshes can be incompatible (and deformed)</li>
<li>Deformations may be of medium size, i.e. they must be detectable by a direct closest point projection onto the boundary (segments, edges or nodes - whatever feature is closest)</li>
<li>Eroded elements can not be detected</li>
<li>Non-matching boundary portions (due to cut-offs, holes, etc.) can not be detected</li>
<li>Zones with erroneous detection or with larger distance than the maximum search distance are marked as eroded elements</li>
<li>Coordinate deviations are the true deviation vectors. They are not necesarily parallel to the nodal normal vectors of the boundary. Hence, you can not use the normal deviations for simulation of deformed geometries.</li>
<li>If nodal normal deviations are imported, interior nodes and boundary nodes with incorrect normal will be marked as eroded in the deviation objects.</li>
<li>If number-sided node-to-segment projection is used, one can treat differently fine meshes better.</li>
<li><a class="el" href="class_element.xhtml" title="Repesents the geometry of a finite element within a mesh. ">Element</a> data objects are imported by converting them to node objects, project theme and convert them back to element objects. This will introduce some degree of data smoothing.</li>
<li>The choice of the maximum search distance may affect the performance significantly.</li>
<li>The ability of simulating geometry deviations can be restored by enforcing the colinearity of the normal vectors of the reference mesh boundary and the deviation vectors </li>
</ul>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a1d1cfd8ffb84e947f82999c682b666a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1cfd8ffb84e947f82999c682b666a7">&#9670;&nbsp;</a></span>Type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_mesh_mapper_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>an enum type defining the type of the derived class </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a459203ce56429dc8706ca2740bd69841"></a>eCOMPATIBLE&#160;</td><td class="fielddoc"><p>compatible mesh mapper </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7abb012f96e4409688aa1c1b06b645f184"></a>eINCOMPATIBLE&#160;</td><td class="fielddoc"><p>incompatible mesh mapper </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a29ad298ad8ef76fee66b8f94a6d463c3"></a>eINCOMPATIBLE_CPP&#160;</td><td class="fielddoc"><p>incompatible mesh mapper (closest point projection) </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a5a8514eef49d57792d68c382249f7e77"></a>eINCOMPATIBLE_RAY&#160;</td><td class="fielddoc"><p>incompatible mesh mapper (along user-specified direction) </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a284b6ad33acf2df5fcd062adc42ad59c"></a>eGRID&#160;</td><td class="fielddoc"><p>grid mesh mapper </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7adede4088d718f7458095afc816edd231"></a>eP2VOLUME&#160;</td><td class="fielddoc"><p>point-to-volume mesh mapper </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7afc6b02161f5d04720e7f94015730e580"></a>eMORPHED_MESH&#160;</td><td class="fielddoc"><p>mesh mapper used morphing </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afd4e3d7fb752e8344c8477fb74d9b079"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd4e3d7fb752e8344c8477fb74d9b079">&#9670;&nbsp;</a></span>IncompatibleMeshMapperByProjection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_incompatible_mesh_mapper_by_projection.xhtml">IncompatibleMeshMapperByProjection</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database structure we refer to. Used to compute default values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa2671490b3d6f1995d621f6a567d64f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2671490b3d6f1995d621f6a567d64f0">&#9670;&nbsp;</a></span>number_sided_projection</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool number_sided_projection</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">{}</div><div class="line"></div><div class="line">    </div><div class="line">    number maximum_search_distance</div></div><!-- fragment -->
<p>destructor </p>
<p>if true, then one uses number-sided node-to-segment detection, else only one-sided node-to-segment (reference-to-design) detection is used. Default: false </p>

</div>
</div>
<a id="ade25e60bd85c8b4abd4f5b416cae0eb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade25e60bd85c8b4abd4f5b416cae0eb9">&#9670;&nbsp;</a></span>overwrite_existing</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool overwrite_existing</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If true, then existing data objects will be replaced. </p>
<p>This option is used by transferData </p>

</div>
</div>
<a id="ae79cc32e0a89d7a67bb2cfc469d95e6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae79cc32e0a89d7a67bb2cfc469d95e6a">&#9670;&nbsp;</a></span>transferred_data_ident_prefix</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string transferred_data_ident_prefix</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The prefix for re-transferred data. </p>
<p>transferData is able to transfer the data to the new database, and to transfer the same data back This strategy allows to check the error that is obtained when transferring data between two meshes, since one can compare it with the original data on the same mesh. If the prefix is an empty string, then no data will be created. Else one choses the new quantity ident as "prefix[original_quantity_ident]" </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
