<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ExportCSVField&lt; TYPE &gt; Class Template Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_export_c_s_v_field.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_export_c_s_v_field-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ExportCSVField&lt; TYPE &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__export.xhtml">Export</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Exports SoS field data to a CSV text file.  
 <a href="class_export_c_s_v_field.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a43937566342ee4168150e9fa232ddfc1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a43937566342ee4168150e9fa232ddfc1">check</a> ()</td></tr>
<tr class="memdesc:a43937566342ee4168150e9fa232ddfc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks some settings/preperations.  <a href="#a43937566342ee4168150e9fa232ddfc1">More...</a><br /></td></tr>
<tr class="separator:a43937566342ee4168150e9fa232ddfc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaab2c56f0af0a15486ca2e077cc61348"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#aaab2c56f0af0a15486ca2e077cc61348">ExportCSVField</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string <a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6">output_file</a>, <a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filter, string <a class="el" href="class_export_c_s_v.xhtml#a0b2e98e6d6483b285675f9e0128ad223">delimiter</a>=&quot;,&quot;)</td></tr>
<tr class="memdesc:aaab2c56f0af0a15486ca2e077cc61348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor initializing all member variables to valid defaults.  <a href="#aaab2c56f0af0a15486ca2e077cc61348">More...</a><br /></td></tr>
<tr class="separator:aaab2c56f0af0a15486ca2e077cc61348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a338dc4344270fcbccadf5667ef12f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#a6a338dc4344270fcbccadf5667ef12f9">save</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a6a338dc4344270fcbccadf5667ef12f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports all data to the given csv output file.  <a href="#a6a338dc4344270fcbccadf5667ef12f9">More...</a><br /></td></tr>
<tr class="separator:a6a338dc4344270fcbccadf5667ef12f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0b2e98e6d6483b285675f9e0128ad223"><td class="memItemLeft" align="right" valign="top"><a id="a0b2e98e6d6483b285675f9e0128ad223"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a0b2e98e6d6483b285675f9e0128ad223">delimiter</a></td></tr>
<tr class="memdesc:a0b2e98e6d6483b285675f9e0128ad223"><td class="mdescLeft">&#160;</td><td class="mdescRight">The delimiter string, e.g. ",", which delimits the data entries within one line. <br /></td></tr>
<tr class="separator:a0b2e98e6d6483b285675f9e0128ad223"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af22724fd9c1e0dd42ec296e4784b9df8"><td class="memItemLeft" align="right" valign="top"><a id="af22724fd9c1e0dd42ec296e4784b9df8"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#af22724fd9c1e0dd42ec296e4784b9df8">field_data</a></td></tr>
<tr class="memdesc:af22724fd9c1e0dd42ec296e4784b9df8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The scalar object data to be exported. <br /></td></tr>
<tr class="separator:af22724fd9c1e0dd42ec296e4784b9df8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5681ad659e91643df77ee5bae59979c6"><td class="memItemLeft" align="right" valign="top"><a id="a5681ad659e91643df77ee5bae59979c6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a5681ad659e91643df77ee5bae59979c6">optiSLang_compatibility</a></td></tr>
<tr class="memdesc:a5681ad659e91643df77ee5bae59979c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, then the idents of scalar-quantities will be modified to match allowed characters in optiSLang (default: false) <br /></td></tr>
<tr class="separator:a5681ad659e91643df77ee5bae59979c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8643191a264f6d55fead82a6d23a88b6"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6">output_file</a></td></tr>
<tr class="memdesc:a8643191a264f6d55fead82a6d23a88b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The name of the output file. Must be non-empty.  <a href="#a8643191a264f6d55fead82a6d23a88b6">More...</a><br /></td></tr>
<tr class="separator:a8643191a264f6d55fead82a6d23a88b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e4aabf64a404fcb5b6f86f0c44f76fb"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#a7e4aabf64a404fcb5b6f86f0c44f76fb">output_order</a></td></tr>
<tr class="memdesc:a7e4aabf64a404fcb5b6f86f0c44f76fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">A data object key vector used to define a output order different from the filter ones.  <a href="#a7e4aabf64a404fcb5b6f86f0c44f76fb">More...</a><br /></td></tr>
<tr class="separator:a7e4aabf64a404fcb5b6f86f0c44f76fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="memItemLeft" align="right" valign="top"><a id="a2f8b3cba47ad64fb6bda4b6428a032d3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a2f8b3cba47ad64fb6bda4b6428a032d3">replace_files</a></td></tr>
<tr class="memdesc:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, an existings output file will be overwritten. Otherwise an exception will arise (default: false) <br /></td></tr>
<tr class="separator:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a090c2ac1b8f5be786e0a09268ed48d0a"><td class="memItemLeft" align="right" valign="top"><a id="a090c2ac1b8f5be786e0a09268ed48d0a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#a090c2ac1b8f5be786e0a09268ed48d0a">write_indices</a></td></tr>
<tr class="memdesc:a090c2ac1b8f5be786e0a09268ed48d0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the indices before each data set (default: true) <br /></td></tr>
<tr class="separator:a090c2ac1b8f5be786e0a09268ed48d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Control coordinates</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>If this is true, than the x-coordinate will be written</p>
<p>If the members of this group are set to true they will be written after the optional design number. Dependent on the data type, the coordinates written differ, i.e. coordinates for nodes and integration points are obvious but for element data types the element midpoint will be described by the coordinates written. </p>
</div></td></tr>
<tr class="memitem:ab0df219856e56f118071aa086eff9893"><td class="memItemLeft" align="right" valign="top"><a id="ab0df219856e56f118071aa086eff9893"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>write_x_coors</b></td></tr>
<tr class="separator:ab0df219856e56f118071aa086eff9893"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeb22b2536fcd22ce7fd03c3204bb36c"><td class="memItemLeft" align="right" valign="top"><a id="abeb22b2536fcd22ce7fd03c3204bb36c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#abeb22b2536fcd22ce7fd03c3204bb36c">write_y_coors</a></td></tr>
<tr class="memdesc:abeb22b2536fcd22ce7fd03c3204bb36c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, than the y-coordinate will be written. <br /></td></tr>
<tr class="separator:abeb22b2536fcd22ce7fd03c3204bb36c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5df74233417485277f76e62d5bda57e"><td class="memItemLeft" align="right" valign="top"><a id="ad5df74233417485277f76e62d5bda57e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#ad5df74233417485277f76e62d5bda57e">write_z_coors</a></td></tr>
<tr class="memdesc:ad5df74233417485277f76e62d5bda57e"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, than the z-coordinate will be written. <br /></td></tr>
<tr class="separator:ad5df74233417485277f76e62d5bda57e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7669f4acf97a6982ff3134585c6276eb"><td class="memItemLeft" align="right" valign="top"><a id="a7669f4acf97a6982ff3134585c6276eb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_field.xhtml#a7669f4acf97a6982ff3134585c6276eb">write_header</a></td></tr>
<tr class="memdesc:a7669f4acf97a6982ff3134585c6276eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">if this is true (default), then two header lines are written <br /></td></tr>
<tr class="separator:a7669f4acf97a6982ff3134585c6276eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;dataobject_types TYPE&gt;<br />
class ExportCSVField&lt; TYPE &gt;</h3>

<p>Exports SoS field data to a CSV text file. </p>
<p>When determining the number of designs and quantities to be exported, the method only considers those type objects which are part of </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="class_export_c_s_v_field.xhtml#af22724fd9c1e0dd42ec296e4784b9df8" title="The scalar object data to be exported. ">ExportCSVField::field_data</a>. Hence one can select the quantities to be exported. Currently, the exported CSV format contains 2 header lines and <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a> <a class="el" href="group__data.xhtml" title="Provides functions and classes to control the central data structure. ">Data</a> block (for this example <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a> comma has been chosen as <a class="el" href="class_export_c_s_v.xhtml#a0b2e98e6d6483b285675f9e0128ad223" title="The delimiter string, e.g. &quot;,&quot;, which delimits the data entries within one line. ">delimiter</a>):</dd></dl>
<ol type="1">
<li>the quantity name in the first line <pre>[Indices,][Coordinates,]Quanties ...</pre></li>
<li>the ID's followed by the design idents in the second line <pre>[part-ID,][type-master-ID,][type-ID,]design-IDs ... </pre> The part-ID will be exported only in case of several part definitions whereas a <em>type-master-ID</em> will be written as needed, i.e. for integration point data export 3.-* the data in all subsequent lines till EOF(!) <pre>[integers, ... ]number, number, ...</pre> </li>
</ol>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aaab2c56f0af0a15486ca2e077cc61348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaab2c56f0af0a15486ca2e077cc61348">&#9670;&nbsp;</a></span>ExportCSVField()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_export_c_s_v_field.xhtml">ExportCSVField</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>output_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>delimiter</em> = <code>&quot;,&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor initializing all member variables to valid defaults. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database needed to determine some defaults, i.e. , the mesh type to suggest defaults for needed coordindates - if any </td></tr>
    <tr><td class="paramname">output_file</td><td>The name of the output file. See <em>output_file</em> for detailed information. </td></tr>
    <tr><td class="paramname">filter</td><td>The data type object filter with preselected objects to be written to the output_file given </td></tr>
    <tr><td class="paramname">delimiter</td><td>The delimiter string, e.g. ";", which delimits the data entries within the data sets. See csv::CSVParser::m_delimiter for more details.</td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>in case of conversion errors std::exception in case of program logical errors. Debug mode only </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a43937566342ee4168150e9fa232ddfc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43937566342ee4168150e9fa232ddfc1">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual check </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks some settings/preperations. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the settings are not correct </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6a338dc4344270fcbccadf5667ef12f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a338dc4344270fcbccadf5667ef12f9">&#9670;&nbsp;</a></span>save()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Exports all data to the given csv output file. </p>
<p>If all member variables are empty all objects in the database will be exported. Otherwise the member variables acts as filter and only listed data will be extracted out of the database given and exported to the CSV file <a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6" title="The name of the output file. Must be non-empty. ">output_file</a> given</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database containing all objects. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the output path is not a directory std::exception If no the output_file is not writeable </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="class_export_c_s_v.xhtml#a61c3eed0322cb79606e39957a8afe9d9">ExportCSV</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a8643191a264f6d55fead82a6d23a88b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8643191a264f6d55fead82a6d23a88b6">&#9670;&nbsp;</a></span>output_file</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string output_file</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The name of the output file. Must be non-empty. </p>
<p>Several modes in several situations are supported:</p><ul>
<li>The string points to a non-existing FS item:<ul>
<li>The Settings class tries to split up the path given in its components: parent_path, filename (boost::filesystem::stem) and file extension (boost::filesystem::extension) as described in the underlying FS library <a href="http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#Path-decomposition-table">http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#Path-decomposition-table</a></li>
<li>Non given components will be replaced by default ones and created if neccessary </li>
</ul>
</li>
</ul>

</div>
</div>
<a id="a7e4aabf64a404fcb5b6f86f0c44f76fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e4aabf64a404fcb5b6f86f0c44f76fb">&#9670;&nbsp;</a></span>output_order</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> &gt; output_order</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A data object key vector used to define a output order different from the filter ones. </p>
<p>Defines the data output order written after other optional data like indices and coordinates The size of the output_order container may be different from the size of the data type dependent filter given. Even the IDs in the output_order container given may be missing in one or all data type filters. If the size of the output_order container is:</p><ul>
<li>smaller than the size of all unique ID's of the data type filter given, than the filter ID's matching the ID's in the output_order will be reorderd as defined by the output_order container. ID's that exist in the filter only are silently appended.</li>
<li>bigger than the size of all unique ID's of the data type filter given, than the filter ID's matching the ID's in the output_order will be reorderd as defined by the output_order container. ID's that exist in the output_order container only are ignored.</li>
<li>zero, if the output_order container is empty, than the data output order is defined by the return values of the filter iterators If the output_order vector contains number entries than only the first match will be written. </li>
</ul>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
