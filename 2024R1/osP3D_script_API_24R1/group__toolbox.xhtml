<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Toolbox</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__toolbox.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Toolbox</div>  </div>
</div><!--header-->
<div class="contents">

<p>Data analysis and manipulation toolbox.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_absolute_maxima.xhtml">ComputeAbsoluteMaxima&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_compute_absolute_maxima.xhtml" title="a struct which collects settings for ComputeAbsoluteMaxima ">ComputeAbsoluteMaxima</a></em>  <a href="class_compute_absolute_maxima.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_absolute_minima.xhtml">ComputeAbsoluteMinima&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_compute_absolute_minima.xhtml" title="a struct which collects settings for ComputeAbsoluteMinima ">ComputeAbsoluteMinima</a></em>  <a href="class_compute_absolute_minima.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml">ComputeNodalCoorDeviation</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>computeNodalCoorDeviation</em>  <a href="struct_compute_nodal_coor_deviation.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_relative_maxima.xhtml">ComputeRelativeMaxima&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_compute_relative_maxima.xhtml" title="a struct which collects settings for ComputeRelativeMaxima ">ComputeRelativeMaxima</a></em>  <a href="class_compute_relative_maxima.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_relative_minima.xhtml">ComputeRelativeMinima&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_compute_relative_minima.xhtml" title="a struct which collects settings for ComputeRelativeMinima ">ComputeRelativeMinima</a></em>  <a href="class_compute_relative_minima.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml">ComputeSingleObjectPerObject&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a base class for algorithms that apply a simple algorithm to obtain a single object from another object  <a href="class_compute_single_object_per_object.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_sample.xhtml">ComputeSingleObjectPerSample&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a base class for algorithms that apply a simple algorithm to obtain a single object from a single set of samples.  <a href="class_compute_single_object_per_sample.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_convert_to_element.xhtml">ConvertToElement&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>convertToElement</em>  <a href="struct_convert_to_element.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_convert_to_node.xhtml">ConvertToNode&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>convertToNode</em>  <a href="struct_convert_to_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_copy_filled_data.xhtml">CopyFilledData&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_copy_filled_data.xhtml" title="a struct which collects settings for CopyFilledData ">CopyFilledData</a></em>  <a href="class_copy_filled_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_distance_field.xhtml">DistanceField</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">represents a distance field for an unstructured grid  <a href="class_distance_field.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_extract_above_threshold.xhtml">ExtractAboveThreshold&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>extractAboveThreshold</em>  <a href="class_extract_above_threshold.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_extract_below_threshold.xhtml">ExtractBelowThreshold&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>extractBelowThreshold</em>  <a href="class_extract_below_threshold.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_extract_missing_data_flags.xhtml">ExtractMissingDataFlags&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_extract_missing_data_flags.xhtml" title="a struct which collects settings for ExtractMissingDataFlags ">ExtractMissingDataFlags</a></em>  <a href="class_extract_missing_data_flags.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_extract_scalars_from_quantity.xhtml">ExtractScalarsFromQuantity&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em>extractAboveThreshold</em>  <a href="class_extract_scalars_from_quantity.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_mesh_morpher_settings.xhtml">MeshMorpherSettings</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a class containing global settings for mesh morphing  <a href="struct_mesh_morpher_settings.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_replace_above_threshold.xhtml">ReplaceAboveThreshold&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_replace_above_threshold.xhtml" title="a struct which collects settings for ReplaceAboveThreshold ">ReplaceAboveThreshold</a></em>  <a href="class_replace_above_threshold.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_replace_below_threshold.xhtml">ReplaceBelowThreshold&lt; TYPE &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a struct which collects settings for <em><a class="el" href="class_replace_below_threshold.xhtml" title="a struct which collects settings for ReplaceBelowThreshold ">ReplaceBelowThreshold</a></em>  <a href="class_replace_below_threshold.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga3d271639ce30ae41ef6fc0b152d1708e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga3d271639ce30ae41ef6fc0b152d1708e">checkPointsInElement</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> coors)</td></tr>
<tr class="memdesc:ga3d271639ce30ae41ef6fc0b152d1708e"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks in which finite element which coordinates are located  <a href="#ga3d271639ce30ae41ef6fc0b152d1708e">More...</a><br /></td></tr>
<tr class="separator:ga3d271639ce30ae41ef6fc0b152d1708e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga216863415a26411ae9e4f7b9ebc843d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga216863415a26411ae9e4f7b9ebc843d9">checkPointsInVolume</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> coors)</td></tr>
<tr class="memdesc:ga216863415a26411ae9e4f7b9ebc843d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks which coordinates are in the interior of a volume  <a href="#ga216863415a26411ae9e4f7b9ebc843d9">More...</a><br /></td></tr>
<tr class="separator:ga216863415a26411ae9e4f7b9ebc843d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3c9b09de87d21154d944be806306558"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gaf3c9b09de87d21154d944be806306558">computeEuclidianDistancesNode</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> reference_indices)</td></tr>
<tr class="memdesc:gaf3c9b09de87d21154d944be806306558"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the Euclidian distances of all nodes with respect to a given node set.  <a href="#gaf3c9b09de87d21154d944be806306558">More...</a><br /></td></tr>
<tr class="separator:gaf3c9b09de87d21154d944be806306558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6d1a880d55f0247e64fca274b358aa85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga6d1a880d55f0247e64fca274b358aa85">computeGraphDistancesNode</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> reference_indices)</td></tr>
<tr class="memdesc:ga6d1a880d55f0247e64fca274b358aa85"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the graph (i.e. normalized) distances of all nodes with respect to a given node set.  <a href="#ga6d1a880d55f0247e64fca274b358aa85">More...</a><br /></td></tr>
<tr class="separator:ga6d1a880d55f0247e64fca274b358aa85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga49dfbde3573203385be3bdf60ccdb98c"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga49dfbde3573203385be3bdf60ccdb98c">computeLargestModelDimension</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga49dfbde3573203385be3bdf60ccdb98c"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the largest axial dimension of the mesh  <a href="#ga49dfbde3573203385be3bdf60ccdb98c">More...</a><br /></td></tr>
<tr class="separator:ga49dfbde3573203385be3bdf60ccdb98c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad77a9797ed81a41c4cc04eed3cfe2401"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gad77a9797ed81a41c4cc04eed3cfe2401">computeNodalCoorDeviation</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_structure.xhtml">Structure</a> mesh_project_target, <a class="el" href="class_meta_structure.xhtml">MetaStructure</a> mesh_project_contactor, number max_search_distance, bool number_sided_n2s_contact, string new_x_deviation_ident, string new_y_deviation_ident, string new_z_deviation_ident, string new_normal_deviation_ident, string new_design_ident, bool overwrite_existing, bool associate_face_normals)</td></tr>
<tr class="memdesc:gad77a9797ed81a41c4cc04eed3cfe2401"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the deviation of nodal coordinates between two meshes  <a href="#gad77a9797ed81a41c4cc04eed3cfe2401">More...</a><br /></td></tr>
<tr class="separator:gad77a9797ed81a41c4cc04eed3cfe2401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga17463bc47c971d5ce84effc82610e8b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_vector.xhtml">DataObjectVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga17463bc47c971d5ce84effc82610e8b0">computeNodalCoorDeviationVectorFromSignedDistance</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_index_mapper.xhtml">IndexMapper</a> index_mapper, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> signed_distance, bool use_interpolated_missing_values, bool use_distancefield, bool mesh_smoothening)</td></tr>
<tr class="memdesc:ga17463bc47c971d5ce84effc82610e8b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the deviation vector (of node coordinates) given a signed distance vector and a reference mesh. The output will, of course, only contain the nodes on the boundary - all other are marked as "missing".  <a href="#ga17463bc47c971d5ce84effc82610e8b0">More...</a><br /></td></tr>
<tr class="separator:ga17463bc47c971d5ce84effc82610e8b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab5d59b8aea74df929cf4dc5d7dcfe380"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gab5d59b8aea74df929cf4dc5d7dcfe380">computeNodeIndicesWithOptimalSpatialDistribution</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, number number, <a class="el" href="class_matrix.xhtml">Matrix</a> boundary_indices)</td></tr>
<tr class="separator:gab5d59b8aea74df929cf4dc5d7dcfe380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga603da4e157ca813d3f8c756ec7904b76"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga603da4e157ca813d3f8c756ec7904b76">computeSmoothenedCoorDeviationVector</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_index_mapper.xhtml">IndexMapper</a> index_mapper, <a class="el" href="class_matrix.xhtml">Matrix</a> deviations, <a class="el" href="class_matrix.xhtml">Matrix</a> smoothened_deviations, Eigen::VectorXd missing_items_of_deviations)</td></tr>
<tr class="memdesc:ga603da4e157ca813d3f8c756ec7904b76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the deviation vector (of node coordinates) given 3 vectors defining the desired deviation direction in 3d space and a reference mesh. The output will, only contain the nodes on the boundary - all other are marked as "missing".  <a href="#ga603da4e157ca813d3f8c756ec7904b76">More...</a><br /></td></tr>
<tr class="separator:ga603da4e157ca813d3f8c756ec7904b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab19910412f50ce5f1d4064e0877c7c81"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_vector.xhtml">DataObjectVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gab19910412f50ce5f1d4064e0877c7c81">computeSmoothenedCoorDeviationVector</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_index_mapper.xhtml">IndexMapper</a> index_mapper, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> distance_vector_x, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> distance_vector_y, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> distance_vector_z, bool use_interpolated_missing_values)</td></tr>
<tr class="memdesc:gab19910412f50ce5f1d4064e0877c7c81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the deviation vector (of node coordinates) given 3 vectors defining the desired deviation direction in 3d space and a reference mesh. The output will, only contain the nodes on the boundary - all other are marked as "missing".  <a href="#gab19910412f50ce5f1d4064e0877c7c81">More...</a><br /></td></tr>
<tr class="separator:gab19910412f50ce5f1d4064e0877c7c81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga603e2114e5daa50c03e89f27b3ad2063"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga603e2114e5daa50c03e89f27b3ad2063">computeTopologicalDistancesElement</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> reference_indices)</td></tr>
<tr class="memdesc:ga603e2114e5daa50c03e89f27b3ad2063"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the topological distances of all elements with respect to a given element set.  <a href="#ga603e2114e5daa50c03e89f27b3ad2063">More...</a><br /></td></tr>
<tr class="separator:ga603e2114e5daa50c03e89f27b3ad2063"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04d77239f0ea8db999841d66f7248f87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga04d77239f0ea8db999841d66f7248f87">computeTopologicalDistancesNode</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> reference_indices)</td></tr>
<tr class="memdesc:ga04d77239f0ea8db999841d66f7248f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the topological distances of all nodes with respect to a given node set.  <a href="#ga04d77239f0ea8db999841d66f7248f87">More...</a><br /></td></tr>
<tr class="separator:ga04d77239f0ea8db999841d66f7248f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac82afcfa64ebccbe4cc5f228b71ae523"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gac82afcfa64ebccbe4cc5f228b71ae523">extractSubstructure</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> nodes, <a class="el" href="class_matrix.xhtml">Matrix</a> elements)</td></tr>
<tr class="separator:gac82afcfa64ebccbe4cc5f228b71ae523"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac40454960f443af9f7f89becd4be1f34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gac40454960f443af9f7f89becd4be1f34">globalIndexFromElementSet</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string part_ident, string set_ident)</td></tr>
<tr class="separator:gac40454960f443af9f7f89becd4be1f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga718f52c7baee70200cbbe83ce8926ece"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga718f52c7baee70200cbbe83ce8926ece">globalIndexFromNodeSet</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string part_ident, string set_ident)</td></tr>
<tr class="separator:ga718f52c7baee70200cbbe83ce8926ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gade8eabb9d84527dbbc0ff2a5ac517aca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gade8eabb9d84527dbbc0ff2a5ac517aca">identifyElementsAdjacentToNodes</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> node_indices)</td></tr>
<tr class="separator:gade8eabb9d84527dbbc0ff2a5ac517aca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf306ee3797c53354e75eabd496726b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gadf306ee3797c53354e75eabd496726b3">identifyNodesInRange</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, number min_x, number max_x, number min_y, number max_y, number min_z, number max_z)</td></tr>
<tr class="memdesc:gadf306ee3797c53354e75eabd496726b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all nodes being in the defined rectangular region  <a href="#gadf306ee3797c53354e75eabd496726b3">More...</a><br /></td></tr>
<tr class="separator:gadf306ee3797c53354e75eabd496726b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga75ed12bdb94554c36fc8a53292a63732"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga75ed12bdb94554c36fc8a53292a63732">identifyNodesNearFixedBoundary</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga75ed12bdb94554c36fc8a53292a63732"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being which are part of the current reference set and which touch the fixed boundary  <a href="#ga75ed12bdb94554c36fc8a53292a63732">More...</a><br /></td></tr>
<tr class="separator:ga75ed12bdb94554c36fc8a53292a63732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga242ab68bb3053b304f54f7fff3b0c880"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga242ab68bb3053b304f54f7fff3b0c880">identifyNodesOfElements</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> element_indices)</td></tr>
<tr class="separator:ga242ab68bb3053b304f54f7fff3b0c880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga18ebe568e5db4b165a81cdc98da3d28f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga18ebe568e5db4b165a81cdc98da3d28f">identifyNodesOnBoundary</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga18ebe568e5db4b165a81cdc98da3d28f"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being on the boundary surface of a FEM mesh  <a href="#ga18ebe568e5db4b165a81cdc98da3d28f">More...</a><br /></td></tr>
<tr class="separator:ga18ebe568e5db4b165a81cdc98da3d28f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4ec8c55d9b81c9a90219f248ac33b64c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga4ec8c55d9b81c9a90219f248ac33b64c">identifyNodesOnBoundaryEdges</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga4ec8c55d9b81c9a90219f248ac33b64c"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being on the boundary and on an edge of a FEM mesh or of the active domain.  <a href="#ga4ec8c55d9b81c9a90219f248ac33b64c">More...</a><br /></td></tr>
<tr class="separator:ga4ec8c55d9b81c9a90219f248ac33b64c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5fe93d5b9ee42dc1d6091e3bf03354f5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga5fe93d5b9ee42dc1d6091e3bf03354f5">identifyNodesOnBoundaryNearSharpFeatures</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, number cos_angle_limit)</td></tr>
<tr class="memdesc:ga5fe93d5b9ee42dc1d6091e3bf03354f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes on the boundary, at boundary edges and at boundary points with sharp edges/corners  <a href="#ga5fe93d5b9ee42dc1d6091e3bf03354f5">More...</a><br /></td></tr>
<tr class="separator:ga5fe93d5b9ee42dc1d6091e3bf03354f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b507ac76ab318ec7e76ee610ab9bd40"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga8b507ac76ab318ec7e76ee610ab9bd40">identifyNodesOnReferenceSetBoundary</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga8b507ac76ab318ec7e76ee610ab9bd40"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being on the edge of the current reference set (neighbours of nodes being not part of it)  <a href="#ga8b507ac76ab318ec7e76ee610ab9bd40">More...</a><br /></td></tr>
<tr class="separator:ga8b507ac76ab318ec7e76ee610ab9bd40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga066af3bc2ce84788e60e71709cd34343"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga066af3bc2ce84788e60e71709cd34343">identifyNodesOnSurfaceAndReferenceSetBoundary</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga066af3bc2ce84788e60e71709cd34343"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being on the boundary surface of a FEM mesh AND on the edge of the current reference set (neighbours of nodes being not part of it)  <a href="#ga066af3bc2ce84788e60e71709cd34343">More...</a><br /></td></tr>
<tr class="separator:ga066af3bc2ce84788e60e71709cd34343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad28b34776e07d60455e4ca099ea76bf8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gad28b34776e07d60455e4ca099ea76bf8">identifyNodesOnSurfacePatches</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> reference_indices, number cos_angle_limit=0.75)</td></tr>
<tr class="memdesc:gad28b34776e07d60455e4ca099ea76bf8"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies all FE nodes being on the boundary surface of a FEM mesh AND which define a single or multiple surface patches. A surface patch is defined by a part of the boundary that is delimited by an edge with too sharp angle between surface segements.  <a href="#gad28b34776e07d60455e4ca099ea76bf8">More...</a><br /></td></tr>
<tr class="separator:gad28b34776e07d60455e4ca099ea76bf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabbad639b996754299728f4a699b3cf11"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gabbad639b996754299728f4a699b3cf11">indexDifference</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> A, <a class="el" href="class_matrix.xhtml">Matrix</a> B)</td></tr>
<tr class="separator:gabbad639b996754299728f4a699b3cf11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab43769abbf6a48c1447575048d4b1007"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#gab43769abbf6a48c1447575048d4b1007">indexIntersection</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> A, <a class="el" href="class_matrix.xhtml">Matrix</a> B)</td></tr>
<tr class="separator:gab43769abbf6a48c1447575048d4b1007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00387fd8ba72b74464abfab40441ff23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga00387fd8ba72b74464abfab40441ff23">indexUnion</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> A, <a class="el" href="class_matrix.xhtml">Matrix</a> B)</td></tr>
<tr class="separator:ga00387fd8ba72b74464abfab40441ff23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7df1b778234f5c4a98c7ae80b2415549"><td class="memItemLeft" align="right" valign="top"><a id="ga7df1b778234f5c4a98c7ae80b2415549"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractBelowThresholdNode) <a class="el" href="class_extract_below_threshold.xhtml">ExtractBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga7df1b778234f5c4a98c7ae80b2415549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab28536240ca4b01a6ffd96f4885dc0d3"><td class="memItemLeft" align="right" valign="top"><a id="gab28536240ca4b01a6ffd96f4885dc0d3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractBelowThresholdElement) <a class="el" href="class_extract_below_threshold.xhtml">ExtractBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gab28536240ca4b01a6ffd96f4885dc0d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae262b61ca5ee22b991245025aaf3d30d"><td class="memItemLeft" align="right" valign="top"><a id="gae262b61ca5ee22b991245025aaf3d30d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractAboveThresholdNode) <a class="el" href="class_extract_above_threshold.xhtml">ExtractAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gae262b61ca5ee22b991245025aaf3d30d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9e3c3cfd3b18a050a3e41c5c99c79124"><td class="memItemLeft" align="right" valign="top"><a id="ga9e3c3cfd3b18a050a3e41c5c99c79124"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractBelowThresholdScalar) <a class="el" href="class_extract_below_threshold.xhtml">ExtractBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga9e3c3cfd3b18a050a3e41c5c99c79124"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d9a072c09bb5047118c1270d7eb5205"><td class="memItemLeft" align="right" valign="top"><a id="ga9d9a072c09bb5047118c1270d7eb5205"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractAboveThresholdElement) <a class="el" href="class_extract_above_threshold.xhtml">ExtractAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga9d9a072c09bb5047118c1270d7eb5205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf6741fe8fabc9dddd6a515bcb1fd3433"><td class="memItemLeft" align="right" valign="top"><a id="gaf6741fe8fabc9dddd6a515bcb1fd3433"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (CopyFilledDataNode) <a class="el" href="class_copy_filled_data.xhtml">CopyFilledData</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gaf6741fe8fabc9dddd6a515bcb1fd3433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f94e610f1251dacfe820bb933537483"><td class="memItemLeft" align="right" valign="top"><a id="ga1f94e610f1251dacfe820bb933537483"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractMissingDataFlagsNode) <a class="el" href="class_extract_missing_data_flags.xhtml">ExtractMissingDataFlags</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga1f94e610f1251dacfe820bb933537483"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaeb4640f2e66446cda9d489efbaff43a1"><td class="memItemLeft" align="right" valign="top"><a id="gaeb4640f2e66446cda9d489efbaff43a1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractAboveThresholdScalar) <a class="el" href="class_extract_above_threshold.xhtml">ExtractAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:gaeb4640f2e66446cda9d489efbaff43a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4fc29f33c96569a3aa2670cc93b04bb6"><td class="memItemLeft" align="right" valign="top"><a id="ga4fc29f33c96569a3aa2670cc93b04bb6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractScalarsFromQuantityNode) <a class="el" href="class_extract_scalars_from_quantity.xhtml">ExtractScalarsFromQuantity</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga4fc29f33c96569a3aa2670cc93b04bb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf54ed89c4e19498ba1eda827dc13fce9"><td class="memItemLeft" align="right" valign="top"><a id="gaf54ed89c4e19498ba1eda827dc13fce9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (CopyFilledDataElement) <a class="el" href="class_copy_filled_data.xhtml">CopyFilledData</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gaf54ed89c4e19498ba1eda827dc13fce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga086e603b0b88088bc19fef395577e0b3"><td class="memItemLeft" align="right" valign="top"><a id="ga086e603b0b88088bc19fef395577e0b3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractMissingDataFlagsElement) <a class="el" href="class_extract_missing_data_flags.xhtml">ExtractMissingDataFlags</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga086e603b0b88088bc19fef395577e0b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga039b26966f5b769c6d38e819be229b8e"><td class="memItemLeft" align="right" valign="top"><a id="ga039b26966f5b769c6d38e819be229b8e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeAbsoluteMaximaNode) <a class="el" href="class_compute_absolute_maxima.xhtml">ComputeAbsoluteMaxima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga039b26966f5b769c6d38e819be229b8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2f528c8665bec4e79b28447c2c6951a0"><td class="memItemLeft" align="right" valign="top"><a id="ga2f528c8665bec4e79b28447c2c6951a0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeAbsoluteMinimaNode) <a class="el" href="class_compute_absolute_minima.xhtml">ComputeAbsoluteMinima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga2f528c8665bec4e79b28447c2c6951a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacf46c1c5efa13e6b4db37e9ea22ea292"><td class="memItemLeft" align="right" valign="top"><a id="gacf46c1c5efa13e6b4db37e9ea22ea292"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractScalarsFromQuantityElement) <a class="el" href="class_extract_scalars_from_quantity.xhtml">ExtractScalarsFromQuantity</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gacf46c1c5efa13e6b4db37e9ea22ea292"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebca0f985d1943694b1cfbee206f7f9a"><td class="memItemLeft" align="right" valign="top"><a id="gaebca0f985d1943694b1cfbee206f7f9a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (CopyFilledDataScalar) <a class="el" href="class_copy_filled_data.xhtml">CopyFilledData</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:gaebca0f985d1943694b1cfbee206f7f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga28c35995bea05eb8a3f29d91eb344613"><td class="memItemLeft" align="right" valign="top"><a id="ga28c35995bea05eb8a3f29d91eb344613"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeAbsoluteMaximaElement) <a class="el" href="class_compute_absolute_maxima.xhtml">ComputeAbsoluteMaxima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga28c35995bea05eb8a3f29d91eb344613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf7de8a11804da51993697543aac383b6"><td class="memItemLeft" align="right" valign="top"><a id="gaf7de8a11804da51993697543aac383b6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeAbsoluteMinimaElement) <a class="el" href="class_compute_absolute_minima.xhtml">ComputeAbsoluteMinima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gaf7de8a11804da51993697543aac383b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dc3b954a88549548db61569b8e3872e"><td class="memItemLeft" align="right" valign="top"><a id="ga9dc3b954a88549548db61569b8e3872e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceAboveThresholdNode) <a class="el" href="class_replace_above_threshold.xhtml">ReplaceAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga9dc3b954a88549548db61569b8e3872e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga141c3b1a0e94de1ae806ef200e5b4c75"><td class="memItemLeft" align="right" valign="top"><a id="ga141c3b1a0e94de1ae806ef200e5b4c75"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceBelowThresholdNode) <a class="el" href="class_replace_below_threshold.xhtml">ReplaceBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga141c3b1a0e94de1ae806ef200e5b4c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga31d357af5435bb23a2d9be07aaee4c7b"><td class="memItemLeft" align="right" valign="top"><a id="ga31d357af5435bb23a2d9be07aaee4c7b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ExtractMissingDataFlagsScalar) <a class="el" href="class_extract_missing_data_flags.xhtml">ExtractMissingDataFlags</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga31d357af5435bb23a2d9be07aaee4c7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac8b2d3a3ce63ac2ec0c509e178750ecc"><td class="memItemLeft" align="right" valign="top"><a id="gac8b2d3a3ce63ac2ec0c509e178750ecc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceAboveThresholdElement) <a class="el" href="class_replace_above_threshold.xhtml">ReplaceAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gac8b2d3a3ce63ac2ec0c509e178750ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d1474a987489c6bf4e87231bf5d575c"><td class="memItemLeft" align="right" valign="top"><a id="ga0d1474a987489c6bf4e87231bf5d575c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceBelowThresholdElement) <a class="el" href="class_replace_below_threshold.xhtml">ReplaceBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga0d1474a987489c6bf4e87231bf5d575c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga86809e062eaa0df08848851e93e85d57"><td class="memItemLeft" align="right" valign="top"><a id="ga86809e062eaa0df08848851e93e85d57"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceAboveThresholdScalar) <a class="el" href="class_replace_above_threshold.xhtml">ReplaceAboveThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga86809e062eaa0df08848851e93e85d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20d07d68897d85c708f0baf12b7111f1"><td class="memItemLeft" align="right" valign="top"><a id="ga20d07d68897d85c708f0baf12b7111f1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ReplaceBelowThresholdScalar) <a class="el" href="class_replace_below_threshold.xhtml">ReplaceBelowThreshold</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga20d07d68897d85c708f0baf12b7111f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2db09a1140216217c6473c1b33681e5"><td class="memItemLeft" align="right" valign="top"><a id="gaa2db09a1140216217c6473c1b33681e5"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeRelativeMaximaNode) <a class="el" href="class_compute_relative_maxima.xhtml">ComputeRelativeMaxima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gaa2db09a1140216217c6473c1b33681e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab4b4524983d731399176e4c81d996766"><td class="memItemLeft" align="right" valign="top"><a id="gab4b4524983d731399176e4c81d996766"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeRelativeMinimaNode) <a class="el" href="class_compute_relative_minima.xhtml">ComputeRelativeMinima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gab4b4524983d731399176e4c81d996766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f19542b1a32925ea1bcf90e8e344532"><td class="memItemLeft" align="right" valign="top"><a id="ga5f19542b1a32925ea1bcf90e8e344532"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeRelativeMinimaElement) <a class="el" href="class_compute_relative_minima.xhtml">ComputeRelativeMinima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga5f19542b1a32925ea1bcf90e8e344532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3fcb69271f3fd262507ce4a540c1b1d6"><td class="memItemLeft" align="right" valign="top"><a id="ga3fcb69271f3fd262507ce4a540c1b1d6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeRelativeMaximaElement) <a class="el" href="class_compute_relative_maxima.xhtml">ComputeRelativeMaxima</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga3fcb69271f3fd262507ce4a540c1b1d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadca3c24f41c1b71119477974328fc265"><td class="memItemLeft" align="right" valign="top"><a id="gadca3c24f41c1b71119477974328fc265"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ConvertNodeToNode) <a class="el" href="struct_convert_to_node.xhtml">ConvertToNode</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gadca3c24f41c1b71119477974328fc265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a0a36a284c27698e0742f0fa36938c1"><td class="memItemLeft" align="right" valign="top"><a id="ga8a0a36a284c27698e0742f0fa36938c1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ConvertNodeToElement) <a class="el" href="struct_convert_to_element.xhtml">ConvertToElement</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga8a0a36a284c27698e0742f0fa36938c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaffd2cb48278afd6e219301a57c7a6a00"><td class="memItemLeft" align="right" valign="top"><a id="gaffd2cb48278afd6e219301a57c7a6a00"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ConvertElementToNode) <a class="el" href="struct_convert_to_node.xhtml">ConvertToNode</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gaffd2cb48278afd6e219301a57c7a6a00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2070a4a645b8fcd858fc044c302633d6"><td class="memItemLeft" align="right" valign="top"><a id="ga2070a4a645b8fcd858fc044c302633d6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ConvertElementToElement) <a class="el" href="struct_convert_to_element.xhtml">ConvertToElement</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:ga2070a4a645b8fcd858fc044c302633d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe67daa5c410c8609a35f90812fb9848"><td class="memItemLeft" align="right" valign="top"><a id="gafe67daa5c410c8609a35f90812fb9848"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerSampleNode) <a class="el" href="class_compute_single_object_per_sample.xhtml">ComputeSingleObjectPerSample</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:gafe67daa5c410c8609a35f90812fb9848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa1667ea16144ca2f032b313ee77dd5b9"><td class="memItemLeft" align="right" valign="top"><a id="gaa1667ea16144ca2f032b313ee77dd5b9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerSampleElement) <a class="el" href="class_compute_single_object_per_sample.xhtml">ComputeSingleObjectPerSample</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gaa1667ea16144ca2f032b313ee77dd5b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1de928573b8b1ec54c8fe9a8a36c4439"><td class="memItemLeft" align="right" valign="top"><a id="ga1de928573b8b1ec54c8fe9a8a36c4439"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerSampleScalar) <a class="el" href="class_compute_single_object_per_sample.xhtml">ComputeSingleObjectPerSample</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga1de928573b8b1ec54c8fe9a8a36c4439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7c602a8bfc498265aa85d2f6f2e705e8"><td class="memItemLeft" align="right" valign="top"><a id="ga7c602a8bfc498265aa85d2f6f2e705e8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerObjectNode) <a class="el" href="class_compute_single_object_per_object.xhtml">ComputeSingleObjectPerObject</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> &gt;</td></tr>
<tr class="separator:ga7c602a8bfc498265aa85d2f6f2e705e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4efc602f96fd0c8e38052753ada8f2f"><td class="memItemLeft" align="right" valign="top"><a id="gae4efc602f96fd0c8e38052753ada8f2f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerObjectElement) <a class="el" href="class_compute_single_object_per_object.xhtml">ComputeSingleObjectPerObject</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a> &gt;</td></tr>
<tr class="separator:gae4efc602f96fd0c8e38052753ada8f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga04dd4b16af6a8c9cba259f605de07f44"><td class="memItemLeft" align="right" valign="top"><a id="ga04dd4b16af6a8c9cba259f605de07f44"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>template</b> (ComputeSingleObjectPerObjectScalar) <a class="el" href="class_compute_single_object_per_object.xhtml">ComputeSingleObjectPerObject</a>&lt; <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a> &gt;</td></tr>
<tr class="separator:ga04dd4b16af6a8c9cba259f605de07f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:ga655cb021f721f0981865bc866b508df4"><td class="memItemLeft" align="right" valign="top"><a id="ga655cb021f721f0981865bc866b508df4"></a>
<a class="el" href="struct_mesh_morpher_settings.xhtml">MeshMorpherSettings</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__toolbox.xhtml#ga655cb021f721f0981865bc866b508df4">mesh_morpher_settings</a></td></tr>
<tr class="memdesc:ga655cb021f721f0981865bc866b508df4"><td class="mdescLeft">&#160;</td><td class="mdescRight">global settings for mesh morphing <br /></td></tr>
<tr class="separator:ga655cb021f721f0981865bc866b508df4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Data analysis and manipulation toolbox. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga3d271639ce30ae41ef6fc0b152d1708e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga3d271639ce30ae41ef6fc0b152d1708e">&#9670;&nbsp;</a></span>checkPointsInElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> checkPointsInElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>coors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks in which finite element which coordinates are located </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the mesh (FEM) </td></tr>
    <tr><td class="paramname">coors</td><td>the coordinates of the points to be tested (3*N, each column is one coordinate in 3d) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a column vector indicating outside by -1 and else the index of the finite element (with respect to indexMapper) </dd></dl>

</div>
</div>
<a id="ga216863415a26411ae9e4f7b9ebc843d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga216863415a26411ae9e4f7b9ebc843d9">&#9670;&nbsp;</a></span>checkPointsInVolume()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> checkPointsInVolume </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>coors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks which coordinates are in the interior of a volume </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the mesh </td></tr>
    <tr><td class="paramname">coors</td><td>the coordinates of the points to be tested (3*N, each column is one coordinate in 3d) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a column vector indicating outside by 0 and inside by 1 </dd></dl>

</div>
</div>
<a id="gaf3c9b09de87d21154d944be806306558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf3c9b09de87d21154d944be806306558">&#9670;&nbsp;</a></span>computeEuclidianDistancesNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeEuclidianDistancesNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>reference_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the Euclidian distances of all nodes with respect to a given node set. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector containing the euclidian distances of each node to the respective reference nodes The euclidian distance between two nodes defines the distance between two nodes in Euclidian space (ignoring mesh topology). Numerical complexity is O(n*m) with n = number of nodes, m=number of reference nodes; </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">reference_indices</td><td>a vector containing the indices to nodes the define the zero distances (e.g. reference boundary) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga6d1a880d55f0247e64fca274b358aa85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga6d1a880d55f0247e64fca274b358aa85">&#9670;&nbsp;</a></span>computeGraphDistancesNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeGraphDistancesNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>reference_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the graph (i.e. normalized) distances of all nodes with respect to a given node set. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector containing the graph distances of each node to the respective reference nodes The graph distance defines between two nodes how many graph edges are used at least to connect the two nodes. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">reference_indices</td><td>a vector containing the indices to nodes the define the zero distances (e.g. reference boundary) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga49dfbde3573203385be3bdf60ccdb98c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga49dfbde3573203385be3bdf60ccdb98c">&#9670;&nbsp;</a></span>computeLargestModelDimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number computeLargestModelDimension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the largest axial dimension of the mesh </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the largest dimension of the mesh along one of the axis. </dd></dl>

</div>
</div>
<a id="gad77a9797ed81a41c4cc04eed3cfe2401"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad77a9797ed81a41c4cc04eed3cfe2401">&#9670;&nbsp;</a></span>computeNodalCoorDeviation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">computeNodalCoorDeviation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>mesh_project_target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>mesh_project_contactor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_search_distance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>number_sided_n2s_contact</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_x_deviation_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_y_deviation_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_z_deviation_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_normal_deviation_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_design_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>associate_face_normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the deviation of nodal coordinates between two meshes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mesh_project_target</td><td>is the mesh to which the deviation is measured. the difference vector will be the difference of the coordinates of <em>mesh_project_contactor</em> minus the coordinates of <em>mesh_project_target</em>. On requires that the onSurface flags were set in the <em>mesh_project_target</em> mesh! </td></tr>
    <tr><td class="paramname">mesh_project_contactor</td><td>is the mesh from which the deviation is to be measured. If <em>mesh_project_target</em> and <em>mesh_project_contactor</em> are compatible, a simple algorithm is used which only takes the nodal coordinates (and the normal vectors on the boundary of <em>mesh-from</em>) as reference. If both are incompatible, then a real closest-point projection is performed. Usually, <em>mesh_project_contactor</em> is one of the imported design meshes. It must be identical or compatible with the mesh stored in database. If <em>mesh_project_contactor</em> is empty, one takes the mesh from <em>database</em> instead. The coordinate deviation is computes such that coor[contactor]+deviation = coor[target] </td></tr>
    <tr><td class="paramname">max_search_distance</td><td>the maximum search distance used in closest-point projection. </td></tr>
    <tr><td class="paramname">number_sided_n2s_contact</td><td>defines if a number sided node-to-surface projection is used in closest-point projection (recommended). If not, only the boundary nodes of <em>mesh_project_contactor</em> are chosen. </td></tr>
    <tr><td class="paramname">new_x_deviation_ident</td><td>the ident of the nodal deviation object along x direction (if empty: no object will be created) </td></tr>
    <tr><td class="paramname">new_y_deviation_ident</td><td>the ident of the nodal deviation object along y direction (if empty: no object will be created) </td></tr>
    <tr><td class="paramname">new_z_deviation_ident</td><td>the ident of the nodal deviation object along z direction (if empty: no object will be created) </td></tr>
    <tr><td class="paramname">new_normal_deviation_ident</td><td>the ident of the nodal deviation object along normal direction (if empty: no object will be created) </td></tr>
    <tr><td class="paramname">new_design_ident</td><td>the design ident of all new objects </td></tr>
    <tr><td class="paramname">database</td><td>the database where all objects are to be inserted. </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>is true if already existing output data objects will be replaced. In this case, also all depending objects of the already existing one will be deleted. </td></tr>
    <tr><td class="paramname">associate_face_normals</td><td>if true, then the detection tries to associate only those boundary faces which point into the same half space. This may be good for thin-walled structures, but may fail in case of large deformations. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga17463bc47c971d5ce84effc82610e8b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga17463bc47c971d5ce84effc82610e8b0">&#9670;&nbsp;</a></span>computeNodalCoorDeviationVectorFromSignedDistance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_vector.xhtml">DataObjectVector</a> computeNodalCoorDeviationVectorFromSignedDistance </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_index_mapper.xhtml">IndexMapper</a>&#160;</td>
          <td class="paramname"><em>index_mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>signed_distance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_interpolated_missing_values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_distancefield</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>mesh_smoothening</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes the deviation vector (of node coordinates) given a signed distance vector and a reference mesh. The output will, of course, only contain the nodes on the boundary - all other are marked as "missing". </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mesh</td><td>The reference mesh </td></tr>
    <tr><td class="paramname">index_mapper</td><td>the index mapper all data refer to </td></tr>
    <tr><td class="paramname">signed_distance</td><td>The signed distance ("deviation") vector based on the reference mesh. </td></tr>
    <tr><td class="paramname">use_interpolated_missing_values</td><td>If true, then one takes the interpolated value if the input has missing items. Otherwise, missing items in the input will be also missing in the output. </td></tr>
    <tr><td class="paramname">use_distancefield</td><td>If false: Use normal vectors on the boundary. Else: Use distance field for geometric morphing. </td></tr>
    <tr><td class="paramname">mesh_smoothening</td><td>if true: use iterative smoothening, if false: no smoothening </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector with 3 objects: the deviation along x [0], y [1], and z [2] direction. </dd></dl>

</div>
</div>
<a id="gab5d59b8aea74df929cf4dc5d7dcfe380"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab5d59b8aea74df929cf4dc5d7dcfe380">&#9670;&nbsp;</a></span>computeNodeIndicesWithOptimalSpatialDistribution()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeNodeIndicesWithOptimalSpatialDistribution </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>number</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>boundary_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a vector with node indices </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">number</td><td>the number of indices </td></tr>
    <tr><td class="paramname">boundary_indices</td><td>the boundary indices, e.g. obtained from identifyNodesOnBoundaryEdges </td></tr>
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga603da4e157ca813d3f8c756ec7904b76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga603da4e157ca813d3f8c756ec7904b76">&#9670;&nbsp;</a></span>computeSmoothenedCoorDeviationVector() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">computeSmoothenedCoorDeviationVector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_index_mapper.xhtml">IndexMapper</a>&#160;</td>
          <td class="paramname"><em>index_mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>deviations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>smoothened_deviations</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Eigen::VectorXd&#160;</td>
          <td class="paramname"><em>missing_items_of_deviations</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes the deviation vector (of node coordinates) given 3 vectors defining the desired deviation direction in 3d space and a reference mesh. The output will, only contain the nodes on the boundary - all other are marked as "missing". </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mesh</td><td>The reference mesh </td></tr>
    <tr><td class="paramname">index_mapper</td><td>the index mapper all data refer to </td></tr>
    <tr><td class="paramname">deviations</td><td>3 columns containing the axial deviations </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A matrix with 3 columns: the deviation along x [0], y [1], and z [2] direction. </dd></dl>

</div>
</div>
<a id="gab19910412f50ce5f1d4064e0877c7c81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab19910412f50ce5f1d4064e0877c7c81">&#9670;&nbsp;</a></span>computeSmoothenedCoorDeviationVector() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_vector.xhtml">DataObjectVector</a> computeSmoothenedCoorDeviationVector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_index_mapper.xhtml">IndexMapper</a>&#160;</td>
          <td class="paramname"><em>index_mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>distance_vector_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>distance_vector_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>distance_vector_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_interpolated_missing_values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes the deviation vector (of node coordinates) given 3 vectors defining the desired deviation direction in 3d space and a reference mesh. The output will, only contain the nodes on the boundary - all other are marked as "missing". </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mesh</td><td>The reference mesh </td></tr>
    <tr><td class="paramname">index_mapper</td><td>the index mapper all data refer to </td></tr>
    <tr><td class="paramname">distance_vector_x</td><td>The distance ("deviation") vector along x axis based on the reference mesh. </td></tr>
    <tr><td class="paramname">distance_vector_y</td><td>The distance ("deviation") vector along y axis based on the reference mesh. </td></tr>
    <tr><td class="paramname">distance_vector_z</td><td>The distance ("deviation") vector along z axis based on the reference mesh. </td></tr>
    <tr><td class="paramname">use_interpolated_missing_values</td><td>If true, then one takes the interpolated value if the input has missing items. Otherwise, missing items in the input will be also missing in the output. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector with 3 objects: the deviation along x [0], y [1], and z [2] direction. </dd></dl>

</div>
</div>
<a id="ga603e2114e5daa50c03e89f27b3ad2063"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga603e2114e5daa50c03e89f27b3ad2063">&#9670;&nbsp;</a></span>computeTopologicalDistancesElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeTopologicalDistancesElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>reference_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the topological distances of all elements with respect to a given element set. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector containing the topological distances of each element to the respective reference elements The topological distance between two nodes defines the minimum cumulative distance along the graph edges to connect the two elements. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">reference_indices</td><td>a vector containing the indices to elements the define the zero distances (e.g. reference boundary) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga04d77239f0ea8db999841d66f7248f87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga04d77239f0ea8db999841d66f7248f87">&#9670;&nbsp;</a></span>computeTopologicalDistancesNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeTopologicalDistancesNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>reference_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the topological distances of all nodes with respect to a given node set. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector containing the topological distances of each node to the respective reference nodes The topological distance between two nodes defines the minimum cumulative distance along the graph edges to connect the two nodes. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">reference_indices</td><td>a vector containing the indices to nodes the define the zero distances (e.g. reference boundary) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac82afcfa64ebccbe4cc5f228b71ae523"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac82afcfa64ebccbe4cc5f228b71ae523">&#9670;&nbsp;</a></span>extractSubstructure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_structure.xhtml">Structure</a> extractSubstructure </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>nodes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>elements</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a database containing only the specified spatial substructure of the original data </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the original database </td></tr>
    <tr><td class="paramname">nodes</td><td>the global indices of the nodes to be exported </td></tr>
    <tr><td class="paramname">elements</td><td>the global indices of the elements to be exported</td></tr>
  </table>
  </dd>
</dl>
<p>The given indices refer to the curently active sets. All nodes being part of the given elements must be part of the specified list of nodes. The output database has the following properties:</p><ul>
<li>smaller mesh (limited to the node/elements)</li>
<li>smaller node and element sets (limtied to the node/elements)</li>
<li>copy of all scalar objects</li>
<li>copy of all field objects, but with reduced dimension</li>
<li>copy of all random fields, but with reduced dimension (probably not optimal -&gt; recreation the random field is recommended)</li>
<li>copy of all FMOP, but with reduced dimension (probably not optimal -&gt; recreation the FMOP is recommended) </li>
</ul>

</div>
</div>
<a id="gac40454960f443af9f7f89becd4be1f34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac40454960f443af9f7f89becd4be1f34">&#9670;&nbsp;</a></span>globalIndexFromElementSet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> globalIndexFromElementSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>part_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>set_ident</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the global indices of all elements that are in the given element set and in the currently set reference element set </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">part_ident</td><td>the part ident of the element set </td></tr>
    <tr><td class="paramname">set_ident</td><td>the ident of the element set within the part </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga718f52c7baee70200cbbe83ce8926ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga718f52c7baee70200cbbe83ce8926ece">&#9670;&nbsp;</a></span>globalIndexFromNodeSet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> globalIndexFromNodeSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>part_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>set_ident</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the global indices of all nodes that are in the given node set and in the currently set reference node set </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">part_ident</td><td>the part ident of the node set </td></tr>
    <tr><td class="paramname">set_ident</td><td>the ident of the node set within the part </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gade8eabb9d84527dbbc0ff2a5ac517aca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gade8eabb9d84527dbbc0ff2a5ac517aca">&#9670;&nbsp;</a></span>identifyElementsAdjacentToNodes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyElementsAdjacentToNodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>node_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the global indices of all elements that are connected to the given list of nodes </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">node_indices</td><td>indices (global indices) of all nodes to be considered </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gadf306ee3797c53354e75eabd496726b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf306ee3797c53354e75eabd496726b3">&#9670;&nbsp;</a></span>identifyNodesInRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesInRange </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>min_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>min_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>min_z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all nodes being in the defined rectangular region </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the mesh and refernece node set </td></tr>
    <tr><td class="paramname">min_x</td><td>lower bound for X </td></tr>
    <tr><td class="paramname">max_x</td><td>upper bound for X </td></tr>
    <tr><td class="paramname">min_y</td><td>lower bound for Y </td></tr>
    <tr><td class="paramname">max_y</td><td>upper bound for Y </td></tr>
    <tr><td class="paramname">min_z</td><td>lower bound for Z </td></tr>
    <tr><td class="paramname">max_z</td><td>upper bound for Z </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga75ed12bdb94554c36fc8a53292a63732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga75ed12bdb94554c36fc8a53292a63732">&#9670;&nbsp;</a></span>identifyNodesNearFixedBoundary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesNearFixedBoundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being which are part of the current reference set and which touch the fixed boundary </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga242ab68bb3053b304f54f7fff3b0c880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga242ab68bb3053b304f54f7fff3b0c880">&#9670;&nbsp;</a></span>identifyNodesOfElements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOfElements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>element_indices</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the global indices of all nodes that belong to the givven list of elements </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
    <tr><td class="paramname">element_indices</td><td>indices (global indices) of all elements to be considered </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga18ebe568e5db4b165a81cdc98da3d28f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga18ebe568e5db4b165a81cdc98da3d28f">&#9670;&nbsp;</a></span>identifyNodesOnBoundary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnBoundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being on the boundary surface of a FEM mesh </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga4ec8c55d9b81c9a90219f248ac33b64c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4ec8c55d9b81c9a90219f248ac33b64c">&#9670;&nbsp;</a></span>identifyNodesOnBoundaryEdges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnBoundaryEdges </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being on the boundary and on an edge of a FEM mesh or of the active domain. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga5fe93d5b9ee42dc1d6091e3bf03354f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5fe93d5b9ee42dc1d6091e3bf03354f5">&#9670;&nbsp;</a></span>identifyNodesOnBoundaryNearSharpFeatures()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnBoundaryNearSharpFeatures </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>cos_angle_limit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes on the boundary, at boundary edges and at boundary points with sharp edges/corners </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
    <tr><td class="paramname">cos_angle_limit</td><td>the cosine of the limiting angle between neighbouring normal vectors. If the actual scalar product is larger than the value defined here, it is considered as a sharp feature. "0" means e.g. an angle of &gt;90° </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga8b507ac76ab318ec7e76ee610ab9bd40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8b507ac76ab318ec7e76ee610ab9bd40">&#9670;&nbsp;</a></span>identifyNodesOnReferenceSetBoundary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnReferenceSetBoundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being on the edge of the current reference set (neighbours of nodes being not part of it) </p>
<dl class="section note"><dt>Note</dt><dd>Advantage: Works also for nsets in interior of volumes. Disadvantage: All nodes of the bounding element layer are token as boundary. Check method identifyNodesOnSurfaceAndReferenceSetBoundary as alternative. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="ga066af3bc2ce84788e60e71709cd34343"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga066af3bc2ce84788e60e71709cd34343">&#9670;&nbsp;</a></span>identifyNodesOnSurfaceAndReferenceSetBoundary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnSurfaceAndReferenceSetBoundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being on the boundary surface of a FEM mesh AND on the edge of the current reference set (neighbours of nodes being not part of it) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="gad28b34776e07d60455e4ca099ea76bf8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad28b34776e07d60455e4ca099ea76bf8">&#9670;&nbsp;</a></span>identifyNodesOnSurfacePatches()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> identifyNodesOnSurfacePatches </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>reference_indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>cos_angle_limit</em> = <code>0.75</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies all FE nodes being on the boundary surface of a FEM mesh AND which define a single or multiple surface patches. A surface patch is defined by a part of the boundary that is delimited by an edge with too sharp angle between surface segements. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>contains the FEM mesh </td></tr>
    <tr><td class="paramname">cos_angle_limit</td><td>the cosine of the limiting angle between neighbouring normal vectors. If the actual scalar product is larger than the value defined here, it is considered as a sharp feature. "0" means e.g. an angle of &gt;90° </td></tr>
    <tr><td class="paramname">reference</td><td>indices contains the global indices of the FEM nodes which are located on the surface patch(es) to be identified. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a vector with indices. Each index corresponds to a node and is the index in a dataobject. </dd></dl>

</div>
</div>
<a id="gabbad639b996754299728f4a699b3cf11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gabbad639b996754299728f4a699b3cf11">&#9670;&nbsp;</a></span>indexDifference()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> indexDifference </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>B</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the difference of the indices A-B </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">A</td><td>the first index matrix </td></tr>
    <tr><td class="paramname">B</td><td>the second index matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gab43769abbf6a48c1447575048d4b1007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab43769abbf6a48c1447575048d4b1007">&#9670;&nbsp;</a></span>indexIntersection()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> indexIntersection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>B</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the intersection of the indices A and B </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">A</td><td>the first index matrix </td></tr>
    <tr><td class="paramname">B</td><td>the second index matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga00387fd8ba72b74464abfab40441ff23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga00387fd8ba72b74464abfab40441ff23">&#9670;&nbsp;</a></span>indexUnion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> indexUnion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>B</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a column vector containing the union of all indices </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">A</td><td>the first index matrix </td></tr>
    <tr><td class="paramname">B</td><td>the second index matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
