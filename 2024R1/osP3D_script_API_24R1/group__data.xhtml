<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Data</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__data.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Data</div>  </div>
</div><!--header-->
<div class="contents">

<p>Provides functions and classes to control the central data structure.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A general container for vector data.  <a href="class_data_object_container.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_ident_map.xhtml">DataObjectIdentMap</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A map of data objects of same type being associated with single string idents.  <a href="class_data_object_ident_map.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">the key (ident) of a data object in generic containers.  <a href="class_data_object_key.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A shared pointer wrapper for data objects.  <a href="class_data_object_ptr.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_vector.xhtml">DataObjectVector</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of <a class="el" href="class_data_object_ptr.xhtml" title="A shared pointer wrapper for data objects. ">DataObjectPtr</a>.  <a href="class_data_object_vector.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml">Element</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Repesents the geometry of a finite element within a mesh.  <a href="class_element.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_element_temporal_edit_info.xhtml">ElementTemporalEditInfo</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">collects information to be used for faster FEM mesh creation.  <a href="struct_element_temporal_edit_info.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_index_mapper.xhtml">IndexMapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for indices in global vectors and matrices.  <a href="class_index_mapper.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_mesh_assembly.xhtml">MeshAssembly</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">describes a finite element mesh  <a href="class_mesh_assembly.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a meta structure which contains all data that is used to create a finite element mesh.  <a href="class_meta_structure.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml">MOPContainer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a container storing all Field data models  <a href="class_m_o_p_container.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_multivariate_distribution_types.xhtml">MultivariateDistributionTypes</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">encalsulates ENUM constants defining supported distribution types  <a href="class_multivariate_distribution_types.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_random_field_container.xhtml">RandomFieldContainer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a container storing all random field decompositions  <a href="class_random_field_container.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_random_field_data.xhtml">RandomFieldData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">contains random field data for analysis and simulation for a single random field.  <a href="class_random_field_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_random_field_group.xhtml">RandomFieldGroup</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A group of random fields belonging together (either a single random field, or multiple cross-correlated fields)  <a href="class_random_field_group.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type.xhtml">ValueType</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents a type of value and a set of properties. <a class="el" href="class_value_type.xhtml" title="Represents a type of value and a set of properties. ValueType is intended to be associated with a set...">ValueType</a> is intended to be associated with a set of floating point data values. It stores information (the value type and named value attributes) about data values. It provides conversion routines between its associated floating point data values and value type.  <a href="class_value_type.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type_bool.xhtml">ValueTypeBool</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies a set of values as boolean and an associated set of optional attributes. It provides conversion routines between floating point and string representation.  <a href="class_value_type_bool.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type_double.xhtml">ValueTypeDouble</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies a set of values as number precision floating points values and an associated set of optional attributes (for instance minimum and maximum value). It provides conversion routines between floating point and string representation.  <a href="class_value_type_double.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type_enum.xhtml">ValueTypeEnum</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies a set of values as an enumration of strings type and an associated set of optional attributes (for instance minimum and maximum value). It provides conversion routines between floating point and string representation.  <a href="class_value_type_enum.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type_int.xhtml">ValueTypeInt</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies a set of values as integer values and an associated set of optional attributes (for instance minimum and maximum value). It provides conversion routines between floating point and string representation.  <a href="class_value_type_int.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_value_type_manager.xhtml">ValueTypeManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keeps track of all unique ValueTypes. Required to create new <a class="el" href="class_value_type.xhtml" title="Represents a type of value and a set of properties. ValueType is intended to be associated with a set...">ValueType</a> shared resource instances. Script example: </p><h1>Get the <a class="el" href="class_value_type_manager.xhtml" title="Keeps track of all unique ValueTypes. Required to create new ValueType shared resource instances...">ValueTypeManager</a> associated with a database's <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>.</h1>
value_type_manager = sos.database().data().valueTypeManager() </p><h1>Create a floating point <a class="el" href="class_value_type.xhtml" title="Represents a type of value and a set of properties. ValueType is intended to be associated with a set...">ValueType</a>, without any attributes</h1>
value_type = sos.ValueTypeDouble.create(value_type_manager, "my_unique_value_type") <br />
 print("Created ValueType:") print(value_type) </p><h1>Set attribute</h1>
value_type.setAttribute("max", 10) </p><h1>Get Attribute</h1>
max = value_type.attribute("max") print("Number of ValueTypes stored at ValueTypeManager:") print(value_type_manager.size()) #1 value_type = None #Clear unreferenced ValueTypes value_type_manager.clearUnused() print("Number of ValueTypes stored at ValueTypeManager:") print(value_type_manager.size()) #0.  <a href="class_value_type_manager.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:gae27ee575b860e91b6e43a5c597dbeb11"><td class="memItemLeft" align="right" valign="top"><a id="gae27ee575b860e91b6e43a5c597dbeb11"></a>
typedef std::pair&lt; string, <a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gae27ee575b860e91b6e43a5c597dbeb11">TQuantityIdent</a></td></tr>
<tr class="memdesc:gae27ee575b860e91b6e43a5c597dbeb11"><td class="mdescLeft">&#160;</td><td class="mdescRight">a type specifying a unique quantity, i.e. a string ident for the quantity name and the data type <br /></td></tr>
<tr class="separator:gae27ee575b860e91b6e43a5c597dbeb11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2a154410171578b305471e89715c7d93"><td class="memItemLeft" align="right" valign="top"><a id="ga2a154410171578b305471e89715c7d93"></a>
typedef std::vector&lt; number &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga2a154410171578b305471e89715c7d93">TUIntVector</a></td></tr>
<tr class="memdesc:ga2a154410171578b305471e89715c7d93"><td class="mdescLeft">&#160;</td><td class="mdescRight">a vector of numbers <br /></td></tr>
<tr class="separator:ga2a154410171578b305471e89715c7d93"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga1bebf1e22deb3cd41d7d99ddcdb15379"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> { <a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482">NODE_DATA</a> = 0, 
<a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174">ELEMENT_DATA</a>, 
<a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a37e1d7b53cc878816e95037e5762871a">INTPT_DATA</a>, 
<a class="el" href="group__data.xhtml#gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495">SCALAR_DATA</a>
 }</td></tr>
<tr class="memdesc:ga1bebf1e22deb3cd41d7d99ddcdb15379"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines an enum for different types of vector data.  <a href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">More...</a><br /></td></tr>
<tr class="separator:ga1bebf1e22deb3cd41d7d99ddcdb15379"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaa66eb2b80072d0daaca0984d0c2cbc0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gaa66eb2b80072d0daaca0984d0c2cbc0d">computeElementCoordinates</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="separator:gaa66eb2b80072d0daaca0984d0c2cbc0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cd13e1e99d329c39e31b1ec57d0a5e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga1cd13e1e99d329c39e31b1ec57d0a5e7">computeNodeCoordinates</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="separator:ga1cd13e1e99d329c39e31b1ec57d0a5e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga561f7f66d043dca0fbee1711d2621487"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga561f7f66d043dca0fbee1711d2621487">createElementDataObject</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> data, bool as_sample=true)</td></tr>
<tr class="memdesc:ga561f7f66d043dca0fbee1711d2621487"><td class="mdescLeft">&#160;</td><td class="mdescRight">creates a data object of type ELEMENT based on an external vector data object  <a href="#ga561f7f66d043dca0fbee1711d2621487">More...</a><br /></td></tr>
<tr class="separator:ga561f7f66d043dca0fbee1711d2621487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b7fbb33e01d7353e9fdc4e64049af20"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga4b7fbb33e01d7353e9fdc4e64049af20">createElementDataObject</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> data, <a class="el" href="class_matrix.xhtml">Matrix</a> missing_data, bool as_sample=true)</td></tr>
<tr class="memdesc:ga4b7fbb33e01d7353e9fdc4e64049af20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a data object of type ELEMENT based on an external vector data object including its missing data information.  <a href="#ga4b7fbb33e01d7353e9fdc4e64049af20">More...</a><br /></td></tr>
<tr class="separator:ga4b7fbb33e01d7353e9fdc4e64049af20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5f706da00ca8b65acf4a4f8730608b30"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga5f706da00ca8b65acf4a4f8730608b30">createNodeDataObject</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> data, bool as_sample=true)</td></tr>
<tr class="memdesc:ga5f706da00ca8b65acf4a4f8730608b30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a data object of type NODE based on an external vector data object including its missing data information.  <a href="#ga5f706da00ca8b65acf4a4f8730608b30">More...</a><br /></td></tr>
<tr class="separator:ga5f706da00ca8b65acf4a4f8730608b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa7e429472f0a49942b7978ad936b754b"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gaa7e429472f0a49942b7978ad936b754b">createNodeDataObject</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_matrix.xhtml">Matrix</a> data, <a class="el" href="class_matrix.xhtml">Matrix</a> missing_data, bool as_sample=true)</td></tr>
<tr class="memdesc:gaa7e429472f0a49942b7978ad936b754b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a data object of type NODE based on an external vector data object including its missing data information.  <a href="#gaa7e429472f0a49942b7978ad936b754b">More...</a><br /></td></tr>
<tr class="separator:gaa7e429472f0a49942b7978ad936b754b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fb8c3787a7c7345b6ac97ca38fbb5ec"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga9fb8c3787a7c7345b6ac97ca38fbb5ec">createScalarDataObject</a> (number data, bool as_sample=true)</td></tr>
<tr class="memdesc:ga9fb8c3787a7c7345b6ac97ca38fbb5ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">creates a data object of type SCALAR based on an external vector data object  <a href="#ga9fb8c3787a7c7345b6ac97ca38fbb5ec">More...</a><br /></td></tr>
<tr class="separator:ga9fb8c3787a7c7345b6ac97ca38fbb5ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebcac3a2836ec9fdf2e47bd812994b6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a> ()</td></tr>
<tr class="memdesc:gaebcac3a2836ec9fdf2e47bd812994b6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the global database.  <a href="#gaebcac3a2836ec9fdf2e47bd812994b6b">More...</a><br /></td></tr>
<tr class="separator:gaebcac3a2836ec9fdf2e47bd812994b6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b59c22870814a7fe33a1b332db498bf"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga4b59c22870814a7fe33a1b332db498bf">globalIndexFromElement</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, int part_index, int element_index)</td></tr>
<tr class="separator:ga4b59c22870814a7fe33a1b332db498bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a832513ab98f31d38f2479c9336fad9"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga8a832513ab98f31d38f2479c9336fad9">globalIndexFromGrid</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, int i, int j=0, int k=0)</td></tr>
<tr class="separator:ga8a832513ab98f31d38f2479c9336fad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d1d4b90423b1c6aebd88ea0b0db07c4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga1d1d4b90423b1c6aebd88ea0b0db07c4">globalIndexFromNode</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, int part_index, int node_index)</td></tr>
<tr class="separator:ga1d1d4b90423b1c6aebd88ea0b0db07c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4d6e618220a953afacda9ffd0b14d7ab"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga4d6e618220a953afacda9ffd0b14d7ab">gridDimension</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, unsigned char axis)</td></tr>
<tr class="separator:ga4d6e618220a953afacda9ffd0b14d7ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadb123a56d9e42dac204e789e94911b38"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gadb123a56d9e42dac204e789e94911b38">numElements</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="separator:gadb123a56d9e42dac204e789e94911b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bed76ade4f03b01ae5b4944a3a77568"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga8bed76ade4f03b01ae5b4944a3a77568">numNodes</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="separator:ga8bed76ade4f03b01ae5b4944a3a77568"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga995109cbde74fdc91eeeb5431162ea03"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#ga995109cbde74fdc91eeeb5431162ea03">operator==</a> (<a class="el" href="class_data_object_ptr.xhtml#afa0bd4d832168701ce39642b559bf810">DataObjectPtr::ObserverPtr</a> <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>, DataObject *b)</td></tr>
<tr class="memdesc:ga995109cbde74fdc91eeeb5431162ea03"><td class="mdescLeft">&#160;</td><td class="mdescRight">equal operator  <a href="#ga995109cbde74fdc91eeeb5431162ea03">More...</a><br /></td></tr>
<tr class="separator:ga995109cbde74fdc91eeeb5431162ea03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf4920745450634090634d586c22ea97"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__data.xhtml#gadf4920745450634090634d586c22ea97">printMeshInfo</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:gadf4920745450634090634d586c22ea97"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints information on the finite element mesh  <a href="#gadf4920745450634090634d586c22ea97">More...</a><br /></td></tr>
<tr class="separator:gadf4920745450634090634d586c22ea97"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Provides functions and classes to control the central data structure. </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga1bebf1e22deb3cd41d7d99ddcdb15379"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1bebf1e22deb3cd41d7d99ddcdb15379">&#9670;&nbsp;</a></span>dataobject_types</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines an enum for different types of vector data. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga1bebf1e22deb3cd41d7d99ddcdb15379a2bccb499db6de63e558b75b39da3d482"></a>NODE_DATA&#160;</td><td class="fielddoc"><p>node data (one scalar per node) </p>
</td></tr>
<tr><td class="fieldname"><a id="gga1bebf1e22deb3cd41d7d99ddcdb15379ae9445a58a2c3cd515f2058cbd3117174"></a>ELEMENT_DATA&#160;</td><td class="fielddoc"><p>element data (one scalar per element) </p>
</td></tr>
<tr><td class="fieldname"><a id="gga1bebf1e22deb3cd41d7d99ddcdb15379a37e1d7b53cc878816e95037e5762871a"></a>INTPT_DATA&#160;</td><td class="fielddoc"><p>integration point data </p>
</td></tr>
<tr><td class="fieldname"><a id="gga1bebf1e22deb3cd41d7d99ddcdb15379a916fc40dfca5ba301488a121abe77495"></a>SCALAR_DATA&#160;</td><td class="fielddoc"><p>scalar data (vector of size 1) </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaa66eb2b80072d0daaca0984d0c2cbc0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa66eb2b80072d0daaca0984d0c2cbc0d">&#9670;&nbsp;</a></span>computeElementCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeElementCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the matrix of x,y,z coordinates with respect to the centers of the elements of the reference element set (dimension 3*n; each column is one coordinate) </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1cd13e1e99d329c39e31b1ec57d0a5e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1cd13e1e99d329c39e31b1ec57d0a5e7">&#9670;&nbsp;</a></span>computeNodeCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> computeNodeCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the matrix of x,y,z coordinates with respect to the nodes of the reference node set (dimension 3*n; each column is one coordinate) </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database containing the reference mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga561f7f66d043dca0fbee1711d2621487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga561f7f66d043dca0fbee1711d2621487">&#9670;&nbsp;</a></span>createElementDataObject() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> createElementDataObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>as_sample</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>creates a data object of type ELEMENT based on an external vector data object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database this object refers to. It is mainly used to test dimension etc. </td></tr>
    <tr><td class="paramname">data</td><td>the actual data. It must be a column vector. The ordering is with respect to the database. (indexMapper) </td></tr>
    <tr><td class="paramname">as_sample</td><td>if true, then the returned data object may be used as an input sample in algorithms. Else it is assumed to be a result. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a new data object containing the appropriate data. The data object will be active and will not have any missing data items. </dd></dl>

</div>
</div>
<a id="ga4b7fbb33e01d7353e9fdc4e64049af20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b7fbb33e01d7353e9fdc4e64049af20">&#9670;&nbsp;</a></span>createElementDataObject() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> createElementDataObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>missing_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>as_sample</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a data object of type ELEMENT based on an external vector data object including its missing data information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database this object refers to. It is mainly used to test dimension etc. </td></tr>
    <tr><td class="paramname">data</td><td>The actual data. It must be a column vector. The ordering is with respect to the indexMapper of the database. </td></tr>
    <tr><td class="paramname">missing_data</td><td>The missing data information. As the data vector it must be a column vector with the same ordering. Furthermore it shall contain only values different from 0 at indices where data values are actually missing. </td></tr>
    <tr><td class="paramname">as_sample</td><td>If true, then the returned data object may be used as an input sample in algorithms. Else it is assumed to be a result. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new data object containing the appropriate data. The data object will be active and will not have any missing data items. </dd></dl>

</div>
</div>
<a id="ga5f706da00ca8b65acf4a4f8730608b30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5f706da00ca8b65acf4a4f8730608b30">&#9670;&nbsp;</a></span>createNodeDataObject() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> createNodeDataObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>as_sample</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a data object of type NODE based on an external vector data object including its missing data information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database this object refers to. It is mainly used to test dimension etc. </td></tr>
    <tr><td class="paramname">data</td><td>The actual data. It must be a column vector. The ordering is with respect to the indexMapper of the database. </td></tr>
    <tr><td class="paramname">as_sample</td><td>If true, then the returned data object may be used as an input sample in algorithms. Else it is assumed to be a result. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new data object containing the appropriate data. The data object will be active and will not have any missing data items. </dd></dl>

</div>
</div>
<a id="gaa7e429472f0a49942b7978ad936b754b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa7e429472f0a49942b7978ad936b754b">&#9670;&nbsp;</a></span>createNodeDataObject() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> createNodeDataObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>missing_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>as_sample</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a data object of type NODE based on an external vector data object including its missing data information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database this object refers to. It is mainly used to test dimension etc. </td></tr>
    <tr><td class="paramname">data</td><td>The actual data. It must be a column vector. The ordering is with respect to the indexMapper of the database. </td></tr>
    <tr><td class="paramname">missing_data</td><td>The missing data information. As the data vector it must be a column vector with the same ordering. Furthermore it shall contain only values different from 0 at indices where data values are actually missing. </td></tr>
    <tr><td class="paramname">as_sample</td><td>If true, then the returned data object may be used as an input sample in algorithms. Else it is assumed to be a result. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A new data object containing the appropriate data. The data object will be active and will not have any missing data items. </dd></dl>

</div>
</div>
<a id="ga9fb8c3787a7c7345b6ac97ca38fbb5ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9fb8c3787a7c7345b6ac97ca38fbb5ec">&#9670;&nbsp;</a></span>createScalarDataObject()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> createScalarDataObject </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>as_sample</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>creates a data object of type SCALAR based on an external vector data object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>the actual data. It must be a column vector. The ordering is with respect to the database. (indexMapper) </td></tr>
    <tr><td class="paramname">as_sample</td><td>if true, then the returned data object may be used as an input sample in algorithms. Else it is assumed to be a result. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a new data object containing the appropriate data. The data object will be active and will not have any missing data items. </dd></dl>

</div>
</div>
<a id="gaebcac3a2836ec9fdf2e47bd812994b6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaebcac3a2836ec9fdf2e47bd812994b6b">&#9670;&nbsp;</a></span>database()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_structure.xhtml">Structure</a> database </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gives access to the global database. </p>
<dl class="section return"><dt>Returns</dt><dd>A reference to the object database_ptr (the object must be valid!), stored in </dd></dl>
<dl class="section see"><dt>See also</dt><dd>application_data </dd></dl>

</div>
</div>
<a id="ga4b59c22870814a7fe33a1b332db498bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4b59c22870814a7fe33a1b332db498bf">&#9670;&nbsp;</a></span>globalIndexFromElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int globalIndexFromElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>part_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>element_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the global index in a data object from element index </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
    <tr><td class="paramname">part_index</td><td>the index of the part the element belongs to </td></tr>
    <tr><td class="paramname">element_index</td><td>the index of the element within the part </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga8a832513ab98f31d38f2479c9336fad9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8a832513ab98f31d38f2479c9336fad9">&#9670;&nbsp;</a></span>globalIndexFromGrid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int globalIndexFromGrid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>j</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>k</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
    <tr><td class="paramname">i</td><td>index i </td></tr>
    <tr><td class="paramname">j</td><td>index j </td></tr>
    <tr><td class="paramname">k</td><td>index k </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the corresponding data index of the given grid coordinate </dd></dl>

</div>
</div>
<a id="ga1d1d4b90423b1c6aebd88ea0b0db07c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d1d4b90423b1c6aebd88ea0b0db07c4">&#9670;&nbsp;</a></span>globalIndexFromNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int globalIndexFromNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>part_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>node_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the global index in a data object from node index </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
    <tr><td class="paramname">part_index</td><td>the index of the part the node belongs to </td></tr>
    <tr><td class="paramname">node_index</td><td>the index of the node within the part </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga4d6e618220a953afacda9ffd0b14d7ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4d6e618220a953afacda9ffd0b14d7ab">&#9670;&nbsp;</a></span>gridDimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int gridDimension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
    <tr><td class="paramname">axis</td><td>the axis id (0: i, 1: j, 2: k) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of nodes along given axis of grid </dd></dl>

</div>
</div>
<a id="gadb123a56d9e42dac204e789e94911b38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadb123a56d9e42dac204e789e94911b38">&#9670;&nbsp;</a></span>numElements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int numElements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of active elements </dd></dl>

</div>
</div>
<a id="ga8bed76ade4f03b01ae5b4944a3a77568"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8bed76ade4f03b01ae5b4944a3a77568">&#9670;&nbsp;</a></span>numNodes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int numNodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the number of active nodes </dd></dl>

</div>
</div>
<a id="ga995109cbde74fdc91eeeb5431162ea03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga995109cbde74fdc91eeeb5431162ea03">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml#afa0bd4d832168701ce39642b559bf810">DataObjectPtr::ObserverPtr</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DataObject *&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>equal operator </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>a shared observer pointer to a data object </td></tr>
    <tr><td class="paramname">b</td><td>a simple pointer to a data object to be compared </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the memory addresses are equal </dd></dl>

</div>
</div>
<a id="gadf4920745450634090634d586c22ea97"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gadf4920745450634090634d586c22ea97">&#9670;&nbsp;</a></span>printMeshInfo()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">printMeshInfo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prints information on the finite element mesh </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>database containing the mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
