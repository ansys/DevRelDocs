<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Miscellaneous</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__misc.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Miscellaneous</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_real_list.xhtml">RealList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a convenience class for Lua (std::list&lt;number&gt;)  <a href="class_real_list.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gae50275197090093dde0b291bba13ed6d"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gae50275197090093dde0b291bba13ed6d">currentScriptPath</a> ()</td></tr>
<tr class="memdesc:gae50275197090093dde0b291bba13ed6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines the current directory of the the currently running script file.  <a href="#gae50275197090093dde0b291bba13ed6d">More...</a><br /></td></tr>
<tr class="separator:gae50275197090093dde0b291bba13ed6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2e3aa62e39e5a82dd1f3b2bddc1fe41"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gac2e3aa62e39e5a82dd1f3b2bddc1fe41">loadMacros</a> (macro::MacroManager macroManager)</td></tr>
<tr class="memdesc:gac2e3aa62e39e5a82dd1f3b2bddc1fe41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load macros stored at the <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a>. Loaded macros are callable functions in SoS script context. Loaded macros are stored in the <em>sos_macros</em> Lua table. Example call:  <a href="#gac2e3aa62e39e5a82dd1f3b2bddc1fe41">More...</a><br /></td></tr>
<tr class="separator:gac2e3aa62e39e5a82dd1f3b2bddc1fe41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacc1f94f24e8a810977c3d4d8c7c0a0b9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gacc1f94f24e8a810977c3d4d8c7c0a0b9">loadMacros</a> ()</td></tr>
<tr class="memdesc:gacc1f94f24e8a810977c3d4d8c7c0a0b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load macros stored at the <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> of the current sos.database(). Loaded macros are callable functions in SoS script context. Loaded macros are stored in the <em>sos_macros</em> Lua table. Example call:  <a href="#gacc1f94f24e8a810977c3d4d8c7c0a0b9">More...</a><br /></td></tr>
<tr class="separator:gacc1f94f24e8a810977c3d4d8c7c0a0b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac54ef505f435c0792a201496df7ac71a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gac54ef505f435c0792a201496df7ac71a">log</a> (string message)</td></tr>
<tr class="memdesc:gac54ef505f435c0792a201496df7ac71a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Issues an info log message.  <a href="#gac54ef505f435c0792a201496df7ac71a">More...</a><br /></td></tr>
<tr class="separator:gac54ef505f435c0792a201496df7ac71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf74ccfa3835ac7064c7b8548b805e848"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gaf74ccfa3835ac7064c7b8548b805e848">log</a> (number level, string message)</td></tr>
<tr class="memdesc:gaf74ccfa3835ac7064c7b8548b805e848"><td class="mdescLeft">&#160;</td><td class="mdescRight">Issues a log message to the SoS logger.  <a href="#gaf74ccfa3835ac7064c7b8548b805e848">More...</a><br /></td></tr>
<tr class="separator:gaf74ccfa3835ac7064c7b8548b805e848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad03ab6943f70cf074ab3c4968f391dee"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gad03ab6943f70cf074ab3c4968f391dee">setLogLevel</a> (number level=3, int log_id=-1)</td></tr>
<tr class="memdesc:gad03ab6943f70cf074ab3c4968f391dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the verbose level of the logger  <a href="#gad03ab6943f70cf074ab3c4968f391dee">More...</a><br /></td></tr>
<tr class="separator:gad03ab6943f70cf074ab3c4968f391dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1446974842fc22f6562c679a6b168391"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#ga1446974842fc22f6562c679a6b168391">setMaxNumThreads</a> (number numthreads)</td></tr>
<tr class="memdesc:ga1446974842fc22f6562c679a6b168391"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the maximum number of threads used in OpenMP.  <a href="#ga1446974842fc22f6562c679a6b168391">More...</a><br /></td></tr>
<tr class="separator:ga1446974842fc22f6562c679a6b168391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaee56115d53407a868281c97b9c8a3daa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__misc.xhtml#gaee56115d53407a868281c97b9c8a3daa">useCommandLogFile</a> (bool usage=true)</td></tr>
<tr class="memdesc:gaee56115d53407a868281c97b9c8a3daa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Controls the usage of SoS's command log file.  <a href="#gaee56115d53407a868281c97b9c8a3daa">More...</a><br /></td></tr>
<tr class="separator:gaee56115d53407a868281c97b9c8a3daa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<h2 class="groupheader">Function Documentation</h2>
<a id="gae50275197090093dde0b291bba13ed6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae50275197090093dde0b291bba13ed6d">&#9670;&nbsp;</a></span>currentScriptPath()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string currentScriptPath </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines the current directory of the the currently running script file. </p>
<p>The method uses the global interpreter() function to access the Lua state.</p>
<dl class="section return"><dt>Returns</dt><dd>The current directory of the script being processed at the moment. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">An</td><td>exception if the current script is not a file </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gac2e3aa62e39e5a82dd1f3b2bddc1fe41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac2e3aa62e39e5a82dd1f3b2bddc1fe41">&#9670;&nbsp;</a></span>loadMacros() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">loadMacros </td>
          <td>(</td>
          <td class="paramtype">macro::MacroManager&#160;</td>
          <td class="paramname"><em>macroManager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load macros stored at the <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a>. Loaded macros are callable functions in SoS script context. Loaded macros are stored in the <em>sos_macros</em> Lua table. Example call: </p>
<p>sos_macros.getNodeMin(sos.database(), "1", 'TEMP', 'min[TEMP]')</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">macroManager</td><td>A reference to the <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a>. All the macroManager's macros are loaded. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gacc1f94f24e8a810977c3d4d8c7c0a0b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacc1f94f24e8a810977c3d4d8c7c0a0b9">&#9670;&nbsp;</a></span>loadMacros() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">loadMacros </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load macros stored at the <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> of the current sos.database(). Loaded macros are callable functions in SoS script context. Loaded macros are stored in the <em>sos_macros</em> Lua table. Example call: </p>
<p>sos_macros.getNodeMin(sos.database(), "1", 'TEMP', 'min[TEMP]') </p>

</div>
</div>
<a id="gac54ef505f435c0792a201496df7ac71a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac54ef505f435c0792a201496df7ac71a">&#9670;&nbsp;</a></span>log() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">log </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Issues an info log message. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">message</td><td>The info log message </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaf74ccfa3835ac7064c7b8548b805e848"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf74ccfa3835ac7064c7b8548b805e848">&#9670;&nbsp;</a></span>log() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">log </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>level</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Issues a log message to the SoS logger. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">level</td><td>Defines the log level. Accepts values between [1-5] as well as their corresponding enum values<ul>
<li>1 / logger.ERROR .. error</li>
<li>2 / logger.WARNING .. warning</li>
<li>3 / logger.INFO .. info</li>
<li>4 / logger.DEBUG .. debug</li>
<li>5 / logger.TRACE .. trace </li>
</ul>
</td></tr>
    <tr><td class="paramname">message</td><td>The log message itself </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">In</td><td>case of unknown log level </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gad03ab6943f70cf074ab3c4968f391dee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad03ab6943f70cf074ab3c4968f391dee">&#9670;&nbsp;</a></span>setLogLevel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setLogLevel </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>level</em> = <code>3</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_id</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the verbose level of the logger </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">level</td><td>defines the new log level </td></tr>
    <tr><td class="paramname">log_id</td><td>Gives the Id of the logger to set the level for. If omitted all loggers maintained get the same level The following levels exist:<ul>
<li>0 .. no output</li>
<li>1 .. only errors</li>
<li>2 .. like 1 + warnings</li>
<li>3 .. like 2 + info (default)</li>
<li>4 .. like 3 + debug info</li>
<li>5 .. like 4 + trace info </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga1446974842fc22f6562c679a6b168391"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1446974842fc22f6562c679a6b168391">&#9670;&nbsp;</a></span>setMaxNumThreads()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMaxNumThreads </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>numthreads</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the maximum number of threads used in OpenMP. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">numthreads</td><td>the number of threads </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Does not have any action if OpenMP is disabled. </dd></dl>

</div>
</div>
<a id="gaee56115d53407a868281c97b9c8a3daa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaee56115d53407a868281c97b9c8a3daa">&#9670;&nbsp;</a></span>useCommandLogFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool useCommandLogFile </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>usage</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Controls the usage of SoS's command log file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">usage</td><td>Set to true (default) if a command log file is desired. False otherwise </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The previous state </dd></dl>
<dl class="section note"><dt>Note</dt><dd>The command log file will be updated each time the lua interpreter is about to start the execution of a new line of code. This means the physical command log file will be rewritten for EACH LINE! In consequence, at least if there is any change that your loop might get huge for some input, you're strongly advised to switch command log file support off immediately before entering the loop and to reanable it afterwards </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
