<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): DataObjectToGraphicsIndices Struct Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_data_object_to_graphics_indices.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_data_object_to_graphics_indices-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataObjectToGraphicsIndices Struct Reference<div class="ingroups"><a class="el" href="group__graphics.xhtml">Graphics</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>a class that collects data that is required to transfer the data from a DataObject to the vertices of the OpenGL scene.  
 <a href="struct_data_object_to_graphics_indices.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a738c70d933145c214382f4752b2dfb8b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a738c70d933145c214382f4752b2dfb8b">init</a> (int n_point, int n_line, int n_tri, int n_tet)</td></tr>
<tr class="memdesc:a738c70d933145c214382f4752b2dfb8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">initializes the struct, allocates vectors and sets them to zero  <a href="#a738c70d933145c214382f4752b2dfb8b">More...</a><br /></td></tr>
<tr class="separator:a738c70d933145c214382f4752b2dfb8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8777db20d13ae82d05cdd8c48178afe1"><td class="memItemLeft" align="right" valign="top">static Eigen::VectorXf&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a8777db20d13ae82d05cdd8c48178afe1">getData</a> (std::vector&lt; size_t &gt; indices, std::vector&lt; bool &gt; has_data, Eigen::VectorXd data)</td></tr>
<tr class="memdesc:a8777db20d13ae82d05cdd8c48178afe1"><td class="mdescLeft">&#160;</td><td class="mdescRight">translates a given data vector to the index space of visualization data The data object indices refer to database.indexMapper  <a href="#a8777db20d13ae82d05cdd8c48178afe1">More...</a><br /></td></tr>
<tr class="separator:a8777db20d13ae82d05cdd8c48178afe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d74cc00d57dac7f8e4bbaebd83e6201"><td class="memItemLeft" align="right" valign="top">static VectorXuc&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a9d74cc00d57dac7f8e4bbaebd83e6201">getHasData</a> (std::vector&lt; bool &gt; has_data)</td></tr>
<tr class="memdesc:a9d74cc00d57dac7f8e4bbaebd83e6201"><td class="mdescLeft">&#160;</td><td class="mdescRight">translates a given data vector to the index space of visualization data  <a href="#a9d74cc00d57dac7f8e4bbaebd83e6201">More...</a><br /></td></tr>
<tr class="separator:a9d74cc00d57dac7f8e4bbaebd83e6201"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a7b03266474d77668bb8fa6d5ea998219"><td class="memItemLeft" align="right" valign="top"><a id="a7b03266474d77668bb8fa6d5ea998219"></a>
std::vector&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a7b03266474d77668bb8fa6d5ea998219">GL_to_data_indices_line</a></td></tr>
<tr class="memdesc:a7b03266474d77668bb8fa6d5ea998219"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of line data a vector of dimension of all vertices describing GL lines each value defines which data item of the corresponding DataObject is visualized. <br /></td></tr>
<tr class="separator:a7b03266474d77668bb8fa6d5ea998219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b715bea770f22d8c763de4375c94d22"><td class="memItemLeft" align="right" valign="top"><a id="a4b715bea770f22d8c763de4375c94d22"></a>
std::vector&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a4b715bea770f22d8c763de4375c94d22">GL_to_data_indices_point</a></td></tr>
<tr class="memdesc:a4b715bea770f22d8c763de4375c94d22"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of point data a vector of dimension of all vertices describing GL points each value defines which data item of the corresponding DataObject is visualized. <br /></td></tr>
<tr class="separator:a4b715bea770f22d8c763de4375c94d22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9ae49e7a428b2cdcca5c9126044694d"><td class="memItemLeft" align="right" valign="top"><a id="aa9ae49e7a428b2cdcca5c9126044694d"></a>
std::vector&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#aa9ae49e7a428b2cdcca5c9126044694d">GL_to_data_indices_tet</a></td></tr>
<tr class="memdesc:aa9ae49e7a428b2cdcca5c9126044694d"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of volume data a vector of dimension of all vertices describing GL tetrahedra each value defines which data item of the corresponding DataObject is visualized. <br /></td></tr>
<tr class="separator:aa9ae49e7a428b2cdcca5c9126044694d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a744fc173e53fa31f3b0586bd4342d714"><td class="memItemLeft" align="right" valign="top"><a id="a744fc173e53fa31f3b0586bd4342d714"></a>
std::vector&lt; size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a744fc173e53fa31f3b0586bd4342d714">GL_to_data_indices_tri</a></td></tr>
<tr class="memdesc:a744fc173e53fa31f3b0586bd4342d714"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of shell data a vector of dimension of all vertices describing GL triangles each value defines which data item of the corresponding DataObject is visualized. <br /></td></tr>
<tr class="separator:a744fc173e53fa31f3b0586bd4342d714"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cee6e492aaa90d5c6b90bd3db22ed61"><td class="memItemLeft" align="right" valign="top"><a id="a5cee6e492aaa90d5c6b90bd3db22ed61"></a>
std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a5cee6e492aaa90d5c6b90bd3db22ed61">has_data_line</a></td></tr>
<tr class="memdesc:a5cee6e492aaa90d5c6b90bd3db22ed61"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of line data a vector of dimension of all vertices describing GL lines each value defines if there is data at all assciated with the respective GL vertex. <br /></td></tr>
<tr class="separator:a5cee6e492aaa90d5c6b90bd3db22ed61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26905c29ee82d9abb26f1dbeb11d7ba8"><td class="memItemLeft" align="right" valign="top"><a id="a26905c29ee82d9abb26f1dbeb11d7ba8"></a>
std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#a26905c29ee82d9abb26f1dbeb11d7ba8">has_data_point</a></td></tr>
<tr class="memdesc:a26905c29ee82d9abb26f1dbeb11d7ba8"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of point data a vector of dimension of all vertices describing GL points each value defines if there is data at all assciated with the respective GL vertex. <br /></td></tr>
<tr class="separator:a26905c29ee82d9abb26f1dbeb11d7ba8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7ce58a8165ba60af1bcd140caab3dd2"><td class="memItemLeft" align="right" valign="top"><a id="ac7ce58a8165ba60af1bcd140caab3dd2"></a>
std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#ac7ce58a8165ba60af1bcd140caab3dd2">has_data_tet</a></td></tr>
<tr class="memdesc:ac7ce58a8165ba60af1bcd140caab3dd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of tetrahedron data a vector of dimension of all vertices describing GL tets each value defines if there is data at all assciated with the respective GL vertex. <br /></td></tr>
<tr class="separator:ac7ce58a8165ba60af1bcd140caab3dd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a7958bdc32ae0713cbd1058571be73"><td class="memItemLeft" align="right" valign="top"><a id="ab8a7958bdc32ae0713cbd1058571be73"></a>
std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml#ab8a7958bdc32ae0713cbd1058571be73">has_data_tri</a></td></tr>
<tr class="memdesc:ab8a7958bdc32ae0713cbd1058571be73"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the transition of triangle data a vector of dimension of all vertices describing GL triangles each value defines if there is data at all assciated with the respective GL vertex. <br /></td></tr>
<tr class="separator:ab8a7958bdc32ae0713cbd1058571be73"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>a class that collects data that is required to transfer the data from a DataObject to the vertices of the OpenGL scene. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8777db20d13ae82d05cdd8c48178afe1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8777db20d13ae82d05cdd8c48178afe1">&#9670;&nbsp;</a></span>getData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Eigen::VectorXf getData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; size_t &gt;&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; bool &gt;&#160;</td>
          <td class="paramname"><em>has_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Eigen::VectorXd&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>translates a given data vector to the index space of visualization data The data object indices refer to database.indexMapper </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">indices</td><td>the indices that translate the data </td></tr>
    <tr><td class="paramname">has_data</td><td>defines which GL indices are associated with data </td></tr>
    <tr><td class="paramname">data</td><td>the data vector </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the translated data vector </dd></dl>

</div>
</div>
<a id="a9d74cc00d57dac7f8e4bbaebd83e6201"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d74cc00d57dac7f8e4bbaebd83e6201">&#9670;&nbsp;</a></span>getHasData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static VectorXuc getHasData </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; bool &gt;&#160;</td>
          <td class="paramname"><em>has_data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>translates a given data vector to the index space of visualization data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">has_data</td><td>the mask defining which GL indices are associated with data </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the translated raw data </dd></dl>

</div>
</div>
<a id="a738c70d933145c214382f4752b2dfb8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a738c70d933145c214382f4752b2dfb8b">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">init </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_point</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_tri</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n_tet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>initializes the struct, allocates vectors and sets them to zero </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">n_point</td><td>number of point vertices </td></tr>
    <tr><td class="paramname">n_line</td><td>number of line vertices </td></tr>
    <tr><td class="paramname">n_tri</td><td>number of triangle vertices </td></tr>
    <tr><td class="paramname">n_tet</td><td>number of tetrahedron vertices </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
