<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): PropertyList Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_property_list.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_property_list-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">PropertyList Class Reference<div class="ingroups"><a class="el" href="group__properties.xhtml">MOP properties</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Container class for handling properties Uses templates to easily find and cast configurations of different types.  
 <a href="class_property_list.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a45e7948705e5aea09a975bbdbfe7b43a"><td class="memItemLeft" align="right" valign="top"><a id="a45e7948705e5aea09a975bbdbfe7b43a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = typename ListType::const_iterator</td></tr>
<tr class="separator:a45e7948705e5aea09a975bbdbfe7b43a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c030606fde1400a3a6447becc40e11a"><td class="memItemLeft" align="right" valign="top"><a id="a6c030606fde1400a3a6447becc40e11a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = typename ListType::iterator</td></tr>
<tr class="separator:a6c030606fde1400a3a6447becc40e11a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a5ff304175a7f235ac2d779a11eb98"><td class="memItemLeft" align="right" valign="top"><a id="a53a5ff304175a7f235ac2d779a11eb98"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ListType</b> = std::vector&lt; value_type &gt;</td></tr>
<tr class="separator:a53a5ff304175a7f235ac2d779a11eb98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78eedca7dc9da8184112de9199d246b"><td class="memItemLeft" align="right" valign="top"><a id="ad78eedca7dc9da8184112de9199d246b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = boost::shared_ptr&lt; <a class="el" href="struct_property_base.xhtml">PropertyBase</a> &gt;</td></tr>
<tr class="separator:ad78eedca7dc9da8184112de9199d246b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3031d648b73235d11d64df95db3d84ce"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_list.xhtml#a3031d648b73235d11d64df95db3d84ce">__str__</a> ()</td></tr>
<tr class="memdesc:a3031d648b73235d11d64df95db3d84ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Outputfunction used in python context. Use this function to print instances of this class in python.  <a href="#a3031d648b73235d11d64df95db3d84ce">More...</a><br /></td></tr>
<tr class="separator:a3031d648b73235d11d64df95db3d84ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5700ae63985e3e6b30cb716ddb5fdd0"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_list.xhtml#ae5700ae63985e3e6b30cb716ddb5fdd0">loadJson</a> (<a class="el" href="class_json_value.xhtml">JsonValue</a> root) override</td></tr>
<tr class="memdesc:ae5700ae63985e3e6b30cb716ddb5fdd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to load the Serializables data from a <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a>.  <a href="#ae5700ae63985e3e6b30cb716ddb5fdd0">More...</a><br /></td></tr>
<tr class="separator:ae5700ae63985e3e6b30cb716ddb5fdd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88fb4b13ffd84df44d54cff0a083f64f"><td class="memItemLeft" align="right" valign="top"><a id="a88fb4b13ffd84df44d54cff0a083f64f"></a>
<a class="el" href="class_property_list.xhtml">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="class_property_list.xhtml">PropertyList</a> other)</td></tr>
<tr class="separator:a88fb4b13ffd84df44d54cff0a083f64f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cd444e27b7c7c4ded55ea3970ac271c"><td class="memItemLeft" align="right" valign="top"><a id="a5cd444e27b7c7c4ded55ea3970ac271c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PropertyList</b> (<a class="el" href="class_property_list.xhtml">PropertyList</a> other)</td></tr>
<tr class="separator:a5cd444e27b7c7c4ded55ea3970ac271c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d36491abec383e98bf94a25b87bb28"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_list.xhtml#a32d36491abec383e98bf94a25b87bb28">push_back</a> (<a class="el" href="struct_property_base.xhtml">PropertyBase</a> v)</td></tr>
<tr class="memdesc:a32d36491abec383e98bf94a25b87bb28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a new entry to the list. We use unique_ptr so move is used.  <a href="#a32d36491abec383e98bf94a25b87bb28">More...</a><br /></td></tr>
<tr class="separator:a32d36491abec383e98bf94a25b87bb28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4587af0230811304c91f1c0aaa1c9ce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_json_value.xhtml">JsonValue</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_list.xhtml#ab4587af0230811304c91f1c0aaa1c9ce">saveJson</a> () override</td></tr>
<tr class="memdesc:ab4587af0230811304c91f1c0aaa1c9ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function to save the Serializables data as a <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a>.  <a href="#ab4587af0230811304c91f1c0aaa1c9ce">More...</a><br /></td></tr>
<tr class="separator:ab4587af0230811304c91f1c0aaa1c9ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5246641e855e709d801786e7514c486a"><td class="memItemLeft" align="right" valign="top">virtual std::ostream&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_list.xhtml#a5246641e855e709d801786e7514c486a">write</a> (std::ostream os)</td></tr>
<tr class="memdesc:a5246641e855e709d801786e7514c486a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Polymorphic ostream writer. Is used in the operator&lt;&lt;.  <a href="#a5246641e855e709d801786e7514c486a">More...</a><br /></td></tr>
<tr class="separator:a5246641e855e709d801786e7514c486a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Container class for handling properties Uses templates to easily find and cast configurations of different types. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a3031d648b73235d11d64df95db3d84ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3031d648b73235d11d64df95db3d84ce">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string __str__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Outputfunction used in python context. Use this function to print instances of this class in python. </p>
<dl class="section return"><dt>Returns</dt><dd>string containing the object </dd></dl>

</div>
</div>
<a id="ae5700ae63985e3e6b30cb716ddb5fdd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5700ae63985e3e6b30cb716ddb5fdd0">&#9670;&nbsp;</a></span>loadJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual loadJson </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_value.xhtml">JsonValue</a>&#160;</td>
          <td class="paramname"><em>root</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to load the Serializables data from a <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">root</td><td>The data of the serializable as <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a32d36491abec383e98bf94a25b87bb28"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32d36491abec383e98bf94a25b87bb28">&#9670;&nbsp;</a></span>push_back()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">push_back </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_property_base.xhtml">PropertyBase</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Appends a new entry to the list. We use unique_ptr so move is used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">v</td><td>The ptr to be appended. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab4587af0230811304c91f1c0aaa1c9ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4587af0230811304c91f1c0aaa1c9ce">&#9670;&nbsp;</a></span>saveJson()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_json_value.xhtml">JsonValue</a> saveJson </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Function to save the Serializables data as a <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The data of the serializable as <a class="el" href="class_json_value.xhtml" title="Simple wrapper class to jsoncpp that make working with SWIG more convenient. ">JsonValue</a> </dd></dl>

</div>
</div>
<a id="a5246641e855e709d801786e7514c486a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5246641e855e709d801786e7514c486a">&#9670;&nbsp;</a></span>write()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::ostream write </td>
          <td>(</td>
          <td class="paramtype">std::ostream&#160;</td>
          <td class="paramname"><em>os</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Polymorphic ostream writer. Is used in the operator&lt;&lt;. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">os</td><td>The output stream </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The output stream modified to contain information on the instance </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
