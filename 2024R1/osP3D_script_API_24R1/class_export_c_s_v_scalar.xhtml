<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ExportCSVScalar Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_export_c_s_v_scalar.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_export_c_s_v_scalar-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ExportCSVScalar Class Reference<div class="ingroups"><a class="el" href="group__export.xhtml">Export</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Exports scalar data to a CSV file.  
 <a href="class_export_c_s_v_scalar.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a43937566342ee4168150e9fa232ddfc1"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a43937566342ee4168150e9fa232ddfc1">check</a> ()</td></tr>
<tr class="memdesc:a43937566342ee4168150e9fa232ddfc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks some settings/preperations.  <a href="#a43937566342ee4168150e9fa232ddfc1">More...</a><br /></td></tr>
<tr class="separator:a43937566342ee4168150e9fa232ddfc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0cb9bc2ffb48224a5857667515c08be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_scalar.xhtml#ac0cb9bc2ffb48224a5857667515c08be">ExportCSVScalar</a> (string <a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6">output_file</a>, <a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filter, string <a class="el" href="class_export_c_s_v.xhtml#a0b2e98e6d6483b285675f9e0128ad223">delimiter</a>=&quot;,&quot;)</td></tr>
<tr class="memdesc:ac0cb9bc2ffb48224a5857667515c08be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializing all member variables to valid defaults.  <a href="#ac0cb9bc2ffb48224a5857667515c08be">More...</a><br /></td></tr>
<tr class="separator:ac0cb9bc2ffb48224a5857667515c08be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a338dc4344270fcbccadf5667ef12f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_scalar.xhtml#a6a338dc4344270fcbccadf5667ef12f9">save</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a6a338dc4344270fcbccadf5667ef12f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports all data to the given csv output file.  <a href="#a6a338dc4344270fcbccadf5667ef12f9">More...</a><br /></td></tr>
<tr class="separator:a6a338dc4344270fcbccadf5667ef12f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0b2e98e6d6483b285675f9e0128ad223"><td class="memItemLeft" align="right" valign="top"><a id="a0b2e98e6d6483b285675f9e0128ad223"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a0b2e98e6d6483b285675f9e0128ad223">delimiter</a></td></tr>
<tr class="memdesc:a0b2e98e6d6483b285675f9e0128ad223"><td class="mdescLeft">&#160;</td><td class="mdescRight">The delimiter string, e.g. ",", which delimits the data entries within one line. <br /></td></tr>
<tr class="separator:a0b2e98e6d6483b285675f9e0128ad223"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5681ad659e91643df77ee5bae59979c6"><td class="memItemLeft" align="right" valign="top"><a id="a5681ad659e91643df77ee5bae59979c6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a5681ad659e91643df77ee5bae59979c6">optiSLang_compatibility</a></td></tr>
<tr class="memdesc:a5681ad659e91643df77ee5bae59979c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, then the idents of scalar-quantities will be modified to match allowed characters in optiSLang (default: false) <br /></td></tr>
<tr class="separator:a5681ad659e91643df77ee5bae59979c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8643191a264f6d55fead82a6d23a88b6"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6">output_file</a></td></tr>
<tr class="memdesc:a8643191a264f6d55fead82a6d23a88b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">The name of the output file. Must be non-empty.  <a href="#a8643191a264f6d55fead82a6d23a88b6">More...</a><br /></td></tr>
<tr class="separator:a8643191a264f6d55fead82a6d23a88b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="memItemLeft" align="right" valign="top"><a id="a2f8b3cba47ad64fb6bda4b6428a032d3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v.xhtml#a2f8b3cba47ad64fb6bda4b6428a032d3">replace_files</a></td></tr>
<tr class="memdesc:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is true, an existings output file will be overwritten. Otherwise an exception will arise (default: false) <br /></td></tr>
<tr class="separator:a2f8b3cba47ad64fb6bda4b6428a032d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad51161079b951165329d79cb6be52ed1"><td class="memItemLeft" align="right" valign="top"><a id="ad51161079b951165329d79cb6be52ed1"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_scalar.xhtml#ad51161079b951165329d79cb6be52ed1">scalars</a></td></tr>
<tr class="memdesc:ad51161079b951165329d79cb6be52ed1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The scalar object data to be exported. <br /></td></tr>
<tr class="separator:ad51161079b951165329d79cb6be52ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a736df6af20bfd263c9b2f906bb16d0f6"><td class="memItemLeft" align="right" valign="top"><a id="a736df6af20bfd263c9b2f906bb16d0f6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_c_s_v_scalar.xhtml#a736df6af20bfd263c9b2f906bb16d0f6">write_design_numbers</a></td></tr>
<tr class="memdesc:a736df6af20bfd263c9b2f906bb16d0f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the design ID before each data set (default: true) <br /></td></tr>
<tr class="separator:a736df6af20bfd263c9b2f906bb16d0f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Exports scalar data to a CSV file. </p>
<p>Exports only data assigned to the member variables scalars, node_data, element_data and intpt_data. If, and only if, ALL these memeber are empty, then the Settings class tries to write down all the database data automatically. If several data types shall be exported at once, than the output file given will be reused as some kind of template string extended by data type IDs. See the description at <em>output_file</em> for detailed information.</p>
<p>//!Exports SoS scalars to a CSV text file <br />
When determining the number of designs and quantities to be exported, the method only considers those scalar objects which are part of </p><dl class="section see"><dt>See also</dt><dd>ExportCSVSettings::scalars. Hence one can deactivate those quantities which should not be exported..</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">settings</td><td>A setting class containing all the information to control data export to a CSV file </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>if more than one quantity is requested to export std::exception in case of conversion errors std::exception in case of program logical errors. Debug mode only </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac0cb9bc2ffb48224a5857667515c08be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0cb9bc2ffb48224a5857667515c08be">&#9670;&nbsp;</a></span>ExportCSVScalar()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_export_c_s_v_scalar.xhtml">ExportCSVScalar</a> </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>output_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>filter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>delimiter</em> = <code>&quot;,&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializing all member variables to valid defaults. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output_file</td><td>The name of the output file. </td></tr>
    <tr><td class="paramname">filter</td><td></td></tr>
    <tr><td class="paramname">delimiter</td><td>The delimiter string, e.g. ";", which delimits the data entries within the data sets. See csv::CSVParser::m_delimiter for more details. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a43937566342ee4168150e9fa232ddfc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43937566342ee4168150e9fa232ddfc1">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual check </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks some settings/preperations. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the settings are not correct </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6a338dc4344270fcbccadf5667ef12f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a338dc4344270fcbccadf5667ef12f9">&#9670;&nbsp;</a></span>save()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Exports all data to the given csv output file. </p>
<p>If all member variables are empty all objects in the database will be exported. Otherwise the member variables acts as filter and only listed data will be extracted out of the database given and exported to the CSV file <a class="el" href="class_export_c_s_v.xhtml#a8643191a264f6d55fead82a6d23a88b6" title="The name of the output file. Must be non-empty. ">output_file</a> given</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The database containing all objects. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the output path is not a directory std::exception If no the output_file is not writeable </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="class_export_c_s_v.xhtml#a61c3eed0322cb79606e39957a8afe9d9">ExportCSV</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a8643191a264f6d55fead82a6d23a88b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8643191a264f6d55fead82a6d23a88b6">&#9670;&nbsp;</a></span>output_file</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string output_file</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The name of the output file. Must be non-empty. </p>
<p>Several modes in several situations are supported:</p><ul>
<li>The string points to a non-existing FS item:<ul>
<li>The Settings class tries to split up the path given in its components: parent_path, filename (boost::filesystem::stem) and file extension (boost::filesystem::extension) as described in the underlying FS library <a href="http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#Path-decomposition-table">http://www.boost.org/doc/libs/1_53_0/libs/filesystem/doc/reference.html#Path-decomposition-table</a></li>
<li>Non given components will be replaced by default ones and created if neccessary </li>
</ul>
</li>
</ul>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
