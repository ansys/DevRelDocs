<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ComputeRPCA&lt; TYPE &gt; Class Template Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_compute_r_p_c_a.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_compute_r_p_c_a-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ComputeRPCA&lt; TYPE &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__statistics.xhtml">Statistics</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Perform Robust Principal Component Analysis While traditional PCA is very sensitive to data corruption or outliers, RPCA is, as its name implies, robust to data corruption under surprisingly broad conditions. RPCA attempts to split a given matrix M into two matrices S and L: M = L + S where L is a low-rank matrix and S is a sparse matrix of random errors (of arbitrary magnitude and random sign). In the context of SoS, each column vector of M might be a particular field design. Without any prior knowledge about outliers, RPCA is then able to separate correlations between field designs (L) from outliers (S). Security camera footage is a good example, following the M = L + S data model: L represents the slowly changing background, while S represents walking people. See <a href="https://arxiv.org/abs/0912.3599">https://arxiv.org/abs/0912.3599</a> for more examples and a precise definition of the conditions, for RPCA to deliver good results. By default, <a class="el" href="class_compute_r_p_c_a.xhtml" title="Perform Robust Principal Component Analysis While traditional PCA is very sensitive to data corruptio...">ComputeRPCA</a> creates two new quantity idents named RPCA[] (L) and RPCAError[] (S). Disable the creation of RPCAError by setting the createRPCAError member variable to <em>false</em>. The algorithm attempts to recover L and S by running the Principal Component Pursuit bi-objective optimization program: </p><p class="formulaDsp">
<img class="formulaDsp" alt="\[ //! \text{minimize} ||L||_* + \lambda ||S||_1 //! \text{subject to} L + S = M //! \]" src="form_11.png"/>
</p>
<p> where <img class="formulaInl" alt="$ ||L||_* $" src="form_12.png"/> denotes the nuclear norm of <img class="formulaInl" alt="$ L $" src="form_13.png"/> (i.e. the sum of the singular values of <img class="formulaInl" alt="$ L $" src="form_13.png"/>) and <img class="formulaInl" alt="$ ||L||_1 = \sum_{ij}|S_{ij}| $" src="form_14.png"/> denotes the <img class="formulaInl" alt="$ l_1 $" src="form_15.png"/>-norm of <img class="formulaInl" alt="$ S $" src="form_16.png"/> seen as a long vector. Recommended value: <img class="formulaInl" alt="$ \lambda = 1/\sqrt{max(dim(M))}$" src="form_17.png"/>.  
 <a href="class_compute_r_p_c_a.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afe5cfc4ea6277ec393adca68465c9a5e"><td class="memItemLeft" align="right" valign="top">typedef boost::function&lt; DataObject::ptr_type(DataObject::ptr_type input)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#afe5cfc4ea6277ec393adca68465c9a5e">TAlgorithmFunction</a></td></tr>
<tr class="memdesc:afe5cfc4ea6277ec393adca68465c9a5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines a function object  <a href="#afe5cfc4ea6277ec393adca68465c9a5e">More...</a><br /></td></tr>
<tr class="separator:afe5cfc4ea6277ec393adca68465c9a5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbff8fbbd061127936232ab5600cbe01"><td class="memItemLeft" align="right" valign="top">typedef boost::function&lt; DataObject::ptr_type(<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, DataObject::ptr_type input)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#adbff8fbbd061127936232ab5600cbe01">TAlgorithmFunction2</a></td></tr>
<tr class="memdesc:adbff8fbbd061127936232ab5600cbe01"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines a function object  <a href="#adbff8fbbd061127936232ab5600cbe01">More...</a><br /></td></tr>
<tr class="separator:adbff8fbbd061127936232ab5600cbe01"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#a47c34ec1e578c2ce27cf1c5fcd0d1704">check</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the settings on plausibility It throws an exception if there is a problem with the settings. Important: It tries to find out all problems with these settings and then exits the routine.  <a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">More...</a><br /></td></tr>
<tr class="separator:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dbc926e6a1423b7d64cc9d41026045e"><td class="memItemLeft" align="right" valign="top"><a id="a0dbc926e6a1423b7d64cc9d41026045e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>compute</b> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="separator:a0dbc926e6a1423b7d64cc9d41026045e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee6c389c27f8cb563b6b1aa31f6bf17"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#a2ee6c389c27f8cb563b6b1aa31f6bf17">compute</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, DataObject::ptr_type <a class="el" href="class_compute_single_object_per_object.xhtml#aff21fffab499ea652443206d66e1a9bb">data</a>, string new_quantity_ident, string new_design_ident)</td></tr>
<tr class="memdesc:a2ee6c389c27f8cb563b6b1aa31f6bf17"><td class="mdescLeft">&#160;</td><td class="mdescRight">performs the action for a single set of samples  <a href="#a2ee6c389c27f8cb563b6b1aa31f6bf17">More...</a><br /></td></tr>
<tr class="separator:a2ee6c389c27f8cb563b6b1aa31f6bf17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb3c7912b78f2ec44c06e8198df36617"><td class="memItemLeft" align="right" valign="top"><a id="afb3c7912b78f2ec44c06e8198df36617"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_r_p_c_a.xhtml#afb3c7912b78f2ec44c06e8198df36617">ComputeRPCA</a> ()</td></tr>
<tr class="memdesc:afb3c7912b78f2ec44c06e8198df36617"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an RPCA object with default settings. <br /></td></tr>
<tr class="separator:afb3c7912b78f2ec44c06e8198df36617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a216cd82ee2b0a4340813f2d0713b4806"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_r_p_c_a.xhtml#a216cd82ee2b0a4340813f2d0713b4806">ComputeRPCA</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> dataObjectFilter)</td></tr>
<tr class="memdesc:a216cd82ee2b0a4340813f2d0713b4806"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create an RPCA object with default settings and set the field data to perform RPCA on.  <a href="#a216cd82ee2b0a4340813f2d0713b4806">More...</a><br /></td></tr>
<tr class="separator:a216cd82ee2b0a4340813f2d0713b4806"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a1fafb8453285b3214c8c7c8926ca77a1"><td class="memItemLeft" align="right" valign="top"><a id="a1fafb8453285b3214c8c7c8926ca77a1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>createRPCAError</b></td></tr>
<tr class="separator:a1fafb8453285b3214c8c7c8926ca77a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff21fffab499ea652443206d66e1a9bb"><td class="memItemLeft" align="right" valign="top"><a id="aff21fffab499ea652443206d66e1a9bb"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#aff21fffab499ea652443206d66e1a9bb">data</a></td></tr>
<tr class="memdesc:aff21fffab499ea652443206d66e1a9bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">the data set to be analyzed <br /></td></tr>
<tr class="separator:aff21fffab499ea652443206d66e1a9bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494c8da7f3865175fcb8044abce244fc"><td class="memItemLeft" align="right" valign="top"><a id="a494c8da7f3865175fcb8044abce244fc"></a>
number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_r_p_c_a.xhtml#a494c8da7f3865175fcb8044abce244fc">lambda</a></td></tr>
<tr class="memdesc:a494c8da7f3865175fcb8044abce244fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Singular value threshold parameter. Default: 0, lambda is set to 1/sqrt(max(n,m)), with n and m being the input matrix dimensions. <br /></td></tr>
<tr class="separator:a494c8da7f3865175fcb8044abce244fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bc677a1bf92968ad92aa7d973e24ba4"><td class="memItemLeft" align="right" valign="top"><a id="a0bc677a1bf92968ad92aa7d973e24ba4"></a>
number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_r_p_c_a.xhtml#a0bc677a1bf92968ad92aa7d973e24ba4">maxIterations</a></td></tr>
<tr class="memdesc:a0bc677a1bf92968ad92aa7d973e24ba4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum number of iterations. Default: 200. <br /></td></tr>
<tr class="separator:a0bc677a1bf92968ad92aa7d973e24ba4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b1bcf63b9bdc707fea30bd96d70447"><td class="memItemLeft" align="right" valign="top"><a id="a30b1bcf63b9bdc707fea30bd96d70447"></a>
<a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#a30b1bcf63b9bdc707fea30bd96d70447">new_quantity_idents</a></td></tr>
<tr class="memdesc:a30b1bcf63b9bdc707fea30bd96d70447"><td class="mdescLeft">&#160;</td><td class="mdescRight">the new idents for each quantity. The dimension and index space must fit the one of <em>quantity_idents</em> <br /></td></tr>
<tr class="separator:a30b1bcf63b9bdc707fea30bd96d70447"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memItemLeft" align="right" valign="top"><a id="ade25e60bd85c8b4abd4f5b416cae0eb9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#ade25e60bd85c8b4abd4f5b416cae0eb9">overwrite_existing</a></td></tr>
<tr class="memdesc:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">is true if already existing output data objects will be replaced. In this case, also all depending objects of the already existing one will be deleted. <br /></td></tr>
<tr class="separator:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aced57c746ae1d69d2fd56872fa1768bf"><td class="memItemLeft" align="right" valign="top"><a id="aced57c746ae1d69d2fd56872fa1768bf"></a>
<a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_single_object_per_object.xhtml#aced57c746ae1d69d2fd56872fa1768bf">quantity_idents</a></td></tr>
<tr class="memdesc:aced57c746ae1d69d2fd56872fa1768bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">the quantities to be analyzed. If a quantity ident does not exist in <em>data</em>, no error appears. <br /></td></tr>
<tr class="separator:aced57c746ae1d69d2fd56872fa1768bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a033dc667b0fe6b15482f2703c104f415"><td class="memItemLeft" align="right" valign="top"><a id="a033dc667b0fe6b15482f2703c104f415"></a>
number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_compute_r_p_c_a.xhtml#a033dc667b0fe6b15482f2703c104f415">relativeError</a></td></tr>
<tr class="memdesc:a033dc667b0fe6b15482f2703c104f415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterate until relative error is reached. Default: 1e-9. <br /></td></tr>
<tr class="separator:a033dc667b0fe6b15482f2703c104f415"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;dataobject_types TYPE&gt;<br />
class ComputeRPCA&lt; TYPE &gt;</h3>

<p>Perform Robust Principal Component Analysis While traditional PCA is very sensitive to data corruption or outliers, RPCA is, as its name implies, robust to data corruption under surprisingly broad conditions. RPCA attempts to split a given matrix M into two matrices S and L: M = L + S where L is a low-rank matrix and S is a sparse matrix of random errors (of arbitrary magnitude and random sign). In the context of SoS, each column vector of M might be a particular field design. Without any prior knowledge about outliers, RPCA is then able to separate correlations between field designs (L) from outliers (S). Security camera footage is a good example, following the M = L + S data model: L represents the slowly changing background, while S represents walking people. See <a href="https://arxiv.org/abs/0912.3599">https://arxiv.org/abs/0912.3599</a> for more examples and a precise definition of the conditions, for RPCA to deliver good results. By default, <a class="el" href="class_compute_r_p_c_a.xhtml" title="Perform Robust Principal Component Analysis While traditional PCA is very sensitive to data corruptio...">ComputeRPCA</a> creates two new quantity idents named RPCA[] (L) and RPCAError[] (S). Disable the creation of RPCAError by setting the createRPCAError member variable to <em>false</em>. The algorithm attempts to recover L and S by running the Principal Component Pursuit bi-objective optimization program: </p><p class="formulaDsp">
<img class="formulaDsp" alt="\[ //! \text{minimize} ||L||_* + \lambda ||S||_1 //! \text{subject to} L + S = M //! \]" src="form_11.png"/>
</p>
<p> where <img class="formulaInl" alt="$ ||L||_* $" src="form_12.png"/> denotes the nuclear norm of <img class="formulaInl" alt="$ L $" src="form_13.png"/> (i.e. the sum of the singular values of <img class="formulaInl" alt="$ L $" src="form_13.png"/>) and <img class="formulaInl" alt="$ ||L||_1 = \sum_{ij}|S_{ij}| $" src="form_14.png"/> denotes the <img class="formulaInl" alt="$ l_1 $" src="form_15.png"/>-norm of <img class="formulaInl" alt="$ S $" src="form_16.png"/> seen as a long vector. Recommended value: <img class="formulaInl" alt="$ \lambda = 1/\sqrt{max(dim(M))}$" src="form_17.png"/>. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">TYPE</td><td>the field data type </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="afe5cfc4ea6277ec393adca68465c9a5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe5cfc4ea6277ec393adca68465c9a5e">&#9670;&nbsp;</a></span>TAlgorithmFunction</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">typedef boost::function&lt;DataObject::ptr_type ( DataObject::ptr_type input)&gt; <a class="el" href="class_compute_single_object_per_object.xhtml#afe5cfc4ea6277ec393adca68465c9a5e">TAlgorithmFunction</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>defines a function object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">input</td><td>a single input object </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<a id="adbff8fbbd061127936232ab5600cbe01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbff8fbbd061127936232ab5600cbe01">&#9670;&nbsp;</a></span>TAlgorithmFunction2</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">typedef boost::function&lt;DataObject::ptr_type ( <a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, DataObject::ptr_type input)&gt; <a class="el" href="class_compute_single_object_per_object.xhtml#adbff8fbbd061127936232ab5600cbe01">TAlgorithmFunction2</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>defines a function object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database we refer to </td></tr>
    <tr><td class="paramname">input</td><td>a single input object </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the result of the operation </dd></dl>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a216cd82ee2b0a4340813f2d0713b4806"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a216cd82ee2b0a4340813f2d0713b4806">&#9670;&nbsp;</a></span>ComputeRPCA()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_compute_r_p_c_a.xhtml">ComputeRPCA</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>dataObjectFilter</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create an RPCA object with default settings and set the field data to perform RPCA on. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dataObjectFilter</td><td>the field data to perform RPCA on </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a47c34ec1e578c2ce27cf1c5fcd0d1704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">check </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>checks the settings on plausibility It throws an exception if there is a problem with the settings. Important: It tries to find out all problems with these settings and then exits the routine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the SoS structure </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2ee6c389c27f8cb563b6b1aa31f6bf17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee6c389c27f8cb563b6b1aa31f6bf17">&#9670;&nbsp;</a></span>compute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">compute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DataObject::ptr_type&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_quantity_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>new_design_ident</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>performs the action for a single set of samples </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the output object is to be inserted in this object </td></tr>
    <tr><td class="paramname">data</td><td>the input data object </td></tr>
    <tr><td class="paramname">new_quantity_ident</td><td>the quantity ident of the new object </td></tr>
    <tr><td class="paramname">new_design_ident</td><td>the design ident of the new object If the input object is active, then the output object will be active as well (or inactive, respectively). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
