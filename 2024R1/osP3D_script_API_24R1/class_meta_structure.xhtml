<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): MetaStructure Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_meta_structure.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_meta_structure-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MetaStructure Class Reference<div class="ingroups"><a class="el" href="group__data.xhtml">Data</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Defines a meta structure which contains all data that is used to create a finite element mesh.  
 <a href="class_meta_structure.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0fa9b1c99a5343ff8e4e4aa55b28527f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a0fa9b1c99a5343ff8e4e4aa55b28527f">add</a> (Part part)</td></tr>
<tr class="memdesc:a0fa9b1c99a5343ff8e4e4aa55b28527f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the given part to the structure.  <a href="#a0fa9b1c99a5343ff8e4e4aa55b28527f">More...</a><br /></td></tr>
<tr class="separator:a0fa9b1c99a5343ff8e4e4aa55b28527f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51be436c1ab0df9ab71185ddd07b40ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a51be436c1ab0df9ab71185ddd07b40ca">add</a> (Section section)</td></tr>
<tr class="memdesc:a51be436c1ab0df9ab71185ddd07b40ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given section  <a href="#a51be436c1ab0df9ab71185ddd07b40ca">More...</a><br /></td></tr>
<tr class="separator:a51be436c1ab0df9ab71185ddd07b40ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad19050a6c894c0f473fabb141e3140a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#ad19050a6c894c0f473fabb141e3140a9">add</a> (Material material)</td></tr>
<tr class="memdesc:ad19050a6c894c0f473fabb141e3140a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given material law definition  <a href="#ad19050a6c894c0f473fabb141e3140a9">More...</a><br /></td></tr>
<tr class="separator:ad19050a6c894c0f473fabb141e3140a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e8f3470748cc3520481ec238844baa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aa4e8f3470748cc3520481ec238844baa">add</a> (ElementSet elementset)</td></tr>
<tr class="memdesc:aa4e8f3470748cc3520481ec238844baa"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given element set  <a href="#aa4e8f3470748cc3520481ec238844baa">More...</a><br /></td></tr>
<tr class="separator:aa4e8f3470748cc3520481ec238844baa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7742808b547e171aa3d04ff3aed95b5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#ae7742808b547e171aa3d04ff3aed95b5">add</a> (NodeSet nodeset)</td></tr>
<tr class="memdesc:ae7742808b547e171aa3d04ff3aed95b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given node set  <a href="#ae7742808b547e171aa3d04ff3aed95b5">More...</a><br /></td></tr>
<tr class="separator:ae7742808b547e171aa3d04ff3aed95b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe288e8eeb377303a503f87d5edca686"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#abe288e8eeb377303a503f87d5edca686">add</a> (Data meta)</td></tr>
<tr class="memdesc:abe288e8eeb377303a503f87d5edca686"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds all node/element data from the given meta structure to this one.  <a href="#abe288e8eeb377303a503f87d5edca686">More...</a><br /></td></tr>
<tr class="separator:abe288e8eeb377303a503f87d5edca686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ea94be0aad697ad6148cc817a381ebd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a6ea94be0aad697ad6148cc817a381ebd">add</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> meta)</td></tr>
<tr class="memdesc:a6ea94be0aad697ad6148cc817a381ebd"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds all contents of the given <a class="el" href="class_meta_structure.xhtml" title="Defines a meta structure which contains all data that is used to create a finite element mesh...">MetaStructure</a>  <a href="#a6ea94be0aad697ad6148cc817a381ebd">More...</a><br /></td></tr>
<tr class="separator:a6ea94be0aad697ad6148cc817a381ebd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1f17b21db9e172ffe3e185980e5f1d1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aa1f17b21db9e172ffe3e185980e5f1d1">addAndMerge</a> (Mesh meta)</td></tr>
<tr class="memdesc:aa1f17b21db9e172ffe3e185980e5f1d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the mesh information from the given meta structure to this one such that both will be merged.  <a href="#aa1f17b21db9e172ffe3e185980e5f1d1">More...</a><br /></td></tr>
<tr class="separator:aa1f17b21db9e172ffe3e185980e5f1d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14e566d1311ac5a0b7a07a7f8ca683b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a14e566d1311ac5a0b7a07a7f8ca683b2">addElementData</a> (string ident, ElementData <a class="el" href="class_meta_structure.xhtml#a6029fd927112ed832c9d5a73debfc78d">data</a>)</td></tr>
<tr class="memdesc:a14e566d1311ac5a0b7a07a7f8ca683b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given element data  <a href="#a14e566d1311ac5a0b7a07a7f8ca683b2">More...</a><br /></td></tr>
<tr class="separator:a14e566d1311ac5a0b7a07a7f8ca683b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25329a79194551b18aea7e5c08c5e17d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a25329a79194551b18aea7e5c08c5e17d">addPointData</a> (string ident, PointData <a class="el" href="class_meta_structure.xhtml#a6029fd927112ed832c9d5a73debfc78d">data</a>)</td></tr>
<tr class="memdesc:a25329a79194551b18aea7e5c08c5e17d"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given node data  <a href="#a25329a79194551b18aea7e5c08c5e17d">More...</a><br /></td></tr>
<tr class="separator:a25329a79194551b18aea7e5c08c5e17d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcf3380c52c3c4952f99ec692b3940a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#abcf3380c52c3c4952f99ec692b3940a6">addScalarData</a> (string ident, ScalarData <a class="el" href="class_meta_structure.xhtml#a6029fd927112ed832c9d5a73debfc78d">data</a>)</td></tr>
<tr class="memdesc:abcf3380c52c3c4952f99ec692b3940a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the given scalar data  <a href="#abcf3380c52c3c4952f99ec692b3940a6">More...</a><br /></td></tr>
<tr class="separator:abcf3380c52c3c4952f99ec692b3940a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6029fd927112ed832c9d5a73debfc78d"><td class="memItemLeft" align="right" valign="top">Data&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a6029fd927112ed832c9d5a73debfc78d">data</a> ()</td></tr>
<tr class="separator:a6029fd927112ed832c9d5a73debfc78d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb44f41c68a96be59ad5dc0fd2d01185"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#afb44f41c68a96be59ad5dc0fd2d01185">emptyData</a> ()</td></tr>
<tr class="separator:afb44f41c68a96be59ad5dc0fd2d01185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a052f40c68d733e32f5c2270ec731be52"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a052f40c68d733e32f5c2270ec731be52">emptyMesh</a> ()</td></tr>
<tr class="separator:a052f40c68d733e32f5c2270ec731be52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09c0c49149538f5d9c9011ed65539d0d"><td class="memItemLeft" align="right" valign="top">std::list&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a09c0c49149538f5d9c9011ed65539d0d">isCompatible</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> other)</td></tr>
<tr class="memdesc:a09c0c49149538f5d9c9011ed65539d0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an empty list if both meshes are compatble.  <a href="#a09c0c49149538f5d9c9011ed65539d0d">More...</a><br /></td></tr>
<tr class="separator:a09c0c49149538f5d9c9011ed65539d0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26415e74c21cb9f6e7d74ea050923df9"><td class="memItemLeft" align="right" valign="top"><a id="a26415e74c21cb9f6e7d74ea050923df9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a26415e74c21cb9f6e7d74ea050923df9">isFEM</a> ()</td></tr>
<tr class="memdesc:a26415e74c21cb9f6e7d74ea050923df9"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the mesh is of type MESH_FEM3D <br /></td></tr>
<tr class="separator:a26415e74c21cb9f6e7d74ea050923df9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a1adc554753b2fcf60593928435391a"><td class="memItemLeft" align="right" valign="top"><a id="a8a1adc554753b2fcf60593928435391a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a8a1adc554753b2fcf60593928435391a">isGrid1D</a> ()</td></tr>
<tr class="memdesc:a8a1adc554753b2fcf60593928435391a"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the grid is of type MESH_RAY <br /></td></tr>
<tr class="separator:a8a1adc554753b2fcf60593928435391a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedbcda3d82c3cada168bccb01a39e6fe"><td class="memItemLeft" align="right" valign="top"><a id="aedbcda3d82c3cada168bccb01a39e6fe"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aedbcda3d82c3cada168bccb01a39e6fe">isGrid2D</a> ()</td></tr>
<tr class="memdesc:aedbcda3d82c3cada168bccb01a39e6fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the grid is of type MESH_PIXEL <br /></td></tr>
<tr class="separator:aedbcda3d82c3cada168bccb01a39e6fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2b6d69b13be5f9624657f4a76e3b594"><td class="memItemLeft" align="right" valign="top"><a id="aa2b6d69b13be5f9624657f4a76e3b594"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aa2b6d69b13be5f9624657f4a76e3b594">isGrid3D</a> ()</td></tr>
<tr class="memdesc:aa2b6d69b13be5f9624657f4a76e3b594"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the grid is of type MESH_VOXEL <br /></td></tr>
<tr class="separator:aa2b6d69b13be5f9624657f4a76e3b594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa3458f2fd1aa62bab93edc5cbe08366"><td class="memItemLeft" align="right" valign="top"><a id="aaa3458f2fd1aa62bab93edc5cbe08366"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aaa3458f2fd1aa62bab93edc5cbe08366">isMap2D</a> ()</td></tr>
<tr class="memdesc:aaa3458f2fd1aa62bab93edc5cbe08366"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the grid is of type MESH_PIXEL and the parameter idents are set <br /></td></tr>
<tr class="separator:aaa3458f2fd1aa62bab93edc5cbe08366"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9edc13868afa231a0d2289134afc75"><td class="memItemLeft" align="right" valign="top"><a id="aed9edc13868afa231a0d2289134afc75"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aed9edc13868afa231a0d2289134afc75">isMap3D</a> ()</td></tr>
<tr class="memdesc:aed9edc13868afa231a0d2289134afc75"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if the grid is of type MESH_VOXEL and the parameter idents are set <br /></td></tr>
<tr class="separator:aed9edc13868afa231a0d2289134afc75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e26b6a66ca01a61d79ec04b5b823586"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a6e26b6a66ca01a61d79ec04b5b823586">isSubsetOf</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> other)</td></tr>
<tr class="separator:a6e26b6a66ca01a61d79ec04b5b823586"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0215a61006d85b5f48f844ea5e3d525"><td class="memItemLeft" align="right" valign="top">Mesh&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#ae0215a61006d85b5f48f844ea5e3d525">mesh</a> ()</td></tr>
<tr class="separator:ae0215a61006d85b5f48f844ea5e3d525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa467c4d87ada12f40346a0f0ee11b4"><td class="memItemLeft" align="right" valign="top">Mesh&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a0fa467c4d87ada12f40346a0f0ee11b4">meshRef</a> ()</td></tr>
<tr class="separator:a0fa467c4d87ada12f40346a0f0ee11b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3daf199e029de1f9e3b8c76349aff98c"><td class="memItemLeft" align="right" valign="top"><a id="a3daf199e029de1f9e3b8c76349aff98c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a3daf199e029de1f9e3b8c76349aff98c">MetaStructure</a> ()</td></tr>
<tr class="memdesc:a3daf199e029de1f9e3b8c76349aff98c"><td class="mdescLeft">&#160;</td><td class="mdescRight">creates an empty meta structure <br /></td></tr>
<tr class="separator:a3daf199e029de1f9e3b8c76349aff98c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee89dc8849b92f23212e3ba34b72c87c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#aee89dc8849b92f23212e3ba34b72c87c">MetaStructure</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> other, bool copy_mesh=true, bool copy_data=true)</td></tr>
<tr class="memdesc:aee89dc8849b92f23212e3ba34b72c87c"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#aee89dc8849b92f23212e3ba34b72c87c">More...</a><br /></td></tr>
<tr class="separator:aee89dc8849b92f23212e3ba34b72c87c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd0a4f066c62067fc1fee92d9ca03f06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#abd0a4f066c62067fc1fee92d9ca03f06">operator=</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> other)</td></tr>
<tr class="memdesc:abd0a4f066c62067fc1fee92d9ca03f06"><td class="mdescLeft">&#160;</td><td class="mdescRight">overrides the assignment operator This object will contain the same data as other (copying data). The operator checks if other and this object are actually the same object - if so, it does nothing  <a href="#abd0a4f066c62067fc1fee92d9ca03f06">More...</a><br /></td></tr>
<tr class="separator:abd0a4f066c62067fc1fee92d9ca03f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addbbfeba3b0fc1f2e654709a60c400b8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#addbbfeba3b0fc1f2e654709a60c400b8">operator==</a> (<a class="el" href="class_meta_structure.xhtml">MetaStructure</a> other)</td></tr>
<tr class="memdesc:addbbfeba3b0fc1f2e654709a60c400b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns true if both objects have the same contents primarily used to test the serialization  <a href="#addbbfeba3b0fc1f2e654709a60c400b8">More...</a><br /></td></tr>
<tr class="separator:addbbfeba3b0fc1f2e654709a60c400b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0025b025dbbaab629429bf1964c07192"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a0025b025dbbaab629429bf1964c07192">setGridIdents</a> (string x=&quot;&quot;, string y=&quot;&quot;, string z=&quot;&quot;)</td></tr>
<tr class="memdesc:a0025b025dbbaab629429bf1964c07192"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the idents of a map abscissa This function must be called AFTER setTYpeVoxel or setTypePixel  <a href="#a0025b025dbbaab629429bf1964c07192">More...</a><br /></td></tr>
<tr class="separator:a0025b025dbbaab629429bf1964c07192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace5acac76bc306c0c11cd7782c2f532c"><td class="memItemLeft" align="right" valign="top"><a id="ace5acac76bc306c0c11cd7782c2f532c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#ace5acac76bc306c0c11cd7782c2f532c">setMeshTypeFEM</a> ()</td></tr>
<tr class="memdesc:ace5acac76bc306c0c11cd7782c2f532c"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the mesh type to MESH_FEM3D <br /></td></tr>
<tr class="separator:ace5acac76bc306c0c11cd7782c2f532c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a747b502eaa9fb41b0449a6e53c3f9384"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a747b502eaa9fb41b0449a6e53c3f9384">setMeshTypePixel</a> (number nx, number ny)</td></tr>
<tr class="memdesc:a747b502eaa9fb41b0449a6e53c3f9384"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the mesh type to MESH_PIXEL  <a href="#a747b502eaa9fb41b0449a6e53c3f9384">More...</a><br /></td></tr>
<tr class="separator:a747b502eaa9fb41b0449a6e53c3f9384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accb91ec1873165e99a5be652c305b234"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#accb91ec1873165e99a5be652c305b234">setMeshTypeRay</a> (number nx)</td></tr>
<tr class="memdesc:accb91ec1873165e99a5be652c305b234"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the mesh type to MESH_RAY  <a href="#accb91ec1873165e99a5be652c305b234">More...</a><br /></td></tr>
<tr class="separator:accb91ec1873165e99a5be652c305b234"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91fdad2fce28831e4de1e28117c7762a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_meta_structure.xhtml#a91fdad2fce28831e4de1e28117c7762a">setMeshTypeVoxel</a> (number nx, number ny, number nz)</td></tr>
<tr class="memdesc:a91fdad2fce28831e4de1e28117c7762a"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the mesh type to MESH_VOXEL  <a href="#a91fdad2fce28831e4de1e28117c7762a">More...</a><br /></td></tr>
<tr class="separator:a91fdad2fce28831e4de1e28117c7762a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines a meta structure which contains all data that is used to create a finite element mesh. </p>
<p>The following ideas lead to the concept: </p><ul>
<li>abstract general format (does not change with each new SoS version) </li>
<li>only definition data without logic checks; If the mesh is "valid" will be tested outside of this meta structure </li>
<li>compact memory footprint: Try to use as little space as possible since the structure may be in memory during the whole application lifetime</li>
</ul>
<p>When using serialization, one should only store meta structures which contain meshes, but no data objects. Reason: Since data objects are inetrnally stored by n-tuples of numbers, the time to load/save is very long. Use block formats to improve serialization speed. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aee89dc8849b92f23212e3ba34b72c87c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee89dc8849b92f23212e3ba34b72c87c">&#9670;&nbsp;</a></span>MetaStructure()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copy_mesh</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>copy_data</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the meta structure to be copied from </td></tr>
    <tr><td class="paramname">copy_mesh</td><td>if this is false, no mesh information are copied </td></tr>
    <tr><td class="paramname">copy_data</td><td>if this is false, no data objects are copied </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0fa9b1c99a5343ff8e4e4aa55b28527f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fa9b1c99a5343ff8e4e4aa55b28527f">&#9670;&nbsp;</a></span>add() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">Part&#160;</td>
          <td class="paramname"><em>part</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds the given part to the structure. </p>
<p>It changes the index of the part according to the current number of contained parts. The index starts at 0. If the part already exists in the data base (i.e. it has the same string ident), then the method tries to add the part contents to the existing part.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part</td><td>the full initialized part to be added </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">An</td><td>exception is thrown if the part to be added overlaps the already contained parts (has same node/element indices). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a51be436c1ab0df9ab71185ddd07b40ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51be436c1ab0df9ab71185ddd07b40ca">&#9670;&nbsp;</a></span>add() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">Section&#160;</td>
          <td class="paramname"><em>section</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given section </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">section</td><td>the section to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad19050a6c894c0f473fabb141e3140a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad19050a6c894c0f473fabb141e3140a9">&#9670;&nbsp;</a></span>add() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">Material&#160;</td>
          <td class="paramname"><em>material</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given material law definition </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">material</td><td>the material to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4e8f3470748cc3520481ec238844baa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4e8f3470748cc3520481ec238844baa">&#9670;&nbsp;</a></span>add() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">ElementSet&#160;</td>
          <td class="paramname"><em>elementset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given element set </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">elementset</td><td>the element set to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae7742808b547e171aa3d04ff3aed95b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7742808b547e171aa3d04ff3aed95b5">&#9670;&nbsp;</a></span>add() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">NodeSet&#160;</td>
          <td class="paramname"><em>nodeset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given node set </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nodeset</td><td>the node set to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abe288e8eeb377303a503f87d5edca686"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe288e8eeb377303a503f87d5edca686">&#9670;&nbsp;</a></span>add() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype">Data&#160;</td>
          <td class="paramname"><em>meta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds all node/element data from the given meta structure to this one. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">meta</td><td>the data structure containing the source data No error checking on compatibility with the mesh! </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6ea94be0aad697ad6148cc817a381ebd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ea94be0aad697ad6148cc817a381ebd">&#9670;&nbsp;</a></span>add() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>meta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds all contents of the given <a class="el" href="class_meta_structure.xhtml" title="Defines a meta structure which contains all data that is used to create a finite element mesh...">MetaStructure</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">meta</td><td>the data structure containing the source data </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa1f17b21db9e172ffe3e185980e5f1d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1f17b21db9e172ffe3e185980e5f1d1">&#9670;&nbsp;</a></span>addAndMerge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addAndMerge </td>
          <td>(</td>
          <td class="paramtype">Mesh&#160;</td>
          <td class="paramname"><em>meta</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds the mesh information from the given meta structure to this one such that both will be merged. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">meta</td><td>the data structure containing the source data </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">an</td><td>exception is thrown if any duplicate nodes/elements exist. No error checking on compatibility, etc. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a14e566d1311ac5a0b7a07a7f8ca683b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14e566d1311ac5a0b7a07a7f8ca683b2">&#9670;&nbsp;</a></span>addElementData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addElementData </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ElementData&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given element data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ident</td><td>the ident of the node data </td></tr>
    <tr><td class="paramname">data</td><td>the data container to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a25329a79194551b18aea7e5c08c5e17d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25329a79194551b18aea7e5c08c5e17d">&#9670;&nbsp;</a></span>addPointData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addPointData </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">PointData&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given node data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ident</td><td>the ident of the node data </td></tr>
    <tr><td class="paramname">data</td><td>the data container to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abcf3380c52c3c4952f99ec692b3940a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcf3380c52c3c4952f99ec692b3940a6">&#9670;&nbsp;</a></span>addScalarData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addScalarData </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ScalarData&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the given scalar data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ident</td><td>the ident of the scalar data </td></tr>
    <tr><td class="paramname">data</td><td>the data container to be added </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6029fd927112ed832c9d5a73debfc78d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6029fd927112ed832c9d5a73debfc78d">&#9670;&nbsp;</a></span>data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Data data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>m_data </dd></dl>

</div>
</div>
<a id="afb44f41c68a96be59ad5dc0fd2d01185"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb44f41c68a96be59ad5dc0fd2d01185">&#9670;&nbsp;</a></span>emptyData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emptyData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if there are no data items in this object </dd></dl>

</div>
</div>
<a id="a052f40c68d733e32f5c2270ec731be52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a052f40c68d733e32f5c2270ec731be52">&#9670;&nbsp;</a></span>emptyMesh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emptyMesh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if there is no structural data in this object </dd></dl>

</div>
</div>
<a id="a09c0c49149538f5d9c9011ed65539d0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09c0c49149538f5d9c9011ed65539d0d">&#9670;&nbsp;</a></span>isCompatible()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt; string &gt; isCompatible </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an empty list if both meshes are compatble. </p>
<p>Compatibility means that mesh data of the one mesh can be applied directly to the other mesh.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>The other mesh </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A string list listing differences. This list is empty if: <ul>
<li>both meshes are empty. </li>
<li>both meshes are identical </li>
<li>both meshes differ only in the point coordinates or set definitions Its size is otherwise not zero. </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a6e26b6a66ca01a61d79ec04b5b823586"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e26b6a66ca01a61d79ec04b5b823586">&#9670;&nbsp;</a></span>isSubsetOf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isSubsetOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>Returns true if this mesh is a subset of the other</dd></dl>
<p>That means, that some nodes or elements might have been deleted. Still the method will return true. Only parts, nodes, elements and sections are tested on subset. The other mesh components are tested on equality!</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae0215a61006d85b5f48f844ea5e3d525"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0215a61006d85b5f48f844ea5e3d525">&#9670;&nbsp;</a></span>mesh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mesh mesh </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>m_mesh </dd></dl>

</div>
</div>
<a id="a0fa467c4d87ada12f40346a0f0ee11b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fa467c4d87ada12f40346a0f0ee11b4">&#9670;&nbsp;</a></span>meshRef()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mesh meshRef </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>m_mesh </dd></dl>

</div>
</div>
<a id="abd0a4f066c62067fc1fee92d9ca03f06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd0a4f066c62067fc1fee92d9ca03f06">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a> operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>overrides the assignment operator This object will contain the same data as other (copying data). The operator checks if other and this object are actually the same object - if so, it does nothing </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the source object </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to *this </dd></dl>

</div>
</div>
<a id="addbbfeba3b0fc1f2e654709a60c400b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addbbfeba3b0fc1f2e654709a60c400b8">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_meta_structure.xhtml">MetaStructure</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns true if both objects have the same contents primarily used to test the serialization </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the object to be compared </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if both are equal </dd></dl>

</div>
</div>
<a id="a0025b025dbbaab629429bf1964c07192"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0025b025dbbaab629429bf1964c07192">&#9670;&nbsp;</a></span>setGridIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setGridIdents </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>x</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>y</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>z</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the idents of a map abscissa This function must be called AFTER setTYpeVoxel or setTypePixel </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the x parameter ident </td></tr>
    <tr><td class="paramname">y</td><td>the y parameter ident </td></tr>
    <tr><td class="paramname">z</td><td>the z parameter ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a747b502eaa9fb41b0449a6e53c3f9384"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a747b502eaa9fb41b0449a6e53c3f9384">&#9670;&nbsp;</a></span>setMeshTypePixel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMeshTypePixel </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>ny</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the mesh type to MESH_PIXEL </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nx</td><td>the number of grid points along the x axis </td></tr>
    <tr><td class="paramname">ny</td><td>the number of grid points along the y axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="accb91ec1873165e99a5be652c305b234"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accb91ec1873165e99a5be652c305b234">&#9670;&nbsp;</a></span>setMeshTypeRay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMeshTypeRay </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>nx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the mesh type to MESH_RAY </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nx</td><td>the number of grid points along the x axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a91fdad2fce28831e4de1e28117c7762a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91fdad2fce28831e4de1e28117c7762a">&#9670;&nbsp;</a></span>setMeshTypeVoxel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMeshTypeVoxel </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>nx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>ny</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>nz</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the mesh type to MESH_VOXEL </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nx</td><td>the number of grid points along the x axis </td></tr>
    <tr><td class="paramname">ny</td><td>the number of grid points along the y axis </td></tr>
    <tr><td class="paramname">nz</td><td>the number of grid points along the z axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
