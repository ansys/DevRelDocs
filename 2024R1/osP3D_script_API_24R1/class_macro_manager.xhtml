<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): MacroManager Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_macro_manager.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_macro_manager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MacroManager Class Reference<div class="ingroups"><a class="el" href="group__script.xhtml">Script</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>stores a set of macro definitions <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> is a common::Sender. Listeners can register themselves at Senders. <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> calls its senders when Macros are changed/added/removed.  
 <a href="class_macro_manager.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2754edf9f8c68b54ab1d0ac5d4dc27b8"><td class="memItemLeft" align="right" valign="top"><a id="a2754edf9f8c68b54ab1d0ac5d4dc27b8"></a>
typedef std::set&lt; <a class="el" href="class_macro_function.xhtml">MacroFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a2754edf9f8c68b54ab1d0ac5d4dc27b8">TMacroSet</a></td></tr>
<tr class="memdesc:a2754edf9f8c68b54ab1d0ac5d4dc27b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">a type for storing macros in a sorted set <br /></td></tr>
<tr class="separator:a2754edf9f8c68b54ab1d0ac5d4dc27b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af041e23d748102508adc50e03e7bda1e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#af041e23d748102508adc50e03e7bda1e">add</a> (<a class="el" href="class_macro_function.xhtml">MacroFunction</a> macro)</td></tr>
<tr class="memdesc:af041e23d748102508adc50e03e7bda1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds a new function to the container  <a href="#af041e23d748102508adc50e03e7bda1e">More...</a><br /></td></tr>
<tr class="separator:af041e23d748102508adc50e03e7bda1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22b30d30fe29ad3ae825bfad0ce53db4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a22b30d30fe29ad3ae825bfad0ce53db4">add</a> (<a class="el" href="class_macro_manager.xhtml">MacroManager</a> other, bool overwrite_existing)</td></tr>
<tr class="memdesc:a22b30d30fe29ad3ae825bfad0ce53db4"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds the contents of other to this object  <a href="#a22b30d30fe29ad3ae825bfad0ce53db4">More...</a><br /></td></tr>
<tr class="separator:a22b30d30fe29ad3ae825bfad0ce53db4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa38fdf58269a29519ce3184f3ffd34c6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#aa38fdf58269a29519ce3184f3ffd34c6">assign</a> (<a class="el" href="class_macro_manager.xhtml">MacroManager</a> other)</td></tr>
<tr class="memdesc:aa38fdf58269a29519ce3184f3ffd34c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">is the equivalent to the = operator, assigns the contents of other to this  <a href="#aa38fdf58269a29519ce3184f3ffd34c6">More...</a><br /></td></tr>
<tr class="separator:aa38fdf58269a29519ce3184f3ffd34c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c775b1fd28d66bae42c106b95b4675f"><td class="memItemLeft" align="right" valign="top">TMacroSet::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a1c775b1fd28d66bae42c106b95b4675f">begin</a> ()</td></tr>
<tr class="separator:a1c775b1fd28d66bae42c106b95b4675f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa821bec12eaa7e0f649397c9675ff505"><td class="memItemLeft" align="right" valign="top"><a id="aa821bec12eaa7e0f649397c9675ff505"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#aa821bec12eaa7e0f649397c9675ff505">clear</a> ()</td></tr>
<tr class="memdesc:aa821bec12eaa7e0f649397c9675ff505"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears the data <br /></td></tr>
<tr class="separator:aa821bec12eaa7e0f649397c9675ff505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a644718bb2fb240de962dc3c9a1fdf0dc">empty</a> () const</td></tr>
<tr class="separator:a644718bb2fb240de962dc3c9a1fdf0dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5af8620c25d4ea19471050477c4e3a7"><td class="memItemLeft" align="right" valign="top">TMacroSet::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#af5af8620c25d4ea19471050477c4e3a7">end</a> ()</td></tr>
<tr class="separator:af5af8620c25d4ea19471050477c4e3a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85e467501638e35b47f5c62bd0269e63"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a85e467501638e35b47f5c62bd0269e63">erase</a> (string identifier)</td></tr>
<tr class="memdesc:a85e467501638e35b47f5c62bd0269e63"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the macro with given identifier  <a href="#a85e467501638e35b47f5c62bd0269e63">More...</a><br /></td></tr>
<tr class="separator:a85e467501638e35b47f5c62bd0269e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a544a57d56da3c8e5148ab81842ac207b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a544a57d56da3c8e5148ab81842ac207b">exists</a> (string identifier)</td></tr>
<tr class="separator:a544a57d56da3c8e5148ab81842ac207b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a976a92de6a50d5e163bf3dc4ce895423"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_macro_function.xhtml">MacroFunction</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a976a92de6a50d5e163bf3dc4ce895423">get</a> (string identifier)</td></tr>
<tr class="separator:a976a92de6a50d5e163bf3dc4ce895423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8824df8057f38102b62ff835f2fa3f1c"><td class="memItemLeft" align="right" valign="top"><a id="a8824df8057f38102b62ff835f2fa3f1c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a8824df8057f38102b62ff835f2fa3f1c">MacroManager</a> ()</td></tr>
<tr class="memdesc:a8824df8057f38102b62ff835f2fa3f1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">default constructor <br /></td></tr>
<tr class="separator:a8824df8057f38102b62ff835f2fa3f1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd6a30df2574c542f68e83a888be7de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a8dd6a30df2574c542f68e83a888be7de">operator==</a> (<a class="el" href="class_macro_manager.xhtml">MacroManager</a> arg)</td></tr>
<tr class="memdesc:a8dd6a30df2574c542f68e83a888be7de"><td class="mdescLeft">&#160;</td><td class="mdescRight">comparison operator  <a href="#a8dd6a30df2574c542f68e83a888be7de">More...</a><br /></td></tr>
<tr class="separator:a8dd6a30df2574c542f68e83a888be7de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b738f30f6d3e1331d68df2c5dda0e6"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a94b738f30f6d3e1331d68df2c5dda0e6">scriptChangeToFunction</a> (string var_manager_ident, string var_chunk_ident, string old_func_ident, <a class="el" href="class_macro_function.xhtml">MacroFunction</a> other)</td></tr>
<tr class="memdesc:a94b738f30f6d3e1331d68df2c5dda0e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">identifies a script code that changes a single function  <a href="#a94b738f30f6d3e1331d68df2c5dda0e6">More...</a><br /></td></tr>
<tr class="separator:a94b738f30f6d3e1331d68df2c5dda0e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b3688a1cc2055df2c8d896a0efd7808"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a0b3688a1cc2055df2c8d896a0efd7808">set</a> (<a class="el" href="class_macro_function.xhtml">MacroFunction</a> macro)</td></tr>
<tr class="memdesc:a0b3688a1cc2055df2c8d896a0efd7808"><td class="mdescLeft">&#160;</td><td class="mdescRight">replaces an existing function by the specified one  <a href="#a0b3688a1cc2055df2c8d896a0efd7808">More...</a><br /></td></tr>
<tr class="separator:a0b3688a1cc2055df2c8d896a0efd7808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259cb5a711406a8c3e5d937eb9350cca"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_macro_manager.xhtml#a259cb5a711406a8c3e5d937eb9350cca">size</a> () const</td></tr>
<tr class="separator:a259cb5a711406a8c3e5d937eb9350cca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>stores a set of macro definitions <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> is a common::Sender. Listeners can register themselves at Senders. <a class="el" href="class_macro_manager.xhtml" title="stores a set of macro definitions MacroManager is a common::Sender. Listeners can register themselves...">MacroManager</a> calls its senders when Macros are changed/added/removed. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af041e23d748102508adc50e03e7bda1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af041e23d748102508adc50e03e7bda1e">&#9670;&nbsp;</a></span>add() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_macro_function.xhtml">MacroFunction</a>&#160;</td>
          <td class="paramname"><em>macro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds a new function to the container </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">macro</td><td>macro to be added. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">if</td><td>a function with the identical ident already exists </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a22b30d30fe29ad3ae825bfad0ce53db4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22b30d30fe29ad3ae825bfad0ce53db4">&#9670;&nbsp;</a></span>add() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_macro_manager.xhtml">MacroManager</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds the contents of other to this object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the source to be copied to this </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>if true, then all objects are copied. If false, only those macro are copied for which no equally named macro exists. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa38fdf58269a29519ce3184f3ffd34c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa38fdf58269a29519ce3184f3ffd34c6">&#9670;&nbsp;</a></span>assign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_macro_manager.xhtml">MacroManager</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>is the equivalent to the = operator, assigns the contents of other to this </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the source to be copied to this </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1c775b1fd28d66bae42c106b95b4675f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c775b1fd28d66bae42c106b95b4675f">&#9670;&nbsp;</a></span>begin()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TMacroSet::const_iterator begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the begin iterator to the underlying data container </dd></dl>

</div>
</div>
<a id="a644718bb2fb240de962dc3c9a1fdf0dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a644718bb2fb240de962dc3c9a1fdf0dc">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if empty </dd></dl>

</div>
</div>
<a id="af5af8620c25d4ea19471050477c4e3a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5af8620c25d4ea19471050477c4e3a7">&#9670;&nbsp;</a></span>end()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">TMacroSet::const_iterator end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the end iterator to the underlying data container </dd></dl>

</div>
</div>
<a id="a85e467501638e35b47f5c62bd0269e63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85e467501638e35b47f5c62bd0269e63">&#9670;&nbsp;</a></span>erase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">erase </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>identifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes the macro with given identifier </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">identifier</td><td>the identifier of the macro to be erased </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a544a57d56da3c8e5148ab81842ac207b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a544a57d56da3c8e5148ab81842ac207b">&#9670;&nbsp;</a></span>exists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool exists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>identifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the given macro identifier exists </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">identifier</td><td>the identifier of the macro to be tested </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a976a92de6a50d5e163bf3dc4ce895423"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a976a92de6a50d5e163bf3dc4ce895423">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_macro_function.xhtml">MacroFunction</a> get </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>identifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the macro with specified identifier </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">identifier</td><td>the script ident of the function </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8dd6a30df2574c542f68e83a888be7de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dd6a30df2574c542f68e83a888be7de">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_macro_manager.xhtml">MacroManager</a>&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>comparison operator </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">arg</td><td>the variable to be tested </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if both are equal </dd></dl>

</div>
</div>
<a id="a94b738f30f6d3e1331d68df2c5dda0e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b738f30f6d3e1331d68df2c5dda0e6">&#9670;&nbsp;</a></span>scriptChangeToFunction()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string scriptChangeToFunction </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>var_manager_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>var_chunk_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>old_func_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_macro_function.xhtml">MacroFunction</a>&#160;</td>
          <td class="paramname"><em>other</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>identifies a script code that changes a single function </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other function which is be added or changed </td></tr>
    <tr><td class="paramname">var_manager_ident</td><td>the variable identifier of this macro manager in script </td></tr>
    <tr><td class="paramname">var_chunk_ident</td><td>the variable ident of a temporary macro object </td></tr>
    <tr><td class="paramname">old_func_ident</td><td>The old function ident to be changed. Empty if a new function is created. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the script code to change this function to match the other on </dd></dl>

</div>
</div>
<a id="a0b3688a1cc2055df2c8d896a0efd7808"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b3688a1cc2055df2c8d896a0efd7808">&#9670;&nbsp;</a></span>set()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_macro_function.xhtml">MacroFunction</a>&#160;</td>
          <td class="paramname"><em>macro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>replaces an existing function by the specified one </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">macro</td><td>the macro to replace the existing one with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a259cb5a711406a8c3e5d937eb9350cca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a259cb5a711406a8c3e5d937eb9350cca">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of defined macros </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
