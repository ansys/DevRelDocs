<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): FMOPGroup Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_f_m_o_p_group.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_f_m_o_p_group-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FMOPGroup Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>a group of random fields belonging together (either a single random field, or multiple cross-correlated fields)  
 <a href="class_f_m_o_p_group.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac2bbd20b9306bfa8295d8f7be7f50c60"><td class="memItemLeft" align="right" valign="top"><a id="ac2bbd20b9306bfa8295d8f7be7f50c60"></a>
typedef std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TStringVector</b></td></tr>
<tr class="separator:ac2bbd20b9306bfa8295d8f7be7f50c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab19fdf8d3eb67cc0d77cbbff38ff4b83"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#ab19fdf8d3eb67cc0d77cbbff38ff4b83">activeInputIdent</a> (number i_input)</td></tr>
<tr class="separator:ab19fdf8d3eb67cc0d77cbbff38ff4b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97d8c95149fcbad589a47edda7312f95"><td class="memItemLeft" align="right" valign="top">std::vector&lt; number &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a97d8c95149fcbad589a47edda7312f95">activeInputIndices</a> () const</td></tr>
<tr class="separator:a97d8c95149fcbad589a47edda7312f95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca3566a6a41c169f8a05ac86398ae86"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a9ca3566a6a41c169f8a05ac86398ae86">centerInputValues</a> () const</td></tr>
<tr class="separator:a9ca3566a6a41c169f8a05ac86398ae86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e7525a2108e3ba5f8e84849d5f3a812"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a6e7525a2108e3ba5f8e84849d5f3a812">copyFCoPToDatabase</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, bool overwrite_existing)</td></tr>
<tr class="memdesc:a6e7525a2108e3ba5f8e84849d5f3a812"><td class="mdescLeft">&#160;</td><td class="mdescRight">copies contained data to the database (being visible in data object table), restricted to basic FCoP-data (all except Rsigma)  <a href="#a6e7525a2108e3ba5f8e84849d5f3a812">More...</a><br /></td></tr>
<tr class="separator:a6e7525a2108e3ba5f8e84849d5f3a812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af90a5eb5a4aed2af1bbd69207298a721"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#af90a5eb5a4aed2af1bbd69207298a721">copyMostSensitiveToDatabase</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, bool overwrite_existing)</td></tr>
<tr class="memdesc:af90a5eb5a4aed2af1bbd69207298a721"><td class="mdescLeft">&#160;</td><td class="mdescRight">copies contained data to the database (being visible in data object table), restricted to objects names 'most sensitive inputs'  <a href="#af90a5eb5a4aed2af1bbd69207298a721">More...</a><br /></td></tr>
<tr class="separator:af90a5eb5a4aed2af1bbd69207298a721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afab06d15908af8a8ad391c3c62f1ef1b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#afab06d15908af8a8ad391c3c62f1ef1b">copyRSigmaToDatabase</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, bool overwrite_existing)</td></tr>
<tr class="memdesc:afab06d15908af8a8ad391c3c62f1ef1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">copies contained data to the database (being visible in data object table), restricted to all Rsigma objects  <a href="#afab06d15908af8a8ad391c3c62f1ef1b">More...</a><br /></td></tr>
<tr class="separator:afab06d15908af8a8ad391c3c62f1ef1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac50f586ee1030fe28f7ceb82596d843"><td class="memItemLeft" align="right" valign="top"><a id="aac50f586ee1030fe28f7ceb82596d843"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#aac50f586ee1030fe28f7ceb82596d843">elementResults</a> () const</td></tr>
<tr class="memdesc:aac50f586ee1030fe28f7ceb82596d843"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a const-reference to m_element_data <br /></td></tr>
<tr class="separator:aac50f586ee1030fe28f7ceb82596d843"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37662babd77d3217b300cc31a4ddf4af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a37662babd77d3217b300cc31a4ddf4af">eraseDatabaseCopies</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a37662babd77d3217b300cc31a4ddf4af"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes all data objects contained in this data structure from the respective database.  <a href="#a37662babd77d3217b300cc31a4ddf4af">More...</a><br /></td></tr>
<tr class="separator:a37662babd77d3217b300cc31a4ddf4af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c58b7d50ad5676db022df82715e5156"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a7c58b7d50ad5676db022df82715e5156">evaluateAmplitudes</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> inputs, bool use_sampling_bounds=true)</td></tr>
<tr class="memdesc:a7c58b7d50ad5676db022df82715e5156"><td class="mdescLeft">&#160;</td><td class="mdescRight">evaluates the Field-MOP for the amplitudes only  <a href="#a7c58b7d50ad5676db022df82715e5156">More...</a><br /></td></tr>
<tr class="separator:a7c58b7d50ad5676db022df82715e5156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab31984f5281c2b1663f4e2d0e2a2a867"><td class="memItemLeft" align="right" valign="top">Eigen::VectorXd&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#ab31984f5281c2b1663f4e2d0e2a2a867">inputCoP</a> () const</td></tr>
<tr class="separator:ab31984f5281c2b1663f4e2d0e2a2a867"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f7106d9165b855c958678be43c9e4f5"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a8f7106d9165b855c958678be43c9e4f5">inputIdent</a> (number i_input)</td></tr>
<tr class="separator:a8f7106d9165b855c958678be43c9e4f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90e1ef91ed7f9d7c3448cb01d7bab656"><td class="memItemLeft" align="right" valign="top"><a id="a90e1ef91ed7f9d7c3448cb01d7bab656"></a>
TStringVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a90e1ef91ed7f9d7c3448cb01d7bab656">inputIdentsVector</a> ()</td></tr>
<tr class="memdesc:a90e1ef91ed7f9d7c3448cb01d7bab656"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a reference to a string vector of all scalar input parameters <br /></td></tr>
<tr class="separator:a90e1ef91ed7f9d7c3448cb01d7bab656"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3fc118553a130abbc8bd565e563184"><td class="memItemLeft" align="right" valign="top">::legacy::ScalarMOP2&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a4b3fc118553a130abbc8bd565e563184">mop</a> () const</td></tr>
<tr class="separator:a4b3fc118553a130abbc8bd565e563184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad736e09662cf743b9f7b4513d8eee114"><td class="memItemLeft" align="right" valign="top"><a id="ad736e09662cf743b9f7b4513d8eee114"></a>
MOQ&#160;</td><td class="memItemRight" valign="bottom"><b>moq</b> ()</td></tr>
<tr class="separator:ad736e09662cf743b9f7b4513d8eee114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d6b0f14ad9c641ec27d77f7440b17cb"><td class="memItemLeft" align="right" valign="top"><a id="a3d6b0f14ad9c641ec27d77f7440b17cb"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a3d6b0f14ad9c641ec27d77f7440b17cb">nodeResults</a> () const</td></tr>
<tr class="memdesc:a3d6b0f14ad9c641ec27d77f7440b17cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a const-reference to m_node_data <br /></td></tr>
<tr class="separator:a3d6b0f14ad9c641ec27d77f7440b17cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8434f6aa78120ee35c1e32423589f74"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#ac8434f6aa78120ee35c1e32423589f74">numActiveInputs</a> ()</td></tr>
<tr class="separator:ac8434f6aa78120ee35c1e32423589f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2556eb3339693ac4a80b79c2a93c2990"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a2556eb3339693ac4a80b79c2a93c2990">numInputs</a> ()</td></tr>
<tr class="separator:a2556eb3339693ac4a80b79c2a93c2990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab5e2780b896d345d6aca1405d7a18d6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#aab5e2780b896d345d6aca1405d7a18d6">overlaps</a> (<a class="el" href="class_f_m_o_p_group.xhtml">FMOPGroup</a> field) const</td></tr>
<tr class="separator:aab5e2780b896d345d6aca1405d7a18d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f590a32d0900910a06cb38e521e3c06"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_random_field_group.xhtml">RandomFieldGroup</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a3f590a32d0900910a06cb38e521e3c06">rfGroup</a> () const</td></tr>
<tr class="separator:a3f590a32d0900910a06cb38e521e3c06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fadc1fe1dfaeb5abab01182e9cb6fad"><td class="memItemLeft" align="right" valign="top"><a id="a5fadc1fe1dfaeb5abab01182e9cb6fad"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a5fadc1fe1dfaeb5abab01182e9cb6fad">scalarResults</a> () const</td></tr>
<tr class="memdesc:a5fadc1fe1dfaeb5abab01182e9cb6fad"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a const-reference to m_scalar_data <br /></td></tr>
<tr class="separator:a5fadc1fe1dfaeb5abab01182e9cb6fad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d040ac739a6e430c7e75137975004c2"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a2d040ac739a6e430c7e75137975004c2">totalCoP</a> () const</td></tr>
<tr class="separator:a2d040ac739a6e430c7e75137975004c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2052120d018f605d07dc78a14069463f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_f_m_o_p_group.xhtml#a2052120d018f605d07dc78a14069463f">useMOQ</a> () const</td></tr>
<tr class="separator:a2052120d018f605d07dc78a14069463f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>a group of random fields belonging together (either a single random field, or multiple cross-correlated fields) </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ab19fdf8d3eb67cc0d77cbbff38ff4b83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab19fdf8d3eb67cc0d77cbbff38ff4b83">&#9670;&nbsp;</a></span>activeInputIdent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string activeInputIdent </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>i_input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the ident of a respective scalar input parameter </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i_input</td><td>the index of the respective input parameter rangin from 0 to <a class="el" href="class_f_m_o_p_group.xhtml#ac8434f6aa78120ee35c1e32423589f74">numActiveInputs()</a>. Also the ordering refers to centerInputValues. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a97d8c95149fcbad589a47edda7312f95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97d8c95149fcbad589a47edda7312f95">&#9670;&nbsp;</a></span>activeInputIndices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;number&gt; activeInputIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the active node indices </dd></dl>

</div>
</div>
<a id="a9ca3566a6a41c169f8a05ac86398ae86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ca3566a6a41c169f8a05ac86398ae86">&#9670;&nbsp;</a></span>centerInputValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> centerInputValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the center values of all inputs </dd></dl>

</div>
</div>
<a id="a6e7525a2108e3ba5f8e84849d5f3a812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e7525a2108e3ba5f8e84849d5f3a812">&#9670;&nbsp;</a></span>copyFCoPToDatabase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">copyFCoPToDatabase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copies contained data to the database (being visible in data object table), restricted to basic FCoP-data (all except Rsigma) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the target database </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>if true, then data objects with identical ident will be replaced, else an exception is thrown. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af90a5eb5a4aed2af1bbd69207298a721"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af90a5eb5a4aed2af1bbd69207298a721">&#9670;&nbsp;</a></span>copyMostSensitiveToDatabase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">copyMostSensitiveToDatabase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copies contained data to the database (being visible in data object table), restricted to objects names 'most sensitive inputs' </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the target database </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>if true, then data objects with identical ident will be replaced, else an exception is thrown. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afab06d15908af8a8ad391c3c62f1ef1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afab06d15908af8a8ad391c3c62f1ef1b">&#9670;&nbsp;</a></span>copyRSigmaToDatabase()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">copyRSigmaToDatabase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copies contained data to the database (being visible in data object table), restricted to all Rsigma objects </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the target database </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>if true, then data objects with identical ident will be replaced, else an exception is thrown. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a37662babd77d3217b300cc31a4ddf4af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37662babd77d3217b300cc31a4ddf4af">&#9670;&nbsp;</a></span>eraseDatabaseCopies()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseDatabaseCopies </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes all data objects contained in this data structure from the respective database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database to be deleted </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7c58b7d50ad5676db022df82715e5156"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c58b7d50ad5676db022df82715e5156">&#9670;&nbsp;</a></span>evaluateAmplitudes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> evaluateAmplitudes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_sampling_bounds</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>evaluates the Field-MOP for the amplitudes only </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inputs</td><td>the column vector of the input parameters (ALL inputs!) </td></tr>
    <tr><td class="paramname">use_sampling_bounds</td><td>if true, then the method returns with an error if the input vector is outside of the original DOE boundaries; else it tries to extrapolate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the vector of amplitudes. </dd></dl>

</div>
</div>
<a id="ab31984f5281c2b1663f4e2d0e2a2a867"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab31984f5281c2b1663f4e2d0e2a2a867">&#9670;&nbsp;</a></span>inputCoP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Eigen::VectorXd inputCoP </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const-reference to m_input_cop </dd></dl>

</div>
</div>
<a id="a8f7106d9165b855c958678be43c9e4f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f7106d9165b855c958678be43c9e4f5">&#9670;&nbsp;</a></span>inputIdent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string inputIdent </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>i_input</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the ident of a respective scalar input parameter </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i_input</td><td>the index of the respective input parameter ranging from 0 to numInputs </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4b3fc118553a130abbc8bd565e563184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3fc118553a130abbc8bd565e563184">&#9670;&nbsp;</a></span>mop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::legacy::ScalarMOP2 mop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const-reference to the respective <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> object </dd></dl>

</div>
</div>
<a id="ac8434f6aa78120ee35c1e32423589f74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8434f6aa78120ee35c1e32423589f74">&#9670;&nbsp;</a></span>numActiveInputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number numActiveInputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of active inputs </dd></dl>

</div>
</div>
<a id="a2556eb3339693ac4a80b79c2a93c2990"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2556eb3339693ac4a80b79c2a93c2990">&#9670;&nbsp;</a></span>numInputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number numInputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of input parameters </dd></dl>

</div>
</div>
<a id="aab5e2780b896d345d6aca1405d7a18d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab5e2780b896d345d6aca1405d7a18d6">&#9670;&nbsp;</a></span>overlaps()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool overlaps </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_f_m_o_p_group.xhtml">FMOPGroup</a>&#160;</td>
          <td class="paramname"><em>field</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if any quantity of the other field has the same ident as a quantity in this object </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">field</td><td>the other field to be tested </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3f590a32d0900910a06cb38e521e3c06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f590a32d0900910a06cb38e521e3c06">&#9670;&nbsp;</a></span>rfGroup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_random_field_group.xhtml">RandomFieldGroup</a> rfGroup </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const-reference to the respective field container </dd></dl>

</div>
</div>
<a id="a2d040ac739a6e430c7e75137975004c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d040ac739a6e430c7e75137975004c2">&#9670;&nbsp;</a></span>totalCoP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number totalCoP </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const-reference to m_total_cop </dd></dl>

</div>
</div>
<a id="a2052120d018f605d07dc78a14069463f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2052120d018f605d07dc78a14069463f">&#9670;&nbsp;</a></span>useMOQ()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool useMOQ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns true if it used MOQ for approximation, else it uses <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
