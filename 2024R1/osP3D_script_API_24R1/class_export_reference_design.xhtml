<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ExportReferenceDesign Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_export_reference_design.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_export_reference_design-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ExportReferenceDesign Class Reference<div class="ingroups"><a class="el" href="group__export.xhtml">Export</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>defines information on imported data and files given a reference design This class contains settings for an example design directory (the base_path). These settings include file formats, data items to be imported etc.  
 <a href="class_export_reference_design.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aad0222392d9427fe94936b201df420f5"><td class="memItemLeft" align="right" valign="top"><a id="aad0222392d9427fe94936b201df420f5"></a>
typedef std::vector&lt; <a class="el" href="struct_export_item_info.xhtml">ExportItemInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#aad0222392d9427fe94936b201df420f5">ExportItemInfoVector</a></td></tr>
<tr class="memdesc:aad0222392d9427fe94936b201df420f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">a set of data items <br /></td></tr>
<tr class="separator:aad0222392d9427fe94936b201df420f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afd5c422a5396fc7f6fc9d67639056f22"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#afd5c422a5396fc7f6fc9d67639056f22">addFile_Abaqus</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:afd5c422a5396fc7f6fc9d67639056f22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in Abaqus format.  <a href="#afd5c422a5396fc7f6fc9d67639056f22">More...</a><br /></td></tr>
<tr class="separator:afd5c422a5396fc7f6fc9d67639056f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11351628e3f4ed33a44e62f7647d4cdf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a11351628e3f4ed33a44e62f7647d4cdf">addFile_ANSYS_MechanicalDat</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a11351628e3f4ed33a44e62f7647d4cdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in ANSYS format.  <a href="#a11351628e3f4ed33a44e62f7647d4cdf">More...</a><br /></td></tr>
<tr class="separator:a11351628e3f4ed33a44e62f7647d4cdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25975bef494f5516da7d134fd896fcdc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a25975bef494f5516da7d134fd896fcdc">addFile_CSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a25975bef494f5516da7d134fd896fcdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a25975bef494f5516da7d134fd896fcdc">More...</a><br /></td></tr>
<tr class="separator:a25975bef494f5516da7d134fd896fcdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cfbc9c84840bb99ee4c2406e8982ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a69cfbc9c84840bb99ee4c2406e8982ca">addFile_ElementDataCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a69cfbc9c84840bb99ee4c2406e8982ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a69cfbc9c84840bb99ee4c2406e8982ca">More...</a><br /></td></tr>
<tr class="separator:a69cfbc9c84840bb99ee4c2406e8982ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac43d8e7376c34c5ba30b896c528faf2b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ac43d8e7376c34c5ba30b896c528faf2b">addFile_ExternalDataCSV_Disp</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:ac43d8e7376c34c5ba30b896c528faf2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#ac43d8e7376c34c5ba30b896c528faf2b">More...</a><br /></td></tr>
<tr class="separator:ac43d8e7376c34c5ba30b896c528faf2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa943a7bdfa46cb4dc1dd8556c1c4a91d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#aa943a7bdfa46cb4dc1dd8556c1c4a91d">addFile_ExternalDataCSV_ElementData</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:aa943a7bdfa46cb4dc1dd8556c1c4a91d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#aa943a7bdfa46cb4dc1dd8556c1c4a91d">More...</a><br /></td></tr>
<tr class="separator:aa943a7bdfa46cb4dc1dd8556c1c4a91d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6efea91fe71c8a65f3e2e8c1f70d2a75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a6efea91fe71c8a65f3e2e8c1f70d2a75">addFile_ExternalDataCSV_NodeData</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a6efea91fe71c8a65f3e2e8c1f70d2a75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#a6efea91fe71c8a65f3e2e8c1f70d2a75">More...</a><br /></td></tr>
<tr class="separator:a6efea91fe71c8a65f3e2e8c1f70d2a75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1275367105e2c8901916e138e7cfca39"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a1275367105e2c8901916e138e7cfca39">addFile_Image</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a1275367105e2c8901916e138e7cfca39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to an image file.  <a href="#a1275367105e2c8901916e138e7cfca39">More...</a><br /></td></tr>
<tr class="separator:a1275367105e2c8901916e138e7cfca39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76135b512886e51aab814744632e64a8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a76135b512886e51aab814744632e64a8">addFile_LSDynaK</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a76135b512886e51aab814744632e64a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in LS-DYNA K format.  <a href="#a76135b512886e51aab814744632e64a8">More...</a><br /></td></tr>
<tr class="separator:a76135b512886e51aab814744632e64a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ddc7416b07c7f2d1499680759384173"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a8ddc7416b07c7f2d1499680759384173">addFile_Nastran</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a8ddc7416b07c7f2d1499680759384173"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in Nastran format.  <a href="#a8ddc7416b07c7f2d1499680759384173">More...</a><br /></td></tr>
<tr class="separator:a8ddc7416b07c7f2d1499680759384173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a897d79d7afae207e2a37efe46cf6e099"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a897d79d7afae207e2a37efe46cf6e099">addFile_NodeDataCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a897d79d7afae207e2a37efe46cf6e099"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a897d79d7afae207e2a37efe46cf6e099">More...</a><br /></td></tr>
<tr class="separator:a897d79d7afae207e2a37efe46cf6e099"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab673c9293b5fc4fc3c8c2cbd5e663adb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ab673c9293b5fc4fc3c8c2cbd5e663adb">addFile_PERMAS</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:ab673c9293b5fc4fc3c8c2cbd5e663adb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in PERMAS format.  <a href="#ab673c9293b5fc4fc3c8c2cbd5e663adb">More...</a><br /></td></tr>
<tr class="separator:ab673c9293b5fc4fc3c8c2cbd5e663adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0dfe689645de46b022fae82426a4367"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ae0dfe689645de46b022fae82426a4367">addFile_SingleSignalCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:ae0dfe689645de46b022fae82426a4367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#ae0dfe689645de46b022fae82426a4367">More...</a><br /></td></tr>
<tr class="separator:ae0dfe689645de46b022fae82426a4367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5c4c8b3993209b6356f59233da1da48"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ad5c4c8b3993209b6356f59233da1da48">addFile_STL</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:ad5c4c8b3993209b6356f59233da1da48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in binary STL format.  <a href="#ad5c4c8b3993209b6356f59233da1da48">More...</a><br /></td></tr>
<tr class="separator:ad5c4c8b3993209b6356f59233da1da48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04a1fdd72ada5fdc452514a9c4bf50c4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a04a1fdd72ada5fdc452514a9c4bf50c4">addNewFile_ANSYS_MechanicalDat</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a04a1fdd72ada5fdc452514a9c4bf50c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in ANSYS format.  <a href="#a04a1fdd72ada5fdc452514a9c4bf50c4">More...</a><br /></td></tr>
<tr class="separator:a04a1fdd72ada5fdc452514a9c4bf50c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83918abf42f3da6e1f661d0c934db8e6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a83918abf42f3da6e1f661d0c934db8e6">addNewFile_CSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a83918abf42f3da6e1f661d0c934db8e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a83918abf42f3da6e1f661d0c934db8e6">More...</a><br /></td></tr>
<tr class="separator:a83918abf42f3da6e1f661d0c934db8e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e64cb5601dd92fdcb5f6c7b4aa47821"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a3e64cb5601dd92fdcb5f6c7b4aa47821">addNewFile_ElementDataCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a3e64cb5601dd92fdcb5f6c7b4aa47821"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a3e64cb5601dd92fdcb5f6c7b4aa47821">More...</a><br /></td></tr>
<tr class="separator:a3e64cb5601dd92fdcb5f6c7b4aa47821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee22474f946ef03aaf09c6cd8bc2027"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a2ee22474f946ef03aaf09c6cd8bc2027">addNewFile_ExternalDataCSV_Disp</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a2ee22474f946ef03aaf09c6cd8bc2027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#a2ee22474f946ef03aaf09c6cd8bc2027">More...</a><br /></td></tr>
<tr class="separator:a2ee22474f946ef03aaf09c6cd8bc2027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b991ea6ce71214e9cb6405c9abb549"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a76b991ea6ce71214e9cb6405c9abb549">addNewFile_ExternalDataCSV_ElementData</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a76b991ea6ce71214e9cb6405c9abb549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#a76b991ea6ce71214e9cb6405c9abb549">More...</a><br /></td></tr>
<tr class="separator:a76b991ea6ce71214e9cb6405c9abb549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7616f698ea9bc6e01cc3b7aa80a13f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ae7616f698ea9bc6e01cc3b7aa80a13f0">addNewFile_ExternalDataCSV_NodeData</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:ae7616f698ea9bc6e01cc3b7aa80a13f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in External data CSV format.  <a href="#ae7616f698ea9bc6e01cc3b7aa80a13f0">More...</a><br /></td></tr>
<tr class="separator:ae7616f698ea9bc6e01cc3b7aa80a13f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefd9c2283ba25c163db5a3e425cdada"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#afefd9c2283ba25c163db5a3e425cdada">addNewFile_Image</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:afefd9c2283ba25c163db5a3e425cdada"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to an image file.  <a href="#afefd9c2283ba25c163db5a3e425cdada">More...</a><br /></td></tr>
<tr class="separator:afefd9c2283ba25c163db5a3e425cdada"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a5650a453ef5dc6234b03637f34fb81"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a5a5650a453ef5dc6234b03637f34fb81">addNewFile_NodeDataCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a5a5650a453ef5dc6234b03637f34fb81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a5a5650a453ef5dc6234b03637f34fb81">More...</a><br /></td></tr>
<tr class="separator:a5a5650a453ef5dc6234b03637f34fb81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a465219c4c28557c300af22483ee56af2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a465219c4c28557c300af22483ee56af2">addNewFile_SingleSignalCSV</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a465219c4c28557c300af22483ee56af2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in CSV format.  <a href="#a465219c4c28557c300af22483ee56af2">More...</a><br /></td></tr>
<tr class="separator:a465219c4c28557c300af22483ee56af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62e8f818707d85c2631acbdc8058180e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a62e8f818707d85c2631acbdc8058180e">addNewFile_STL</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, string filename)</td></tr>
<tr class="memdesc:a62e8f818707d85c2631acbdc8058180e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exports information to a file in binary STL format.  <a href="#a62e8f818707d85c2631acbdc8058180e">More...</a><br /></td></tr>
<tr class="separator:a62e8f818707d85c2631acbdc8058180e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a47c34ec1e578c2ce27cf1c5fcd0d1704">check</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks if the settings are valid and produces an error.  <a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">More...</a><br /></td></tr>
<tr class="separator:a47c34ec1e578c2ce27cf1c5fcd0d1704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42cfe17a0305737404dfbc962360d076"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a42cfe17a0305737404dfbc962360d076">checkFiles</a> (string abs_design_dir_path, bool quiet=false)</td></tr>
<tr class="memdesc:a42cfe17a0305737404dfbc962360d076"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks if all required files to be exported to exist in the given design directory  <a href="#a42cfe17a0305737404dfbc962360d076">More...</a><br /></td></tr>
<tr class="separator:a42cfe17a0305737404dfbc962360d076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade36e04546c5bec4f28ca492d21875f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ade36e04546c5bec4f28ca492d21875f9">checkObjects</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, int sample, bool quiet=false)</td></tr>
<tr class="memdesc:ade36e04546c5bec4f28ca492d21875f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks if all required objects for the given design number are existing in the database  <a href="#ade36e04546c5bec4f28ca492d21875f9">More...</a><br /></td></tr>
<tr class="separator:ade36e04546c5bec4f28ca492d21875f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aee363b2bbb561ef1d20b2aaaaf61d9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a7aee363b2bbb561ef1d20b2aaaaf61d9">ExportReferenceDesign</a> (string the_base_path)</td></tr>
<tr class="memdesc:a7aee363b2bbb561ef1d20b2aaaaf61d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor  <a href="#a7aee363b2bbb561ef1d20b2aaaaf61d9">More...</a><br /></td></tr>
<tr class="separator:a7aee363b2bbb561ef1d20b2aaaaf61d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b1eab921bf9c19f1b13b17b5af357b"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a80b1eab921bf9c19f1b13b17b5af357b">generateScriptOfSettingsDefinition</a> (string variable_ident, string other_base_path=&quot;&quot;)</td></tr>
<tr class="memdesc:a80b1eab921bf9c19f1b13b17b5af357b"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates a script string (Lua) that is used to build up the current settings object.  <a href="#a80b1eab921bf9c19f1b13b17b5af357b">More...</a><br /></td></tr>
<tr class="separator:a80b1eab921bf9c19f1b13b17b5af357b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ace7f379338ca7d3779b204c3776b7"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a41ace7f379338ca7d3779b204c3776b7">getFiles</a> ()</td></tr>
<tr class="memdesc:a41ace7f379338ca7d3779b204c3776b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles the complete list of files being known to this class This is a compact view onto the contained data, since multiple items may be imported from a single file.  <a href="#a41ace7f379338ca7d3779b204c3776b7">More...</a><br /></td></tr>
<tr class="separator:a41ace7f379338ca7d3779b204c3776b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50f67f9f53f6797a9a1c9439d849fbc5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a50f67f9f53f6797a9a1c9439d849fbc5">getFilesToExport</a> ()</td></tr>
<tr class="memdesc:a50f67f9f53f6797a9a1c9439d849fbc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles a list of files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive.  <a href="#a50f67f9f53f6797a9a1c9439d849fbc5">More...</a><br /></td></tr>
<tr class="separator:a50f67f9f53f6797a9a1c9439d849fbc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4881b245e33d0ed0edc04e74b94df300"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_export_item_info.xhtml">ExportItemInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a4881b245e33d0ed0edc04e74b94df300">getItem</a> (string filename, <a class="el" href="struct_export_item_info.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">ExportItemInfo::Type</a> data_type)</td></tr>
<tr class="memdesc:a4881b245e33d0ed0edc04e74b94df300"><td class="mdescLeft">&#160;</td><td class="mdescRight">gets the respective item if existing  <a href="#a4881b245e33d0ed0edc04e74b94df300">More...</a><br /></td></tr>
<tr class="separator:a4881b245e33d0ed0edc04e74b94df300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775316552fabc83e39b74beddef81334"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a775316552fabc83e39b74beddef81334">getItemIndex</a> (string filename, <a class="el" href="struct_export_item_info.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">ExportItemInfo::Type</a> data_type)</td></tr>
<tr class="memdesc:a775316552fabc83e39b74beddef81334"><td class="mdescLeft">&#160;</td><td class="mdescRight">gets the index of the respective item if existing  <a href="#a775316552fabc83e39b74beddef81334">More...</a><br /></td></tr>
<tr class="separator:a775316552fabc83e39b74beddef81334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9208885a8e74195f267a2df949dca9"><td class="memItemLeft" align="right" valign="top">std::vector&lt; number &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#adb9208885a8e74195f267a2df949dca9">getItemsForFile</a> (string filename)</td></tr>
<tr class="memdesc:adb9208885a8e74195f267a2df949dca9"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles a list of items which are to be exported to a specific file  <a href="#adb9208885a8e74195f267a2df949dca9">More...</a><br /></td></tr>
<tr class="separator:adb9208885a8e74195f267a2df949dca9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2522c988ad2eaf346ae7af8cd47ff11b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a2522c988ad2eaf346ae7af8cd47ff11b">getModifiedFiles</a> ()</td></tr>
<tr class="memdesc:a2522c988ad2eaf346ae7af8cd47ff11b"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles the complete list of files being known to this class and that are NOT to be created This is a compact view onto the contained data, since multiple items may be imported from a single file.  <a href="#a2522c988ad2eaf346ae7af8cd47ff11b">More...</a><br /></td></tr>
<tr class="separator:a2522c988ad2eaf346ae7af8cd47ff11b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af01172accc310310cc51e31caf936730"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#af01172accc310310cc51e31caf936730">getModifiedFilesToExport</a> ()</td></tr>
<tr class="memdesc:af01172accc310310cc51e31caf936730"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles a list of modified files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive. The filenames in this list contain only those files that are not "newly created" but modified.  <a href="#af01172accc310310cc51e31caf936730">More...</a><br /></td></tr>
<tr class="separator:af01172accc310310cc51e31caf936730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1488cf7e390e0191e91de8e87206b87f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a1488cf7e390e0191e91de8e87206b87f">getNewFilesToExport</a> ()</td></tr>
<tr class="memdesc:a1488cf7e390e0191e91de8e87206b87f"><td class="mdescLeft">&#160;</td><td class="mdescRight">assembles a list of new files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive. The filenames in this list contain only those files that are not "newly created" but modified.  <a href="#a1488cf7e390e0191e91de8e87206b87f">More...</a><br /></td></tr>
<tr class="separator:a1488cf7e390e0191e91de8e87206b87f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19fe83020c2cdfe68f4215af8cdf48cb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a19fe83020c2cdfe68f4215af8cdf48cb">modifyDesign</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, int sample_number, string design_path=&quot;&quot;, bool do_not_check_settings=false)</td></tr>
<tr class="memdesc:a19fe83020c2cdfe68f4215af8cdf48cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">modifies a design on disk  <a href="#a19fe83020c2cdfe68f4215af8cdf48cb">More...</a><br /></td></tr>
<tr class="separator:a19fe83020c2cdfe68f4215af8cdf48cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5b63f5d31ab0a4abf354b4934514f7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#adc5b63f5d31ab0a4abf354b4934514f7">removeFileFromList</a> (string filename)</td></tr>
<tr class="memdesc:adc5b63f5d31ab0a4abf354b4934514f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">removes all import data from item list which is associated with the sepcified file  <a href="#adc5b63f5d31ab0a4abf354b4934514f7">More...</a><br /></td></tr>
<tr class="separator:adc5b63f5d31ab0a4abf354b4934514f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2ba2b1794ac9bad08da653ea8c99eda"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#aa2ba2b1794ac9bad08da653ea8c99eda">setBasePath</a> (string path)</td></tr>
<tr class="memdesc:aa2ba2b1794ac9bad08da653ea8c99eda"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets a new base path. This includes changing the relative path definition of the already parsed files.  <a href="#aa2ba2b1794ac9bad08da653ea8c99eda">More...</a><br /></td></tr>
<tr class="separator:aa2ba2b1794ac9bad08da653ea8c99eda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad838ca5bc438676ab92db57b56ae56c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ad838ca5bc438676ab92db57b56ae56c0">setExportDesign</a> (number item, string design_ident=&quot;&quot;)</td></tr>
<tr class="memdesc:ad838ca5bc438676ab92db57b56ae56c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets if the quantity ident of an item  <a href="#ad838ca5bc438676ab92db57b56ae56c0">More...</a><br /></td></tr>
<tr class="separator:ad838ca5bc438676ab92db57b56ae56c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a053c513b14789817eca6aa636a5813"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a4a053c513b14789817eca6aa636a5813">setExportQuantity</a> (number item, string quantity_ident=&quot;&quot;)</td></tr>
<tr class="memdesc:a4a053c513b14789817eca6aa636a5813"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets if the quantity ident of an item  <a href="#a4a053c513b14789817eca6aa636a5813">More...</a><br /></td></tr>
<tr class="separator:a4a053c513b14789817eca6aa636a5813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1067f1ab8cf433485b3a049f13d1559"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ad1067f1ab8cf433485b3a049f13d1559">setExportSource</a> (number item, <a class="el" href="struct_export_item_info.xhtml#ac409d3942abd5b826fb1508efc119564">ExportItemInfo::DataSource</a> source)</td></tr>
<tr class="memdesc:ad1067f1ab8cf433485b3a049f13d1559"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets if the source of an item  <a href="#ad1067f1ab8cf433485b3a049f13d1559">More...</a><br /></td></tr>
<tr class="separator:ad1067f1ab8cf433485b3a049f13d1559"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:abbf761e829467ff8c85745c8d6af3659"><td class="memItemLeft" align="right" valign="top"><a id="abbf761e829467ff8c85745c8d6af3659"></a>
::ansys::ANSYS_Mechanical_DSDAT_Settings&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#abbf761e829467ff8c85745c8d6af3659">ANSYS_DSDAT_settings</a></td></tr>
<tr class="memdesc:abbf761e829467ff8c85745c8d6af3659"><td class="mdescLeft">&#160;</td><td class="mdescRight">contains settings for the ANSYS DS.DAT modifier <br /></td></tr>
<tr class="separator:abbf761e829467ff8c85745c8d6af3659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1be53c8e392d898f99ddc804ff403c84"><td class="memItemLeft" align="right" valign="top"><a id="a1be53c8e392d898f99ddc804ff403c84"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a1be53c8e392d898f99ddc804ff403c84">base_path</a></td></tr>
<tr class="memdesc:a1be53c8e392d898f99ddc804ff403c84"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the base path is stored as absolute path do never change it directly! Please use <a class="el" href="class_export_reference_design.xhtml#aa2ba2b1794ac9bad08da653ea8c99eda" title="sets a new base path. This includes changing the relative path definition of the already parsed files...">setBasePath()</a> instead! <br /></td></tr>
<tr class="separator:a1be53c8e392d898f99ddc804ff403c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d8dae79bb9c8bfd736f429be701289"><td class="memItemLeft" align="right" valign="top"><a id="ac8d8dae79bb9c8bfd736f429be701289"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ac8d8dae79bb9c8bfd736f429be701289">fmop_use_sampling_bounds</a></td></tr>
<tr class="memdesc:ac8d8dae79bb9c8bfd736f429be701289"><td class="mdescLeft">&#160;</td><td class="mdescRight">if true, the point to be approximated by FMOP, must be within the original sampling bounds. <br /></td></tr>
<tr class="separator:ac8d8dae79bb9c8bfd736f429be701289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a630002260461fbcd78cb76ea209ac36a"><td class="memItemLeft" align="right" valign="top"><a id="a630002260461fbcd78cb76ea209ac36a"></a>
<a class="el" href="class_export_reference_design.xhtml#aad0222392d9427fe94936b201df420f5">ExportItemInfoVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a630002260461fbcd78cb76ea209ac36a">items</a></td></tr>
<tr class="memdesc:a630002260461fbcd78cb76ea209ac36a"><td class="mdescLeft">&#160;</td><td class="mdescRight">stores all parsed data item information <br /></td></tr>
<tr class="separator:a630002260461fbcd78cb76ea209ac36a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac64fc8a28d48239a5b846d8ebf021484"><td class="memItemLeft" align="right" valign="top"><a id="ac64fc8a28d48239a5b846d8ebf021484"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ac64fc8a28d48239a5b846d8ebf021484">mesh_smoothening</a></td></tr>
<tr class="memdesc:ac64fc8a28d48239a5b846d8ebf021484"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines if the deviation is applied with smoothening if true: use iterative smoothening, if false: use no smoothening. Default: false. mesh smoothening works with distance fields and without. <br /></td></tr>
<tr class="separator:ac64fc8a28d48239a5b846d8ebf021484"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac92d2c3e8ade2a17ee2edb8eb6747008"><td class="memItemLeft" align="right" valign="top"><a id="ac92d2c3e8ade2a17ee2edb8eb6747008"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#ac92d2c3e8ade2a17ee2edb8eb6747008">throw_error_on_unstable_mesh</a></td></tr>
<tr class="memdesc:ac92d2c3e8ade2a17ee2edb8eb6747008"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines if an error is thrown in the case then mesh smoothening was not successful. <br /></td></tr>
<tr class="separator:ac92d2c3e8ade2a17ee2edb8eb6747008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cd324c8d4c3009af0376b08a2a348e3"><td class="memItemLeft" align="right" valign="top"><a id="a3cd324c8d4c3009af0376b08a2a348e3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_export_reference_design.xhtml#a3cd324c8d4c3009af0376b08a2a348e3">use_distancefield</a></td></tr>
<tr class="memdesc:a3cd324c8d4c3009af0376b08a2a348e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the method for applying geometric variations if false: Use a normal vector on the boundary. if true: Use an iterative distance field strategy <br /></td></tr>
<tr class="separator:a3cd324c8d4c3009af0376b08a2a348e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>defines information on imported data and files given a reference design This class contains settings for an example design directory (the base_path). These settings include file formats, data items to be imported etc. </p>
<dl class="section note"><dt>Note</dt><dd>The currently stored data must be kept "functional" at all times. If you add a new file using the appropriate function, this will take care for you. If you change the data items from outside (GUI etc.) you must use the function <a class="el" href="class_export_reference_design.xhtml#a47c34ec1e578c2ce27cf1c5fcd0d1704" title="checks if the settings are valid and produces an error. ">check()</a> in order to approve the changes. If the changes are erroneous, the next addFIle-method call may lead to undefined behaviour. </dd></dl>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a7aee363b2bbb561ef1d20b2aaaaf61d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aee363b2bbb561ef1d20b2aaaaf61d9">&#9670;&nbsp;</a></span>ExportReferenceDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_export_reference_design.xhtml">ExportReferenceDesign</a> </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>the_base_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">the_base_path</td><td>defines the base path </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afd5c422a5396fc7f6fc9d67639056f22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd5c422a5396fc7f6fc9d67639056f22">&#9670;&nbsp;</a></span>addFile_Abaqus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_Abaqus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in Abaqus format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a11351628e3f4ed33a44e62f7647d4cdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11351628e3f4ed33a44e62f7647d4cdf">&#9670;&nbsp;</a></span>addFile_ANSYS_MechanicalDat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_ANSYS_MechanicalDat </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in ANSYS format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000004">Deprecated:</a></b></dt><dd></dd></dl>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a25975bef494f5516da7d134fd896fcdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25975bef494f5516da7d134fd896fcdc">&#9670;&nbsp;</a></span>addFile_CSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_CSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000007">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains all available scalar quantities.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a69cfbc9c84840bb99ee4c2406e8982ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69cfbc9c84840bb99ee4c2406e8982ca">&#9670;&nbsp;</a></span>addFile_ElementDataCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_ElementDataCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000008">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected element quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac43d8e7376c34c5ba30b896c528faf2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac43d8e7376c34c5ba30b896c528faf2b">&#9670;&nbsp;</a></span>addFile_ExternalDataCSV_Disp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_ExternalDataCSV_Disp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000013">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa943a7bdfa46cb4dc1dd8556c1c4a91d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa943a7bdfa46cb4dc1dd8556c1c4a91d">&#9670;&nbsp;</a></span>addFile_ExternalDataCSV_ElementData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_ExternalDataCSV_ElementData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000012">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6efea91fe71c8a65f3e2e8c1f70d2a75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6efea91fe71c8a65f3e2e8c1f70d2a75">&#9670;&nbsp;</a></span>addFile_ExternalDataCSV_NodeData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_ExternalDataCSV_NodeData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000011">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1275367105e2c8901916e138e7cfca39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1275367105e2c8901916e138e7cfca39">&#9670;&nbsp;</a></span>addFile_Image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_Image </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to an image file. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000006">Deprecated:</a></b></dt><dd></dd></dl>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a76135b512886e51aab814744632e64a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76135b512886e51aab814744632e64a8">&#9670;&nbsp;</a></span>addFile_LSDynaK()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_LSDynaK </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in LS-DYNA K format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be modified. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8ddc7416b07c7f2d1499680759384173"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ddc7416b07c7f2d1499680759384173">&#9670;&nbsp;</a></span>addFile_Nastran()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_Nastran </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in Nastran format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a897d79d7afae207e2a37efe46cf6e099"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a897d79d7afae207e2a37efe46cf6e099">&#9670;&nbsp;</a></span>addFile_NodeDataCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_NodeDataCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000009">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab673c9293b5fc4fc3c8c2cbd5e663adb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab673c9293b5fc4fc3c8c2cbd5e663adb">&#9670;&nbsp;</a></span>addFile_PERMAS()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_PERMAS </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in PERMAS format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae0dfe689645de46b022fae82426a4367"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0dfe689645de46b022fae82426a4367">&#9670;&nbsp;</a></span>addFile_SingleSignalCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_SingleSignalCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000010">Deprecated:</a></b></dt><dd></dd></dl>
<p>A CSV file will always be rewritten. It further contains the selected node quantity. The first column will not denote the node ID, but the respective x-coordinate</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad5c4c8b3993209b6356f59233da1da48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5c4c8b3993209b6356f59233da1da48">&#9670;&nbsp;</a></span>addFile_STL()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addFile_STL </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in binary STL format. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000005">Deprecated:</a></b></dt><dd></dd></dl>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a04a1fdd72ada5fdc452514a9c4bf50c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04a1fdd72ada5fdc452514a9c4bf50c4">&#9670;&nbsp;</a></span>addNewFile_ANSYS_MechanicalDat()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_ANSYS_MechanicalDat </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in ANSYS format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a83918abf42f3da6e1f661d0c934db8e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83918abf42f3da6e1f661d0c934db8e6">&#9670;&nbsp;</a></span>addNewFile_CSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_CSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<p>A CSV file will always be rewritten. It further contains all available scalar quantities.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3e64cb5601dd92fdcb5f6c7b4aa47821"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e64cb5601dd92fdcb5f6c7b4aa47821">&#9670;&nbsp;</a></span>addNewFile_ElementDataCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_ElementDataCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected element quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2ee22474f946ef03aaf09c6cd8bc2027"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee22474f946ef03aaf09c6cd8bc2027">&#9670;&nbsp;</a></span>addNewFile_ExternalDataCSV_Disp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_ExternalDataCSV_Disp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a76b991ea6ce71214e9cb6405c9abb549"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76b991ea6ce71214e9cb6405c9abb549">&#9670;&nbsp;</a></span>addNewFile_ExternalDataCSV_ElementData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_ExternalDataCSV_ElementData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae7616f698ea9bc6e01cc3b7aa80a13f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7616f698ea9bc6e01cc3b7aa80a13f0">&#9670;&nbsp;</a></span>addNewFile_ExternalDataCSV_NodeData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_ExternalDataCSV_NodeData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in External data CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afefd9c2283ba25c163db5a3e425cdada"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afefd9c2283ba25c163db5a3e425cdada">&#9670;&nbsp;</a></span>addNewFile_Image()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_Image </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to an image file. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5a5650a453ef5dc6234b03637f34fb81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a5650a453ef5dc6234b03637f34fb81">&#9670;&nbsp;</a></span>addNewFile_NodeDataCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_NodeDataCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected node quantity.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a465219c4c28557c300af22483ee56af2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a465219c4c28557c300af22483ee56af2">&#9670;&nbsp;</a></span>addNewFile_SingleSignalCSV()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_SingleSignalCSV </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in CSV format. </p>
<p>A CSV file will always be rewritten. It further contains the selected node quantity. The first column will not denote the node ID, but the respective x-coordinate</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be WRITTEN. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a62e8f818707d85c2631acbdc8058180e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62e8f818707d85c2631acbdc8058180e">&#9670;&nbsp;</a></span>addNewFile_STL()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">addNewFile_STL </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Exports information to a file in binary STL format. </p>
<p>Multiple data items per file are supported.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>The current database where the items are to be extracted from </td></tr>
    <tr><td class="paramname">filename</td><td>The file to be MODIFIED. The file path will be treated as relative to the base_path or if this is not existing, take it as absolute path respective relative to the working directory </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a47c34ec1e578c2ce27cf1c5fcd0d1704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c34ec1e578c2ce27cf1c5fcd0d1704">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">check </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks if the settings are valid and produces an error. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the data base </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if an error was detected </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a42cfe17a0305737404dfbc962360d076"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42cfe17a0305737404dfbc962360d076">&#9670;&nbsp;</a></span>checkFiles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">checkFiles </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>abs_design_dir_path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>quiet</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks if all required files to be exported to exist in the given design directory </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">abs_design_dir_path</td><td>the path of the design directory to be checked </td></tr>
    <tr><td class="paramname">quiet</td><td>if true, then no log message is printed </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if at least one required object is missing for exporting the design for the given sample number. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ade36e04546c5bec4f28ca492d21875f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade36e04546c5bec4f28ca492d21875f9">&#9670;&nbsp;</a></span>checkObjects()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">checkObjects </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sample</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>quiet</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks if all required objects for the given design number are existing in the database </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the data base </td></tr>
    <tr><td class="paramname">sample</td><td>the sample number used to generate the sample design idents </td></tr>
    <tr><td class="paramname">quiet</td><td>if true, then no log message is printed </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if at least one required object is missing for exporting the design for the given sample number. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a80b1eab921bf9c19f1b13b17b5af357b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80b1eab921bf9c19f1b13b17b5af357b">&#9670;&nbsp;</a></span>generateScriptOfSettingsDefinition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string generateScriptOfSettingsDefinition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>variable_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>other_base_path</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>generates a script string (Lua) that is used to build up the current settings object. </p>
<dl class="section return"><dt>Returns</dt><dd>the script code, ends with newline. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">variable_ident</td><td>the ident of the Lua variable that contains the settings object </td></tr>
    <tr><td class="paramname">other_base_path</td><td>if this string is empty, then this string is used as the base path of the exported definition. This must be a Lua variable, so either a Lua variable name or a string containing the path </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a41ace7f379338ca7d3779b204c3776b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ace7f379338ca7d3779b204c3776b7">&#9670;&nbsp;</a></span>getFiles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; getFiles </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles the complete list of files being known to this class This is a compact view onto the contained data, since multiple items may be imported from a single file. </p>
<dl class="section return"><dt>Returns</dt><dd>a list of filenames. The file names are relative to the base path. </dd></dl>

</div>
</div>
<a id="a50f67f9f53f6797a9a1c9439d849fbc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50f67f9f53f6797a9a1c9439d849fbc5">&#9670;&nbsp;</a></span>getFilesToExport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; getFilesToExport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles a list of files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive. </p>
<dl class="section return"><dt>Returns</dt><dd>a list of filenames. The file names are relative to the base path. </dd></dl>

</div>
</div>
<a id="a4881b245e33d0ed0edc04e74b94df300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4881b245e33d0ed0edc04e74b94df300">&#9670;&nbsp;</a></span>getItem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_export_item_info.xhtml">ExportItemInfo</a> getItem </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_export_item_info.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">ExportItemInfo::Type</a>&#160;</td>
          <td class="paramname"><em>data_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>gets the respective item if existing </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the filename relative to the base directory </td></tr>
    <tr><td class="paramname">data_type</td><td>the data type, e.g. "coordinate along x direction" </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a writable reference to the item. Throws an exception if not existing </dd></dl>

</div>
</div>
<a id="a775316552fabc83e39b74beddef81334"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a775316552fabc83e39b74beddef81334">&#9670;&nbsp;</a></span>getItemIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number getItemIndex </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_export_item_info.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">ExportItemInfo::Type</a>&#160;</td>
          <td class="paramname"><em>data_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>gets the index of the respective item if existing </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the filename relative to the base directory </td></tr>
    <tr><td class="paramname">data_type</td><td>the data type, e.g. "coordinate along x direction" </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>index to the item in the vector items. Throws an exception if not existing </dd></dl>

</div>
</div>
<a id="adb9208885a8e74195f267a2df949dca9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb9208885a8e74195f267a2df949dca9">&#9670;&nbsp;</a></span>getItemsForFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;number&gt; getItemsForFile </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles a list of items which are to be exported to a specific file </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the file name for which all items to be imported are searched. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a list of integer indices in ascending order. Each index refers to an Item in the vector items. If no data is to be imported from the requested file, an empty list is returned. </dd></dl>

</div>
</div>
<a id="a2522c988ad2eaf346ae7af8cd47ff11b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2522c988ad2eaf346ae7af8cd47ff11b">&#9670;&nbsp;</a></span>getModifiedFiles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; getModifiedFiles </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles the complete list of files being known to this class and that are NOT to be created This is a compact view onto the contained data, since multiple items may be imported from a single file. </p>
<dl class="section return"><dt>Returns</dt><dd>a list of filenames. The file names are relative to the base path. </dd></dl>

</div>
</div>
<a id="af01172accc310310cc51e31caf936730"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af01172accc310310cc51e31caf936730">&#9670;&nbsp;</a></span>getModifiedFilesToExport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; getModifiedFilesToExport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles a list of modified files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive. The filenames in this list contain only those files that are not "newly created" but modified. </p>
<dl class="section return"><dt>Returns</dt><dd>a list of filenames. The file names are relative to the base path. </dd></dl>

</div>
</div>
<a id="a1488cf7e390e0191e91de8e87206b87f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1488cf7e390e0191e91de8e87206b87f">&#9670;&nbsp;</a></span>getNewFilesToExport()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; getNewFilesToExport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assembles a list of new files which are to be exported (only the files for which one selected a quantity are exported here) This is a compact view onto the contained data, since multiple items may be imported from a single file and some files may be inactive. The filenames in this list contain only those files that are not "newly created" but modified. </p>
<dl class="section return"><dt>Returns</dt><dd>a list of filenames. The file names are relative to the base path. </dd></dl>

</div>
</div>
<a id="a19fe83020c2cdfe68f4215af8cdf48cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19fe83020c2cdfe68f4215af8cdf48cb">&#9670;&nbsp;</a></span>modifyDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">modifyDesign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sample_number</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_path</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>do_not_check_settings</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>modifies a design on disk </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the data base where all data is to be added </td></tr>
    <tr><td class="paramname">sample_number</td><td>the design number which is used to define the design ident string for all data in the database </td></tr>
    <tr><td class="paramname">design_path</td><td>if this is empty, one takes the base_path. Else one takes this string instead of this-&gt;base_path </td></tr>
    <tr><td class="paramname">do_not_check_settings</td><td>if this is true, then the contents of design_info will not be checked on validity before starting the import. This is helpful when importing multiple designs at once. If this settings object is configured to check on duplicates in the global database, then a duplicate would be found after import of the first design always leading to an error! In this case, set this parameter to true. If an error appears during import, an exception is thrown. Nevertheless, the method tries to import as much data as possible before quit. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adc5b63f5d31ab0a4abf354b4934514f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc5b63f5d31ab0a4abf354b4934514f7">&#9670;&nbsp;</a></span>removeFileFromList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">removeFileFromList </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>removes all import data from item list which is associated with the sepcified file </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the file name of the file which is to be removed from import item list (exact match!). </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exceptions</td><td>if the file does not exist in the list. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa2ba2b1794ac9bad08da653ea8c99eda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2ba2b1794ac9bad08da653ea8c99eda">&#9670;&nbsp;</a></span>setBasePath()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setBasePath </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets a new base path. This includes changing the relative path definition of the already parsed files. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">path</td><td>the base path </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad838ca5bc438676ab92db57b56ae56c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad838ca5bc438676ab92db57b56ae56c0">&#9670;&nbsp;</a></span>setExportDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setExportDesign </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_ident</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets if the quantity ident of an item </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>the index in items vector </td></tr>
    <tr><td class="paramname">design_ident</td><td>the design ident to be exported (if empty: use the current design number) / </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4a053c513b14789817eca6aa636a5813"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a053c513b14789817eca6aa636a5813">&#9670;&nbsp;</a></span>setExportQuantity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setExportQuantity </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity_ident</em> = <code>&quot;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets if the quantity ident of an item </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>the index in items vector </td></tr>
    <tr><td class="paramname">quantity_ident</td><td>the quantity ident to be exported (if empty: do not export this item) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad1067f1ab8cf433485b3a049f13d1559"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1067f1ab8cf433485b3a049f13d1559">&#9670;&nbsp;</a></span>setExportSource()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setExportSource </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_export_item_info.xhtml#ac409d3942abd5b826fb1508efc119564">ExportItemInfo::DataSource</a>&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets if the source of an item </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>the index in items vector </td></tr>
    <tr><td class="paramname">source</td><td>defines where the data object is taken from / </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
