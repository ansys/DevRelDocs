<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): MOPContainer Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_m_o_p_container.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_m_o_p_container-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MOPContainer Class Reference<div class="ingroups"><a class="el" href="group__data.xhtml">Data</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>a container storing all Field data models  
 <a href="class_m_o_p_container.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a637a414e738bbb78f13a924b53c80a20"><td class="memItemLeft" align="right" valign="top"><a id="a637a414e738bbb78f13a924b53c80a20"></a>
typedef std::vector&lt; <a class="el" href="class_m_o_p.xhtml">MOP</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a637a414e738bbb78f13a924b53c80a20">TMOPContainer</a></td></tr>
<tr class="memdesc:a637a414e738bbb78f13a924b53c80a20"><td class="mdescLeft">&#160;</td><td class="mdescRight">a container type for FMOPs <br /></td></tr>
<tr class="separator:a637a414e738bbb78f13a924b53c80a20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae7760bd8a3d244dc92dfafd9148fa46b"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#ae7760bd8a3d244dc92dfafd9148fa46b">elementQuantities</a> ()</td></tr>
<tr class="memdesc:ae7760bd8a3d244dc92dfafd9148fa46b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get ELEMENT_DATA quantities with an existing Field-MOP.  <a href="#ae7760bd8a3d244dc92dfafd9148fa46b">More...</a><br /></td></tr>
<tr class="separator:ae7760bd8a3d244dc92dfafd9148fa46b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ba4c3b5e20898cf6851b3bdd9ed6398"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a3ba4c3b5e20898cf6851b3bdd9ed6398">eraseElementModel</a> (string quantity, <a class="el" href="class_structure.xhtml">Structure</a> *<a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a3ba4c3b5e20898cf6851b3bdd9ed6398"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the respective random field model (group)  <a href="#a3ba4c3b5e20898cf6851b3bdd9ed6398">More...</a><br /></td></tr>
<tr class="separator:a3ba4c3b5e20898cf6851b3bdd9ed6398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec6e90bf0b133f3d5abe7c74d8872df"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a5ec6e90bf0b133f3d5abe7c74d8872df">eraseNodeModel</a> (string quantity, <a class="el" href="class_structure.xhtml">Structure</a> *<a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a5ec6e90bf0b133f3d5abe7c74d8872df"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the respective random field model (group)  <a href="#a5ec6e90bf0b133f3d5abe7c74d8872df">More...</a><br /></td></tr>
<tr class="separator:a5ec6e90bf0b133f3d5abe7c74d8872df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5afabc57c34ea9e5260d5cfde030cf2e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a5afabc57c34ea9e5260d5cfde030cf2e">eraseScalarModel</a> (string quantity, <a class="el" href="class_structure.xhtml">Structure</a> *<a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a5afabc57c34ea9e5260d5cfde030cf2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes the respective random field model (group)  <a href="#a5afabc57c34ea9e5260d5cfde030cf2e">More...</a><br /></td></tr>
<tr class="separator:a5afabc57c34ea9e5260d5cfde030cf2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30d7bfb182d9e2366e213379031b7d5d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a30d7bfb182d9e2366e213379031b7d5d">exists</a> (string group)</td></tr>
<tr class="separator:a30d7bfb182d9e2366e213379031b7d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80f107d61e2686d7fa9d0d026069989d"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_m_o_p.xhtml">MOP</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a80f107d61e2686d7fa9d0d026069989d">findMOP</a> (string group)</td></tr>
<tr class="separator:a80f107d61e2686d7fa9d0d026069989d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9480af4f2cbcb32d3cea5f290f92e46"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_m_o_p.xhtml">MOP</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#af9480af4f2cbcb32d3cea5f290f92e46">findMOP</a> (string quantity, <a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> type)</td></tr>
<tr class="separator:af9480af4f2cbcb32d3cea5f290f92e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae42d63759cf958ecb05c80544f558ab6"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_m_o_p.xhtml">MOP</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#ae42d63759cf958ecb05c80544f558ab6">findMOPRef</a> (string group)</td></tr>
<tr class="separator:ae42d63759cf958ecb05c80544f558ab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8e34f3853ebaf73cf7df501c5953206"><td class="memItemLeft" align="right" valign="top">::<a class="el" href="class_m_o_p.xhtml">MOP</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#aa8e34f3853ebaf73cf7df501c5953206">findMOPRef</a> (string quantity, <a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> type)</td></tr>
<tr class="separator:aa8e34f3853ebaf73cf7df501c5953206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c8a0b842f76ae90d6a5b9de07a64aa"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#ad7c8a0b842f76ae90d6a5b9de07a64aa">nodeQuantities</a> ()</td></tr>
<tr class="memdesc:ad7c8a0b842f76ae90d6a5b9de07a64aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get NODE_DATA quantities with an existing Field-MOP.  <a href="#ad7c8a0b842f76ae90d6a5b9de07a64aa">More...</a><br /></td></tr>
<tr class="separator:ad7c8a0b842f76ae90d6a5b9de07a64aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eceff961c37f0cbad1aebc40dfbcedb"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a8eceff961c37f0cbad1aebc40dfbcedb">scalarQuantities</a> ()</td></tr>
<tr class="memdesc:a8eceff961c37f0cbad1aebc40dfbcedb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get SCALAR_DATA quantities with an existing <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a>.  <a href="#a8eceff961c37f0cbad1aebc40dfbcedb">More...</a><br /></td></tr>
<tr class="separator:a8eceff961c37f0cbad1aebc40dfbcedb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b62e4b6dbc152d68e1f5d07c484bfea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_m_o_p_container.xhtml#a4b62e4b6dbc152d68e1f5d07c484bfea">writeInternalMOP_OMDBFile</a> (<a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> type, string quantity, const ::string path, bool replace_files=true)</td></tr>
<tr class="memdesc:a4b62e4b6dbc152d68e1f5d07c484bfea"><td class="mdescLeft">&#160;</td><td class="mdescRight">writes the OMDB file of the internal <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> of an FMOP to a file  <a href="#a4b62e4b6dbc152d68e1f5d07c484bfea">More...</a><br /></td></tr>
<tr class="separator:a4b62e4b6dbc152d68e1f5d07c484bfea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>a container storing all Field data models </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ae7760bd8a3d244dc92dfafd9148fa46b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7760bd8a3d244dc92dfafd9148fa46b">&#9670;&nbsp;</a></span>elementQuantities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; elementQuantities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get ELEMENT_DATA quantities with an existing Field-MOP. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector of strings containing all ELEMENT_DATA quantities with an existing Field-MOP </dd></dl>

</div>
</div>
<a id="a3ba4c3b5e20898cf6851b3bdd9ed6398"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ba4c3b5e20898cf6851b3bdd9ed6398">&#9670;&nbsp;</a></span>eraseElementModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseElementModel </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a> *&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes the respective random field model (group) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quanity</td><td>the field quantity of type ELEMENT_DATA for which the field model is to be deleted </td></tr>
    <tr><td class="paramname">database</td><td>if this pointer is not zero, it is used to invoke listeners informing them that this container was changed </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::Exception</td><td>in case the quantity has no random field model. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5ec6e90bf0b133f3d5abe7c74d8872df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ec6e90bf0b133f3d5abe7c74d8872df">&#9670;&nbsp;</a></span>eraseNodeModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseNodeModel </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a> *&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes the respective random field model (group) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quanity</td><td>the field quantity of type NODE_DATA for which the field model is to be deleted </td></tr>
    <tr><td class="paramname">database</td><td>if this pointer is not zero, it is used to invoke listeners informing them that this container was changed </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::Exception</td><td>in case the quantity has no random field model. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5afabc57c34ea9e5260d5cfde030cf2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5afabc57c34ea9e5260d5cfde030cf2e">&#9670;&nbsp;</a></span>eraseScalarModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseScalarModel </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a> *&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes the respective random field model (group) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quanity</td><td>the field quantity of type SCALAR_DATA for which the field model is to be deleted </td></tr>
    <tr><td class="paramname">database</td><td>if this pointer is not zero, it is used to invoke listeners informing them that this container was changed </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::Exception</td><td>in case the quantity has no random field model. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a30d7bfb182d9e2366e213379031b7d5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30d7bfb182d9e2366e213379031b7d5d">&#9670;&nbsp;</a></span>exists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool exists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the given group ident is already contained </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">group</td><td>the group ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a80f107d61e2686d7fa9d0d026069989d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80f107d61e2686d7fa9d0d026069989d">&#9670;&nbsp;</a></span>findMOP() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_m_o_p.xhtml">MOP</a> findMOP </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the group with given ident </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">group</td><td>the group ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af9480af4f2cbcb32d3cea5f290f92e46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9480af4f2cbcb32d3cea5f290f92e46">&#9670;&nbsp;</a></span>findMOP() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_m_o_p.xhtml">MOP</a> findMOP </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the group to which of the given quantity belongs </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quantity</td><td>the quantity ident </td></tr>
    <tr><td class="paramname">type</td><td>the data type of the quantity </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae42d63759cf958ecb05c80544f558ab6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae42d63759cf958ecb05c80544f558ab6">&#9670;&nbsp;</a></span>findMOPRef() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_m_o_p.xhtml">MOP</a> findMOPRef </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>group</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a non- reference to the group with given ident </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">group</td><td>the group ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa8e34f3853ebaf73cf7df501c5953206"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa8e34f3853ebaf73cf7df501c5953206">&#9670;&nbsp;</a></span>findMOPRef() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">::<a class="el" href="class_m_o_p.xhtml">MOP</a> findMOPRef </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a non- reference to the group to which of the given quantity belongs </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quantity</td><td>the quantity ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad7c8a0b842f76ae90d6a5b9de07a64aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7c8a0b842f76ae90d6a5b9de07a64aa">&#9670;&nbsp;</a></span>nodeQuantities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; nodeQuantities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get NODE_DATA quantities with an existing Field-MOP. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector of strings containing all NODE_DATA quantities with an existing Field-MOP </dd></dl>

</div>
</div>
<a id="a8eceff961c37f0cbad1aebc40dfbcedb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eceff961c37f0cbad1aebc40dfbcedb">&#9670;&nbsp;</a></span>scalarQuantities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; scalarQuantities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get SCALAR_DATA quantities with an existing <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>a vector of strings containing all SCALAR_DATA quantities with an existing <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> </dd></dl>

</div>
</div>
<a id="a4b62e4b6dbc152d68e1f5d07c484bfea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b62e4b6dbc152d68e1f5d07c484bfea">&#9670;&nbsp;</a></span>writeInternalMOP_OMDBFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">writeInternalMOP_OMDBFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const ::string&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>replace_files</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>writes the OMDB file of the internal <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> of an FMOP to a file </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>the data type , e.g. NODE_DATA </td></tr>
    <tr><td class="paramname">quantity</td><td>the quantiytr ident of the field quantity </td></tr>
    <tr><td class="paramname">path</td><td>the output file name </td></tr>
    <tr><td class="paramname">replace_files</td><td>if false, an error is thrown if the file already exists </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
