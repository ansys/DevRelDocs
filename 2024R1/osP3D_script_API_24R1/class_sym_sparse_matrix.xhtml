<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): SymSparseMatrix Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_sym_sparse_matrix.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_sym_sparse_matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SymSparseMatrix Class Reference<div class="ingroups"><a class="el" href="group__tmath.xhtml">tmath</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Symmetric sparse matrix class with selfadjoint storage.  
 <a href="class_sym_sparse_matrix.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1b5357921e32b1f6d262754172689b02"><td class="memItemLeft" align="right" valign="top"><a id="a1b5357921e32b1f6d262754172689b02"></a>
typedef Eigen::SparseMatrix&lt; <a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a1b5357921e32b1f6d262754172689b02">Base</a></td></tr>
<tr class="memdesc:a1b5357921e32b1f6d262754172689b02"><td class="mdescLeft">&#160;</td><td class="mdescRight">the underlying Eigen sparse matrix type <br /></td></tr>
<tr class="separator:a1b5357921e32b1f6d262754172689b02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac260c934c749111f08dbbd4f34fa6b31"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ac260c934c749111f08dbbd4f34fa6b31">some_enums</a> { <a class="el" href="class_sym_sparse_matrix.xhtml#ac260c934c749111f08dbbd4f34fa6b31aa3a6b8ca43e2cc4066bcd713dce45946">EIGENFLAGS</a> = Eigen::ColMajor|Eigen::SelfAdjoint|Eigen::Lower, 
<a class="el" href="class_sym_sparse_matrix.xhtml#ac260c934c749111f08dbbd4f34fa6b31a8951c38e5eb664af9398881f9a4929c7">EIGENSYM</a> = Eigen::Lower
 }</td></tr>
<tr class="memdesc:ac260c934c749111f08dbbd4f34fa6b31"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines Eigen flags to be used for modfying Eigen's algebra operators  <a href="class_sym_sparse_matrix.xhtml#ac260c934c749111f08dbbd4f34fa6b31">More...</a><br /></td></tr>
<tr class="separator:ac260c934c749111f08dbbd4f34fa6b31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353dbc81e718cd4640b7c719b512892f"><td class="memItemLeft" align="right" valign="top"><a id="a353dbc81e718cd4640b7c719b512892f"></a>
typedef Base::Index&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a353dbc81e718cd4640b7c719b512892f">TEigenIndex</a></td></tr>
<tr class="memdesc:a353dbc81e718cd4640b7c719b512892f"><td class="mdescLeft">&#160;</td><td class="mdescRight">index type for Eigen matrices <br /></td></tr>
<tr class="separator:a353dbc81e718cd4640b7c719b512892f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad33f729eda6e45412aac71cee702012f"><td class="memItemLeft" align="right" valign="top"><a id="ad33f729eda6e45412aac71cee702012f"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a></td></tr>
<tr class="memdesc:ad33f729eda6e45412aac71cee702012f"><td class="mdescLeft">&#160;</td><td class="mdescRight">the data type of the coefficients (real number) <br /></td></tr>
<tr class="separator:ad33f729eda6e45412aac71cee702012f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab423d248b103558b5903c702c13335ae"><td class="memItemLeft" align="right" valign="top"><a id="ab423d248b103558b5903c702c13335ae"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a></td></tr>
<tr class="memdesc:ab423d248b103558b5903c702c13335ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">an unsigned index type <br /></td></tr>
<tr class="separator:ab423d248b103558b5903c702c13335ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a84632b22bf5fafc23544ac244ed7cf4c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a84632b22bf5fafc23544ac244ed7cf4c">__neg__</a> () const</td></tr>
<tr class="separator:a84632b22bf5fafc23544ac244ed7cf4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb0255d0035cd7783ce87f41a3cae5cc"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#adb0255d0035cd7783ce87f41a3cae5cc">__str__</a> ()</td></tr>
<tr class="memdesc:adb0255d0035cd7783ce87f41a3cae5cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">transforms this objects into a string, required by SWIG  <a href="#adb0255d0035cd7783ce87f41a3cae5cc">More...</a><br /></td></tr>
<tr class="separator:adb0255d0035cd7783ce87f41a3cae5cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18041cdb9f56d534e804a8663a42f96f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a18041cdb9f56d534e804a8663a42f96f">Assign</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> other, bool keep_data=true)</td></tr>
<tr class="memdesc:a18041cdb9f56d534e804a8663a42f96f"><td class="mdescLeft">&#160;</td><td class="mdescRight">assigns a new matrix to this object  <a href="#a18041cdb9f56d534e804a8663a42f96f">More...</a><br /></td></tr>
<tr class="separator:a18041cdb9f56d534e804a8663a42f96f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ecd74799c1d759b4b637bde5924e0f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#a1b5357921e32b1f6d262754172689b02">Base</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a3ecd74799c1d759b4b637bde5924e0f6">cast</a> () const</td></tr>
<tr class="separator:a3ecd74799c1d759b4b637bde5924e0f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ec082b93696e449a0eb430f1f00196e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a2ec082b93696e449a0eb430f1f00196e">Cols</a> ()</td></tr>
<tr class="separator:a2ec082b93696e449a0eb430f1f00196e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c5c5e3890bd6be32b732fa324ca0954"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a9c5c5e3890bd6be32b732fa324ca0954">InnerSize</a> ()</td></tr>
<tr class="separator:a9c5c5e3890bd6be32b732fa324ca0954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83d198cac5c9247233b7024b3f2742a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ac83d198cac5c9247233b7024b3f2742a">NonZeros</a> ()</td></tr>
<tr class="separator:ac83d198cac5c9247233b7024b3f2742a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20eea8e7bdf72e549208fcb4ad002f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ac20eea8e7bdf72e549208fcb4ad002f9">operator*</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> x) const</td></tr>
<tr class="separator:ac20eea8e7bdf72e549208fcb4ad002f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab20c65b6af96b99b1154078d249d8e38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ab20c65b6af96b99b1154078d249d8e38">operator*</a> (<a class="el" href="class_matrix_block.xhtml">MatrixBlock</a> x) const</td></tr>
<tr class="separator:ab20c65b6af96b99b1154078d249d8e38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace104707c6359044a60cfbe690450f0a"><td class="memItemLeft" align="right" valign="top">sparse::SparseMatrix&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ace104707c6359044a60cfbe690450f0a">operator*</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> x) const</td></tr>
<tr class="separator:ace104707c6359044a60cfbe690450f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28f7f66cb52fb2c2f35c4a7bd7ed62bb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a28f7f66cb52fb2c2f35c4a7bd7ed62bb">operator*</a> (number x) const</td></tr>
<tr class="separator:a28f7f66cb52fb2c2f35c4a7bd7ed62bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0c3dd32cb15da921dfec8981f7f4cb4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ac0c3dd32cb15da921dfec8981f7f4cb4">operator+</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> x) const</td></tr>
<tr class="separator:ac0c3dd32cb15da921dfec8981f7f4cb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b2b4995ec1686198c90c538d0582d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a34b2b4995ec1686198c90c538d0582d0">operator-</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> x) const</td></tr>
<tr class="separator:a34b2b4995ec1686198c90c538d0582d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf4f97c6a5b85f197dafa600d32fc0dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#aaf4f97c6a5b85f197dafa600d32fc0dd">operator/</a> (number x) const</td></tr>
<tr class="separator:aaf4f97c6a5b85f197dafa600d32fc0dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8a32a382f45637a59b805a83a1399e0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#ac8a32a382f45637a59b805a83a1399e0">OuterSize</a> ()</td></tr>
<tr class="separator:ac8a32a382f45637a59b805a83a1399e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a84471f08e9842cce4e162251b007fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a6a84471f08e9842cce4e162251b007fd">Print</a> (string format=&quot;%g &quot;, TUnsignedIndex rows=20, <a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> cols=20) const</td></tr>
<tr class="separator:a6a84471f08e9842cce4e162251b007fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a611c0976718f1af2c5a0ee6a0f5e34a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a611c0976718f1af2c5a0ee6a0f5e34a0">Prune</a> (<a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> reference)</td></tr>
<tr class="memdesc:a611c0976718f1af2c5a0ee6a0f5e34a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets all elements with absolute value &lt;= reference to zero and removes from storage  <a href="#a611c0976718f1af2c5a0ee6a0f5e34a0">More...</a><br /></td></tr>
<tr class="separator:a611c0976718f1af2c5a0ee6a0f5e34a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95e65c4fd2e14633c28dc24b75811ef7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a95e65c4fd2e14633c28dc24b75811ef7">Prune</a> (<a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> reference, <a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> epsilon)</td></tr>
<tr class="memdesc:a95e65c4fd2e14633c28dc24b75811ef7"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets all elements with absolute value &lt;= reference*epsilon to zero and removes from storage  <a href="#a95e65c4fd2e14633c28dc24b75811ef7">More...</a><br /></td></tr>
<tr class="separator:a95e65c4fd2e14633c28dc24b75811ef7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c3320817fc198207404606c52e47fa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a3c3320817fc198207404606c52e47fa3">Rows</a> ()</td></tr>
<tr class="separator:a3c3320817fc198207404606c52e47fa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82fdaa2aa8c930c663007796e9aaa03f"><td class="memItemLeft" align="right" valign="top"><a id="a82fdaa2aa8c930c663007796e9aaa03f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a82fdaa2aa8c930c663007796e9aaa03f">SetZero</a> ()</td></tr>
<tr class="memdesc:a82fdaa2aa8c930c663007796e9aaa03f"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the object to zero (clears it) <br /></td></tr>
<tr class="separator:a82fdaa2aa8c930c663007796e9aaa03f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd25d9b25754a820a98a56f5de06f799"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#afd25d9b25754a820a98a56f5de06f799">Swap</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> other)</td></tr>
<tr class="memdesc:afd25d9b25754a820a98a56f5de06f799"><td class="mdescLeft">&#160;</td><td class="mdescRight">swaps the contents of this object  <a href="#afd25d9b25754a820a98a56f5de06f799">More...</a><br /></td></tr>
<tr class="separator:afd25d9b25754a820a98a56f5de06f799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15b046fc5367041a7f1d20a651404efe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a15b046fc5367041a7f1d20a651404efe">SymSparseMatrix</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> ar, bool keep_data=true)</td></tr>
<tr class="memdesc:a15b046fc5367041a7f1d20a651404efe"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#a15b046fc5367041a7f1d20a651404efe">More...</a><br /></td></tr>
<tr class="separator:a15b046fc5367041a7f1d20a651404efe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61ea47d9c774e26f36e076d140804575"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a61ea47d9c774e26f36e076d140804575">SymSparseMatrix</a> (<a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> ar)</td></tr>
<tr class="memdesc:a61ea47d9c774e26f36e076d140804575"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#a61ea47d9c774e26f36e076d140804575">More...</a><br /></td></tr>
<tr class="separator:a61ea47d9c774e26f36e076d140804575"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7130f007f96ca68ce125aceb84e7ecf2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#a7130f007f96ca68ce125aceb84e7ecf2">SymSparseMatrix</a> (sparse::SparseMatrix ar, bool keep_data=true)</td></tr>
<tr class="memdesc:a7130f007f96ca68ce125aceb84e7ecf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#a7130f007f96ca68ce125aceb84e7ecf2">More...</a><br /></td></tr>
<tr class="separator:a7130f007f96ca68ce125aceb84e7ecf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb5bc09a448327c9bf87f011d8715303"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_sym_sparse_matrix.xhtml#afb5bc09a448327c9bf87f011d8715303">Transpose</a> ()</td></tr>
<tr class="separator:afb5bc09a448327c9bf87f011d8715303"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Symmetric sparse matrix class with selfadjoint storage. </p>
<p>This class represents a symmetric sparse matrix. Only the lower triangular part and the diagonal are stored. The upper triangular part is "emulated". </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ac260c934c749111f08dbbd4f34fa6b31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac260c934c749111f08dbbd4f34fa6b31">&#9670;&nbsp;</a></span>some_enums</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_sym_sparse_matrix.xhtml#ac260c934c749111f08dbbd4f34fa6b31">some_enums</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines Eigen flags to be used for modfying Eigen's algebra operators </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ac260c934c749111f08dbbd4f34fa6b31aa3a6b8ca43e2cc4066bcd713dce45946"></a>EIGENFLAGS&#160;</td><td class="fielddoc"><p>column major, symmetric, lower triangular </p>
</td></tr>
<tr><td class="fieldname"><a id="ac260c934c749111f08dbbd4f34fa6b31a8951c38e5eb664af9398881f9a4929c7"></a>EIGENSYM&#160;</td><td class="fielddoc"><p>lower triangular </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a15b046fc5367041a7f1d20a651404efe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15b046fc5367041a7f1d20a651404efe">&#9670;&nbsp;</a></span>SymSparseMatrix() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>ar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>keep_data</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>destructor </p>
<p>copy constructor </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the source matrix </td></tr>
    <tr><td class="paramname">keep_data</td><td>if true, this is a copy constructor. If false, the source matrix will be empty afterwards </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a61ea47d9c774e26f36e076d140804575"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a61ea47d9c774e26f36e076d140804575">&#9670;&nbsp;</a></span>SymSparseMatrix() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>ar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the source matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7130f007f96ca68ce125aceb84e7ecf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7130f007f96ca68ce125aceb84e7ecf2">&#9670;&nbsp;</a></span>SymSparseMatrix() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> </td>
          <td>(</td>
          <td class="paramtype">sparse::SparseMatrix&#160;</td>
          <td class="paramname"><em>ar</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>keep_data</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ar</td><td>the source matrix </td></tr>
    <tr><td class="paramname">keep_data</td><td>if true, this is a copy constructor. If false, the source matrix will be empty afterwards </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a84632b22bf5fafc23544ac244ed7cf4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84632b22bf5fafc23544ac244ed7cf4c">&#9670;&nbsp;</a></span>__neg__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> __neg__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the unary minus (i.e. B = -A = -(*this)) of this matric </dd></dl>

</div>
</div>
<a id="adb0255d0035cd7783ce87f41a3cae5cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb0255d0035cd7783ce87f41a3cae5cc">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* __str__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>transforms this objects into a string, required by SWIG </p>
<dl class="section return"><dt>Returns</dt><dd>a 0-terminated string </dd></dl>

</div>
</div>
<a id="a18041cdb9f56d534e804a8663a42f96f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18041cdb9f56d534e804a8663a42f96f">&#9670;&nbsp;</a></span>Assign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>keep_data</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assigns a new matrix to this object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other sparse matrix </td></tr>
    <tr><td class="paramname">keep_data</td><td>if false, then the other matrix will be cleared </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3ecd74799c1d759b4b637bde5924e0f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ecd74799c1d759b4b637bde5924e0f6">&#9670;&nbsp;</a></span>cast()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#a1b5357921e32b1f6d262754172689b02">Base</a> cast </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to this object, casted to the base class </dd></dl>

</div>
</div>
<a id="a2ec082b93696e449a0eb430f1f00196e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ec082b93696e449a0eb430f1f00196e">&#9670;&nbsp;</a></span>Cols()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> Cols </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of columns </dd></dl>

</div>
</div>
<a id="a9c5c5e3890bd6be32b732fa324ca0954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c5c5e3890bd6be32b732fa324ca0954">&#9670;&nbsp;</a></span>InnerSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> InnerSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of inner elements </dd></dl>

</div>
</div>
<a id="ac83d198cac5c9247233b7024b3f2742a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac83d198cac5c9247233b7024b3f2742a">&#9670;&nbsp;</a></span>NonZeros()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> NonZeros </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of nonzeros </dd></dl>

</div>
</div>
<a id="ac20eea8e7bdf72e549208fcb4ad002f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac20eea8e7bdf72e549208fcb4ad002f9">&#9670;&nbsp;</a></span>operator*() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>overrides the sparsematrix-densematrix product.</p><dl class="section return"><dt>Returns</dt><dd>returns the product of *this and another dense matrix </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other dense matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab20c65b6af96b99b1154078d249d8e38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab20c65b6af96b99b1154078d249d8e38">&#9670;&nbsp;</a></span>operator*() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_block.xhtml">MatrixBlock</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the product of *this and another dense matrix </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other dense matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ace104707c6359044a60cfbe690450f0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace104707c6359044a60cfbe690450f0a">&#9670;&nbsp;</a></span>operator*() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sparse::SparseMatrix operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_sparse_matrix.xhtml" title="encapsulates sparse matrix classes and algorithms ">SparseMatrix</a> returns the product of *this and another symmetric sparse matrix </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other sparse matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a28f7f66cb52fb2c2f35c4a7bd7ed62bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28f7f66cb52fb2c2f35c4a7bd7ed62bb">&#9670;&nbsp;</a></span>operator*() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> operator* </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the product of *this and a scalar </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other scalar </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac0c3dd32cb15da921dfec8981f7f4cb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0c3dd32cb15da921dfec8981f7f4cb4">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the sum of two sparse matrices </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a34b2b4995ec1686198c90c538d0582d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34b2b4995ec1686198c90c538d0582d0">&#9670;&nbsp;</a></span>operator-()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> operator- </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the subtraction of two sparse matrices </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aaf4f97c6a5b85f197dafa600d32fc0dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf4f97c6a5b85f197dafa600d32fc0dd">&#9670;&nbsp;</a></span>operator/()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> operator/ </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the division of *this by a scalar </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the other sparse matrix </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac8a32a382f45637a59b805a83a1399e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8a32a382f45637a59b805a83a1399e0">&#9670;&nbsp;</a></span>OuterSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> OuterSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of sparse column vectors </dd></dl>

</div>
</div>
<a id="a6a84471f08e9842cce4e162251b007fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a84471f08e9842cce4e162251b007fd">&#9670;&nbsp;</a></span>Print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Print </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>format</em> = <code>&quot;%g&#160;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>rows</em> = <code>20</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a>&#160;</td>
          <td class="paramname"><em>cols</em> = <code>20</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>prints the sparse matrix up to the given rows and columns (internally a temporary dense matrix will be created) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">format</td><td>the format of a single element, see <em>printf</em> for details </td></tr>
    <tr><td class="paramname">rows</td><td>only print the first <em>rows</em> rows </td></tr>
    <tr><td class="paramname">cols</td><td>only print the first <em>cols</em> columns </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a611c0976718f1af2c5a0ee6a0f5e34a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a611c0976718f1af2c5a0ee6a0f5e34a0">&#9670;&nbsp;</a></span>Prune() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Prune </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>reference</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets all elements with absolute value &lt;= reference to zero and removes from storage </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reference</td><td>the reference value (tolerance) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a95e65c4fd2e14633c28dc24b75811ef7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95e65c4fd2e14633c28dc24b75811ef7">&#9670;&nbsp;</a></span>Prune() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Prune </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>reference</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>epsilon</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets all elements with absolute value &lt;= reference*epsilon to zero and removes from storage </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reference</td><td>the reference value </td></tr>
    <tr><td class="paramname">epsilon</td><td>epsilon </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3c3320817fc198207404606c52e47fa3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c3320817fc198207404606c52e47fa3">&#9670;&nbsp;</a></span>Rows()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml#ab423d248b103558b5903c702c13335ae">TUnsignedIndex</a> Rows </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of rows </dd></dl>

</div>
</div>
<a id="afd25d9b25754a820a98a56f5de06f799"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd25d9b25754a820a98a56f5de06f799">&#9670;&nbsp;</a></span>Swap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>swaps the contents of this object </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other object </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afb5bc09a448327c9bf87f011d8715303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb5bc09a448327c9bf87f011d8715303">&#9670;&nbsp;</a></span>Transpose()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_sym_sparse_matrix.xhtml">SymSparseMatrix</a> Transpose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the transpose </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
