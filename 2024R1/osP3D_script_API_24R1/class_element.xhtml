<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Element Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_element.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_element-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Element Class Reference<div class="ingroups"><a class="el" href="group__data.xhtml">Data</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Repesents the geometry of a finite element within a mesh.  
 <a href="class_element.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ace35addae6fb3e124dac4815a1f64fc8"><td class="memItemLeft" align="right" valign="top"><a id="ace35addae6fb3e124dac4815a1f64fc8"></a>
typedef size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#ace35addae6fb3e124dac4815a1f64fc8">count_type</a></td></tr>
<tr class="memdesc:ace35addae6fb3e124dac4815a1f64fc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">a large numbereger for index algebra <br /></td></tr>
<tr class="separator:ace35addae6fb3e124dac4815a1f64fc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c8f4002db20163549090ce34e235e2"><td class="memItemLeft" align="right" valign="top"><a id="ab5c8f4002db20163549090ce34e235e2"></a>
typedef std::vector&lt; Edge *&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#ab5c8f4002db20163549090ce34e235e2">edge_ptr_vector_type</a></td></tr>
<tr class="memdesc:ab5c8f4002db20163549090ce34e235e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">a <em>Edge</em> pointer vector <br /></td></tr>
<tr class="separator:ab5c8f4002db20163549090ce34e235e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ea0951108d01e59ea59cafe4f639e03"><td class="memItemLeft" align="right" valign="top"><a id="a6ea0951108d01e59ea59cafe4f639e03"></a>
typedef <a class="el" href="class_element.xhtml">Element</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a6ea0951108d01e59ea59cafe4f639e03">element_ptr_type</a></td></tr>
<tr class="memdesc:a6ea0951108d01e59ea59cafe4f639e03"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer to <em><a class="el" href="class_element.xhtml" title="Repesents the geometry of a finite element within a mesh. ">Element</a></em> <br /></td></tr>
<tr class="separator:a6ea0951108d01e59ea59cafe4f639e03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d16b56c12710f1a510e3f39c0aa1b02"><td class="memItemLeft" align="right" valign="top"><a id="a0d16b56c12710f1a510e3f39c0aa1b02"></a>
typedef element::ElementData *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a0d16b56c12710f1a510e3f39c0aa1b02">elementdata_const_ptr_type</a></td></tr>
<tr class="memdesc:a0d16b56c12710f1a510e3f39c0aa1b02"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer to a const-address of <em>ElementData</em> <br /></td></tr>
<tr class="separator:a0d16b56c12710f1a510e3f39c0aa1b02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33133509c918336b6be12d2ee65bb9d0"><td class="memItemLeft" align="right" valign="top"><a id="a33133509c918336b6be12d2ee65bb9d0"></a>
typedef element::ElementData *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a33133509c918336b6be12d2ee65bb9d0">elementdata_ptr_type</a></td></tr>
<tr class="memdesc:a33133509c918336b6be12d2ee65bb9d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer to <em>ElementData</em> <br /></td></tr>
<tr class="separator:a33133509c918336b6be12d2ee65bb9d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5dc1cdb71455f062cd6a1b1ef8b2eb4"><td class="memItemLeft" align="right" valign="top"><a id="ac5dc1cdb71455f062cd6a1b1ef8b2eb4"></a>
typedef element::ET *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#ac5dc1cdb71455f062cd6a1b1ef8b2eb4">elementtype_const_ptr_type</a></td></tr>
<tr class="memdesc:ac5dc1cdb71455f062cd6a1b1ef8b2eb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer to element types <em>ET</em> <br /></td></tr>
<tr class="separator:ac5dc1cdb71455f062cd6a1b1ef8b2eb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ec8ff821248940465b7f41205bb9a49"><td class="memItemLeft" align="right" valign="top"><a id="a0ec8ff821248940465b7f41205bb9a49"></a>
typedef std::vector&lt; Face *&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a0ec8ff821248940465b7f41205bb9a49">face_ptr_vector_type</a></td></tr>
<tr class="memdesc:a0ec8ff821248940465b7f41205bb9a49"><td class="mdescLeft">&#160;</td><td class="mdescRight">a <em>Face</em> pointer vector <br /></td></tr>
<tr class="separator:a0ec8ff821248940465b7f41205bb9a49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09c479e08416cdc288b05648e59dabda"><td class="memItemLeft" align="right" valign="top"><a id="a09c479e08416cdc288b05648e59dabda"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a09c479e08416cdc288b05648e59dabda">float_type</a></td></tr>
<tr class="memdesc:a09c479e08416cdc288b05648e59dabda"><td class="mdescLeft">&#160;</td><td class="mdescRight">floating point number type for algebra <br /></td></tr>
<tr class="separator:a09c479e08416cdc288b05648e59dabda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1745e2fb27a3a3783ac48a53630635aa"><td class="memItemLeft" align="right" valign="top"><a id="a1745e2fb27a3a3783ac48a53630635aa"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a1745e2fb27a3a3783ac48a53630635aa">index_type</a></td></tr>
<tr class="memdesc:a1745e2fb27a3a3783ac48a53630635aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">unsigned index type <br /></td></tr>
<tr class="separator:a1745e2fb27a3a3783ac48a53630635aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5625d94f603e3a8e2192980fd1f77128"><td class="memItemLeft" align="right" valign="top"><a id="a5625d94f603e3a8e2192980fd1f77128"></a>
typedef Point *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a5625d94f603e3a8e2192980fd1f77128">point_ptr_type</a></td></tr>
<tr class="memdesc:a5625d94f603e3a8e2192980fd1f77128"><td class="mdescLeft">&#160;</td><td class="mdescRight">a pointer of <em>Point</em> <br /></td></tr>
<tr class="separator:a5625d94f603e3a8e2192980fd1f77128"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17cb737c35782749b46d495181a6400f"><td class="memItemLeft" align="right" valign="top"><a id="a17cb737c35782749b46d495181a6400f"></a>
typedef std::vector&lt; <a class="el" href="class_element.xhtml#a5625d94f603e3a8e2192980fd1f77128">point_ptr_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a17cb737c35782749b46d495181a6400f">point_ptr_vector_type</a></td></tr>
<tr class="memdesc:a17cb737c35782749b46d495181a6400f"><td class="mdescLeft">&#160;</td><td class="mdescRight">a <em>Point</em> pointer vector <br /></td></tr>
<tr class="separator:a17cb737c35782749b46d495181a6400f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a884f8c89c3e02a91b0ec3f3759972156"><td class="memItemLeft" align="right" valign="top"><a id="a884f8c89c3e02a91b0ec3f3759972156"></a>
typedef std::vector&lt; unsigned short &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a884f8c89c3e02a91b0ec3f3759972156">small_index_vector_type</a></td></tr>
<tr class="memdesc:a884f8c89c3e02a91b0ec3f3759972156"><td class="mdescLeft">&#160;</td><td class="mdescRight">a vector of small unsigned index types <br /></td></tr>
<tr class="separator:a884f8c89c3e02a91b0ec3f3759972156"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c83b7348a2acedf114ab5847ad3ffcd"><td class="memItemLeft" align="right" valign="top"><a id="a2c83b7348a2acedf114ab5847ad3ffcd"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a2c83b7348a2acedf114ab5847ad3ffcd">uint</a></td></tr>
<tr class="memdesc:a2c83b7348a2acedf114ab5847ad3ffcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">number type <br /></td></tr>
<tr class="separator:a2c83b7348a2acedf114ab5847ad3ffcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a47f2e02383929d07eb975a848ea01356"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a47f2e02383929d07eb975a848ea01356">computeLinearNodeCoordinates</a> (Eigen::MatrixXd input_coors, Eigen::MatrixXd output_coors)</td></tr>
<tr class="separator:a47f2e02383929d07eb975a848ea01356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5ccd0faa3aedb8a9f9d0ae7f5f9297"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a3e5ccd0faa3aedb8a9f9d0ae7f5f9297">computeSurfaceArea</a> ()</td></tr>
<tr class="memdesc:a3e5ccd0faa3aedb8a9f9d0ae7f5f9297"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the surface area of the element Collects all the element faces, checks which of them are on the elements surface, gets the triangulation of these faces and computes the sum of these triangle areas.  <a href="#a3e5ccd0faa3aedb8a9f9d0ae7f5f9297">More...</a><br /></td></tr>
<tr class="separator:a3e5ccd0faa3aedb8a9f9d0ae7f5f9297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6edd5ea4f400b450f07203f432d1c81"><td class="memItemLeft" align="right" valign="top"><a id="ab6edd5ea4f400b450f07203f432d1c81"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#ab6edd5ea4f400b450f07203f432d1c81">Element</a> ()</td></tr>
<tr class="memdesc:ab6edd5ea4f400b450f07203f432d1c81"><td class="mdescLeft">&#160;</td><td class="mdescRight">default constructor, DO NOT USE - provided for SWIG <br /></td></tr>
<tr class="separator:ab6edd5ea4f400b450f07203f432d1c81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa35c3670a02548beed064776203aa0ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#ab5c8f4002db20163549090ce34e235e2">edge_ptr_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#aa35c3670a02548beed064776203aa0ca">elementEdges</a> () const</td></tr>
<tr class="memdesc:aa35c3670a02548beed064776203aa0ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the edges of the element  <a href="#aa35c3670a02548beed064776203aa0ca">More...</a><br /></td></tr>
<tr class="separator:aa35c3670a02548beed064776203aa0ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb46a6ca856f3f251832897c0419d056"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a0ec8ff821248940465b7f41205bb9a49">face_ptr_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#abb46a6ca856f3f251832897c0419d056">elementFaces</a> () const</td></tr>
<tr class="memdesc:abb46a6ca856f3f251832897c0419d056"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the faces of the element  <a href="#abb46a6ca856f3f251832897c0419d056">More...</a><br /></td></tr>
<tr class="separator:abb46a6ca856f3f251832897c0419d056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a014c5ec371249375b31d6378ff93eba7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a17cb737c35782749b46d495181a6400f">point_ptr_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a014c5ec371249375b31d6378ff93eba7">elementNodes</a> () const</td></tr>
<tr class="memdesc:a014c5ec371249375b31d6378ff93eba7"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the nodes of the element  <a href="#a014c5ec371249375b31d6378ff93eba7">More...</a><br /></td></tr>
<tr class="separator:a014c5ec371249375b31d6378ff93eba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9dbef11fb7319aa9b3444c9aa3d73fd"><td class="memItemLeft" align="right" valign="top">element::ET&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#aa9dbef11fb7319aa9b3444c9aa3d73fd">elementType</a> () const</td></tr>
<tr class="memdesc:aa9dbef11fb7319aa9b3444c9aa3d73fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the element type:  <a href="#aa9dbef11fb7319aa9b3444c9aa3d73fd">More...</a><br /></td></tr>
<tr class="separator:aa9dbef11fb7319aa9b3444c9aa3d73fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae7f86c1e3df38d6b23c7e56d1d3d50"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#abae7f86c1e3df38d6b23c7e56d1d3d50">elementTypeString</a> ()</td></tr>
<tr class="memdesc:abae7f86c1e3df38d6b23c7e56d1d3d50"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the element type:  <a href="#abae7f86c1e3df38d6b23c7e56d1d3d50">More...</a><br /></td></tr>
<tr class="separator:abae7f86c1e3df38d6b23c7e56d1d3d50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff0007b5fcfc9d757bf7f27581589cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#acff0007b5fcfc9d757bf7f27581589cd">getNormal</a> (Eigen::Vector3d output_normal)</td></tr>
<tr class="separator:acff0007b5fcfc9d757bf7f27581589cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c8a964dee50273444cc6f3890a93458"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a1745e2fb27a3a3783ac48a53630635aa">index_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a5c8a964dee50273444cc6f3890a93458">index</a> ()</td></tr>
<tr class="memdesc:a5c8a964dee50273444cc6f3890a93458"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the element index:  <a href="#a5c8a964dee50273444cc6f3890a93458">More...</a><br /></td></tr>
<tr class="separator:a5c8a964dee50273444cc6f3890a93458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9504141fc8f8598f2336e3dbc26955d3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a9504141fc8f8598f2336e3dbc26955d3">isDegenerated</a> ()</td></tr>
<tr class="separator:a9504141fc8f8598f2336e3dbc26955d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e72cb8299f6b4d213df02a198b02b38"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a884f8c89c3e02a91b0ec3f3759972156">small_index_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a6e72cb8299f6b4d213df02a198b02b38">localElementAtNode</a> ()</td></tr>
<tr class="memdesc:a6e72cb8299f6b4d213df02a198b02b38"><td class="mdescLeft">&#160;</td><td class="mdescRight">a getter for m_local_element_at_node  <a href="#a6e72cb8299f6b4d213df02a198b02b38">More...</a><br /></td></tr>
<tr class="separator:a6e72cb8299f6b4d213df02a198b02b38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d374554c062ca6f9a8f8165946b7ae"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a884f8c89c3e02a91b0ec3f3759972156">small_index_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a92d374554c062ca6f9a8f8165946b7ae">localElementAtNodeRef</a> ()</td></tr>
<tr class="memdesc:a92d374554c062ca6f9a8f8165946b7ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">a setter for m_local_element_at_node  <a href="#a92d374554c062ca6f9a8f8165946b7ae">More...</a><br /></td></tr>
<tr class="separator:a92d374554c062ca6f9a8f8165946b7ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a517d742794bc4eb1f10038ebc9497544"><td class="memItemLeft" align="right" valign="top">Point&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a517d742794bc4eb1f10038ebc9497544">nodeAt</a> (number id)</td></tr>
<tr class="memdesc:a517d742794bc4eb1f10038ebc9497544"><td class="mdescLeft">&#160;</td><td class="mdescRight">accesses inidividual connected nodes  <a href="#a517d742794bc4eb1f10038ebc9497544">More...</a><br /></td></tr>
<tr class="separator:a517d742794bc4eb1f10038ebc9497544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2c59027bd4da1512c12b2cc36e3d9f"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#aee2c59027bd4da1512c12b2cc36e3d9f">numNodes</a> () const</td></tr>
<tr class="separator:aee2c59027bd4da1512c12b2cc36e3d9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcb99d683aa8cefa53d9410e03372c17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_element.xhtml#a1745e2fb27a3a3783ac48a53630635aa">index_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#afcb99d683aa8cefa53d9410e03372c17">part_index</a> ()</td></tr>
<tr class="memdesc:afcb99d683aa8cefa53d9410e03372c17"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the part index:  <a href="#afcb99d683aa8cefa53d9410e03372c17">More...</a><br /></td></tr>
<tr class="separator:afcb99d683aa8cefa53d9410e03372c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1129b572ed4e9f2aad058ad02291832b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#a1129b572ed4e9f2aad058ad02291832b">recomputeNodeCoordinatesMidEdge</a> (Eigen::MatrixXd input_coors, Eigen::MatrixXd output_coors)</td></tr>
<tr class="separator:a1129b572ed4e9f2aad058ad02291832b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af609878599acc1e49f529281ee7af924"><td class="memItemLeft" align="right" valign="top">Section&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_element.xhtml#af609878599acc1e49f529281ee7af924">section</a> () const</td></tr>
<tr class="memdesc:af609878599acc1e49f529281ee7af924"><td class="mdescLeft">&#160;</td><td class="mdescRight">a getter for the element section:  <a href="#af609878599acc1e49f529281ee7af924">More...</a><br /></td></tr>
<tr class="separator:af609878599acc1e49f529281ee7af924"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Repesents the geometry of a finite element within a mesh. </p>
<p>This class represents the geometrical instance of a finite element contained in a FEM mesh. The class associates the geometry and the topology of the mesh (and the finite element type). It does not provide information/methods on the underlying physical process. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a47f2e02383929d07eb975a848ea01356"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47f2e02383929d07eb975a848ea01356">&#9670;&nbsp;</a></span>computeLinearNodeCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">computeLinearNodeCoordinates </td>
          <td>(</td>
          <td class="paramtype">Eigen::MatrixXd&#160;</td>
          <td class="paramname"><em>input_coors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Eigen::MatrixXd&#160;</td>
          <td class="paramname"><em>output_coors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>recomputes the given node coordinates by linear shape functions The computation is done by assumption of an isoparametric approach. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">input_coors</td><td>a 3*n matrix containing the coordinates </td></tr>
    <tr><td class="paramname">output_coors</td><td>a 3*n matrix containing the new coordinates </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3e5ccd0faa3aedb8a9f9d0ae7f5f9297"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e5ccd0faa3aedb8a9f9d0ae7f5f9297">&#9670;&nbsp;</a></span>computeSurfaceArea()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number computeSurfaceArea </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes the surface area of the element Collects all the element faces, checks which of them are on the elements surface, gets the triangulation of these faces and computes the sum of these triangle areas. </p>
<dl class="section return"><dt>Returns</dt><dd>The surface area. </dd></dl>
<dl class="section note"><dt>Note</dt><dd><a class="el" href="class_element.xhtml" title="Repesents the geometry of a finite element within a mesh. ">Element</a> surface: An element face is recognized as a surface if the face in question reports to be onSurface() and the ident of the <a class="el" href="class_element.xhtml#aa9dbef11fb7319aa9b3444c9aa3d73fd" title="returns the element type: ">elementType()</a> face in question is not SNEG </dd></dl>

</div>
</div>
<a id="aa35c3670a02548beed064776203aa0ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa35c3670a02548beed064776203aa0ca">&#9670;&nbsp;</a></span>elementEdges()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#ab5c8f4002db20163549090ce34e235e2">edge_ptr_vector_type</a> elementEdges </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the edges of the element </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_edges </dd></dl>

</div>
</div>
<a id="abb46a6ca856f3f251832897c0419d056"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb46a6ca856f3f251832897c0419d056">&#9670;&nbsp;</a></span>elementFaces()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a0ec8ff821248940465b7f41205bb9a49">face_ptr_vector_type</a> elementFaces </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the faces of the element </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_faces </dd></dl>

</div>
</div>
<a id="a014c5ec371249375b31d6378ff93eba7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a014c5ec371249375b31d6378ff93eba7">&#9670;&nbsp;</a></span>elementNodes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a17cb737c35782749b46d495181a6400f">point_ptr_vector_type</a> elementNodes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the nodes of the element </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_nodes </dd></dl>

</div>
</div>
<a id="aa9dbef11fb7319aa9b3444c9aa3d73fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9dbef11fb7319aa9b3444c9aa3d73fd">&#9670;&nbsp;</a></span>elementType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">element::ET elementType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the element type: </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to *m_type </dd></dl>

</div>
</div>
<a id="abae7f86c1e3df38d6b23c7e56d1d3d50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abae7f86c1e3df38d6b23c7e56d1d3d50">&#9670;&nbsp;</a></span>elementTypeString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string elementTypeString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the element type: </p>
<dl class="section return"><dt>Returns</dt><dd>a string describing the element number </dd></dl>

</div>
</div>
<a id="acff0007b5fcfc9d757bf7f27581589cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acff0007b5fcfc9d757bf7f27581589cd">&#9670;&nbsp;</a></span>getNormal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">getNormal </td>
          <td>(</td>
          <td class="paramtype">Eigen::Vector3d&#160;</td>
          <td class="paramname"><em>output_normal</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>define the normal by average of triangles defined on the element </p><dl class="section return"><dt>Returns</dt><dd>the normalized vector </dd></dl>

</div>
</div>
<a id="a5c8a964dee50273444cc6f3890a93458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c8a964dee50273444cc6f3890a93458">&#9670;&nbsp;</a></span>index()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a1745e2fb27a3a3783ac48a53630635aa">index_type</a> index </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the element index: </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_index </dd></dl>

</div>
</div>
<a id="a9504141fc8f8598f2336e3dbc26955d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9504141fc8f8598f2336e3dbc26955d3">&#9670;&nbsp;</a></span>isDegenerated()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isDegenerated </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the element is degenerated An element is degenerated if there are at most 3 non degenerated faces (in this case, there is no volume being spanned). </dd></dl>

</div>
</div>
<a id="a6e72cb8299f6b4d213df02a198b02b38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e72cb8299f6b4d213df02a198b02b38">&#9670;&nbsp;</a></span>localElementAtNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a884f8c89c3e02a91b0ec3f3759972156">small_index_vector_type</a> localElementAtNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a getter for m_local_element_at_node </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_local_element_at_node </dd></dl>

</div>
</div>
<a id="a92d374554c062ca6f9a8f8165946b7ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92d374554c062ca6f9a8f8165946b7ae">&#9670;&nbsp;</a></span>localElementAtNodeRef()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a884f8c89c3e02a91b0ec3f3759972156">small_index_vector_type</a> localElementAtNodeRef </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a setter for m_local_element_at_node </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_local_element_at_node </dd></dl>

</div>
</div>
<a id="a517d742794bc4eb1f10038ebc9497544"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a517d742794bc4eb1f10038ebc9497544">&#9670;&nbsp;</a></span>nodeAt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Point nodeAt </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>accesses inidividual connected nodes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>the index 0..<a class="el" href="class_element.xhtml#aee2c59027bd4da1512c12b2cc36e3d9f">numNodes()</a>-1 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a const-reference to the connected node </dd></dl>

</div>
</div>
<a id="aee2c59027bd4da1512c12b2cc36e3d9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee2c59027bd4da1512c12b2cc36e3d9f">&#9670;&nbsp;</a></span>numNodes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number numNodes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of connected nodes </dd></dl>

</div>
</div>
<a id="afcb99d683aa8cefa53d9410e03372c17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcb99d683aa8cefa53d9410e03372c17">&#9670;&nbsp;</a></span>part_index()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_element.xhtml#a1745e2fb27a3a3783ac48a53630635aa">index_type</a> part_index </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the part index: </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_part_index </dd></dl>

</div>
</div>
<a id="a1129b572ed4e9f2aad058ad02291832b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1129b572ed4e9f2aad058ad02291832b">&#9670;&nbsp;</a></span>recomputeNodeCoordinatesMidEdge()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">recomputeNodeCoordinatesMidEdge </td>
          <td>(</td>
          <td class="paramtype">Eigen::MatrixXd&#160;</td>
          <td class="paramname"><em>input_coors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Eigen::MatrixXd&#160;</td>
          <td class="paramname"><em>output_coors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>recomputes the given node coordinates by placing the mid-edge nodes in the center of the edges The computation is done by assumption of an isoparametric approach. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">input_coors</td><td>a 3*n matrix containing the coordinates </td></tr>
    <tr><td class="paramname">output_coors</td><td>a 3*n matrix containing the new coordinates </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af609878599acc1e49f529281ee7af924"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af609878599acc1e49f529281ee7af924">&#9670;&nbsp;</a></span>section()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Section section </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a getter for the element section: </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to m_section </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
