<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): Graphics</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('group__graphics.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Graphics</div>  </div>
</div><!--header-->
<div class="contents">

<p>Display and manipulate 3D graphics.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_all_render_data.xhtml">AllRenderData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">collects all data source settings for all possible combinations:  <a href="class_all_render_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_data_object_to_graphics_indices.xhtml">DataObjectToGraphicsIndices</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a class that collects data that is required to transfer the data from a DataObject to the vertices of the OpenGL scene.  <a href="struct_data_object_to_graphics_indices.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_render_data.xhtml">RenderData</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the source of visible data  <a href="class_render_data.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene.xhtml">Scene</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A class for 3D visualization of a structure Additionally, it can display palettes and text annotations as well as rich text labels. Internally, a representation in terms of triangles only is used. Qt separation: This class contains no functionality relying on Qt classes. All methods using Qt classes are virtual and have no implementation, calling DYNARDO_LOG_WARN instead. Their implementation is done in SceneQt, part of the sos_qt_extensions module. Class <a class="el" href="class_scene.xhtml" title="A class for 3D visualization of a structure Additionally, it can display palettes and text annotation...">Scene</a> is NO QObject, but SceneQt is. Instances of <a class="el" href="class_scene.xhtml" title="A class for 3D visualization of a structure Additionally, it can display palettes and text annotation...">Scene</a> or SceneQt are created with application_makeScene(), implemented in the sos_qt_extensions or sos_noqt_extensions module respectively.  <a href="class_scene.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml">SceneManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A manager class for 3D visualization of a structure.  <a href="class_scene_manager.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vertex_values.xhtml">VertexValues</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data containing information about the field data in simplified form.  <a href="struct_vertex_values.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_vertices_normals_visibility.xhtml">VerticesNormalsVisibility</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data containing information about the structure in simplified form.  <a href="struct_vertices_normals_visibility.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga1dccaa74dccf6c2d491b62af355f4d66"><td class="memItemLeft" align="right" valign="top"><a id="ga1dccaa74dccf6c2d491b62af355f4d66"></a>
typedef EntityValueTuple&lt; <a class="el" href="class_element.xhtml">Element</a> *&gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ElementValueTuple</b></td></tr>
<tr class="separator:ga1dccaa74dccf6c2d491b62af355f4d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa2307c1f5f1bc5bb174536f7823297e6"><td class="memItemLeft" align="right" valign="top"><a id="gaa2307c1f5f1bc5bb174536f7823297e6"></a>
typedef std::pair&lt; int, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>indexValuePair</b></td></tr>
<tr class="separator:gaa2307c1f5f1bc5bb174536f7823297e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9c87499e19bca8c99168255a6d7ded16"><td class="memItemLeft" align="right" valign="top"><a id="ga9c87499e19bca8c99168255a6d7ded16"></a>
typedef Eigen::MatrixXf&#160;</td><td class="memItemRight" valign="bottom"><b>MatrixXhf</b></td></tr>
<tr class="separator:ga9c87499e19bca8c99168255a6d7ded16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac78ee30e292a8518dcd7d24907fe8cd4"><td class="memItemLeft" align="right" valign="top"><a id="gac78ee30e292a8518dcd7d24907fe8cd4"></a>
typedef EntityValueTuple&lt; Point *&gt;&#160;</td><td class="memItemRight" valign="bottom"><b>NodeValueTuple</b></td></tr>
<tr class="separator:gac78ee30e292a8518dcd7d24907fe8cd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga887f8f478a81e47db0784cc764b39582"><td class="memItemLeft" align="right" valign="top"><a id="ga887f8f478a81e47db0784cc764b39582"></a>
typedef boost::shared_ptr&lt; PaletteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>PaletteTypePtr</b></td></tr>
<tr class="separator:ga887f8f478a81e47db0784cc764b39582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga47045ea68618350723b73c38b5feeddf"><td class="memItemLeft" align="right" valign="top"><a id="ga47045ea68618350723b73c38b5feeddf"></a>
typedef Eigen::VectorXf&#160;</td><td class="memItemRight" valign="bottom"><b>VectorXhf</b></td></tr>
<tr class="separator:ga47045ea68618350723b73c38b5feeddf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga702e03492b8a430e2951c568a47e1a0e"><td class="memItemLeft" align="right" valign="top"><a id="ga702e03492b8a430e2951c568a47e1a0e"></a>
typedef Eigen::Matrix&lt; unsigned char, Eigen::Dynamic, 1 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>VectorXuc</b></td></tr>
<tr class="separator:ga702e03492b8a430e2951c568a47e1a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga4c474d2ab45fc796266bff9ba22d8323"><td class="memItemLeft" align="right" valign="top"><a id="ga4c474d2ab45fc796266bff9ba22d8323"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>contourType</b> { <b>lineContour</b> =0, 
<b>planeContour</b>
 }</td></tr>
<tr class="separator:ga4c474d2ab45fc796266bff9ba22d8323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab91b34ae619fcdfcba4522b4f335bf83"><td class="memItemLeft" align="right" valign="top"><a id="gab91b34ae619fcdfcba4522b4f335bf83"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>Position</b> { <br />
&#160;&#160;<b>center</b> = 0, 
<b>west</b>, 
<b>east</b>, 
<b>north</b>, 
<br />
&#160;&#160;<b>south</b>, 
<b>southwest</b>, 
<b>northwest</b>, 
<b>northeast</b>, 
<br />
&#160;&#160;<b>southeast</b>, 
<b>none</b>
<br />
 }</td></tr>
<tr class="separator:gab91b34ae619fcdfcba4522b4f335bf83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf8d4f5b763081475bc51b404e276bab5"><td class="memItemLeft" align="right" valign="top"><a id="gaf8d4f5b763081475bc51b404e276bab5"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>renderMode</b> { <b>drawFaces</b> =0, 
<b>drawLines</b>, 
<b>drawOutline</b>
 }</td></tr>
<tr class="separator:gaf8d4f5b763081475bc51b404e276bab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad2072494c8b03f592b4b8911b172a5fd"><td class="memItemLeft" align="right" valign="top">graphics::VertexValues&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.xhtml#gad2072494c8b03f592b4b8911b172a5fd">extract_data_object</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="struct_vertices_normals_visibility.xhtml">VerticesNormalsVisibility</a> vnv, DataObject::ptr_type dataObject)</td></tr>
<tr class="memdesc:gad2072494c8b03f592b4b8911b172a5fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract the field data into a simplified triangle representation for visualization.  <a href="#gad2072494c8b03f592b4b8911b172a5fd">More...</a><br /></td></tr>
<tr class="separator:gad2072494c8b03f592b4b8911b172a5fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1dbd444c7d5278d56656e29a260f6b1d"><td class="memItemLeft" align="right" valign="top">graphics::VerticesNormalsVisibility&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.xhtml#ga1dbd444c7d5278d56656e29a260f6b1d">extract_reference_mesh</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, bool doTets)</td></tr>
<tr class="memdesc:ga1dbd444c7d5278d56656e29a260f6b1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract the mesh into a simplified triangle representation for visualization.  <a href="#ga1dbd444c7d5278d56656e29a260f6b1d">More...</a><br /></td></tr>
<tr class="separator:ga1dbd444c7d5278d56656e29a260f6b1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fecef97199c3614077980df64b9e3b0"><td class="memTemplParams" colspan="2">template&lt;dataobject_types SET_TYPE&gt; </td></tr>
<tr class="memitem:ga7fecef97199c3614077980df64b9e3b0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="group__graphics.xhtml#ga7fecef97199c3614077980df64b9e3b0">isPartOfReferenceSet</a> (<a class="el" href="class_element.xhtml">Element</a> element, Point point_A, Point point_B, Point point_C, <a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:ga7fecef97199c3614077980df64b9e3b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">determines if the given vertex belongs to the reference node or element set  <a href="#ga7fecef97199c3614077980df64b9e3b0">More...</a><br /></td></tr>
<tr class="separator:ga7fecef97199c3614077980df64b9e3b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3a9f2c0847694e1063533959c1f676a"><td class="memItemLeft" align="right" valign="top">graphics::SceneManager&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.xhtml#gae3a9f2c0847694e1063533959c1f676a">sceneManager</a> ()</td></tr>
<tr class="memdesc:gae3a9f2c0847694e1063533959c1f676a"><td class="mdescLeft">&#160;</td><td class="mdescRight">gives access to the global scene manager object  <a href="#gae3a9f2c0847694e1063533959c1f676a">More...</a><br /></td></tr>
<tr class="separator:gae3a9f2c0847694e1063533959c1f676a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29c270c266082fc815d4f48a55b6935a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.xhtml#ga29c270c266082fc815d4f48a55b6935a">validTriangles</a> (<a class="el" href="class_element.xhtml">Element</a> *current_element, element::ETFace etface)</td></tr>
<tr class="memdesc:ga29c270c266082fc815d4f48a55b6935a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the validity of the triangles defining one face of an element.  <a href="#ga29c270c266082fc815d4f48a55b6935a">More...</a><br /></td></tr>
<tr class="separator:ga29c270c266082fc815d4f48a55b6935a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Display and manipulate 3D graphics. </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gad2072494c8b03f592b4b8911b172a5fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2072494c8b03f592b4b8911b172a5fd">&#9670;&nbsp;</a></span>extract_data_object()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">graphics::VertexValues extract_data_object </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_vertices_normals_visibility.xhtml">VerticesNormalsVisibility</a>&#160;</td>
          <td class="paramname"><em>vnv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DataObject::ptr_type&#160;</td>
          <td class="paramname"><em>dataObject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extract the field data into a simplified triangle representation for visualization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>reference mesh </td></tr>
    <tr><td class="paramname">vnv</td><td>contains the structural information </td></tr>
    <tr><td class="paramname">dataObject</td><td>field data; the index space must be compatible eith database.indexMapper </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>simplified description </dd></dl>

</div>
</div>
<a id="ga1dbd444c7d5278d56656e29a260f6b1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1dbd444c7d5278d56656e29a260f6b1d">&#9670;&nbsp;</a></span>extract_reference_mesh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">graphics::VerticesNormalsVisibility extract_reference_mesh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>doTets</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Extract the mesh into a simplified triangle representation for visualization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>reference mesh </td></tr>
    <tr><td class="paramname">doTets</td><td>indicates if volume data should be handled </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>simplified description</dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This method shall be used to create a standalone <a class="el" href="class_scene.xhtml" title="A class for 3D visualization of a structure Additionally, it can display palettes and text annotation...">Scene</a> via script API only! It's currently used in test cases and in customer scripts. Therefor, do not remove it! In C++ use the overloaded extract_refernce_mesh ( <a class="el" href="class_structure.xhtml" title="The central data structure for SoS. ">Structure</a> , graphics::VerticesNormalsVisibility , bool ) method. </dd></dl>

</div>
</div>
<a id="ga7fecef97199c3614077980df64b9e3b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga7fecef97199c3614077980df64b9e3b0">&#9670;&nbsp;</a></span>isPartOfReferenceSet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isPartOfReferenceSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_element.xhtml">Element</a>&#160;</td>
          <td class="paramname"><em>element</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Point&#160;</td>
          <td class="paramname"><em>point_A</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Point&#160;</td>
          <td class="paramname"><em>point_B</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Point&#160;</td>
          <td class="paramname"><em>point_C</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>determines if the given vertex belongs to the reference node or element set </p>
<p>The decision on chosing the element reference set or the node reference set is done trough the template parameter SET_TYPE</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">SET_TYPE</td><td>defines if the reference set is the node set or the element set </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">element</td><td>the element to which the current graphics vertex belongs to. If an element set is used as reference, only the element is taken for test purposes </td></tr>
    <tr><td class="paramname">point_A</td><td>the 1st point of the current OpenGL triangle </td></tr>
    <tr><td class="paramname">point_B</td><td>the 2nd point of the current OpenGL triangle </td></tr>
    <tr><td class="paramname">point_C</td><td>the 3rd point of the current OpenGL triangle. If the reference set type is of type node, then all of the triangle vertices must be part of the reference node set in order to be visible. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the vertex is part of the reference set, false: if it is not part. </dd></dl>

</div>
</div>
<a id="gae3a9f2c0847694e1063533959c1f676a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae3a9f2c0847694e1063533959c1f676a">&#9670;&nbsp;</a></span>sceneManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">graphics::SceneManager sceneManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>gives access to the global scene manager object </p>
<dl class="section return"><dt>Returns</dt><dd>a reference to the object scenemanager_ptr (the object must be valid!), stored in </dd></dl>
<dl class="section see"><dt>See also</dt><dd>application_data </dd></dl>

</div>
</div>
<a id="ga29c270c266082fc815d4f48a55b6935a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga29c270c266082fc815d4f48a55b6935a">&#9670;&nbsp;</a></span>validTriangles()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;bool&gt; validTriangles </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_element.xhtml">Element</a> *&#160;</td>
          <td class="paramname"><em>current_element</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">element::ETFace&#160;</td>
          <td class="paramname"><em>etface</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks the validity of the triangles defining one face of an element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">current_element</td><td>the element which should be checked </td></tr>
    <tr><td class="paramname">etface</td><td>the face of the element which should be checked </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a boolean vector defining the validity </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
