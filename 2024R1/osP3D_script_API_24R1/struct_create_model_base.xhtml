<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): CreateModelBase Struct Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_create_model_base.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="struct_create_model_base-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">CreateModelBase Struct Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__models.xhtml">MOP models</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>API for all MOP3 model creation classes.  
 <a href="struct_create_model_base.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3031d648b73235d11d64df95db3d84ce"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_create_model_base.xhtml#a3031d648b73235d11d64df95db3d84ce">__str__</a> ()</td></tr>
<tr class="memdesc:a3031d648b73235d11d64df95db3d84ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output function used in python context. Use this function to print instances of this class in python.  <a href="#a3031d648b73235d11d64df95db3d84ce">More...</a><br /></td></tr>
<tr class="separator:a3031d648b73235d11d64df95db3d84ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedfb47575823522e6a6d22ce6c12e826"><td class="memItemLeft" align="right" valign="top"><a id="aedfb47575823522e6a6d22ce6c12e826"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_user_base.xhtml#aedfb47575823522e6a6d22ce6c12e826">addProperty</a> (<a class="el" href="struct_property_base.xhtml">PropertyBase</a> p)</td></tr>
<tr class="memdesc:aedfb47575823522e6a6d22ce6c12e826"><td class="mdescLeft">&#160;</td><td class="mdescRight">Properties that help the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> scheduling the Models to be built The properties class needs to be implemented for the specific model type. <br /></td></tr>
<tr class="separator:aedfb47575823522e6a6d22ce6c12e826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e64887b96b93ac8aa95cca396d78f0a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_model_base.xhtml">ModelBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_create_model_base.xhtml#a5e64887b96b93ac8aa95cca396d78f0a">compute</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="struct_training_plan_base.xhtml">TrainingPlanBase</a> training_plan, quality_measure::QualityMeasureBase quality_measure, <a class="el" href="struct_cancel_base.xhtml">CancelBase</a> *cancel=nullptr)=0</td></tr>
<tr class="memdesc:a5e64887b96b93ac8aa95cca396d78f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Builds the model from the given samples and returns the model.  <a href="#a5e64887b96b93ac8aa95cca396d78f0a">More...</a><br /></td></tr>
<tr class="separator:a5e64887b96b93ac8aa95cca396d78f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a1cc8519f2bdb1f9952ceaa3391cbca"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_create_model_base.xhtml#a4a1cc8519f2bdb1f9952ceaa3391cbca">equals</a> (<a class="el" href="struct_create_model_base.xhtml">CreateModelBase</a> other)=0</td></tr>
<tr class="memdesc:a4a1cc8519f2bdb1f9952ceaa3391cbca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checking if the given configurations are equal this this instance.  <a href="#a4a1cc8519f2bdb1f9952ceaa3391cbca">More...</a><br /></td></tr>
<tr class="separator:a4a1cc8519f2bdb1f9952ceaa3391cbca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e1dd7df82728594fc128ed1c797b0c0"><td class="memItemLeft" align="right" valign="top"><a id="a0e1dd7df82728594fc128ed1c797b0c0"></a>
virtual <a class="el" href="class_property_list.xhtml">PropertyList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_user_base.xhtml#a0e1dd7df82728594fc128ed1c797b0c0">getProperties</a> ()</td></tr>
<tr class="memdesc:a0e1dd7df82728594fc128ed1c797b0c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the properties stored by this user. <br /></td></tr>
<tr class="separator:a0e1dd7df82728594fc128ed1c797b0c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1202ca4468e899d1e6d321ebf59e67a1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_create_model_base.xhtml#a1202ca4468e899d1e6d321ebf59e67a1">isValid</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="struct_training_plan_base.xhtml">TrainingPlanBase</a> training_plan)=0</td></tr>
<tr class="memdesc:a1202ca4468e899d1e6d321ebf59e67a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function checks if the model can validly be trained from the given samples.  <a href="#a1202ca4468e899d1e6d321ebf59e67a1">More...</a><br /></td></tr>
<tr class="separator:a1202ca4468e899d1e6d321ebf59e67a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9507274f126b856fb69cd621f0f9fb4"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_property_user_base.xhtml#ab9507274f126b856fb69cd621f0f9fb4">transferProperties</a> (<a class="el" href="class_property_list.xhtml">PropertyList</a> property_list)</td></tr>
<tr class="memdesc:ab9507274f126b856fb69cd621f0f9fb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience function to transfer a complete <a class="el" href="class_property_list.xhtml" title="Container class for handling properties Uses templates to easily find and cast configurations of diff...">PropertyList</a> into the model.  <a href="#ab9507274f126b856fb69cd621f0f9fb4">More...</a><br /></td></tr>
<tr class="separator:ab9507274f126b856fb69cd621f0f9fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>API for all MOP3 model creation classes. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a3031d648b73235d11d64df95db3d84ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3031d648b73235d11d64df95db3d84ce">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string __str__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Output function used in python context. Use this function to print instances of this class in python. </p>
<dl class="section return"><dt>Returns</dt><dd>string containing the object </dd></dl>

<p>Reimplemented in <a class="el" href="class_create_custom_model.xhtml#a3031d648b73235d11d64df95db3d84ce">CreateCustomModel</a>.</p>

</div>
</div>
<a id="a5e64887b96b93ac8aa95cca396d78f0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e64887b96b93ac8aa95cca396d78f0a">&#9670;&nbsp;</a></span>compute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_model_base.xhtml">ModelBase</a>* compute </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_training_plan_base.xhtml">TrainingPlanBase</a>&#160;</td>
          <td class="paramname"><em>training_plan</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">quality_measure::QualityMeasureBase&#160;</td>
          <td class="paramname"><em>quality_measure</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_cancel_base.xhtml">CancelBase</a> *&#160;</td>
          <td class="paramname"><em>cancel</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Builds the model from the given samples and returns the model. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler that contains the samples </td></tr>
    <tr><td class="paramname">training_plan</td><td>The training plan that specifies how the model will be trained </td></tr>
    <tr><td class="paramname">quality_measure</td><td>The quality measure that allows to compute a models approximation quality </td></tr>
    <tr><td class="paramname">cancel</td><td>A cancellation object to cancel the training </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The trained model iff not cancelled </dd></dl>

<p>Implemented in <a class="el" href="class_create_custom_model.xhtml#adab3d3e83d7c6ba1916a079748b0f152">CreateCustomModel</a>.</p>

</div>
</div>
<a id="a4a1cc8519f2bdb1f9952ceaa3391cbca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a1cc8519f2bdb1f9952ceaa3391cbca">&#9670;&nbsp;</a></span>equals()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool equals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_create_model_base.xhtml">CreateModelBase</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checking if the given configurations are equal this this instance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>The other Config </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true iff the same type and the same config entries </dd></dl>

<p>Implemented in <a class="el" href="class_create_custom_model.xhtml#ad90ea62af69f033af4b88810fc877308">CreateCustomModel</a>.</p>

</div>
</div>
<a id="a1202ca4468e899d1e6d321ebf59e67a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1202ca4468e899d1e6d321ebf59e67a1">&#9670;&nbsp;</a></span>isValid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool isValid </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_training_plan_base.xhtml">TrainingPlanBase</a>&#160;</td>
          <td class="paramname"><em>training_plan</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function checks if the model can validly be trained from the given samples. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The samples the model shall be trained with. </td></tr>
    <tr><td class="paramname">training_plan</td><td>The training_plan </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True iff th emodel can be trained with the configuration data, the properties and samples </dd></dl>

<p>Implemented in <a class="el" href="class_create_custom_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateCustomModel</a>, <a class="el" href="class_create_kriging_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateKrigingModel</a>, <a class="el" href="class_create_m_l_s_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateMLSModel</a>, <a class="el" href="class_create_r_b_f_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateRBFModel</a>, <a class="el" href="class_create_polynomial_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreatePolynomialModel</a>, <a class="el" href="class_create_legacy_m_o_p_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateLegacyMOPModel</a>, and <a class="el" href="class_create_legacy_m_o_q_model.xhtml#a1a42d0ff7ef3b9c17965ecc14310ed5d">CreateLegacyMOQModel</a>.</p>

</div>
</div>
<a id="ab9507274f126b856fb69cd621f0f9fb4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9507274f126b856fb69cd621f0f9fb4">&#9670;&nbsp;</a></span>transferProperties()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual transferProperties </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_property_list.xhtml">PropertyList</a>&#160;</td>
          <td class="paramname"><em>property_list</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convenience function to transfer a complete <a class="el" href="class_property_list.xhtml" title="Container class for handling properties Uses templates to easily find and cast configurations of diff...">PropertyList</a> into the model. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">property_list</td><td>The properties to transfer into this model </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
