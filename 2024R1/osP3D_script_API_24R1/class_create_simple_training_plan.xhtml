<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): CreateSimpleTrainingPlan Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_create_simple_training_plan.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_create_simple_training_plan-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">CreateSimpleTrainingPlan Class Reference<div class="ingroups"><a class="el" href="group__training__plan.xhtml">MOP training plan</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is used to create training plans for the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> competition. It sets up data according to an sample analysis to allow efficient training of the samples. It provides functions to access and cleanup the prepared data.  
 <a href="class_create_simple_training_plan.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aee46840a9742d1ef1acbcbc0a0558d6a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#aee46840a9742d1ef1acbcbc0a0558d6a">cleanup</a> (data_handler::DataHandlerBase datahandler, std::vector&lt; uint64_t &gt; output_map)</td></tr>
<tr class="memdesc:aee46840a9742d1ef1acbcbc0a0558d6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clean-up the datahandler once the data is not needed anymore.  <a href="#aee46840a9742d1ef1acbcbc0a0558d6a">More...</a><br /></td></tr>
<tr class="separator:aee46840a9742d1ef1acbcbc0a0558d6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21378382fcea59d7dac4cc95d221b79a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_simple_training_plan.xhtml">SimpleTrainingPlan</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#a21378382fcea59d7dac4cc95d221b79a">compute</a> (data_handler::DataHandlerBase datahandler, std::vector&lt; uint64_t &gt; output_map, bool use_incompletes=true, bool subspace_filtering=true, bool input_correlation_filter=true, number maximum_input_correlation=0.9)</td></tr>
<tr class="memdesc:a21378382fcea59d7dac4cc95d221b79a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a <a class="el" href="struct_simple_training_plan.xhtml" title="TrainingPlan assigns a in a set of sample each sample a status on how the sample is to be treated dur...">SimpleTrainingPlan</a> from the classes settings Instances of this class have the ability to cache adapted data inside the datahandler such that the resulting training plan can be used in an efficient way. This is triggered by the outputs for the training.  <a href="#a21378382fcea59d7dac4cc95d221b79a">More...</a><br /></td></tr>
<tr class="separator:a21378382fcea59d7dac4cc95d221b79a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf28cf2efd51b035883ceb37db728a71"><td class="memItemLeft" align="right" valign="top"><a id="adf28cf2efd51b035883ceb37db728a71"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#adf28cf2efd51b035883ceb37db728a71">CreateSimpleTrainingPlan</a> ()</td></tr>
<tr class="memdesc:adf28cf2efd51b035883ceb37db728a71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:adf28cf2efd51b035883ceb37db728a71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a0b3b5d7b78bf28baeb3687819720c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#a3a0b3b5d7b78bf28baeb3687819720c3">getInputs</a> (data_handler::DataHandlerBase datahandler, std::vector&lt; uint64_t &gt; output_map)</td></tr>
<tr class="memdesc:a3a0b3b5d7b78bf28baeb3687819720c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the input matrix used by the training plan <a class="el" href="class_create_simple_training_plan.xhtml#a21378382fcea59d7dac4cc95d221b79a" title="Generates a SimpleTrainingPlan from the classes settings Instances of this class have the ability to ...">CreateSimpleTrainingPlan::compute</a> may cache efficient input matrices for the given outputs. This function provides access to the input matrices used for the given outputs.  <a href="#a3a0b3b5d7b78bf28baeb3687819720c3">More...</a><br /></td></tr>
<tr class="separator:a3a0b3b5d7b78bf28baeb3687819720c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee74475a8bc2fdc6d1a0fed306f683b7"><td class="memItemLeft" align="right" valign="top"><a id="aee74475a8bc2fdc6d1a0fed306f683b7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#aee74475a8bc2fdc6d1a0fed306f683b7">initialize</a> (data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:aee74475a8bc2fdc6d1a0fed306f683b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes and precalculates the cached plan. <br /></td></tr>
<tr class="separator:aee74475a8bc2fdc6d1a0fed306f683b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d765744e1b403aacd8ece89b42de38a"><td class="memItemLeft" align="right" valign="top">IndexVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#a6d765744e1b403aacd8ece89b42de38a">unusedSamples</a> (std::vector&lt; uint64_t &gt; output_map, bool use_incompletes)</td></tr>
<tr class="memdesc:a6d765744e1b403aacd8ece89b42de38a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the indices of samples that were left out of the training process for the given output_map.  <a href="#a6d765744e1b403aacd8ece89b42de38a">More...</a><br /></td></tr>
<tr class="separator:a6d765744e1b403aacd8ece89b42de38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:afff2ed8fc84ff999a9ff1b187dc4fe8a"><td class="memItemLeft" align="right" valign="top"><a id="afff2ed8fc84ff999a9ff1b187dc4fe8a"></a>
ParameterImportanceVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#afff2ed8fc84ff999a9ff1b187dc4fe8a">input_importances</a></td></tr>
<tr class="memdesc:afff2ed8fc84ff999a9ff1b187dc4fe8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The importances for the mops input variables. <br /></td></tr>
<tr class="separator:afff2ed8fc84ff999a9ff1b187dc4fe8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226a6b2dab6b0562cf399a3a1a0c9b9c"><td class="memItemLeft" align="right" valign="top"><a id="a226a6b2dab6b0562cf399a3a1a0c9b9c"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><b>mop_ident</b></td></tr>
<tr class="separator:a226a6b2dab6b0562cf399a3a1a0c9b9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae29a97cfbae42dc37b7a9be964b5d266"><td class="memItemLeft" align="right" valign="top"><a id="ae29a97cfbae42dc37b7a9be964b5d266"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#ae29a97cfbae42dc37b7a9be964b5d266">number_of_folds</a></td></tr>
<tr class="memdesc:ae29a97cfbae42dc37b7a9be964b5d266"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of folds for a k-fold training. <br /></td></tr>
<tr class="separator:ae29a97cfbae42dc37b7a9be964b5d266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a874a26feda81485f63f6bc9d791c8c86"><td class="memItemLeft" align="right" valign="top"><a id="a874a26feda81485f63f6bc9d791c8c86"></a>
<a class="el" href="group__common.xhtml#ga8f73c0a2225e425c9ffeecb046034a43">TrainingPlanType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_create_simple_training_plan.xhtml#a874a26feda81485f63f6bc9d791c8c86">training</a></td></tr>
<tr class="memdesc:a874a26feda81485f63f6bc9d791c8c86"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of training plan to generate. <br /></td></tr>
<tr class="separator:a874a26feda81485f63f6bc9d791c8c86"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is used to create training plans for the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> competition. It sets up data according to an sample analysis to allow efficient training of the samples. It provides functions to access and cleanup the prepared data. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aee46840a9742d1ef1acbcbc0a0558d6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee46840a9742d1ef1acbcbc0a0558d6a">&#9670;&nbsp;</a></span>cleanup()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cleanup </td>
          <td>(</td>
          <td class="paramtype">data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; uint64_t &gt;&#160;</td>
          <td class="paramname"><em>output_map</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clean-up the datahandler once the data is not needed anymore. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler that keeps the data </td></tr>
    <tr><td class="paramname">output_map</td><td>The outputs the datahandler keeps additional data for </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a21378382fcea59d7dac4cc95d221b79a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21378382fcea59d7dac4cc95d221b79a">&#9670;&nbsp;</a></span>compute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_simple_training_plan.xhtml">SimpleTrainingPlan</a> compute </td>
          <td>(</td>
          <td class="paramtype">data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; uint64_t &gt;&#160;</td>
          <td class="paramname"><em>output_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_incompletes</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>subspace_filtering</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>input_correlation_filter</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>maximum_input_correlation</em> = <code>0.9</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates a <a class="el" href="struct_simple_training_plan.xhtml" title="TrainingPlan assigns a in a set of sample each sample a status on how the sample is to be treated dur...">SimpleTrainingPlan</a> from the classes settings Instances of this class have the ability to cache adapted data inside the datahandler such that the resulting training plan can be used in an efficient way. This is triggered by the outputs for the training. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The Datahandler that stores the input/output matrices. </td></tr>
    <tr><td class="paramname">output_map</td><td>The output to create the training plan for </td></tr>
    <tr><td class="paramname">use_incompletes</td><td>The setting if incomplete designs should be used </td></tr>
    <tr><td class="paramname">subspace_filtering</td><td>Optional subspace filtering </td></tr>
    <tr><td class="paramname">input_correlation_filter</td><td>Optional input correlation filtering </td></tr>
    <tr><td class="paramname">maximum_input_correlation</td><td>Maximum input correlation for optional filtering </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A training plan </dd></dl>

</div>
</div>
<a id="a3a0b3b5d7b78bf28baeb3687819720c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a0b3b5d7b78bf28baeb3687819720c3">&#9670;&nbsp;</a></span>getInputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> getInputs </td>
          <td>(</td>
          <td class="paramtype">data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; uint64_t &gt;&#160;</td>
          <td class="paramname"><em>output_map</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the input matrix used by the training plan <a class="el" href="class_create_simple_training_plan.xhtml#a21378382fcea59d7dac4cc95d221b79a" title="Generates a SimpleTrainingPlan from the classes settings Instances of this class have the ability to ...">CreateSimpleTrainingPlan::compute</a> may cache efficient input matrices for the given outputs. This function provides access to the input matrices used for the given outputs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler where the data is located </td></tr>
    <tr><td class="paramname">output_map</td><td>The output_map used </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A reference to the input matrix for the given output_map </dd></dl>

</div>
</div>
<a id="a6d765744e1b403aacd8ece89b42de38a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d765744e1b403aacd8ece89b42de38a">&#9670;&nbsp;</a></span>unusedSamples()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">IndexVector unusedSamples </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; uint64_t &gt;&#160;</td>
          <td class="paramname"><em>output_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_incompletes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the indices of samples that were left out of the training process for the given output_map. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output_map</td><td>The outputs in question for the training </td></tr>
    <tr><td class="paramname">use_incompletes</td><td>The setting if incomplete designs should be used </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An ordered vector of indices of samples that were omitted during training. </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
