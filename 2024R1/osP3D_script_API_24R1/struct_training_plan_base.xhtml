<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): TrainingPlanBase Struct Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_training_plan_base.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="struct_training_plan_base-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">TrainingPlanBase Struct Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__training__plan.xhtml">MOP training plan</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>TrainingPlan assigns a in a set of sample each sample a status on how the sample is to be treated during the training of a model.  
 <a href="struct_training_plan_base.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6e262334d7e27b9f05121454531fa5b6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a6e262334d7e27b9f05121454531fa5b6">getInputs</a> (::data_handler::DataHandlerBase datahandler)=0</td></tr>
<tr class="memdesc:a6e262334d7e27b9f05121454531fa5b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the inputs fitting the training plan from the datahandler.  <a href="#a6e262334d7e27b9f05121454531fa5b6">More...</a><br /></td></tr>
<tr class="separator:a6e262334d7e27b9f05121454531fa5b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df8016765ccb017b2ff5778e3e81558"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a5df8016765ccb017b2ff5778e3e81558">getMOPIdent</a> ()=0</td></tr>
<tr class="memdesc:a5df8016765ccb017b2ff5778e3e81558"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> ident the TrainingPlan is created for.  <a href="#a5df8016765ccb017b2ff5778e3e81558">More...</a><br /></td></tr>
<tr class="separator:a5df8016765ccb017b2ff5778e3e81558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8de106670ace9e349ee9c149741b8e44"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a8de106670ace9e349ee9c149741b8e44">getOutputs</a> (::data_handler::DataHandlerBase datahandler)=0</td></tr>
<tr class="memdesc:a8de106670ace9e349ee9c149741b8e44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the outputs fitting the training plan from the datahandler.  <a href="#a8de106670ace9e349ee9c149741b8e44">More...</a><br /></td></tr>
<tr class="separator:a8de106670ace9e349ee9c149741b8e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c4be324fc1e91c3039a49631f6e2cc9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="group__training__plan.xhtml#gafce529ac7282fd94c419e8bea8492268">SampleUsage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a1c4be324fc1e91c3039a49631f6e2cc9">getSampleUsageInSet</a> (uint64_t i, uint64_t j)=0</td></tr>
<tr class="memdesc:a1c4be324fc1e91c3039a49631f6e2cc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">getSampleUsageInSet accessor of the j-th sample in the i-th training set  <a href="#a1c4be324fc1e91c3039a49631f6e2cc9">More...</a><br /></td></tr>
<tr class="separator:a1c4be324fc1e91c3039a49631f6e2cc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af67b70402c8a7610ce4a99c252f53681"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="group__training__plan.xhtml#gafce529ac7282fd94c419e8bea8492268">SampleUsage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#af67b70402c8a7610ce4a99c252f53681">getSampleUsageInSetRef</a> (uint64_t i, uint64_t j)=0</td></tr>
<tr class="memdesc:af67b70402c8a7610ce4a99c252f53681"><td class="mdescLeft">&#160;</td><td class="mdescRight">getSampleUsageInSetRef non- accessor of the j-th sample in the i-th training set  <a href="#af67b70402c8a7610ce4a99c252f53681">More...</a><br /></td></tr>
<tr class="separator:af67b70402c8a7610ce4a99c252f53681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9acd4287a8208fa9a32867cafaf8e46"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="group__common.xhtml#gad5ca470fd07552bf1da82219827c4ec0">ParameterImportance</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#ab9acd4287a8208fa9a32867cafaf8e46">inputImportance</a> (uint64_t i)=0</td></tr>
<tr class="memdesc:ab9acd4287a8208fa9a32867cafaf8e46"><td class="mdescLeft">&#160;</td><td class="mdescRight">parameter returns the ParameterImportance for the i-th parameter  <a href="#ab9acd4287a8208fa9a32867cafaf8e46">More...</a><br /></td></tr>
<tr class="separator:ab9acd4287a8208fa9a32867cafaf8e46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60399ab71c2fcf3a21c9a613997c4822"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="group__common.xhtml#gad5ca470fd07552bf1da82219827c4ec0">ParameterImportance</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a60399ab71c2fcf3a21c9a613997c4822">inputImportanceInSubspace</a> (uint64_t i, uint64_t j, uint64_t o)=0</td></tr>
<tr class="memdesc:a60399ab71c2fcf3a21c9a613997c4822"><td class="mdescLeft">&#160;</td><td class="mdescRight">inputImportanceInSubspace returns true if the input j is in the subspace i.  <a href="#a60399ab71c2fcf3a21c9a613997c4822">More...</a><br /></td></tr>
<tr class="separator:a60399ab71c2fcf3a21c9a613997c4822"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed20b1ee85452a87a9e10f39077b94a3"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#aed20b1ee85452a87a9e10f39077b94a3">isValid</a> (::data_handler::DataHandlerBase)=0</td></tr>
<tr class="memdesc:aed20b1ee85452a87a9e10f39077b94a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the training plan is valid for the give datahandler.  <a href="#aed20b1ee85452a87a9e10f39077b94a3">More...</a><br /></td></tr>
<tr class="separator:aed20b1ee85452a87a9e10f39077b94a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c973e14b896504b0522fc953bb3b2dc"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a5c973e14b896504b0522fc953bb3b2dc">numInputs</a> ()=0</td></tr>
<tr class="memdesc:a5c973e14b896504b0522fc953bb3b2dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">numInputs returns the number of inputs used and defined in this training plan  <a href="#a5c973e14b896504b0522fc953bb3b2dc">More...</a><br /></td></tr>
<tr class="separator:a5c973e14b896504b0522fc953bb3b2dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad28bd2bb818cf6c433e22e22768086c"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#aad28bd2bb818cf6c433e22e22768086c">numOutputs</a> ()=0</td></tr>
<tr class="memdesc:aad28bd2bb818cf6c433e22e22768086c"><td class="mdescLeft">&#160;</td><td class="mdescRight">numOutputs returns the number of outputs used in this training plan  <a href="#aad28bd2bb818cf6c433e22e22768086c">More...</a><br /></td></tr>
<tr class="separator:aad28bd2bb818cf6c433e22e22768086c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef7e16a9a52c22ecb59f6148accae62"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a0ef7e16a9a52c22ecb59f6148accae62">numSamplesInSet</a> (uint64_t i)=0</td></tr>
<tr class="memdesc:a0ef7e16a9a52c22ecb59f6148accae62"><td class="mdescLeft">&#160;</td><td class="mdescRight">numSamplesInSet returns the number of elements (samples) in the training set  <a href="#a0ef7e16a9a52c22ecb59f6148accae62">More...</a><br /></td></tr>
<tr class="separator:a0ef7e16a9a52c22ecb59f6148accae62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad536b0ba37fa27e95a51c0aa3afc96da"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#ad536b0ba37fa27e95a51c0aa3afc96da">numSets</a> ()=0</td></tr>
<tr class="memdesc:ad536b0ba37fa27e95a51c0aa3afc96da"><td class="mdescLeft">&#160;</td><td class="mdescRight">numSets returns the number of training sets in the training plan  <a href="#ad536b0ba37fa27e95a51c0aa3afc96da">More...</a><br /></td></tr>
<tr class="separator:ad536b0ba37fa27e95a51c0aa3afc96da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44682836a8190246e4db84f997a003cc"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a44682836a8190246e4db84f997a003cc">numSubspaces</a> (uint64_t o)=0</td></tr>
<tr class="memdesc:a44682836a8190246e4db84f997a003cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">numSubspaces returns the number of filtered subspaces available in the Training Plan to the i-th output in the output matrix  <a href="#a44682836a8190246e4db84f997a003cc">More...</a><br /></td></tr>
<tr class="separator:a44682836a8190246e4db84f997a003cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88109fe981a2b192eb8e09a87ae563ed"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a88109fe981a2b192eb8e09a87ae563ed">numTestSamplesInSet</a> (uint64_t i)=0</td></tr>
<tr class="memdesc:a88109fe981a2b192eb8e09a87ae563ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">numTestSamplesInSet returns the number of elements (samples) in the training set that are labeled SampleUsage::Test  <a href="#a88109fe981a2b192eb8e09a87ae563ed">More...</a><br /></td></tr>
<tr class="separator:a88109fe981a2b192eb8e09a87ae563ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13261fec66c7bbac8c07123619300275"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a13261fec66c7bbac8c07123619300275">numTrainingSamplesInSet</a> (uint64_t i)=0</td></tr>
<tr class="memdesc:a13261fec66c7bbac8c07123619300275"><td class="mdescLeft">&#160;</td><td class="mdescRight">numTrainingSamplesInSet returns the number of elements (samples) in the training set that are labeled SampleUsage::Training  <a href="#a13261fec66c7bbac8c07123619300275">More...</a><br /></td></tr>
<tr class="separator:a13261fec66c7bbac8c07123619300275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e0dff9e7373d9800e8abe6a61af4c16"><td class="memItemLeft" align="right" valign="top">virtual uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_training_plan_base.xhtml#a3e0dff9e7373d9800e8abe6a61af4c16">output</a> (uint64_t i)=0</td></tr>
<tr class="memdesc:a3e0dff9e7373d9800e8abe6a61af4c16"><td class="mdescLeft">&#160;</td><td class="mdescRight">parameter returns the index of the i-th output in the output matrix  <a href="#a3e0dff9e7373d9800e8abe6a61af4c16">More...</a><br /></td></tr>
<tr class="separator:a3e0dff9e7373d9800e8abe6a61af4c16"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>TrainingPlan assigns a in a set of sample each sample a status on how the sample is to be treated during the training of a model. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a6e262334d7e27b9f05121454531fa5b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e262334d7e27b9f05121454531fa5b6">&#9670;&nbsp;</a></span>getInputs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_matrix.xhtml">Matrix</a> getInputs </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the inputs fitting the training plan from the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler to get the data from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The (scalar) input data </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#afc52921c8d133bb463c1dfa5a8b7ef22">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a5df8016765ccb017b2ff5778e3e81558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5df8016765ccb017b2ff5778e3e81558">&#9670;&nbsp;</a></span>getMOPIdent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string getMOPIdent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> ident the TrainingPlan is created for. </p>
<dl class="section return"><dt>Returns</dt><dd>The ident for the <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a> </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a255c5ecec66209c6f30d3d5f15177859">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a8de106670ace9e349ee9c149741b8e44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8de106670ace9e349ee9c149741b8e44">&#9670;&nbsp;</a></span>getOutputs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_matrix.xhtml">Matrix</a> getOutputs </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the outputs fitting the training plan from the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler to get the data from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The (scalar) output data </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a11f9260c1f6f8527fb75fa5950f52dfa">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a1c4be324fc1e91c3039a49631f6e2cc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c4be324fc1e91c3039a49631f6e2cc9">&#9670;&nbsp;</a></span>getSampleUsageInSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="group__training__plan.xhtml#gafce529ac7282fd94c419e8bea8492268">SampleUsage</a> getSampleUsageInSet </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>getSampleUsageInSet accessor of the j-th sample in the i-th training set </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>Index of the training set </td></tr>
    <tr><td class="paramname">j</td><td>Index of the sample in training set i </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The sample at the given indices </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a2b8e899313418568acbb9ed5b2ce6ade">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="af67b70402c8a7610ce4a99c252f53681"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af67b70402c8a7610ce4a99c252f53681">&#9670;&nbsp;</a></span>getSampleUsageInSetRef()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="group__training__plan.xhtml#gafce529ac7282fd94c419e8bea8492268">SampleUsage</a> getSampleUsageInSetRef </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>j</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>getSampleUsageInSetRef non- accessor of the j-th sample in the i-th training set </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>Index of the training set </td></tr>
    <tr><td class="paramname">j</td><td>Index of the sample in training set i </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The sample at the given indices </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a6c419ba361cd6d96b71e12bf657d940b">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="ab9acd4287a8208fa9a32867cafaf8e46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9acd4287a8208fa9a32867cafaf8e46">&#9670;&nbsp;</a></span>inputImportance()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="group__common.xhtml#gad5ca470fd07552bf1da82219827c4ec0">ParameterImportance</a> inputImportance </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>parameter returns the ParameterImportance for the i-th parameter </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>The index of the parameter </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The ParameterUsage of parameter i </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a7afbd5f5b1743bc2423ca855fe2603ab">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a60399ab71c2fcf3a21c9a613997c4822"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a60399ab71c2fcf3a21c9a613997c4822">&#9670;&nbsp;</a></span>inputImportanceInSubspace()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="group__common.xhtml#gad5ca470fd07552bf1da82219827c4ec0">ParameterImportance</a> inputImportanceInSubspace </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>j</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>o</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>inputImportanceInSubspace returns true if the input j is in the subspace i. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>Index of the subspace </td></tr>
    <tr><td class="paramname">j</td><td>Index of the input parameter </td></tr>
    <tr><td class="paramname">o</td><td>The o-th output the input is important to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ParameterImportance of input j is in subspace i for the given output </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#aa2ae62e6cab293f7c236e9bf273768f1">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="aed20b1ee85452a87a9e10f39077b94a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed20b1ee85452a87a9e10f39077b94a3">&#9670;&nbsp;</a></span>isValid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool isValid </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if the training plan is valid for the give datahandler. </p>
<dl class="section return"><dt>Returns</dt><dd>true iff the training plan is valid </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#ad4450a95cde865da632771935f1c57b3">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a5c973e14b896504b0522fc953bb3b2dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c973e14b896504b0522fc953bb3b2dc">&#9670;&nbsp;</a></span>numInputs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numInputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numInputs returns the number of inputs used and defined in this training plan </p>
<dl class="section return"><dt>Returns</dt><dd>The number of parameters the training plan is defined on </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#aae989fb2bbddfd907494bed60516e03d">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="aad28bd2bb818cf6c433e22e22768086c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad28bd2bb818cf6c433e22e22768086c">&#9670;&nbsp;</a></span>numOutputs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numOutputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numOutputs returns the number of outputs used in this training plan </p>
<dl class="section return"><dt>Returns</dt><dd>The number of outputs the training plan is defined on </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a762eb06ef18a50d3041ce79215855763">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a0ef7e16a9a52c22ecb59f6148accae62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ef7e16a9a52c22ecb59f6148accae62">&#9670;&nbsp;</a></span>numSamplesInSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numSamplesInSet </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numSamplesInSet returns the number of elements (samples) in the training set </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>The index of the training set </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of elements in set i </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#ad3ec25fce42515bda59cd6e7154a8258">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="ad536b0ba37fa27e95a51c0aa3afc96da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad536b0ba37fa27e95a51c0aa3afc96da">&#9670;&nbsp;</a></span>numSets()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numSets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numSets returns the number of training sets in the training plan </p>
<dl class="section return"><dt>Returns</dt><dd>The number of training sets </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a76d26675967b395d8924915b06fd44f9">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a44682836a8190246e4db84f997a003cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44682836a8190246e4db84f997a003cc">&#9670;&nbsp;</a></span>numSubspaces()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numSubspaces </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numSubspaces returns the number of filtered subspaces available in the Training Plan to the i-th output in the output matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">o</td><td>The index of the output </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of Subspaces for the given output </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a52bd33805e42f83fcad54b402b9d4ced">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a88109fe981a2b192eb8e09a87ae563ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88109fe981a2b192eb8e09a87ae563ed">&#9670;&nbsp;</a></span>numTestSamplesInSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numTestSamplesInSet </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numTestSamplesInSet returns the number of elements (samples) in the training set that are labeled SampleUsage::Test </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>The index of the training set </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of elements in set i </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#aacc683995d55549d854c2d2420aef90c">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a13261fec66c7bbac8c07123619300275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13261fec66c7bbac8c07123619300275">&#9670;&nbsp;</a></span>numTrainingSamplesInSet()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t numTrainingSamplesInSet </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>numTrainingSamplesInSet returns the number of elements (samples) in the training set that are labeled SampleUsage::Training </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>The index of the training set </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The number of elements in set i </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#ad37730c1466388aa53eaeccc3be698d8">SimpleTrainingPlan</a>.</p>

</div>
</div>
<a id="a3e0dff9e7373d9800e8abe6a61af4c16"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e0dff9e7373d9800e8abe6a61af4c16">&#9670;&nbsp;</a></span>output()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint64_t output </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>i</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>parameter returns the index of the i-th output in the output matrix </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">i</td><td>The index of the parameter </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The index of output i in the output matrix </dd></dl>

<p>Implemented in <a class="el" href="struct_simple_training_plan.xhtml#a233e0c56c9d1e12b9bc6503a37bc3d8c">SimpleTrainingPlan</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
