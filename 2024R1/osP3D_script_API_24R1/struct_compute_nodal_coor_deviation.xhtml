<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ComputeNodalCoorDeviation Struct Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_compute_nodal_coor_deviation.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="struct_compute_nodal_coor_deviation-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ComputeNodalCoorDeviation Struct Reference<div class="ingroups"><a class="el" href="group__toolbox.xhtml">Toolbox</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>a struct which collects settings for <em>computeNodalCoorDeviation</em>  
 <a href="struct_compute_nodal_coor_deviation.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0189742f0da37a369d017a2050a4719e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a0189742f0da37a369d017a2050a4719e">check</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_structure.xhtml">Structure</a> other)</td></tr>
<tr class="memdesc:a0189742f0da37a369d017a2050a4719e"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the settings on plausibility It throws an exception if there is a problem with the settings. Important: It tries to find out all problems with these settings and then exits the routine.  <a href="#a0189742f0da37a369d017a2050a4719e">More...</a><br /></td></tr>
<tr class="separator:a0189742f0da37a369d017a2050a4719e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26489e6c76f5d0965166ffe579ee857f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a26489e6c76f5d0965166ffe579ee857f">compute</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_structure.xhtml">Structure</a> other)</td></tr>
<tr class="memdesc:a26489e6c76f5d0965166ffe579ee857f"><td class="mdescLeft">&#160;</td><td class="mdescRight">computes the deviation of nodal coordinates between two meshes for multiple designs  <a href="#a26489e6c76f5d0965166ffe579ee857f">More...</a><br /></td></tr>
<tr class="separator:a26489e6c76f5d0965166ffe579ee857f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad46e4813869fcaa609a4898daa5143e0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#ad46e4813869fcaa609a4898daa5143e0">ComputeNodalCoorDeviation</a> (<a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>, <a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> the_data)</td></tr>
<tr class="memdesc:ad46e4813869fcaa609a4898daa5143e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor which sets suitable defaults for all members  <a href="#ad46e4813869fcaa609a4898daa5143e0">More...</a><br /></td></tr>
<tr class="separator:ad46e4813869fcaa609a4898daa5143e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefe1c6e9dd58271755ca069fdf346207"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#aefe1c6e9dd58271755ca069fdf346207">getDesignList</a> () const</td></tr>
<tr class="memdesc:aefe1c6e9dd58271755ca069fdf346207"><td class="mdescLeft">&#160;</td><td class="mdescRight">determins a minimal list of possible designs  <a href="#aefe1c6e9dd58271755ca069fdf346207">More...</a><br /></td></tr>
<tr class="separator:aefe1c6e9dd58271755ca069fdf346207"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a7dbc119025a1e10805b8513bcacf800f"><td class="memItemLeft" align="right" valign="top"><a id="a7dbc119025a1e10805b8513bcacf800f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a7dbc119025a1e10805b8513bcacf800f">associate_face_normals</a></td></tr>
<tr class="memdesc:a7dbc119025a1e10805b8513bcacf800f"><td class="mdescLeft">&#160;</td><td class="mdescRight">if true, then the detection tries to associate only those boundary faces which point into the same half space This may be good for thin-walled structures, but may fail in case of large deformations. <br /></td></tr>
<tr class="separator:a7dbc119025a1e10805b8513bcacf800f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff21fffab499ea652443206d66e1a9bb"><td class="memItemLeft" align="right" valign="top"><a id="aff21fffab499ea652443206d66e1a9bb"></a>
<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#aff21fffab499ea652443206d66e1a9bb">data</a></td></tr>
<tr class="memdesc:aff21fffab499ea652443206d66e1a9bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">the data set to be analyzed <br /></td></tr>
<tr class="separator:aff21fffab499ea652443206d66e1a9bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84f171f159e44cda05468c390a26b117"><td class="memItemLeft" align="right" valign="top"><a id="a84f171f159e44cda05468c390a26b117"></a>
number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a84f171f159e44cda05468c390a26b117">max_search_distance</a></td></tr>
<tr class="memdesc:a84f171f159e44cda05468c390a26b117"><td class="mdescLeft">&#160;</td><td class="mdescRight">the maximum search distance used in closest-point projection. default: 1/1000. of the maximum geometry dimension <br /></td></tr>
<tr class="separator:a84f171f159e44cda05468c390a26b117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b9ec182265ba45241552ff7f16c00c5"><td class="memItemLeft" align="right" valign="top"><a id="a0b9ec182265ba45241552ff7f16c00c5"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a0b9ec182265ba45241552ff7f16c00c5">new_normal_deviation_ident</a></td></tr>
<tr class="memdesc:a0b9ec182265ba45241552ff7f16c00c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">the ident of the nodal deviation object along normal direction (if empty: no object will be created) <br /></td></tr>
<tr class="separator:a0b9ec182265ba45241552ff7f16c00c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab520eea66858d526a07de90390e1848a"><td class="memItemLeft" align="right" valign="top"><a id="ab520eea66858d526a07de90390e1848a"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#ab520eea66858d526a07de90390e1848a">new_x_deviation_ident</a></td></tr>
<tr class="memdesc:ab520eea66858d526a07de90390e1848a"><td class="mdescLeft">&#160;</td><td class="mdescRight">the ident of the nodal deviation object along x direction (if empty: no object will be created) <br /></td></tr>
<tr class="separator:ab520eea66858d526a07de90390e1848a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a379503396eb9accb822e19da8f4aebdd"><td class="memItemLeft" align="right" valign="top"><a id="a379503396eb9accb822e19da8f4aebdd"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a379503396eb9accb822e19da8f4aebdd">new_y_deviation_ident</a></td></tr>
<tr class="memdesc:a379503396eb9accb822e19da8f4aebdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">the ident of the nodal deviation object along y direction (if empty: no object will be created) <br /></td></tr>
<tr class="separator:a379503396eb9accb822e19da8f4aebdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad269398b809e89e37bf0121f27b5a3c"><td class="memItemLeft" align="right" valign="top"><a id="aad269398b809e89e37bf0121f27b5a3c"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#aad269398b809e89e37bf0121f27b5a3c">new_z_deviation_ident</a></td></tr>
<tr class="memdesc:aad269398b809e89e37bf0121f27b5a3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">the ident of the nodal deviation object along z direction (if empty: no object will be created) <br /></td></tr>
<tr class="separator:aad269398b809e89e37bf0121f27b5a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4bf7ef2a5f03a8fd33c34eb119744f"><td class="memItemLeft" align="right" valign="top"><a id="adf4bf7ef2a5f03a8fd33c34eb119744f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#adf4bf7ef2a5f03a8fd33c34eb119744f">number_sided_n2s_contact</a></td></tr>
<tr class="memdesc:adf4bf7ef2a5f03a8fd33c34eb119744f"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines if a number sided node-to-surface projection is used in closest-point projection (recommended). If not, only the boundary nodes of <em>mesh_project_contactor</em> are chosen. <br /></td></tr>
<tr class="separator:adf4bf7ef2a5f03a8fd33c34eb119744f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memItemLeft" align="right" valign="top"><a id="ade25e60bd85c8b4abd4f5b416cae0eb9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#ade25e60bd85c8b4abd4f5b416cae0eb9">overwrite_existing</a></td></tr>
<tr class="memdesc:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">is true if already existing output data objects will be replaced. In this case, also all depending objects of the already existing one will be deleted. <br /></td></tr>
<tr class="separator:ade25e60bd85c8b4abd4f5b416cae0eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6825b5dc4ccdba6de65e45b3860e1c5c"><td class="memItemLeft" align="right" valign="top"><a id="a6825b5dc4ccdba6de65e45b3860e1c5c"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a6825b5dc4ccdba6de65e45b3860e1c5c">x_coor_ident</a></td></tr>
<tr class="memdesc:a6825b5dc4ccdba6de65e45b3860e1c5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">quantity representing x-coordiante <br /></td></tr>
<tr class="separator:a6825b5dc4ccdba6de65e45b3860e1c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a8ddf0194439f51b9be18cb5d994dae"><td class="memItemLeft" align="right" valign="top"><a id="a6a8ddf0194439f51b9be18cb5d994dae"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a6a8ddf0194439f51b9be18cb5d994dae">y_coor_ident</a></td></tr>
<tr class="memdesc:a6a8ddf0194439f51b9be18cb5d994dae"><td class="mdescLeft">&#160;</td><td class="mdescRight">quantity representing y-coordiante <br /></td></tr>
<tr class="separator:a6a8ddf0194439f51b9be18cb5d994dae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3fb9a43eb09e70eed52ee2486e5d32"><td class="memItemLeft" align="right" valign="top"><a id="a3a3fb9a43eb09e70eed52ee2486e5d32"></a>
string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml#a3a3fb9a43eb09e70eed52ee2486e5d32">z_coor_ident</a></td></tr>
<tr class="memdesc:a3a3fb9a43eb09e70eed52ee2486e5d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">quantity representing z-coordiante <br /></td></tr>
<tr class="separator:a3a3fb9a43eb09e70eed52ee2486e5d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>a struct which collects settings for <em>computeNodalCoorDeviation</em> </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad46e4813869fcaa609a4898daa5143e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad46e4813869fcaa609a4898daa5143e0">&#9670;&nbsp;</a></span>ComputeNodalCoorDeviation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_compute_nodal_coor_deviation.xhtml">ComputeNodalCoorDeviation</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>the_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor which sets suitable defaults for all members </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">the_data</td><td>the subset of field data to be token as input. </td></tr>
    <tr><td class="paramname">database</td><td>is the database to which <em>the_data</em> refers to. Is used to get information on the mesh geometry. The quantity idents are token as coordinate idents (in increasing alphabetical order). (the 1st 3 are token) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0189742f0da37a369d017a2050a4719e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0189742f0da37a369d017a2050a4719e">&#9670;&nbsp;</a></span>check()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">check </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>other</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks the settings on plausibility It throws an exception if there is a problem with the settings. Important: It tries to find out all problems with these settings and then exits the routine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the SoS structure </td></tr>
    <tr><td class="paramname">other</td><td>the other mesh from which the deviation is meshed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a26489e6c76f5d0965166ffe579ee857f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26489e6c76f5d0965166ffe579ee857f">&#9670;&nbsp;</a></span>compute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">compute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>other</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>computes the deviation of nodal coordinates between two meshes for multiple designs </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>the database where all new quantities are added to. </td></tr>
    <tr><td class="paramname">other</td><td>the other mesh. The deviation will be computed between the design meshes with respect to this mesh. Each design mesh is obtained by modifying the coordinates of the mesh stored in <em>database</em>. Then the deviation between /a other and this design mesh is computed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aefe1c6e9dd58271755ca069fdf346207"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefe1c6e9dd58271755ca069fdf346207">&#9670;&nbsp;</a></span>getDesignList()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">DataObjectContainer::string_vector_type</a> getDesignList </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>determins a minimal list of possible designs </p>
<dl class="section return"><dt>Returns</dt><dd>a vector of design sidents </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
