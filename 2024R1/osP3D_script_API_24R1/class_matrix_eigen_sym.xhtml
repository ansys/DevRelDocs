<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): MatrixEigenSym Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_matrix_eigen_sym.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_matrix_eigen_sym-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">MatrixEigenSym Class Reference<div class="ingroups"><a class="el" href="group__tmath.xhtml">tmath</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Eigen decomposition of symmetric matrices.  
 <a href="class_matrix_eigen_sym.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a973c5b26a9107f3517a08587cff16bd2"><td class="memItemLeft" align="right" valign="top"><a id="a973c5b26a9107f3517a08587cff16bd2"></a>
typedef Eigen::Matrix&lt; <a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a973c5b26a9107f3517a08587cff16bd2">Base</a></td></tr>
<tr class="memdesc:a973c5b26a9107f3517a08587cff16bd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">the Eigen matrix type we refer to <br /></td></tr>
<tr class="separator:a973c5b26a9107f3517a08587cff16bd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a0768641f04f51b58ea111f6f428b00"><td class="memItemLeft" align="right" valign="top"><a id="a7a0768641f04f51b58ea111f6f428b00"></a>
typedef Eigen::Matrix&lt; <a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a7a0768641f04f51b58ea111f6f428b00">Base2</a></td></tr>
<tr class="memdesc:a7a0768641f04f51b58ea111f6f428b00"><td class="mdescLeft">&#160;</td><td class="mdescRight">the Eigen matrix type which is used by the Eigen solvers <br /></td></tr>
<tr class="separator:a7a0768641f04f51b58ea111f6f428b00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31525d7455891e23040ebb9f024548be"><td class="memItemLeft" align="right" valign="top"><a id="a31525d7455891e23040ebb9f024548be"></a>
typedef int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a31525d7455891e23040ebb9f024548be">TIndex</a></td></tr>
<tr class="memdesc:a31525d7455891e23040ebb9f024548be"><td class="mdescLeft">&#160;</td><td class="mdescRight">index type of Eigen matrices <br /></td></tr>
<tr class="separator:a31525d7455891e23040ebb9f024548be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad33f729eda6e45412aac71cee702012f"><td class="memItemLeft" align="right" valign="top"><a id="ad33f729eda6e45412aac71cee702012f"></a>
typedef number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a></td></tr>
<tr class="memdesc:ad33f729eda6e45412aac71cee702012f"><td class="mdescLeft">&#160;</td><td class="mdescRight">the scalar tyta type of matrix elements <br /></td></tr>
<tr class="separator:ad33f729eda6e45412aac71cee702012f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05acf22c9e13df2dd8a0889f3a82984a"><td class="memItemLeft" align="right" valign="top"><a id="a05acf22c9e13df2dd8a0889f3a82984a"></a>
typedef Eigen::SelfAdjointEigenSolver&lt; <a class="el" href="class_matrix_eigen_sym.xhtml#a7a0768641f04f51b58ea111f6f428b00">Base2</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a05acf22c9e13df2dd8a0889f3a82984a">TSolver</a></td></tr>
<tr class="memdesc:a05acf22c9e13df2dd8a0889f3a82984a"><td class="mdescLeft">&#160;</td><td class="mdescRight">the solver type for standard eigenvalue problem <br /></td></tr>
<tr class="separator:a05acf22c9e13df2dd8a0889f3a82984a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf57bed8d1be5d670c004a0b9561a689"><td class="memItemLeft" align="right" valign="top"><a id="acf57bed8d1be5d670c004a0b9561a689"></a>
typedef Eigen::GeneralizedSelfAdjointEigenSolver&lt; <a class="el" href="class_matrix_eigen_sym.xhtml#a7a0768641f04f51b58ea111f6f428b00">Base2</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#acf57bed8d1be5d670c004a0b9561a689">TSolverGeneralized</a></td></tr>
<tr class="memdesc:acf57bed8d1be5d670c004a0b9561a689"><td class="mdescLeft">&#160;</td><td class="mdescRight">the solver type for generalized eigenvalue problem <br /></td></tr>
<tr class="separator:acf57bed8d1be5d670c004a0b9561a689"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac1a7734bfd755f5b20891adbda2e5ae3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#ac1a7734bfd755f5b20891adbda2e5ae3">__pow__</a> (<a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> exponent) const</td></tr>
<tr class="memdesc:ac1a7734bfd755f5b20891adbda2e5ae3"><td class="mdescLeft">&#160;</td><td class="mdescRight">operator ^(scalar) in scripting languages by SWIG  <a href="#ac1a7734bfd755f5b20891adbda2e5ae3">More...</a><br /></td></tr>
<tr class="separator:ac1a7734bfd755f5b20891adbda2e5ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2559d3424ae4c46803b8d9cfd34248b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a2559d3424ae4c46803b8d9cfd34248b3">Eigenvalues</a> () const</td></tr>
<tr class="separator:a2559d3424ae4c46803b8d9cfd34248b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77aadddc0daef135a3e8ee7bdc5e077b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a77aadddc0daef135a3e8ee7bdc5e077b">Eigenvectors</a> () const</td></tr>
<tr class="separator:a77aadddc0daef135a3e8ee7bdc5e077b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0ed699d6b4ae6111af006ad979112c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#abe0ed699d6b4ae6111af006ad979112c">EigenvectorsAvailable</a> () const</td></tr>
<tr class="separator:abe0ed699d6b4ae6111af006ad979112c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87f6fab7e3fe95960eaeb1b498c93e07"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a87f6fab7e3fe95960eaeb1b498c93e07">Exp</a> ()</td></tr>
<tr class="separator:a87f6fab7e3fe95960eaeb1b498c93e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a390d11bc9bb6b0a596e78b2fd79a9f04"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a390d11bc9bb6b0a596e78b2fd79a9f04">IsGeneralEigenproblem</a> () const</td></tr>
<tr class="separator:a390d11bc9bb6b0a596e78b2fd79a9f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51da26cb713f8a3acf7856fba158ed60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a51da26cb713f8a3acf7856fba158ed60">Log</a> ()</td></tr>
<tr class="separator:a51da26cb713f8a3acf7856fba158ed60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabca9a521f03b111946075607efd5abf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#aabca9a521f03b111946075607efd5abf">MatrixEigenSym</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> _object, bool computevectors=true)</td></tr>
<tr class="memdesc:aabca9a521f03b111946075607efd5abf"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#aabca9a521f03b111946075607efd5abf">More...</a><br /></td></tr>
<tr class="separator:aabca9a521f03b111946075607efd5abf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ccaac89fc3bd7623579777afba85371"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a3ccaac89fc3bd7623579777afba85371">MatrixEigenSym</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> _object, <a class="el" href="class_matrix.xhtml">Matrix</a> mass, bool computevectors=true)</td></tr>
<tr class="memdesc:a3ccaac89fc3bd7623579777afba85371"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructor of a generalized eigenvalue problem  <a href="#a3ccaac89fc3bd7623579777afba85371">More...</a><br /></td></tr>
<tr class="separator:a3ccaac89fc3bd7623579777afba85371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a635c08172a091d0965aaa27c94c13800"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#a635c08172a091d0965aaa27c94c13800">OperatorInverseSqrt</a> () const</td></tr>
<tr class="separator:a635c08172a091d0965aaa27c94c13800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4dd9c8bbfecd5a7634ef3c542e05cbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#ad4dd9c8bbfecd5a7634ef3c542e05cbf">OperatorSqrt</a> () const</td></tr>
<tr class="separator:ad4dd9c8bbfecd5a7634ef3c542e05cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af79633a1270172c5f549fa393c4e7856"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_matrix_eigen_sym.xhtml#af79633a1270172c5f549fa393c4e7856">Pow</a> (<a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a> exponent)</td></tr>
<tr class="separator:af79633a1270172c5f549fa393c4e7856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Eigen decomposition of symmetric matrices. </p>
<p>This class provides an Eigen decomposition of symmetric matrices. At construction, it factorizes the given matrix and stores eigenvalues and (if asked for) eigenvectors. The constructor accepts either the standard eigenvalues problem (of a single symmetric matrix) or the generalized eigenvalue problem (of 2 symmetric matrices).</p>
<p>The class is equipped with methods and arithmetic operators which provide the </p><ul>
<li>matrix exponential </li>
<li>matrix power </li>
<li>matrix logarithm </li>
<li>matrix square root using the full decomposition. </li>
</ul>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aabca9a521f03b111946075607efd5abf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabca9a521f03b111946075607efd5abf">&#9670;&nbsp;</a></span>MatrixEigenSym() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_eigen_sym.xhtml">MatrixEigenSym</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>_object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>computevectors</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>destructor </p>
<p>constructor of a standard eigenvalue problem </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">_object</td><td>the matrix to be decomposed </td></tr>
    <tr><td class="paramname">computevectors</td><td>if true, then also the eigenvectors are computed. else only eigenvalues </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3ccaac89fc3bd7623579777afba85371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ccaac89fc3bd7623579777afba85371">&#9670;&nbsp;</a></span>MatrixEigenSym() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix_eigen_sym.xhtml">MatrixEigenSym</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>_object</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>mass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>computevectors</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>constructor of a generalized eigenvalue problem </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">_object</td><td>the matrix to be decomposed, eg. the stiffness matrix </td></tr>
    <tr><td class="paramname">mass</td><td>the second matrix, eg. the mass matrix </td></tr>
    <tr><td class="paramname">computevectors</td><td>if true, then also the eigenvectors are computed. else only eigenvalues </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac1a7734bfd755f5b20891adbda2e5ae3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1a7734bfd755f5b20891adbda2e5ae3">&#9670;&nbsp;</a></span>__pow__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> __pow__ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>exponent</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>operator ^(scalar) in scripting languages by SWIG </p>
<dl class="section return"><dt>Returns</dt><dd>the power of the matrix, i.e. $ A^n$ $ </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">exponent</td><td>the exponent $ n $ </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2559d3424ae4c46803b8d9cfd34248b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2559d3424ae4c46803b8d9cfd34248b3">&#9670;&nbsp;</a></span>Eigenvalues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Eigenvalues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the eigenvalues as vector </dd></dl>

</div>
</div>
<a id="a77aadddc0daef135a3e8ee7bdc5e077b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77aadddc0daef135a3e8ee7bdc5e077b">&#9670;&nbsp;</a></span>Eigenvectors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Eigenvectors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the normalized complex eigenvectors as a matrix of column vectors. </dd></dl>

</div>
</div>
<a id="abe0ed699d6b4ae6111af006ad979112c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe0ed699d6b4ae6111af006ad979112c">&#9670;&nbsp;</a></span>EigenvectorsAvailable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool EigenvectorsAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>m_eigenvectorsAvailable </dd></dl>

</div>
</div>
<a id="a87f6fab7e3fe95960eaeb1b498c93e07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87f6fab7e3fe95960eaeb1b498c93e07">&#9670;&nbsp;</a></span>Exp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Exp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the exponential of the matrix </dd></dl>

</div>
</div>
<a id="a390d11bc9bb6b0a596e78b2fd79a9f04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a390d11bc9bb6b0a596e78b2fd79a9f04">&#9670;&nbsp;</a></span>IsGeneralEigenproblem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool IsGeneralEigenproblem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>m_isGeneralEigenproblem </dd></dl>

</div>
</div>
<a id="a51da26cb713f8a3acf7856fba158ed60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51da26cb713f8a3acf7856fba158ed60">&#9670;&nbsp;</a></span>Log()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Log </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the logarithm of the matrix </dd></dl>

</div>
</div>
<a id="a635c08172a091d0965aaa27c94c13800"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a635c08172a091d0965aaa27c94c13800">&#9670;&nbsp;</a></span>OperatorInverseSqrt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> OperatorInverseSqrt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the positive inverse square root of the matrix (if positive definite) </dd></dl>

</div>
</div>
<a id="ad4dd9c8bbfecd5a7634ef3c542e05cbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4dd9c8bbfecd5a7634ef3c542e05cbf">&#9670;&nbsp;</a></span>OperatorSqrt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> OperatorSqrt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the positive square root of the matrix (if positive definite) </dd></dl>

</div>
</div>
<a id="af79633a1270172c5f549fa393c4e7856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af79633a1270172c5f549fa393c4e7856">&#9670;&nbsp;</a></span>Pow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> Pow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix_eigen_sym.xhtml#ad33f729eda6e45412aac71cee702012f">TScalar</a>&#160;</td>
          <td class="paramname"><em>exponent</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the power of the matrix, i.e. $ A^n$ $ </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">exponent</td><td>the exponent $ n $ </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
