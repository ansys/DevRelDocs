<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): DataObjectContainer Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_data_object_container.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="class_data_object_container-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">DataObjectContainer Class Reference<div class="ingroups"><a class="el" href="group__data.xhtml">Data</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A general container for vector data.  
 <a href="class_data_object_container.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a831464cbf6637a6d9426cfad4b30e1e5"><td class="memItemLeft" align="right" valign="top"><a id="a831464cbf6637a6d9426cfad4b30e1e5"></a>
typedef std::vector&lt; <a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a831464cbf6637a6d9426cfad4b30e1e5">data_object_key_vector_type</a></td></tr>
<tr class="memdesc:a831464cbf6637a6d9426cfad4b30e1e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of <a class="el" href="class_data_object_key.xhtml" title="the key (ident) of a data object in generic containers. ">DataObjectKey</a>. <br /></td></tr>
<tr class="separator:a831464cbf6637a6d9426cfad4b30e1e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac293ea0e5c280f69a497ea20f20c60b9"><td class="memItemLeft" align="right" valign="top"><a id="ac293ea0e5c280f69a497ea20f20c60b9"></a>
typedef std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a></td></tr>
<tr class="memdesc:ac293ea0e5c280f69a497ea20f20c60b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of strings. <br /></td></tr>
<tr class="separator:ac293ea0e5c280f69a497ea20f20c60b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfb5e26073200c58da3e0f81b56d2a39"><td class="memItemLeft" align="right" valign="top"><a id="abfb5e26073200c58da3e0f81b56d2a39"></a>
typedef std::vector&lt; Design &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#abfb5e26073200c58da3e0f81b56d2a39">TDesignContainer</a></td></tr>
<tr class="memdesc:abfb5e26073200c58da3e0f81b56d2a39"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of all designs. <br /></td></tr>
<tr class="separator:abfb5e26073200c58da3e0f81b56d2a39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0ed0d9450d62e8ca7197ab3e8e20e80"><td class="memItemLeft" align="right" valign="top"><a id="ab0ed0d9450d62e8ca7197ab3e8e20e80"></a>
typedef std::map&lt; string, size_t &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ab0ed0d9450d62e8ca7197ab3e8e20e80">TDesignMap</a></td></tr>
<tr class="memdesc:ab0ed0d9450d62e8ca7197ab3e8e20e80"><td class="mdescLeft">&#160;</td><td class="mdescRight">A map mapping design ID to a an index of the vector of designs. <br /></td></tr>
<tr class="separator:ab0ed0d9450d62e8ca7197ab3e8e20e80"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4abe693e43c5eb23dd077b7b94ca3c51"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a4abe693e43c5eb23dd077b7b94ca3c51">__getitem__</a> (int idx) const</td></tr>
<tr class="memdesc:a4abe693e43c5eb23dd077b7b94ca3c51"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the i-th element of the current filter  <a href="#a4abe693e43c5eb23dd077b7b94ca3c51">More...</a><br /></td></tr>
<tr class="separator:a4abe693e43c5eb23dd077b7b94ca3c51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44139caf93a3463ea4f2a6671cdce842"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a44139caf93a3463ea4f2a6671cdce842">__str__</a> ()</td></tr>
<tr class="memdesc:a44139caf93a3463ea4f2a6671cdce842"><td class="mdescLeft">&#160;</td><td class="mdescRight">provides the print() method for this class in SWIG bindings  <a href="#a44139caf93a3463ea4f2a6671cdce842">More...</a><br /></td></tr>
<tr class="separator:a44139caf93a3463ea4f2a6671cdce842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01bdbe9866e84f434efc56d18d2c625"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac01bdbe9866e84f434efc56d18d2c625">active</a> ()</td></tr>
<tr class="memdesc:ac01bdbe9866e84f434efc56d18d2c625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for active data objects.  <a href="#ac01bdbe9866e84f434efc56d18d2c625">More...</a><br /></td></tr>
<tr class="separator:ac01bdbe9866e84f434efc56d18d2c625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c22d297a703c1846cdf7c004eaef75"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a95c22d297a703c1846cdf7c004eaef75">depInputs</a> ()</td></tr>
<tr class="memdesc:a95c22d297a703c1846cdf7c004eaef75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for data objects marked as DOE dependent parameters.  <a href="#a95c22d297a703c1846cdf7c004eaef75">More...</a><br /></td></tr>
<tr class="separator:a95c22d297a703c1846cdf7c004eaef75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe1450937e7407938176edb6754befbf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#afe1450937e7407938176edb6754befbf">designIdents</a> ()</td></tr>
<tr class="memdesc:afe1450937e7407938176edb6754befbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates a vector of strings containing all design idents being part in this filter The ordering of the vector corresponds to the ordering of the ouput of generateVector()  <a href="#afe1450937e7407938176edb6754befbf">More...</a><br /></td></tr>
<tr class="separator:afe1450937e7407938176edb6754befbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc070c7b791f8091a5a95c71b6f14735"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#afc070c7b791f8091a5a95c71b6f14735">designs</a> ()</td></tr>
<tr class="memdesc:afc070c7b791f8091a5a95c71b6f14735"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a vector of strings containing all design idents being part in this filter.  <a href="#afc070c7b791f8091a5a95c71b6f14735">More...</a><br /></td></tr>
<tr class="separator:afc070c7b791f8091a5a95c71b6f14735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988ee6b7e261a025f1310f81507f43a3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a988ee6b7e261a025f1310f81507f43a3">fillValueTypeManager</a> (::core::ValueTypeManager manager)</td></tr>
<tr class="memdesc:a988ee6b7e261a025f1310f81507f43a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill <a class="el" href="class_value_type_manager.xhtml" title="Keeps track of all unique ValueTypes. Required to create new ValueType shared resource instances...">ValueTypeManager</a> with all ValueTypes contained in this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>.  <a href="#a988ee6b7e261a025f1310f81507f43a3">More...</a><br /></td></tr>
<tr class="separator:a988ee6b7e261a025f1310f81507f43a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9c0e23be84ab48b5ea1841779e66268"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aa9c0e23be84ab48b5ea1841779e66268">filterDesign</a> (string design_id, bool match_regex=false)</td></tr>
<tr class="memdesc:aa9c0e23be84ab48b5ea1841779e66268"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the design ID is equal to the given ID.  <a href="#aa9c0e23be84ab48b5ea1841779e66268">More...</a><br /></td></tr>
<tr class="separator:aa9c0e23be84ab48b5ea1841779e66268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2239c5a1d607e7cae55a6c135efd7e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3d2239c5a1d607e7cae55a6c135efd7e">filterDesign</a> (<a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> ids)</td></tr>
<tr class="memdesc:a3d2239c5a1d607e7cae55a6c135efd7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the design ID is equal to one of the given ID list. Design IDs not found in the current <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> are skipped.  <a href="#a3d2239c5a1d607e7cae55a6c135efd7e">More...</a><br /></td></tr>
<tr class="separator:a3d2239c5a1d607e7cae55a6c135efd7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6363bd922e52a89952fae621f41258fc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a6363bd922e52a89952fae621f41258fc">filterID</a> (string design_id, string quantity_id)</td></tr>
<tr class="memdesc:a6363bd922e52a89952fae621f41258fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a set containing a single or no data object, defined by design and quantity ID.  <a href="#a6363bd922e52a89952fae621f41258fc">More...</a><br /></td></tr>
<tr class="separator:a6363bd922e52a89952fae621f41258fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a942f7516510aaf8a95658389d930bcc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a942f7516510aaf8a95658389d930bcc0">filterID</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key)</td></tr>
<tr class="memdesc:a942f7516510aaf8a95658389d930bcc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns container containing a single DataObject.  <a href="#a942f7516510aaf8a95658389d930bcc0">More...</a><br /></td></tr>
<tr class="separator:a942f7516510aaf8a95658389d930bcc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5371193e6891419a03ef367a5216f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a8b5371193e6891419a03ef367a5216f0">filterID</a> (<a class="el" href="class_data_object_container.xhtml#a831464cbf6637a6d9426cfad4b30e1e5">data_object_key_vector_type</a> key_vector)</td></tr>
<tr class="memdesc:a8b5371193e6891419a03ef367a5216f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a container containing all objects in key_vector. Throws an ERROR if key_vector contains duplicate DataObjectKeys.  <a href="#a8b5371193e6891419a03ef367a5216f0">More...</a><br /></td></tr>
<tr class="separator:a8b5371193e6891419a03ef367a5216f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62dbf8a6166ee22a6dc160040fac8257"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a62dbf8a6166ee22a6dc160040fac8257">filterQuantity</a> (string quantity_id, bool match_regex=false)</td></tr>
<tr class="memdesc:a62dbf8a6166ee22a6dc160040fac8257"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the quantity ident is equal to the given ID.  <a href="#a62dbf8a6166ee22a6dc160040fac8257">More...</a><br /></td></tr>
<tr class="separator:a62dbf8a6166ee22a6dc160040fac8257"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8619edf76b71eb71488e02d2afe534ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a8619edf76b71eb71488e02d2afe534ed">filterQuantity</a> (<a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> ids)</td></tr>
<tr class="memdesc:a8619edf76b71eb71488e02d2afe534ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the quantity ID is equal to one of the given ID list. Quantity IDs not found in the current <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> are skipped.  <a href="#a8619edf76b71eb71488e02d2afe534ed">More...</a><br /></td></tr>
<tr class="separator:a8619edf76b71eb71488e02d2afe534ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5e524cbe635d05cebaf52b2eee73bd6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac5e524cbe635d05cebaf52b2eee73bd6">filterSerializable</a> ()</td></tr>
<tr class="memdesc:ac5e524cbe635d05cebaf52b2eee73bd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a subset of all data objects which can be serialized These are all objects which do not contain any NaN or infinity numbers.  <a href="#ac5e524cbe635d05cebaf52b2eee73bd6">More...</a><br /></td></tr>
<tr class="separator:ac5e524cbe635d05cebaf52b2eee73bd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88778d03fe76cec6eb828dd57ac82411"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a88778d03fe76cec6eb828dd57ac82411">filterType</a> (<a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> type)</td></tr>
<tr class="memdesc:a88778d03fe76cec6eb828dd57ac82411"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a container containing objects of a single type.  <a href="#a88778d03fe76cec6eb828dd57ac82411">More...</a><br /></td></tr>
<tr class="separator:a88778d03fe76cec6eb828dd57ac82411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a064c6b8de61a4eaabc1d8ecb7777acfb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a064c6b8de61a4eaabc1d8ecb7777acfb">filterWithoutDesign</a> (string design_id)</td></tr>
<tr class="memdesc:a064c6b8de61a4eaabc1d8ecb7777acfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the design ID is NOT equal to the given ID.  <a href="#a064c6b8de61a4eaabc1d8ecb7777acfb">More...</a><br /></td></tr>
<tr class="separator:a064c6b8de61a4eaabc1d8ecb7777acfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fee6f94f9d158b13b25333773d2dd0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a2fee6f94f9d158b13b25333773d2dd0f">filterWithoutID</a> (string design_id, string quantity_id)</td></tr>
<tr class="memdesc:a2fee6f94f9d158b13b25333773d2dd0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects NOT containing the data object defined by ID and quantity ID.  <a href="#a2fee6f94f9d158b13b25333773d2dd0f">More...</a><br /></td></tr>
<tr class="separator:a2fee6f94f9d158b13b25333773d2dd0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9894e187de92b709b980af4f72657d4f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a9894e187de92b709b980af4f72657d4f">filterWithoutQuantity</a> (string quantity_id)</td></tr>
<tr class="memdesc:a9894e187de92b709b980af4f72657d4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the subset of data objects where the quantity ID is NOT equal to the given ID.  <a href="#a9894e187de92b709b980af4f72657d4f">More...</a><br /></td></tr>
<tr class="separator:a9894e187de92b709b980af4f72657d4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac128db8392720a15d6e7f47e93c88b80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac128db8392720a15d6e7f47e93c88b80">fromFile</a> ()</td></tr>
<tr class="memdesc:ac128db8392720a15d6e7f47e93c88b80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for data objects which were imported from a file.  <a href="#ac128db8392720a15d6e7f47e93c88b80">More...</a><br /></td></tr>
<tr class="separator:ac128db8392720a15d6e7f47e93c88b80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a892eff18dec0d7b6fd05c72b2b25091b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a892eff18dec0d7b6fd05c72b2b25091b">inactive</a> ()</td></tr>
<tr class="memdesc:a892eff18dec0d7b6fd05c72b2b25091b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for inactive data objects.  <a href="#a892eff18dec0d7b6fd05c72b2b25091b">More...</a><br /></td></tr>
<tr class="separator:a892eff18dec0d7b6fd05c72b2b25091b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad628e58a3f2370187cefb859563cc746"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ad628e58a3f2370187cefb859563cc746">inputs</a> ()</td></tr>
<tr class="memdesc:ad628e58a3f2370187cefb859563cc746"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for data objects marked as DOE input parameters.  <a href="#ad628e58a3f2370187cefb859563cc746">More...</a><br /></td></tr>
<tr class="separator:ad628e58a3f2370187cefb859563cc746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01c71804ddc13e4fca2aacd02134a769"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a01c71804ddc13e4fca2aacd02134a769">nonSamples</a> ()</td></tr>
<tr class="memdesc:a01c71804ddc13e4fca2aacd02134a769"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for non-sample data objects.  <a href="#a01c71804ddc13e4fca2aacd02134a769">More...</a><br /></td></tr>
<tr class="separator:a01c71804ddc13e4fca2aacd02134a769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93923d7bedbfe9a068d53784f6e0c3d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a93923d7bedbfe9a068d53784f6e0c3d8">notFromFile</a> ()</td></tr>
<tr class="memdesc:a93923d7bedbfe9a068d53784f6e0c3d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for data objects which were NOT imported from a file.  <a href="#a93923d7bedbfe9a068d53784f6e0c3d8">More...</a><br /></td></tr>
<tr class="separator:a93923d7bedbfe9a068d53784f6e0c3d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accde3afcbb0415939e45252512b3af66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#accde3afcbb0415939e45252512b3af66">operator*</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="memdesc:accde3afcbb0415939e45252512b3af66"><td class="mdescLeft">&#160;</td><td class="mdescRight">performs the set intersection  <a href="#accde3afcbb0415939e45252512b3af66">More...</a><br /></td></tr>
<tr class="separator:accde3afcbb0415939e45252512b3af66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89ca332a23d46e97018f24b3b634e8aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a89ca332a23d46e97018f24b3b634e8aa">operator+</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="memdesc:a89ca332a23d46e97018f24b3b634e8aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">performs the set union  <a href="#a89ca332a23d46e97018f24b3b634e8aa">More...</a><br /></td></tr>
<tr class="separator:a89ca332a23d46e97018f24b3b634e8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a717b8362e30ad94fd57b9087f3aec065"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a717b8362e30ad94fd57b9087f3aec065">operator/</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="memdesc:a717b8362e30ad94fd57b9087f3aec065"><td class="mdescLeft">&#160;</td><td class="mdescRight">performs the set difference  <a href="#a717b8362e30ad94fd57b9087f3aec065">More...</a><br /></td></tr>
<tr class="separator:a717b8362e30ad94fd57b9087f3aec065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addd137ea1cb68d019bbc027e787d0f3e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#addd137ea1cb68d019bbc027e787d0f3e">operator==</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="separator:addd137ea1cb68d019bbc027e787d0f3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3528fa5c2bc9da26a1c3cdda3d645c0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3528fa5c2bc9da26a1c3cdda3d645c0b">operator[]</a> (int idx)</td></tr>
<tr class="memdesc:a3528fa5c2bc9da26a1c3cdda3d645c0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the i-th element of the current filter  <a href="#a3528fa5c2bc9da26a1c3cdda3d645c0b">More...</a><br /></td></tr>
<tr class="separator:a3528fa5c2bc9da26a1c3cdda3d645c0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47e8fae53b8f978396af4b4007c6b95"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#af47e8fae53b8f978396af4b4007c6b95">quantities</a> ()</td></tr>
<tr class="memdesc:af47e8fae53b8f978396af4b4007c6b95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a vector of strings containing all quantity idents being part in this filter.  <a href="#af47e8fae53b8f978396af4b4007c6b95">More...</a><br /></td></tr>
<tr class="separator:af47e8fae53b8f978396af4b4007c6b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fd2740b12d821c55d78c29aaf7585ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3fd2740b12d821c55d78c29aaf7585ca">quantityIdents</a> ()</td></tr>
<tr class="memdesc:a3fd2740b12d821c55d78c29aaf7585ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates a vector of strings containing all quantity idents being part in this filter The ordering of the vector corresponds to the ordering of the ouput of generateVector()  <a href="#a3fd2740b12d821c55d78c29aaf7585ca">More...</a><br /></td></tr>
<tr class="separator:a3fd2740b12d821c55d78c29aaf7585ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7636c3263b7ecc20a761612d3adce18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac7636c3263b7ecc20a761612d3adce18">responses</a> ()</td></tr>
<tr class="memdesc:ac7636c3263b7ecc20a761612d3adce18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for data objects marked as DOE responses.  <a href="#ac7636c3263b7ecc20a761612d3adce18">More...</a><br /></td></tr>
<tr class="separator:ac7636c3263b7ecc20a761612d3adce18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8fb74d0fa2c408063005cf2a32a8b1b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ac8fb74d0fa2c408063005cf2a32a8b1b">samples</a> ()</td></tr>
<tr class="memdesc:ac8fb74d0fa2c408063005cf2a32a8b1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter for sample data objects.  <a href="#ac8fb74d0fa2c408063005cf2a32a8b1b">More...</a><br /></td></tr>
<tr class="separator:ac8fb74d0fa2c408063005cf2a32a8b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a274f83fd436019cca4ae43f1fb574"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ae5a274f83fd436019cca4ae43f1fb574">setActive</a> (bool <a class="el" href="class_data_object_container.xhtml#ac01bdbe9866e84f434efc56d18d2c625">active</a>)</td></tr>
<tr class="memdesc:ae5a274f83fd436019cca4ae43f1fb574"><td class="mdescLeft">&#160;</td><td class="mdescRight">changes the activity flag of all contained objects  <a href="#ae5a274f83fd436019cca4ae43f1fb574">More...</a><br /></td></tr>
<tr class="separator:ae5a274f83fd436019cca4ae43f1fb574"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Create DataObjectContainer</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Methods handling data object life time </p>
</div></td></tr>
<tr class="memitem:a5f52eb5e961329776d0c2734386672e9"><td class="memItemLeft" align="right" valign="top"><a id="a5f52eb5e961329776d0c2734386672e9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a5f52eb5e961329776d0c2734386672e9">DataObjectContainer</a> ()</td></tr>
<tr class="memdesc:a5f52eb5e961329776d0c2734386672e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">default constructor (creates an empty container) <br /></td></tr>
<tr class="separator:a5f52eb5e961329776d0c2734386672e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c2a1cc92b9d99f88f88cb05e3dde2d3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3c2a1cc92b9d99f88f88cb05e3dde2d3">DataObjectContainer</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="memdesc:a3c2a1cc92b9d99f88f88cb05e3dde2d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">copy constructor  <a href="#a3c2a1cc92b9d99f88f88cb05e3dde2d3">More...</a><br /></td></tr>
<tr class="separator:a3c2a1cc92b9d99f88f88cb05e3dde2d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada0c8d77172a82e6e61f72280a058273"><td class="memItemLeft" align="right" valign="top"><a id="ada0c8d77172a82e6e61f72280a058273"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ada0c8d77172a82e6e61f72280a058273">DataObjectContainer</a> (<a class="el" href="class_data_object_container.xhtml#abfb5e26073200c58da3e0f81b56d2a39">TDesignContainer</a> <a class="el" href="class_data_object_container.xhtml#afc070c7b791f8091a5a95c71b6f14735">designs</a>, <a class="el" href="class_data_object_container.xhtml#ab0ed0d9450d62e8ca7197ab3e8e20e80">TDesignMap</a> design_map, std::map&lt; <a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>, number &gt; <a class="el" href="class_data_object_container.xhtml#a3826d5a1e240c1c24f271a0410911069">dimension</a>)</td></tr>
<tr class="memdesc:ada0c8d77172a82e6e61f72280a058273"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create container from its components. <br /></td></tr>
<tr class="separator:ada0c8d77172a82e6e61f72280a058273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3619cbe41ed2a2e1f2f654e5e9e427db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3619cbe41ed2a2e1f2f654e5e9e427db">operator=</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other)</td></tr>
<tr class="memdesc:a3619cbe41ed2a2e1f2f654e5e9e427db"><td class="mdescLeft">&#160;</td><td class="mdescRight">destructor  <a href="#a3619cbe41ed2a2e1f2f654e5e9e427db">More...</a><br /></td></tr>
<tr class="separator:a3619cbe41ed2a2e1f2f654e5e9e427db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Element Access</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p>Methods to query and especially modify (insert, erase) data container state </p>
</div></td></tr>
<tr class="memitem:a72704c60f2b9d84b3986265aea0fe0b8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a72704c60f2b9d84b3986265aea0fe0b8">exists</a> (string design, string quantity)</td></tr>
<tr class="memdesc:a72704c60f2b9d84b3986265aea0fe0b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether a DataObject of given design ID and quantity ID exists.  <a href="#a72704c60f2b9d84b3986265aea0fe0b8">More...</a><br /></td></tr>
<tr class="separator:a72704c60f2b9d84b3986265aea0fe0b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafcbe4a7beac4d373c25368e4c675dc4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aafcbe4a7beac4d373c25368e4c675dc4">exists</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key)</td></tr>
<tr class="memdesc:aafcbe4a7beac4d373c25368e4c675dc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether a DataObject with the given <a class="el" href="class_data_object_key.xhtml" title="the key (ident) of a data object in generic containers. ">DataObjectKey</a> exists.  <a href="#aafcbe4a7beac4d373c25368e4c675dc4">More...</a><br /></td></tr>
<tr class="separator:aafcbe4a7beac4d373c25368e4c675dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d96425fdcb11118c0bb72444441f2b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a7d96425fdcb11118c0bb72444441f2b9">designExists</a> (string design)</td></tr>
<tr class="memdesc:a7d96425fdcb11118c0bb72444441f2b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether any DataObject with the given design ID exists. Computational complexity is of order O( log N_designs ).  <a href="#a7d96425fdcb11118c0bb72444441f2b9">More...</a><br /></td></tr>
<tr class="separator:a7d96425fdcb11118c0bb72444441f2b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a566784596083c7810e86cd900a5b8c1d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a566784596083c7810e86cd900a5b8c1d">quantityExists</a> (string quantity)</td></tr>
<tr class="memdesc:a566784596083c7810e86cd900a5b8c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether any DataObject with the given quantity ID exists. Worst case computational complexity is of order O( N_designs * log N_quantities)  <a href="#a566784596083c7810e86cd900a5b8c1d">More...</a><br /></td></tr>
<tr class="separator:a566784596083c7810e86cd900a5b8c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1c3801d3ff9a1bf0749dffdf1e242d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ae1c3801d3ff9a1bf0749dffdf1e242d5">find</a> (string design, string quantity)</td></tr>
<tr class="memdesc:ae1c3801d3ff9a1bf0749dffdf1e242d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the data object with given data key.  <a href="#ae1c3801d3ff9a1bf0749dffdf1e242d5">More...</a><br /></td></tr>
<tr class="separator:ae1c3801d3ff9a1bf0749dffdf1e242d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00f452f17159cf5600ee5f48d15be6cc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a00f452f17159cf5600ee5f48d15be6cc">find</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key)</td></tr>
<tr class="memdesc:a00f452f17159cf5600ee5f48d15be6cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the data object with given data key.  <a href="#a00f452f17159cf5600ee5f48d15be6cc">More...</a><br /></td></tr>
<tr class="separator:a00f452f17159cf5600ee5f48d15be6cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7ea9a06802a14acba40ee576f16fb72"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ae7ea9a06802a14acba40ee576f16fb72">checkInsert</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key, bool overwrite_existing=false)</td></tr>
<tr class="memdesc:ae7ea9a06802a14acba40ee576f16fb72"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks if an item can be inserted  <a href="#ae7ea9a06802a14acba40ee576f16fb72">More...</a><br /></td></tr>
<tr class="separator:ae7ea9a06802a14acba40ee576f16fb72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a844c9a5a2416075dbb621837faddc4f8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a844c9a5a2416075dbb621837faddc4f8">insert</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> item)</td></tr>
<tr class="memdesc:a844c9a5a2416075dbb621837faddc4f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">inserts a new data object. Assigns <a class="el" href="class_value_type_double.xhtml" title="Identifies a set of values as number precision floating points values and an associated set of option...">ValueTypeDouble</a> (named after key.quantity()) to the inserted data object.  <a href="#a844c9a5a2416075dbb621837faddc4f8">More...</a><br /></td></tr>
<tr class="separator:a844c9a5a2416075dbb621837faddc4f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcef3af2ddfef83778861f840c0416b8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#adcef3af2ddfef83778861f840c0416b8">insert</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key, <a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> item, std::shared_ptr&lt;::core::ValueType &gt; value_type)</td></tr>
<tr class="memdesc:adcef3af2ddfef83778861f840c0416b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">inserts a new data object.  <a href="#adcef3af2ddfef83778861f840c0416b8">More...</a><br /></td></tr>
<tr class="separator:adcef3af2ddfef83778861f840c0416b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51b8c2e3bd639abcd738c2a98e5fc4ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a51b8c2e3bd639abcd738c2a98e5fc4ab">insert</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> other, bool update_description=false, <a class="el" href="class_structure.xhtml">Structure</a> *<a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>=0, bool overwrite_existing=false)</td></tr>
<tr class="memdesc:a51b8c2e3bd639abcd738c2a98e5fc4ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">inserts a set of data objects contained in another container  <a href="#a51b8c2e3bd639abcd738c2a98e5fc4ab">More...</a><br /></td></tr>
<tr class="separator:a51b8c2e3bd639abcd738c2a98e5fc4ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69edf27ea2ab7f799dea69259a7a62f4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a69edf27ea2ab7f799dea69259a7a62f4">erase</a> (<a class="el" href="class_data_object_key.xhtml">DataObjectKey</a> key)</td></tr>
<tr class="memdesc:a69edf27ea2ab7f799dea69259a7a62f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">erases a data object from the container  <a href="#a69edf27ea2ab7f799dea69259a7a62f4">More...</a><br /></td></tr>
<tr class="separator:a69edf27ea2ab7f799dea69259a7a62f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afce340c1fd49e8007bbbe2a00592830b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#afce340c1fd49e8007bbbe2a00592830b">erase</a> (<a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> container)</td></tr>
<tr class="memdesc:afce340c1fd49e8007bbbe2a00592830b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the DataObjects contained in the <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> passed as the argument, from this container. DataObjects not contained in this container, are skipped.  <a href="#afce340c1fd49e8007bbbe2a00592830b">More...</a><br /></td></tr>
<tr class="separator:afce340c1fd49e8007bbbe2a00592830b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b32c8958266ff87333ca085b89b3f73"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a4b32c8958266ff87333ca085b89b3f73">eraseQuantity</a> (string ident)</td></tr>
<tr class="memdesc:a4b32c8958266ff87333ca085b89b3f73"><td class="mdescLeft">&#160;</td><td class="mdescRight">erases all objects (and sets "needs update" flag of its dependencies) with given quantity ident  <a href="#a4b32c8958266ff87333ca085b89b3f73">More...</a><br /></td></tr>
<tr class="separator:a4b32c8958266ff87333ca085b89b3f73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01fa12436c02e375206da37a9f0a03fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a01fa12436c02e375206da37a9f0a03fb">eraseDesign</a> (string ident)</td></tr>
<tr class="memdesc:a01fa12436c02e375206da37a9f0a03fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">erases all objects (and sets "needs update" flag of its dependencies) with given design ident  <a href="#a01fa12436c02e375206da37a9f0a03fb">More...</a><br /></td></tr>
<tr class="separator:a01fa12436c02e375206da37a9f0a03fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2615c573b21bcbfdce9cb732dcd6038c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a2615c573b21bcbfdce9cb732dcd6038c">renameDesign</a> (string from_name, string to_name)</td></tr>
<tr class="memdesc:a2615c573b21bcbfdce9cb732dcd6038c"><td class="mdescLeft">&#160;</td><td class="mdescRight">renames all design idents  <a href="#a2615c573b21bcbfdce9cb732dcd6038c">More...</a><br /></td></tr>
<tr class="separator:a2615c573b21bcbfdce9cb732dcd6038c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed7f7ec6101929d132d78b5e4cec0a06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aed7f7ec6101929d132d78b5e4cec0a06">renameQuantity</a> (string from_name, string to_name)</td></tr>
<tr class="memdesc:aed7f7ec6101929d132d78b5e4cec0a06"><td class="mdescLeft">&#160;</td><td class="mdescRight">renames all quantity idents  <a href="#aed7f7ec6101929d132d78b5e4cec0a06">More...</a><br /></td></tr>
<tr class="separator:aed7f7ec6101929d132d78b5e4cec0a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Capacity</div></td></tr>
<tr class="memitem:abcd703e220fe34c4ff8364626470876d"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#abcd703e220fe34c4ff8364626470876d">size</a> ()</td></tr>
<tr class="memdesc:abcd703e220fe34c4ff8364626470876d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the number of data objects contained in this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>.  <a href="#abcd703e220fe34c4ff8364626470876d">More...</a><br /></td></tr>
<tr class="separator:abcd703e220fe34c4ff8364626470876d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f37b042a1e7cd4bd38fc564de81f0da"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3f37b042a1e7cd4bd38fc564de81f0da">empty</a> ()</td></tr>
<tr class="memdesc:a3f37b042a1e7cd4bd38fc564de81f0da"><td class="mdescLeft">&#160;</td><td class="mdescRight">True, if the <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> contains no data objects.  <a href="#a3f37b042a1e7cd4bd38fc564de81f0da">More...</a><br /></td></tr>
<tr class="separator:a3f37b042a1e7cd4bd38fc564de81f0da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa821bec12eaa7e0f649397c9675ff505"><td class="memItemLeft" align="right" valign="top"><a id="aa821bec12eaa7e0f649397c9675ff505"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aa821bec12eaa7e0f649397c9675ff505">clear</a> ()</td></tr>
<tr class="memdesc:aa821bec12eaa7e0f649397c9675ff505"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears all data objects in the container <br /></td></tr>
<tr class="separator:aa821bec12eaa7e0f649397c9675ff505"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:af2f2287f07e19933a935a60b337c7014"><td class="memItemLeft" align="right" valign="top"><a id="af2f2287f07e19933a935a60b337c7014"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>DataObject</b></td></tr>
<tr class="separator:af2f2287f07e19933a935a60b337c7014"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Operations</h2></td></tr>
<tr><td class="ititle" colspan="2"><p><a class="anchor" id="amgrp456d0deba6a86c9585590550c797502d"></a> Miscellaneous methods </p>
</td></tr>
<tr class="memitem:a3826d5a1e240c1c24f271a0410911069"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a3826d5a1e240c1c24f271a0410911069">dimension</a> (<a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a> type)</td></tr>
<tr class="separator:a3826d5a1e240c1c24f271a0410911069"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a108f3eabb5280c21cf58a9c9922fb81c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a108f3eabb5280c21cf58a9c9922fb81c">sortDesignIdents</a> (<a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> string)</td></tr>
<tr class="memdesc:a108f3eabb5280c21cf58a9c9922fb81c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sorts the given list of design IDs.  <a href="#a108f3eabb5280c21cf58a9c9922fb81c">More...</a><br /></td></tr>
<tr class="separator:a108f3eabb5280c21cf58a9c9922fb81c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa8995e0303a2bb22b2c217dba3ecce0"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aaa8995e0303a2bb22b2c217dba3ecce0">sampleFormatString</a> ()</td></tr>
<tr class="separator:aaa8995e0303a2bb22b2c217dba3ecce0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0ab9ca4db182890c7d4a844ce3ca61a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#ad0ab9ca4db182890c7d4a844ce3ca61a">isSampleDesignIdent</a> (string s)</td></tr>
<tr class="separator:ad0ab9ca4db182890c7d4a844ce3ca61a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46745cb0c540800be74821623a4e4489"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a46745cb0c540800be74821623a4e4489">getSampleNumber</a> (string s)</td></tr>
<tr class="separator:a46745cb0c540800be74821623a4e4489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa23c998acfc6005bd25abf497d93df62"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#aa23c998acfc6005bd25abf497d93df62">getSampleIdent</a> (int number)</td></tr>
<tr class="separator:aa23c998acfc6005bd25abf497d93df62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39c1c39e086df0f6acfbbae459b2f307"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_data_object_container.xhtml#a39c1c39e086df0f6acfbbae459b2f307">isReservedResultQuantityIdent</a> (string s)</td></tr>
<tr class="separator:a39c1c39e086df0f6acfbbae459b2f307"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A general container for vector data. </p>
<p>This is a container for all data objects of the same type which may be used within SoS. A vector data object is described through a 'design' identifier and a 'quantity' identifier: </p><dl>
<dt><b>quantity</b> </dt>
<dd>A 'quantity' may be the x-direction of the stress tensor, the plastic strain or any other scalar physical quantity. </dd>
<dt><b>design</b> </dt>
<dd>A 'design' is a single instantiation of the same quantity, i.e. if one has several measurements of the same quantity, each measurement represents a single design. </dd>
</dl>
<p>Throughout the workflow of SoS one may add data sets which may be interpreted in terms of new designs or quantities. For example, the mean value or the standard deviation of a quantity is computed from a set of designs of the same quantity, and can be interpreted as a new design. Furthermore, one may define additional quantities, for example compute the von Mises equivalent stress from the 6-dimensional stress tensor (i.e. from 6 different quantities).</p>
<p><a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> is a Sender. It communicates to it's Listeners (Qt Datatables, <a class="el" href="class_structure.xhtml" title="The central data structure for SoS. ">Structure</a>) when its DataObjects are changed (insert, erase, rename, change activity) </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3c2a1cc92b9d99f88f88cb05e3dde2d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c2a1cc92b9d99f88f88cb05e3dde2d3">&#9670;&nbsp;</a></span>DataObjectContainer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>copy constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the container to be copied </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a4abe693e43c5eb23dd077b7b94ca3c51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4abe693e43c5eb23dd077b7b94ca3c51">&#9670;&nbsp;</a></span>__getitem__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> __getitem__ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the i-th element of the current filter </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idx</td><td>the index (0..size-1) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a data object pointer </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if the index is not valid </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a44139caf93a3463ea4f2a6671cdce842"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44139caf93a3463ea4f2a6671cdce842">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string __str__ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>provides the print() method for this class in SWIG bindings </p>
<dl class="section return"><dt>Returns</dt><dd>a message to be printed when print(this) is called </dd></dl>

</div>
</div>
<a id="ac01bdbe9866e84f434efc56d18d2c625"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac01bdbe9866e84f434efc56d18d2c625">&#9670;&nbsp;</a></span>active()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> active </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for active data objects. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of active data objects </dd></dl>

</div>
</div>
<a id="ae7ea9a06802a14acba40ee576f16fb72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7ea9a06802a14acba40ee576f16fb72">&#9670;&nbsp;</a></span>checkInsert()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool checkInsert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks if an item can be inserted </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>the key to be tested. </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>If true it returns true. Else it returns true if <em>key</em> does not exist in the data base. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If the key is invalid, it returns false. returns true if <em>key</em> does not exist in the data base. </dd></dl>

</div>
</div>
<a id="a95c22d297a703c1846cdf7c004eaef75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95c22d297a703c1846cdf7c004eaef75">&#9670;&nbsp;</a></span>depInputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> depInputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for data objects marked as DOE dependent parameters. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects marked as DOE dependent parameters </dd></dl>

</div>
</div>
<a id="a7d96425fdcb11118c0bb72444441f2b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d96425fdcb11118c0bb72444441f2b9">&#9670;&nbsp;</a></span>designExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool designExists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether any DataObject with the given design ID exists. Computational complexity is of order O( log N_designs ). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design</td><td>The design ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if a DataObject with the given design ID exists. </dd></dl>

</div>
</div>
<a id="afe1450937e7407938176edb6754befbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe1450937e7407938176edb6754befbf">&#9670;&nbsp;</a></span>designIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> designIdents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>generates a vector of strings containing all design idents being part in this filter The ordering of the vector corresponds to the ordering of the ouput of generateVector() </p>
<dl class="section return"><dt>Returns</dt><dd>the vector contained of design ident strings </dd></dl>

</div>
</div>
<a id="afc070c7b791f8091a5a95c71b6f14735"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc070c7b791f8091a5a95c71b6f14735">&#9670;&nbsp;</a></span>designs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> designs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates a vector of strings containing all design idents being part in this filter. </p>
<p>Each design ident appears only once in the list. You can use this, for example, to find out which design names are selected.</p>
<dl class="section return"><dt>Returns</dt><dd>The vector contained of design ident strings </dd></dl>

</div>
</div>
<a id="a3826d5a1e240c1c24f271a0410911069"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3826d5a1e240c1c24f271a0410911069">&#9670;&nbsp;</a></span>dimension()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number dimension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>returns the dimension of the data objects of given type, if any </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>DataObject type of which the dimension is returned </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3f37b042a1e7cd4bd38fc564de81f0da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f37b042a1e7cd4bd38fc564de81f0da">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>True, if the <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> contains no data objects. </p>
<dl class="section return"><dt>Returns</dt><dd>returns true, if the <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> contains no data objects </dd></dl>

</div>
</div>
<a id="a69edf27ea2ab7f799dea69259a7a62f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69edf27ea2ab7f799dea69259a7a62f4">&#9670;&nbsp;</a></span>erase() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>erases a data object from the container </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>the key of the data object to be removed. Throws an exception if it does not exist. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afce340c1fd49e8007bbbe2a00592830b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afce340c1fd49e8007bbbe2a00592830b">&#9670;&nbsp;</a></span>erase() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>container</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Erases the DataObjects contained in the <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> passed as the argument, from this container. DataObjects not contained in this container, are skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">container</td><td>The container of the data object to be removed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a01fa12436c02e375206da37a9f0a03fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01fa12436c02e375206da37a9f0a03fb">&#9670;&nbsp;</a></span>eraseDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseDesign </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>ident</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>erases all objects (and sets "needs update" flag of its dependencies) with given design ident </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ident</td><td>the ident </td></tr>
    <tr><td class="paramname">database</td><td>the database wherein this container and all slaves and masters are stored </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4b32c8958266ff87333ca085b89b3f73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b32c8958266ff87333ca085b89b3f73">&#9670;&nbsp;</a></span>eraseQuantity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseQuantity </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>ident</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>erases all objects (and sets "needs update" flag of its dependencies) with given quantity ident </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ident</td><td>the ident </td></tr>
    <tr><td class="paramname">database</td><td>the database wherein this container and all slaves and masters are stored </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a72704c60f2b9d84b3986265aea0fe0b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72704c60f2b9d84b3986265aea0fe0b8">&#9670;&nbsp;</a></span>exists() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool exists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether a DataObject of given design ID and quantity ID exists. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design</td><td>The design ID </td></tr>
    <tr><td class="paramname">quantity</td><td>The quantity ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true, if the requested DataObject exists. </dd></dl>

</div>
</div>
<a id="aafcbe4a7beac4d373c25368e4c675dc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafcbe4a7beac4d373c25368e4c675dc4">&#9670;&nbsp;</a></span>exists() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool exists </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether a DataObject with the given <a class="el" href="class_data_object_key.xhtml" title="the key (ident) of a data object in generic containers. ">DataObjectKey</a> exists. </p>
<dl class="section return"><dt>Returns</dt><dd>true, if the given key exists </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>the key to search for </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a988ee6b7e261a025f1310f81507f43a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a988ee6b7e261a025f1310f81507f43a3">&#9670;&nbsp;</a></span>fillValueTypeManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">fillValueTypeManager </td>
          <td>(</td>
          <td class="paramtype">::core::ValueTypeManager&#160;</td>
          <td class="paramname"><em>manager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Fill <a class="el" href="class_value_type_manager.xhtml" title="Keeps track of all unique ValueTypes. Required to create new ValueType shared resource instances...">ValueTypeManager</a> with all ValueTypes contained in this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>. </p>
<dl class="section note"><dt>Note</dt><dd>Convention: one <a class="el" href="class_value_type.xhtml" title="Represents a type of value and a set of properties. ValueType is intended to be associated with a set...">ValueType</a> per quantity. Ignores DataObjects with empty m_value_type shared_ptr. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">manager</td><td>The <a class="el" href="class_value_type_manager.xhtml" title="Keeps track of all unique ValueTypes. Required to create new ValueType shared resource instances...">ValueTypeManager</a> to be filled. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa9c0e23be84ab48b5ea1841779e66268"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9c0e23be84ab48b5ea1841779e66268">&#9670;&nbsp;</a></span>filterDesign() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterDesign </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>match_regex</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the design ID is equal to the given ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_id</td><td>The design ID to filter for. </td></tr>
    <tr><td class="paramname">match_regex</td><td>If this is true then the given ident is a regular expression. The returned container contains all data objects that MATCH this expression. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The resulting <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> </dd></dl>

</div>
</div>
<a id="a3d2239c5a1d607e7cae55a6c135efd7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d2239c5a1d607e7cae55a6c135efd7e">&#9670;&nbsp;</a></span>filterDesign() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterDesign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td>
          <td class="paramname"><em>ids</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the design ID is equal to one of the given ID list. Design IDs not found in the current <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> are skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ids</td><td>a vector of design IDs </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="a6363bd922e52a89952fae621f41258fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6363bd922e52a89952fae621f41258fc">&#9670;&nbsp;</a></span>filterID() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterID </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a set containing a single or no data object, defined by design and quantity ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_id</td><td>the design ID string </td></tr>
    <tr><td class="paramname">quantity_id</td><td>the quantity ID string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting container </dd></dl>

</div>
</div>
<a id="a942f7516510aaf8a95658389d930bcc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a942f7516510aaf8a95658389d930bcc0">&#9670;&nbsp;</a></span>filterID() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns container containing a single DataObject. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The <a class="el" href="class_data_object_key.xhtml" title="the key (ident) of a data object in generic containers. ">DataObjectKey</a> to filter for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting container </dd></dl>

</div>
</div>
<a id="a8b5371193e6891419a03ef367a5216f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b5371193e6891419a03ef367a5216f0">&#9670;&nbsp;</a></span>filterID() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterID </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml#a831464cbf6637a6d9426cfad4b30e1e5">data_object_key_vector_type</a>&#160;</td>
          <td class="paramname"><em>key_vector</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a container containing all objects in key_vector. Throws an ERROR if key_vector contains duplicate DataObjectKeys. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key_vector</td><td>A vector of unique DataObjectKeys. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting container </dd></dl>

</div>
</div>
<a id="a62dbf8a6166ee22a6dc160040fac8257"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62dbf8a6166ee22a6dc160040fac8257">&#9670;&nbsp;</a></span>filterQuantity() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterQuantity </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>match_regex</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the quantity ident is equal to the given ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quantity_id</td><td>The quantity ID to filter for. </td></tr>
    <tr><td class="paramname">match_regex</td><td>If this is true then the given ident is a regular expression. The filter will contain all objects that MATCH this expression. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="a8619edf76b71eb71488e02d2afe534ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8619edf76b71eb71488e02d2afe534ed">&#9670;&nbsp;</a></span>filterQuantity() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterQuantity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td>
          <td class="paramname"><em>ids</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the quantity ID is equal to one of the given ID list. Quantity IDs not found in the current <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> are skipped. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ids</td><td>a vector of quantity IDs </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="ac5e524cbe635d05cebaf52b2eee73bd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5e524cbe635d05cebaf52b2eee73bd6">&#9670;&nbsp;</a></span>filterSerializable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterSerializable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a subset of all data objects which can be serialized These are all objects which do not contain any NaN or infinity numbers. </p>
<dl class="section return"><dt>Returns</dt><dd>The resulting <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> </dd></dl>

</div>
</div>
<a id="a88778d03fe76cec6eb828dd57ac82411"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88778d03fe76cec6eb828dd57ac82411">&#9670;&nbsp;</a></span>filterType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__data.xhtml#ga1bebf1e22deb3cd41d7d99ddcdb15379">dataobject_types</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a container containing objects of a single type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>the data object type (node/element/scalar) to filter for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting container </dd></dl>

</div>
</div>
<a id="a064c6b8de61a4eaabc1d8ecb7777acfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a064c6b8de61a4eaabc1d8ecb7777acfb">&#9670;&nbsp;</a></span>filterWithoutDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterWithoutDesign </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the design ID is NOT equal to the given ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_id</td><td>the design ID to be filtered for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="a2fee6f94f9d158b13b25333773d2dd0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fee6f94f9d158b13b25333773d2dd0f">&#9670;&nbsp;</a></span>filterWithoutID()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterWithoutID </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects NOT containing the data object defined by ID and quantity ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_id</td><td>the design ID string to be filtered for </td></tr>
    <tr><td class="paramname">quantity_id</td><td>the quantity ID string to be filtered for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="a9894e187de92b709b980af4f72657d4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9894e187de92b709b980af4f72657d4f">&#9670;&nbsp;</a></span>filterWithoutQuantity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> filterWithoutQuantity </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the subset of data objects where the quantity ID is NOT equal to the given ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design_id</td><td>the quantity ID to be filtered for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the resulting filter object </dd></dl>

</div>
</div>
<a id="ae1c3801d3ff9a1bf0749dffdf1e242d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1c3801d3ff9a1bf0749dffdf1e242d5">&#9670;&nbsp;</a></span>find() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> find </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the data object with given data key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">design</td><td>The design ID </td></tr>
    <tr><td class="paramname">quantity</td><td>The quantity ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a pointer to the requested object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if the object does not exist </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a00f452f17159cf5600ee5f48d15be6cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00f452f17159cf5600ee5f48d15be6cc">&#9670;&nbsp;</a></span>find() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> find </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the data object with given data key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>The <a class="el" href="class_data_object_key.xhtml" title="the key (ident) of a data object in generic containers. ">DataObjectKey</a> of the data object to be found </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a pointer to the requested object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if the object does not exist </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac128db8392720a15d6e7f47e93c88b80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac128db8392720a15d6e7f47e93c88b80">&#9670;&nbsp;</a></span>fromFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> fromFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for data objects which were imported from a file. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects which were imported from a file </dd></dl>

</div>
</div>
<a id="aa23c998acfc6005bd25abf497d93df62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa23c998acfc6005bd25abf497d93df62">&#9670;&nbsp;</a></span>getSampleIdent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string getSampleIdent </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>number</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the design string ident of the given sample number </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">number</td><td>the number to be converted </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a46745cb0c540800be74821623a4e4489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46745cb0c540800be74821623a4e4489">&#9670;&nbsp;</a></span>getSampleNumber()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int getSampleNumber </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the sample number which is given as a design ident string </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the string to be converted </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a892eff18dec0d7b6fd05c72b2b25091b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a892eff18dec0d7b6fd05c72b2b25091b">&#9670;&nbsp;</a></span>inactive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> inactive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for inactive data objects. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of inactive data objects </dd></dl>

</div>
</div>
<a id="ad628e58a3f2370187cefb859563cc746"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad628e58a3f2370187cefb859563cc746">&#9670;&nbsp;</a></span>inputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> inputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for data objects marked as DOE input parameters. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects marked as DOE input parameters </dd></dl>

</div>
</div>
<a id="a844c9a5a2416075dbb621837faddc4f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a844c9a5a2416075dbb621837faddc4f8">&#9670;&nbsp;</a></span>insert() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>item</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>inserts a new data object. Assigns <a class="el" href="class_value_type_double.xhtml" title="Identifies a set of values as number precision floating points values and an associated set of option...">ValueTypeDouble</a> (named after key.quantity()) to the inserted data object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>a shared pointer to the data object to be inserted. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An iterator to the newly added data object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the key already exists in the database </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="adcef3af2ddfef83778861f840c0416b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcef3af2ddfef83778861f840c0416b8">&#9670;&nbsp;</a></span>insert() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_key.xhtml">DataObjectKey</a>&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a>&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt;::core::ValueType &gt;&#160;</td>
          <td class="paramname"><em>value_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>inserts a new data object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">item</td><td>a shared pointer to the data object to be inserted. </td></tr>
    <tr><td class="paramname">value_type</td><td>The <a class="el" href="class_value_type.xhtml" title="Represents a type of value and a set of properties. ValueType is intended to be associated with a set...">ValueType</a> shared resource of the data object to be inserted. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An iterator to the newly added data object </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">std::exception</td><td>If the key already exists in the database </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a51b8c2e3bd639abcd738c2a98e5fc4ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51b8c2e3bd639abcd738c2a98e5fc4ab">&#9670;&nbsp;</a></span>insert() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>update_description</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a> *&#160;</td>
          <td class="paramname"><em>database</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>overwrite_existing</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>inserts a set of data objects contained in another container </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">update_description</td><td>if true, then this method calls </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>generateDescription for each inserted object! </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">database</td><td>if update_description is true, then update_description must point to the database all data refers to </td></tr>
    <tr><td class="paramname">other</td><td>the container which has all objects to be inserted </td></tr>
    <tr><td class="paramname">overwrite_existing</td><td>if this is true, then any possibly existing object will be deleted before existing the new one (else an error appears if any object with same ident already exists). If true, the </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b" title="Gives access to the global database. ">database</a> must be <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a> valid pointer. </dd></dl>

</div>
</div>
<a id="a39c1c39e086df0f6acfbbae459b2f307"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39c1c39e086df0f6acfbbae459b2f307">&#9670;&nbsp;</a></span>isReservedResultQuantityIdent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isReservedResultQuantityIdent </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the given quantity ident is reserved for results (hence it cannot be imported from file) </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the string to test </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad0ab9ca4db182890c7d4a844ce3ca61a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0ab9ca4db182890c7d4a844ce3ca61a">&#9670;&nbsp;</a></span>isSampleDesignIdent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool isSampleDesignIdent </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if the given design ident string can be interpreted as a sample number </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>the string to be checked </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a01c71804ddc13e4fca2aacd02134a769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01c71804ddc13e4fca2aacd02134a769">&#9670;&nbsp;</a></span>nonSamples()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> nonSamples </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for non-sample data objects. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects NOT having sample string IDs </dd></dl>

</div>
</div>
<a id="a93923d7bedbfe9a068d53784f6e0c3d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93923d7bedbfe9a068d53784f6e0c3d8">&#9670;&nbsp;</a></span>notFromFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> notFromFile </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for data objects which were NOT imported from a file. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects which were NOT imported from a file </dd></dl>

</div>
</div>
<a id="accde3afcbb0415939e45252512b3af66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accde3afcbb0415939e45252512b3af66">&#9670;&nbsp;</a></span>operator*()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> operator* </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>performs the set intersection </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other filter </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>returns the intersection of this and other </dd></dl>

</div>
</div>
<a id="a89ca332a23d46e97018f24b3b634e8aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89ca332a23d46e97018f24b3b634e8aa">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> operator+ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>performs the set union </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other filter </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>returns the union of this and other </dd></dl>

</div>
</div>
<a id="a717b8362e30ad94fd57b9087f3aec065"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a717b8362e30ad94fd57b9087f3aec065">&#9670;&nbsp;</a></span>operator/()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> operator/ </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>performs the set difference </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the other filter </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>returns the difference of this minus other </dd></dl>

</div>
</div>
<a id="a3619cbe41ed2a2e1f2f654e5e9e427db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3619cbe41ed2a2e1f2f654e5e9e427db">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>destructor </p>
<p>the assignment operator It copies all data and callbacks, but no mutexes (thread locks) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the source </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a reference to this object </dd></dl>

</div>
</div>
<a id="addd137ea1cb68d019bbc027e787d0f3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addd137ea1cb68d019bbc027e787d0f3e">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool operator== </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if both objects contain objects with identical content </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">other</td><td>the container to be compared This equal content means, that the pointer do not necessarily point to the same address, but the objects behind these addresses have the same contents. Both containers may contain copies of the same data sets. Then they are considered to be equal. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3528fa5c2bc9da26a1c3cdda3d645c0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3528fa5c2bc9da26a1c3cdda3d645c0b">&#9670;&nbsp;</a></span>operator[]()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_ptr.xhtml">DataObjectPtr</a> operator[] </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the i-th element of the current filter </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idx</td><td>the index (0..size-1) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a data object pointer </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">exception</td><td>if the index is not valid </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af47e8fae53b8f978396af4b4007c6b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af47e8fae53b8f978396af4b4007c6b95">&#9670;&nbsp;</a></span>quantities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> quantities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates a vector of strings containing all quantity idents being part in this filter. </p>
<p>Each quantity ident appears only once in the list. You can use this, for example, to find out which quantity names are selected.</p>
<dl class="section return"><dt>Returns</dt><dd>The vector contained of quantity ident strings </dd></dl>

</div>
</div>
<a id="a566784596083c7810e86cd900a5b8c1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a566784596083c7810e86cd900a5b8c1d">&#9670;&nbsp;</a></span>quantityExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool quantityExists </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether any DataObject with the given quantity ID exists. Worst case computational complexity is of order O( N_designs * log N_quantities) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quantity</td><td>The design ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if a DataObject with the given quantity ID exists. </dd></dl>

</div>
</div>
<a id="a3fd2740b12d821c55d78c29aaf7585ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fd2740b12d821c55d78c29aaf7585ca">&#9670;&nbsp;</a></span>quantityIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> quantityIdents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>generates a vector of strings containing all quantity idents being part in this filter The ordering of the vector corresponds to the ordering of the ouput of generateVector() </p>
<dl class="section return"><dt>Returns</dt><dd>the vector contained of quantity ident strings </dd></dl>

</div>
</div>
<a id="a2615c573b21bcbfdce9cb732dcd6038c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2615c573b21bcbfdce9cb732dcd6038c">&#9670;&nbsp;</a></span>renameDesign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">renameDesign </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>from_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>to_name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>renames all design idents </p>
<dl class="section note"><dt>Note</dt><dd>Creates copies of the DataObjects to be renamed and removes the original DataObjects from this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>. This favors data consistency over performance. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">from_name</td><td>the original design ident </td></tr>
    <tr><td class="paramname">to_name</td><td>the new design ident. If it cannot be renamed (for example, if the names already exist in the data base) an exception is thrown. The data base may remain unchanged. After the renaming, the ordering of the data base will be adjusted to the new naming. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aed7f7ec6101929d132d78b5e4cec0a06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed7f7ec6101929d132d78b5e4cec0a06">&#9670;&nbsp;</a></span>renameQuantity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">renameQuantity </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>from_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>to_name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>renames all quantity idents </p>
<dl class="section note"><dt>Note</dt><dd>Creates copies of the DataObjects to be renamed and removes the original DataObjects from this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>. This favors data consistency over performance. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">from_name</td><td>the original design ident </td></tr>
    <tr><td class="paramname">to_name</td><td>the new quantity ident. If it cannot be renamed (for example, if the names already exist in the data base) an exception is thrown. The data base may remain unchanged. After the renaming, the ordering of the data base will be adjusted to the new naming. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac7636c3263b7ecc20a761612d3adce18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7636c3263b7ecc20a761612d3adce18">&#9670;&nbsp;</a></span>responses()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> responses </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for data objects marked as DOE responses. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects marked as DOE responses </dd></dl>

</div>
</div>
<a id="aaa8995e0303a2bb22b2c217dba3ecce0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa8995e0303a2bb22b2c217dba3ecce0">&#9670;&nbsp;</a></span>sampleFormatString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string sampleFormatString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A copy of the </dd></dl>
<dl class="section see"><dt>See also</dt><dd>sample_ident_format_string </dd></dl>

</div>
</div>
<a id="ac8fb74d0fa2c408063005cf2a32a8b1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8fb74d0fa2c408063005cf2a32a8b1b">&#9670;&nbsp;</a></span>samples()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_data_object_container.xhtml">DataObjectContainer</a> samples </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter for sample data objects. </p>
<dl class="section return"><dt>Returns</dt><dd>returns the subset of data objects having sample string IDs </dd></dl>

</div>
</div>
<a id="ae5a274f83fd436019cca4ae43f1fb574"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5a274f83fd436019cca4ae43f1fb574">&#9670;&nbsp;</a></span>setActive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setActive </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>active</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>changes the activity flag of all contained objects </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">active</td><td>is true if the objects are to be set active, false if inactive. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abcd703e220fe34c4ff8364626470876d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcd703e220fe34c4ff8364626470876d">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the number of data objects contained in this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>the number of objects contained in this <a class="el" href="class_data_object_container.xhtml" title="A general container for vector data. ">DataObjectContainer</a> </dd></dl>

</div>
</div>
<a id="a108f3eabb5280c21cf58a9c9922fb81c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a108f3eabb5280c21cf58a9c9922fb81c">&#9670;&nbsp;</a></span>sortDesignIdents()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a> sortDesignIdents </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_data_object_container.xhtml#ac293ea0e5c280f69a497ea20f20c60b9">string_vector_type</a>&#160;</td>
          <td class="paramname"><em>string</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sorts the given list of design IDs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">string</td><td>a vector of unique design ID strings </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An ordered vector of IDs. Numbers are sorted according to </dd></dl>
<dl class="section see"><dt>See also</dt><dd>compareDesignIdents </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
