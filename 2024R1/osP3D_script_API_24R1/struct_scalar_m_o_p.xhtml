<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): ScalarMOP Struct Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_scalar_m_o_p.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="struct_scalar_m_o_p-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ScalarMOP Struct Reference<div class="ingroups"><a class="el" href="group__handler.xhtml">MOP Handler</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if more information is available.  
 <a href="struct_scalar_m_o_p.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aeff7712c6be709d07b90e54d33c9a83b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#aeff7712c6be709d07b90e54d33c9a83b">activeVariables</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:aeff7712c6be709d07b90e54d33c9a83b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the the variable active for the selected output.  <a href="#aeff7712c6be709d07b90e54d33c9a83b">More...</a><br /></td></tr>
<tr class="separator:aeff7712c6be709d07b90e54d33c9a83b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0072c7edd32f9b19075446dad7edc9a3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a0072c7edd32f9b19075446dad7edc9a3">constantInputs</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a0072c7edd32f9b19075446dad7edc9a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the the variables inactive for all outputs (the constant inputs)  <a href="#a0072c7edd32f9b19075446dad7edc9a3">More...</a><br /></td></tr>
<tr class="separator:a0072c7edd32f9b19075446dad7edc9a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1a270ad8071b90c3c7f058e50c6fe4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#ade1a270ad8071b90c3c7f058e50c6fe4">copInputs</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:ade1a270ad8071b90c3c7f058e50c6fe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the individual CoPs of second order for each input of given order for all outputs from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler.  <a href="#ade1a270ad8071b90c3c7f058e50c6fe4">More...</a><br /></td></tr>
<tr class="separator:ade1a270ad8071b90c3c7f058e50c6fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b244b702328986d0f27bf31422fc825"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a8b244b702328986d0f27bf31422fc825">copInputs</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:a8b244b702328986d0f27bf31422fc825"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the individual CoPs of second order for each input of given order for a single output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler.  <a href="#a8b244b702328986d0f27bf31422fc825">More...</a><br /></td></tr>
<tr class="separator:a8b244b702328986d0f27bf31422fc825"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64b05f1ce4c1a6a54a1722e958f6b5a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a64b05f1ce4c1a6a54a1722e958f6b5a7">copInputsFirstOrder</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a64b05f1ce4c1a6a54a1722e958f6b5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the individual CoPs of first order for each input of given order for all outputs from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler.  <a href="#a64b05f1ce4c1a6a54a1722e958f6b5a7">More...</a><br /></td></tr>
<tr class="separator:a64b05f1ce4c1a6a54a1722e958f6b5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af448d71b8e87e16c4834a9336b0b8cd4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#af448d71b8e87e16c4834a9336b0b8cd4">copInputsFirstOrder</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:af448d71b8e87e16c4834a9336b0b8cd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compute the individual CoPs of given order for each input of given order for a single output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler.  <a href="#af448d71b8e87e16c4834a9336b0b8cd4">More...</a><br /></td></tr>
<tr class="separator:af448d71b8e87e16c4834a9336b0b8cd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cca8494b6fe38ce6e0ae0fc1ec0ea0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#ad3cca8494b6fe38ce6e0ae0fc1ec0ea0">copTotal</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:ad3cca8494b6fe38ce6e0ae0fc1ec0ea0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler.  <a href="#ad3cca8494b6fe38ce6e0ae0fc1ec0ea0">More...</a><br /></td></tr>
<tr class="separator:ad3cca8494b6fe38ce6e0ae0fc1ec0ea0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a389cab7799d534fa23da5bdf9dadf5a7"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a389cab7799d534fa23da5bdf9dadf5a7">copTotal</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:a389cab7799d534fa23da5bdf9dadf5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> of the given output the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler.  <a href="#a389cab7799d534fa23da5bdf9dadf5a7">More...</a><br /></td></tr>
<tr class="separator:a389cab7799d534fa23da5bdf9dadf5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca8403b074f9c323bd0083fdf23cb1a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a5ca8403b074f9c323bd0083fdf23cb1a">crossValidation</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a5ca8403b074f9c323bd0083fdf23cb1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the cross validation values.  <a href="#a5ca8403b074f9c323bd0083fdf23cb1a">More...</a><br /></td></tr>
<tr class="separator:a5ca8403b074f9c323bd0083fdf23cb1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f1fd8a1bf196a0f3831ef80b03018bf"><td class="memItemLeft" align="right" valign="top"><a id="a4f1fd8a1bf196a0f3831ef80b03018bf"></a>
<a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><b>crossValidation</b> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="separator:a4f1fd8a1bf196a0f3831ef80b03018bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98b1fc2fcda4a9254ddd2aa26af5c25d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a98b1fc2fcda4a9254ddd2aa26af5c25d">evaluate</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="class_matrix.xhtml">Matrix</a> values)</td></tr>
<tr class="memdesc:a98b1fc2fcda4a9254ddd2aa26af5c25d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values with bounds check.  <a href="#a98b1fc2fcda4a9254ddd2aa26af5c25d">More...</a><br /></td></tr>
<tr class="separator:a98b1fc2fcda4a9254ddd2aa26af5c25d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f80257761b6720ce42d765f0c92e791"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a7f80257761b6720ce42d765f0c92e791">evaluate</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="class_matrix.xhtml">Matrix</a> values, uint64_t output)</td></tr>
<tr class="memdesc:a7f80257761b6720ce42d765f0c92e791"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values. Only evaluate the given output. With bounds check.  <a href="#a7f80257761b6720ce42d765f0c92e791">More...</a><br /></td></tr>
<tr class="separator:a7f80257761b6720ce42d765f0c92e791"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69f65698745dd36dadeb1699989f2bb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a69f65698745dd36dadeb1699989f2bb2">evaluateExtrapolate</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="class_matrix.xhtml">Matrix</a> values)</td></tr>
<tr class="memdesc:a69f65698745dd36dadeb1699989f2bb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values no bounds check.  <a href="#a69f65698745dd36dadeb1699989f2bb2">More...</a><br /></td></tr>
<tr class="separator:a69f65698745dd36dadeb1699989f2bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2287b9e41a600402b5e7db0ca7108304"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a2287b9e41a600402b5e7db0ca7108304">evaluateExtrapolate</a> (::data_handler::DataHandlerBase datahandler, <a class="el" href="class_matrix.xhtml">Matrix</a> values, uint64_t output)</td></tr>
<tr class="memdesc:a2287b9e41a600402b5e7db0ca7108304"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values. Only evaluate the given output. No bounds check.  <a href="#a2287b9e41a600402b5e7db0ca7108304">More...</a><br /></td></tr>
<tr class="separator:a2287b9e41a600402b5e7db0ca7108304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a883e85901256157c66e0ecbd2ab7bcb0"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a883e85901256157c66e0ecbd2ab7bcb0">filterActiveSampleIds</a> (::data_handler::DataHandlerBase datahandler, std::vector&lt; string &gt; sample_ids, uint64_t model)</td></tr>
<tr class="memdesc:a883e85901256157c66e0ecbd2ab7bcb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the the samples id active for the selected output from the given list of sample_ids.  <a href="#a883e85901256157c66e0ecbd2ab7bcb0">More...</a><br /></td></tr>
<tr class="separator:a883e85901256157c66e0ecbd2ab7bcb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24f86122329b61107d3e1bf72d041a5f"><td class="memItemLeft" align="right" valign="top">std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a24f86122329b61107d3e1bf72d041a5f">filterConstantInputNames</a> (::data_handler::DataHandlerBase datahandler, std::vector&lt; string &gt; input_names)</td></tr>
<tr class="memdesc:a24f86122329b61107d3e1bf72d041a5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Filter the list of input names such that only the constant ones are returned The Input names need to be in the order as given on the training of the <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a>.  <a href="#a24f86122329b61107d3e1bf72d041a5f">More...</a><br /></td></tr>
<tr class="separator:a24f86122329b61107d3e1bf72d041a5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54ae75757bd7c8c3936ab036df6d18e3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a54ae75757bd7c8c3936ab036df6d18e3">isValid</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a54ae75757bd7c8c3936ab036df6d18e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the settings  <a href="#a54ae75757bd7c8c3936ab036df6d18e3">More...</a><br /></td></tr>
<tr class="separator:a54ae75757bd7c8c3936ab036df6d18e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad04e65da7a41baf081cbf4100367de57"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#ad04e65da7a41baf081cbf4100367de57">modelDescription</a> (::data_handler::DataHandlerBase datahandler, std::size_t output)</td></tr>
<tr class="memdesc:ad04e65da7a41baf081cbf4100367de57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the description of the model computing the output for the SclarMOP in the datahandler.  <a href="#ad04e65da7a41baf081cbf4100367de57">More...</a><br /></td></tr>
<tr class="separator:ad04e65da7a41baf081cbf4100367de57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae8a26a8e856cb73692244eadaa54e0"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a9ae8a26a8e856cb73692244eadaa54e0">modelName</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:a9ae8a26a8e856cb73692244eadaa54e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the name of the model computing the output for the SclarMOP in the datahandler.  <a href="#a9ae8a26a8e856cb73692244eadaa54e0">More...</a><br /></td></tr>
<tr class="separator:a9ae8a26a8e856cb73692244eadaa54e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fc71ccbaa1350b7f88140bf7a6ded02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a8fc71ccbaa1350b7f88140bf7a6ded02">predictionError</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a8fc71ccbaa1350b7f88140bf7a6ded02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Estimate the prediction error for <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values.  <a href="#a8fc71ccbaa1350b7f88140bf7a6ded02">More...</a><br /></td></tr>
<tr class="separator:a8fc71ccbaa1350b7f88140bf7a6ded02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a356e1b51c7ff0f01849dbdd20b355238"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a356e1b51c7ff0f01849dbdd20b355238">predictionError</a> (::data_handler::DataHandlerBase datahandler, uint64_t output)</td></tr>
<tr class="memdesc:a356e1b51c7ff0f01849dbdd20b355238"><td class="mdescLeft">&#160;</td><td class="mdescRight">Estimate the prediction error for <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values for the given output.  <a href="#a356e1b51c7ff0f01849dbdd20b355238">More...</a><br /></td></tr>
<tr class="separator:a356e1b51c7ff0f01849dbdd20b355238"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5851787f9ce075375b9e0aa2934505ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a5851787f9ce075375b9e0aa2934505ff">qualityMeasureTotal</a> (::data_handler::DataHandlerBase datahandler, ::quality_measure::QualityMeasureBase quality_measure)</td></tr>
<tr class="memdesc:a5851787f9ce075375b9e0aa2934505ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the total quality measure w.r.t. the expected responses from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler.  <a href="#a5851787f9ce075375b9e0aa2934505ff">More...</a><br /></td></tr>
<tr class="separator:a5851787f9ce075375b9e0aa2934505ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaa360031f26d42e06a8f7b63b19198a"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#acaa360031f26d42e06a8f7b63b19198a">qualityMeasureTotal</a> (::data_handler::DataHandlerBase datahandler, ::quality_measure::QualityMeasureBase quality_measure, uint64_t output)</td></tr>
<tr class="memdesc:acaa360031f26d42e06a8f7b63b19198a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the total quality measure w.r.t. the expected responses for the given output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler.  <a href="#acaa360031f26d42e06a8f7b63b19198a">More...</a><br /></td></tr>
<tr class="separator:acaa360031f26d42e06a8f7b63b19198a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9403b938a192208b16bd52cd1c5b5b42"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a9403b938a192208b16bd52cd1c5b5b42">sampleStatus</a> (::data_handler::DataHandlerBase datahandler)</td></tr>
<tr class="memdesc:a9403b938a192208b16bd52cd1c5b5b42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the the samples active/inactive for all models.  <a href="#a9403b938a192208b16bd52cd1c5b5b42">More...</a><br /></td></tr>
<tr class="separator:a9403b938a192208b16bd52cd1c5b5b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b607b96e2ecb071ace9443a07dab932"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_scalar_m_o_p.xhtml#a7b607b96e2ecb071ace9443a07dab932">sampleStatus</a> (::data_handler::DataHandlerBase datahandler, uint64_t model)</td></tr>
<tr class="memdesc:a7b607b96e2ecb071ace9443a07dab932"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the the samples id active for the selected output from the given list of sample_ids.  <a href="#a7b607b96e2ecb071ace9443a07dab932">More...</a><br /></td></tr>
<tr class="separator:a7b607b96e2ecb071ace9443a07dab932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9e629bc58cef51327dca2e87706da1"><td class="memItemLeft" align="right" valign="top"><a id="add9e629bc58cef51327dca2e87706da1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ScalarMOP</b> (string mop_ident=handler::defaultMOPIdent)</td></tr>
<tr class="separator:add9e629bc58cef51327dca2e87706da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if more information is available. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aeff7712c6be709d07b90e54d33c9a83b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeff7712c6be709d07b90e54d33c9a83b">&#9670;&nbsp;</a></span>activeVariables()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> activeVariables </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the the variable active for the selected output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
    <tr><td class="paramname">output</td><td>The selected output </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector of bools specifying for each input if it is active </dd></dl>

</div>
</div>
<a id="a0072c7edd32f9b19075446dad7edc9a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0072c7edd32f9b19075446dad7edc9a3">&#9670;&nbsp;</a></span>constantInputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> constantInputs </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the the variables inactive for all outputs (the constant inputs) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector of bools specifying for each input if it is constant </dd></dl>

</div>
</div>
<a id="ade1a270ad8071b90c3c7f058e50c6fe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade1a270ad8071b90c3c7f058e50c6fe4">&#9670;&nbsp;</a></span>copInputs() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> copInputs </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute the individual CoPs of second order for each input of given order for all outputs from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the individual <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> values of each input for each output The <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> matrix is organized as follows:<ul>
<li>each column corresponds to one design variable</li>
<li>each row corresponds to one output variable </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a8b244b702328986d0f27bf31422fc825"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b244b702328986d0f27bf31422fc825">&#9670;&nbsp;</a></span>copInputs() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> copInputs </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute the individual CoPs of second order for each input of given order for a single output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">output</td><td>The output to compute for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the individual <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> values of each input for a single output output The <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> matrix is organized as follows:<ul>
<li>each column corresponds to one design variable</li>
<li>each row corresponds to one output variable </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a64b05f1ce4c1a6a54a1722e958f6b5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64b05f1ce4c1a6a54a1722e958f6b5a7">&#9670;&nbsp;</a></span>copInputsFirstOrder() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> copInputsFirstOrder </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute the individual CoPs of first order for each input of given order for all outputs from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the individual <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> values of each input for each output The <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> matrix is organized as follows:<ul>
<li>each column corresponds to one design variable</li>
<li>each row corresponds to one output variable </li>
</ul>
</dd></dl>

</div>
</div>
<a id="af448d71b8e87e16c4834a9336b0b8cd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af448d71b8e87e16c4834a9336b0b8cd4">&#9670;&nbsp;</a></span>copInputsFirstOrder() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> copInputsFirstOrder </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compute the individual CoPs of given order for each input of given order for a single output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">output</td><td>The output to compute for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the individual <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> values of each input for a single output output The <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> matrix is organized as follows:<ul>
<li>each column corresponds to one design variable</li>
<li>each row corresponds to one output variable </li>
</ul>
</dd></dl>

</div>
</div>
<a id="ad3cca8494b6fe38ce6e0ae0fc1ec0ea0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3cca8494b6fe38ce6e0ae0fc1ec0ea0">&#9670;&nbsp;</a></span>copTotal() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> copTotal </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> of all outputs </dd></dl>

</div>
</div>
<a id="a389cab7799d534fa23da5bdf9dadf5a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a389cab7799d534fa23da5bdf9dadf5a7">&#9670;&nbsp;</a></span>copTotal() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number copTotal </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> of the given output the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">output</td><td>The output to compute the <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The total <a class="el" href="struct_co_p.xhtml" title="Reference implementation for a quality metric for MOP models. ">CoP</a> of given output </dd></dl>

</div>
</div>
<a id="a5ca8403b074f9c323bd0083fdf23cb1a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ca8403b074f9c323bd0083fdf23cb1a">&#9670;&nbsp;</a></span>crossValidation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> crossValidation </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the cross validation values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>cross validation data from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a98b1fc2fcda4a9254ddd2aa26af5c25d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98b1fc2fcda4a9254ddd2aa26af5c25d">&#9670;&nbsp;</a></span>evaluate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> evaluate </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values with bounds check. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
    <tr><td class="paramname">values</td><td>The values to evaluate the scalarMOP on </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Values approximated by the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a7f80257761b6720ce42d765f0c92e791"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f80257761b6720ce42d765f0c92e791">&#9670;&nbsp;</a></span>evaluate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> evaluate </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values. Only evaluate the given output. With bounds check. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
    <tr><td class="paramname">values</td><td>The values to evaluate the scalarMOP on </td></tr>
    <tr><td class="paramname">output</td><td>The output to evaluate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Values approximated by the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a69f65698745dd36dadeb1699989f2bb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69f65698745dd36dadeb1699989f2bb2">&#9670;&nbsp;</a></span>evaluateExtrapolate() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> evaluateExtrapolate </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values no bounds check. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
    <tr><td class="paramname">values</td><td>The values to evaluate the scalarMOP on </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Values approximated by the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a2287b9e41a600402b5e7db0ca7108304"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2287b9e41a600402b5e7db0ca7108304">&#9670;&nbsp;</a></span>evaluateExtrapolate() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> evaluateExtrapolate </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluate the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values. Only evaluate the given output. No bounds check. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
    <tr><td class="paramname">values</td><td>The values to evaluate the scalarMOP on </td></tr>
    <tr><td class="paramname">output</td><td>The output to evaluate </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Values approximated by the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a883e85901256157c66e0ecbd2ab7bcb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a883e85901256157c66e0ecbd2ab7bcb0">&#9670;&nbsp;</a></span>filterActiveSampleIds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; filterActiveSampleIds </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; string &gt;&#160;</td>
          <td class="paramname"><em>sample_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the the samples id active for the selected output from the given list of sample_ids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
    <tr><td class="paramname">sample_ids</td><td>A list of sample ids corresponding to the used samples </td></tr>
    <tr><td class="paramname">model</td><td>The selected model </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector of strings representing the ids of the active samples </dd></dl>

</div>
</div>
<a id="a24f86122329b61107d3e1bf72d041a5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24f86122329b61107d3e1bf72d041a5f">&#9670;&nbsp;</a></span>filterConstantInputNames()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;string&gt; filterConstantInputNames </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; string &gt;&#160;</td>
          <td class="paramname"><em>input_names</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Filter the list of input names such that only the constant ones are returned The Input names need to be in the order as given on the training of the <a class="el" href="class_m_o_p.xhtml" title="a group of random fields belonging together (either a single random field, or multiple cross-correlat...">MOP</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
    <tr><td class="paramname">input_names</td><td>The names of the inputs in the order of the training </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A list of input names representing the constant inputs </dd></dl>

</div>
</div>
<a id="a54ae75757bd7c8c3936ab036df6d18e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54ae75757bd7c8c3936ab036df6d18e3">&#9670;&nbsp;</a></span>isValid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isValid </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks the settings </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler we refer to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true iff the datahandler may be accessed </dd></dl>

</div>
</div>
<a id="ad04e65da7a41baf081cbf4100367de57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04e65da7a41baf081cbf4100367de57">&#9670;&nbsp;</a></span>modelDescription()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string modelDescription </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the description of the model computing the output for the SclarMOP in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">output</td><td>The output under consideration </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A string containing the description of the model </dd></dl>

</div>
</div>
<a id="a9ae8a26a8e856cb73692244eadaa54e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ae8a26a8e856cb73692244eadaa54e0">&#9670;&nbsp;</a></span>modelName()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">string modelName </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the name of the model computing the output for the SclarMOP in the datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">output</td><td>The output under consideration </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A string containing the name of the model </dd></dl>

</div>
</div>
<a id="a8fc71ccbaa1350b7f88140bf7a6ded02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fc71ccbaa1350b7f88140bf7a6ded02">&#9670;&nbsp;</a></span>predictionError() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> predictionError </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Estimate the prediction error for <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The prediction error </dd></dl>

</div>
</div>
<a id="a356e1b51c7ff0f01849dbdd20b355238"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a356e1b51c7ff0f01849dbdd20b355238">&#9670;&nbsp;</a></span>predictionError() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number predictionError </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Estimate the prediction error for <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the datahandler on the given values for the given output. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler containing the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </td></tr>
    <tr><td class="paramname">output</td><td>The selected output </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Values approximated by the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> </dd></dl>

</div>
</div>
<a id="a5851787f9ce075375b9e0aa2934505ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5851787f9ce075375b9e0aa2934505ff">&#9670;&nbsp;</a></span>qualityMeasureTotal() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> qualityMeasureTotal </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">::quality_measure::QualityMeasureBase&#160;</td>
          <td class="paramname"><em>quality_measure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the total quality measure w.r.t. the expected responses from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">quality_measure</td><td>The quality measure </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The total quality measure of all outputs w.r.t. the expected responses </dd></dl>

</div>
</div>
<a id="acaa360031f26d42e06a8f7b63b19198a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acaa360031f26d42e06a8f7b63b19198a">&#9670;&nbsp;</a></span>qualityMeasureTotal() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number qualityMeasureTotal </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">::quality_measure::QualityMeasureBase&#160;</td>
          <td class="paramname"><em>quality_measure</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>output</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the total quality measure w.r.t. the expected responses for the given output from the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> in the given datahandler. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The datahandler </td></tr>
    <tr><td class="paramname">quality_measure</td><td>The quality measure </td></tr>
    <tr><td class="paramname">output</td><td>The output to compute for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The total quality measure of all outputs w.r.t. the expected responses </dd></dl>

</div>
</div>
<a id="a9403b938a192208b16bd52cd1c5b5b42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9403b938a192208b16bd52cd1c5b5b42">&#9670;&nbsp;</a></span>sampleStatus() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> sampleStatus </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the the samples active/inactive for all models. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A matrix of bools specifying for each sample/model if it is active/inactive </dd></dl>

</div>
</div>
<a id="a7b607b96e2ecb071ace9443a07dab932"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b607b96e2ecb071ace9443a07dab932">&#9670;&nbsp;</a></span>sampleStatus() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> sampleStatus </td>
          <td>(</td>
          <td class="paramtype">::data_handler::DataHandlerBase&#160;</td>
          <td class="paramname"><em>datahandler</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>model</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the the samples id active for the selected output from the given list of sample_ids. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">datahandler</td><td>The database to take the <a class="el" href="struct_scalar_m_o_p.xhtml" title="This is only a sketch of the possible ScalarMOPApproximate API Implementation shall be refined if mor...">ScalarMOP</a> from </td></tr>
    <tr><td class="paramname">model</td><td>The selected model </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector of bools specifying for each samples if it is active/inactive for the model </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
