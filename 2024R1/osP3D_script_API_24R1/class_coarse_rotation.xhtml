<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): CoarseRotation Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_coarse_rotation.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="class_coarse_rotation-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">CoarseRotation Class Reference<div class="ingroups"><a class="el" href="group__meshmapper.xhtml">Mesh mapper</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>This algorithms automatically rotates one structure to the center of origin of the other.  
 <a href="class_coarse_rotation.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> { <br />
&#160;&#160;<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a2d5c3933900d9305ee3ab4eaf1c8eb41">eNEUTRAL_TRANS</a> =0, 
<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a8ac858363c69f6aa4f5c8c53707e59d9">eCOARSE_TRANS</a>, 
<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7aea911dad52b010b8282c411af58e6539">eCOARSE_ROT</a>, 
<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a4f10521c7d01709e9fe29913bc74dc47">eCOARSE_ROT_TRANS</a>, 
<br />
&#160;&#160;<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a8f71931fda1acc6fdf8e362cbb879ebb">eFINE_ROT_TRANS</a>, 
<a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7a639264569cf302a509a30ecd4f9742f3">eFINE_ROT_TRANS_PREALIGNED</a>
<br />
 }</td></tr>
<tr class="memdesc:a1d1cfd8ffb84e947f82999c682b666a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">an enum type defining the type of the derived class  <a href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">More...</a><br /></td></tr>
<tr class="separator:a1d1cfd8ffb84e947f82999c682b666a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afdd491598da35029e3a478c72526fe8c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coor_transformation_base.xhtml#afdd491598da35029e3a478c72526fe8c">applyTransformation</a> (<a class="el" href="class_mesh_mapper_base.xhtml">MeshMapperBase</a> mapper, <a class="el" href="class_structure.xhtml">Structure</a> ref_structure, <a class="el" href="class_structure.xhtml">Structure</a> other_structure)</td></tr>
<tr class="memdesc:afdd491598da35029e3a478c72526fe8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies the coordinate transformation to the other_structure.  <a href="#afdd491598da35029e3a478c72526fe8c">More...</a><br /></td></tr>
<tr class="separator:afdd491598da35029e3a478c72526fe8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf303770049c59d3e8ce7c5e900fe6a3"><td class="memItemLeft" align="right" valign="top"><a id="abf303770049c59d3e8ce7c5e900fe6a3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#abf303770049c59d3e8ce7c5e900fe6a3">CoarseRotation</a> ()</td></tr>
<tr class="memdesc:abf303770049c59d3e8ce7c5e900fe6a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor initializing a seed for the coarse rotation algorithm only. <br /></td></tr>
<tr class="separator:abf303770049c59d3e8ce7c5e900fe6a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9fff1a6c26387078d83c1609c2edc0"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#a6e9fff1a6c26387078d83c1609c2edc0">doesNonRigid</a> ()</td></tr>
<tr class="separator:a6e9fff1a6c26387078d83c1609c2edc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2db558b5b102b9a6effd23683effa336"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#a2db558b5b102b9a6effd23683effa336">doesRotate</a> ()</td></tr>
<tr class="separator:a2db558b5b102b9a6effd23683effa336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dfae9c4461dc2b2e4ccb32245c94dcb"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#a9dfae9c4461dc2b2e4ccb32245c94dcb">doesTranslate</a> ()</td></tr>
<tr class="separator:a9dfae9c4461dc2b2e4ccb32245c94dcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac225d733c7c2cc84e76682c9f5b4c7d2"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#ac225d733c7c2cc84e76682c9f5b4c7d2">generateScriptOfSettingsDefinition</a> (string variable_ident)</td></tr>
<tr class="memdesc:ac225d733c7c2cc84e76682c9f5b4c7d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">generates a script string (Lua) that is used to build up this object.  <a href="#ac225d733c7c2cc84e76682c9f5b4c7d2">More...</a><br /></td></tr>
<tr class="separator:ac225d733c7c2cc84e76682c9f5b4c7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54b19d55d0fc1d118b49c425a6b71d12"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#a54b19d55d0fc1d118b49c425a6b71d12">trafoType</a> ()</td></tr>
<tr class="separator:a54b19d55d0fc1d118b49c425a6b71d12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a29c920e8d9caac392af34838529b3de9"><td class="memItemLeft" align="right" valign="top"><a id="a29c920e8d9caac392af34838529b3de9"></a>
number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coarse_rotation.xhtml#a29c920e8d9caac392af34838529b3de9">seed</a></td></tr>
<tr class="memdesc:a29c920e8d9caac392af34838529b3de9"><td class="mdescLeft">&#160;</td><td class="mdescRight">The seed for the randomly choosen restart design of the coarse rotation. <br /></td></tr>
<tr class="separator:a29c920e8d9caac392af34838529b3de9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82e5d668866e3c7af7831eb0463db6f1"><td class="memItemLeft" align="right" valign="top">std::pair&lt; string, string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_coor_transformation_base.xhtml#a82e5d668866e3c7af7831eb0463db6f1">trafo_ref_node_set</a></td></tr>
<tr class="memdesc:a82e5d668866e3c7af7831eb0463db6f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The ident of the reference node set the transformation algorithms will be limited to set up their optimization criterion.  <a href="#a82e5d668866e3c7af7831eb0463db6f1">More...</a><br /></td></tr>
<tr class="separator:a82e5d668866e3c7af7831eb0463db6f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This algorithms automatically rotates one structure to the center of origin of the other. </p>
<p>The center of origin is defined by the boundary surface of both structures. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a1d1cfd8ffb84e947f82999c682b666a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d1cfd8ffb84e947f82999c682b666a7">&#9670;&nbsp;</a></span>Type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>an enum type defining the type of the derived class </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a2d5c3933900d9305ee3ab4eaf1c8eb41"></a>eNEUTRAL_TRANS&#160;</td><td class="fielddoc"><p>Neutral transformation. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a8ac858363c69f6aa4f5c8c53707e59d9"></a>eCOARSE_TRANS&#160;</td><td class="fielddoc"><p><a class="el" href="class_coarse_translation.xhtml" title="This algorithms automatically translates one structure to the center of origin of the other...">CoarseTranslation</a>. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7aea911dad52b010b8282c411af58e6539"></a>eCOARSE_ROT&#160;</td><td class="fielddoc"><p><a class="el" href="class_coarse_rotation.xhtml" title="This algorithms automatically rotates one structure to the center of origin of the other...">CoarseRotation</a>. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a4f10521c7d01709e9fe29913bc74dc47"></a>eCOARSE_ROT_TRANS&#160;</td><td class="fielddoc"><p><a class="el" href="class_coarse_rigid_transformation.xhtml" title="This algorithms automatically transformates one structure to the center of origin of the other...">CoarseRigidTransformation</a>. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a8f71931fda1acc6fdf8e362cbb879ebb"></a>eFINE_ROT_TRANS&#160;</td><td class="fielddoc"><p><a class="el" href="class_fine_rigid_transformation.xhtml" title="Tries to match a source point cloud with a reference point cloud using the coarse transformation (see...">FineRigidTransformation</a>. </p>
</td></tr>
<tr><td class="fieldname"><a id="a1d1cfd8ffb84e947f82999c682b666a7a639264569cf302a509a30ecd4f9742f3"></a>eFINE_ROT_TRANS_PREALIGNED&#160;</td><td class="fielddoc"><p><a class="el" href="class_fine_rigid_transformation.xhtml" title="Tries to match a source point cloud with a reference point cloud using the coarse transformation (see...">FineRigidTransformation</a> of pre-aligned point clouds. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afdd491598da35029e3a478c72526fe8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdd491598da35029e3a478c72526fe8c">&#9670;&nbsp;</a></span>applyTransformation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">applyTransformation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_mesh_mapper_base.xhtml">MeshMapperBase</a>&#160;</td>
          <td class="paramname"><em>mapper</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>ref_structure</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>other_structure</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Applies the coordinate transformation to the other_structure. </p>
<p>If a transformation reference node set has been defined, only those nodes included in the sets will be used to determine the transformation matrix. Otherwise all nodes of both structures will be used for the determination algorithm. Nevertheless, the transformation itself will be applied to all nodes of the other_structure. It might also occur, that the reference node set cannot be found in the other_structure. In such a case, the reference node set will be projected onto the segments of the other_structure and used as virtual node set.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mapper</td><td>A back reference to the current mesh mapper. This one might be needed if a defined reference node set cannot be found in the other_structure </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ref_structure</td><td>The reference mesh </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">other_structure</td><td>On input the imported mesh. On output the mesh with modified coordinates. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6e9fff1a6c26387078d83c1609c2edc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9fff1a6c26387078d83c1609c2edc0">&#9670;&nbsp;</a></span>doesNonRigid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool doesNonRigid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this transformation applies a non-rigid operation </dd></dl>

<p>Implements <a class="el" href="class_coor_transformation_base.xhtml#ac87710c0a9a888274234344ca0aae257">CoorTransformationBase</a>.</p>

</div>
</div>
<a id="a2db558b5b102b9a6effd23683effa336"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2db558b5b102b9a6effd23683effa336">&#9670;&nbsp;</a></span>doesRotate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool doesRotate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this transformation applies a rigid rotation </dd></dl>

<p>Implements <a class="el" href="class_coor_transformation_base.xhtml#ae1841e85a58acb38cc648818485e265f">CoorTransformationBase</a>.</p>

</div>
</div>
<a id="a9dfae9c4461dc2b2e4ccb32245c94dcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dfae9c4461dc2b2e4ccb32245c94dcb">&#9670;&nbsp;</a></span>doesTranslate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool doesTranslate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>true if this transformation applies a rigid translation </dd></dl>

<p>Implements <a class="el" href="class_coor_transformation_base.xhtml#a0c6d1696bb7fa057700433a238ac628b">CoorTransformationBase</a>.</p>

</div>
</div>
<a id="ac225d733c7c2cc84e76682c9f5b4c7d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac225d733c7c2cc84e76682c9f5b4c7d2">&#9670;&nbsp;</a></span>generateScriptOfSettingsDefinition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string generateScriptOfSettingsDefinition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>variable_ident</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>generates a script string (Lua) that is used to build up this object. </p>
<dl class="section return"><dt>Returns</dt><dd>the script code, ends with newline. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">variable_ident</td><td>the ident of the Lua variable that contains the MeshMapper object </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="class_coor_transformation_base.xhtml#a5f5fbbea63d66795a7350e53e99d5c59">CoorTransformationBase</a>.</p>

</div>
</div>
<a id="a54b19d55d0fc1d118b49c425a6b71d12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54b19d55d0fc1d118b49c425a6b71d12">&#9670;&nbsp;</a></span>trafoType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_coor_transformation_base.xhtml#a1d1cfd8ffb84e947f82999c682b666a7">Type</a> trafoType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the type of the transformation </dd></dl>

<p>Implements <a class="el" href="class_coor_transformation_base.xhtml#a6f3bf49f542989a2d568060325588a3f">CoorTransformationBase</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a82e5d668866e3c7af7831eb0463db6f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82e5d668866e3c7af7831eb0463db6f1">&#9670;&nbsp;</a></span>trafo_ref_node_set</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; string, string &gt; trafo_ref_node_set</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The ident of the reference node set the transformation algorithms will be limited to set up their optimization criterion. </p>
<p>A pair consisting of the part ident as first and the set ident as second member. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
