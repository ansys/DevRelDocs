<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>optiSLang 3D Postprocessing Script API Documentation (Beta): SceneManager Class Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('class_scene_manager.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_scene_manager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SceneManager Class Reference<div class="ingroups"><a class="el" href="group__graphics.xhtml">Graphics</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A manager class for 3D visualization of a structure.  
 <a href="class_scene_manager.xhtml#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa3b0cd6ed770783df3ac9e302f5a0bfd"><td class="memItemLeft" align="right" valign="top">typedef std::list&lt; SceneListener * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aa3b0cd6ed770783df3ac9e302f5a0bfd">SceneListenerList</a></td></tr>
<tr class="memdesc:aa3b0cd6ed770783df3ac9e302f5a0bfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">a list of  <a href="#aa3b0cd6ed770783df3ac9e302f5a0bfd">More...</a><br /></td></tr>
<tr class="separator:aa3b0cd6ed770783df3ac9e302f5a0bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a55fb9b977b23b621547efe6d9266c2e4"><td class="memItemLeft" align="right" valign="top"><a id="a55fb9b977b23b621547efe6d9266c2e4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>activateElementValues</b> ()</td></tr>
<tr class="separator:a55fb9b977b23b621547efe6d9266c2e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a514ee0471e4f805a71945153ff0e2309"><td class="memItemLeft" align="right" valign="top"><a id="a514ee0471e4f805a71945153ff0e2309"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>activateNodeValues</b> ()</td></tr>
<tr class="separator:a514ee0471e4f805a71945153ff0e2309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a933ec67b1fb48fbae1b7297f14b83377"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_scene.xhtml">Scene</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a933ec67b1fb48fbae1b7297f14b83377">activeScene</a> ()</td></tr>
<tr class="separator:a933ec67b1fb48fbae1b7297f14b83377"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922a65077df578203d04cb2ae0a92629"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="class_scene.xhtml">Scene</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a922a65077df578203d04cb2ae0a92629">activeSceneRef</a> ()</td></tr>
<tr class="separator:a922a65077df578203d04cb2ae0a92629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a428fd66163cef3883e58a2f41515a6c3"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a428fd66163cef3883e58a2f41515a6c3">addScene</a> ()</td></tr>
<tr class="memdesc:a428fd66163cef3883e58a2f41515a6c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a428fd66163cef3883e58a2f41515a6c3">More...</a><br /></td></tr>
<tr class="separator:a428fd66163cef3883e58a2f41515a6c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4118d97778d34921f99be164489e7fe"><td class="memItemLeft" align="right" valign="top"><a id="af4118d97778d34921f99be164489e7fe"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#af4118d97778d34921f99be164489e7fe">clearSelection</a> ()</td></tr>
<tr class="memdesc:af4118d97778d34921f99be164489e7fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">clearSelection unselect all nodes and elements in active scene. Does <em>not</em> perform an automatic redraw <br /></td></tr>
<tr class="separator:af4118d97778d34921f99be164489e7fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bc15e60767959409f53ae11ef620037"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a5bc15e60767959409f53ae11ef620037">eraseScene</a> (number index)</td></tr>
<tr class="memdesc:a5bc15e60767959409f53ae11ef620037"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes a scene  <a href="#a5bc15e60767959409f53ae11ef620037">More...</a><br /></td></tr>
<tr class="separator:a5bc15e60767959409f53ae11ef620037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c7b5615ec035363f860fa1f84060db9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a2c7b5615ec035363f860fa1f84060db9">eraseScenes</a> (bool all=false)</td></tr>
<tr class="memdesc:a2c7b5615ec035363f860fa1f84060db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">deletes all scenes  <a href="#a2c7b5615ec035363f860fa1f84060db9">More...</a><br /></td></tr>
<tr class="separator:a2c7b5615ec035363f860fa1f84060db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbe08127b637b3781091ce9adb23f36"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8dbe08127b637b3781091ce9adb23f36">exportTNG</a> (string <a class="el" href="class_scene_manager.xhtml#a6d539fe45f6c81c7836e1f7295a25f02">file</a>)</td></tr>
<tr class="memdesc:a8dbe08127b637b3781091ce9adb23f36"><td class="mdescLeft">&#160;</td><td class="mdescRight">export scene data to slangTNG  <a href="#a8dbe08127b637b3781091ce9adb23f36">More...</a><br /></td></tr>
<tr class="separator:a8dbe08127b637b3781091ce9adb23f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a570a4182e3658d6f7280b3cc232a7344"><td class="memItemLeft" align="right" valign="top"><a id="a570a4182e3658d6f7280b3cc232a7344"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractMaximumScalarsFromSelectedElements</b> (bool, string user_ident=&quot;&quot;)</td></tr>
<tr class="separator:a570a4182e3658d6f7280b3cc232a7344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a298fedabff3a9e767b8c7852ecb42"><td class="memItemLeft" align="right" valign="top"><a id="a16a298fedabff3a9e767b8c7852ecb42"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractMaximumScalarsFromSelectedNodes</b> (bool, string user_ident=&quot;&quot;)</td></tr>
<tr class="separator:a16a298fedabff3a9e767b8c7852ecb42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18076e305b125eba4ad31113c29af801"><td class="memItemLeft" align="right" valign="top"><a id="a18076e305b125eba4ad31113c29af801"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractMinimumScalarsFromSelectedElements</b> (bool, string user_ident=&quot;&quot;)</td></tr>
<tr class="separator:a18076e305b125eba4ad31113c29af801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85cf115d57889b638ebb49910be691ad"><td class="memItemLeft" align="right" valign="top"><a id="a85cf115d57889b638ebb49910be691ad"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractMinimumScalarsFromSelectedNodes</b> (bool, string user_ident=&quot;&quot;)</td></tr>
<tr class="separator:a85cf115d57889b638ebb49910be691ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df2f7411e771709917b420c733b44a5"><td class="memItemLeft" align="right" valign="top"><a id="a3df2f7411e771709917b420c733b44a5"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractScalarsFromSelectedElements</b> (bool)</td></tr>
<tr class="separator:a3df2f7411e771709917b420c733b44a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59e4c2cfe3099dbeacc2bcf77db5afa5"><td class="memItemLeft" align="right" valign="top"><a id="a59e4c2cfe3099dbeacc2bcf77db5afa5"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>extractScalarsFromSelectedNodes</b> (bool)</td></tr>
<tr class="separator:a59e4c2cfe3099dbeacc2bcf77db5afa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d539fe45f6c81c7836e1f7295a25f02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6d539fe45f6c81c7836e1f7295a25f02">file</a> (string filename)</td></tr>
<tr class="memdesc:a6d539fe45f6c81c7836e1f7295a25f02"><td class="mdescLeft">&#160;</td><td class="mdescRight">: Render the scene into a QImage  <a href="#a6d539fe45f6c81c7836e1f7295a25f02">More...</a><br /></td></tr>
<tr class="separator:a6d539fe45f6c81c7836e1f7295a25f02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c96b93569e029e895f49a3cf3a36dd6"><td class="memItemLeft" align="right" valign="top"><a id="a5c96b93569e029e895f49a3cf3a36dd6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>file</b> (string filename, number width, number height)</td></tr>
<tr class="separator:a5c96b93569e029e895f49a3cf3a36dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6230c0a8c1d31cf921984317cbfa3aef"><td class="memItemLeft" align="right" valign="top"><a id="a6230c0a8c1d31cf921984317cbfa3aef"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6230c0a8c1d31cf921984317cbfa3aef">fit</a> ()</td></tr>
<tr class="memdesc:a6230c0a8c1d31cf921984317cbfa3aef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust scaling such that the entire structure fills the viewport when viewed from current angle. <br /></td></tr>
<tr class="separator:a6230c0a8c1d31cf921984317cbfa3aef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c20b047e7c89c25e95ad212000a64d0"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a0c20b047e7c89c25e95ad212000a64d0">font</a> (QFont font)</td></tr>
<tr class="separator:a0c20b047e7c89c25e95ad212000a64d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72091f1f477aadf12ed7d72655d199dd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a72091f1f477aadf12ed7d72655d199dd">getActiveScene</a> ()</td></tr>
<tr class="separator:a72091f1f477aadf12ed7d72655d199dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3be486d81152d068143907738a8a06d7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a3be486d81152d068143907738a8a06d7">getAutoRedraw</a> ()</td></tr>
<tr class="memdesc:a3be486d81152d068143907738a8a06d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">getAutoRedraw set automatic redraw mode  <a href="#a3be486d81152d068143907738a8a06d7">More...</a><br /></td></tr>
<tr class="separator:a3be486d81152d068143907738a8a06d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad01ff5ed5303bfdfc3f893c0bd743cbf"><td class="memItemLeft" align="right" valign="top"><a id="ad01ff5ed5303bfdfc3f893c0bd743cbf"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>getHiliteReferenceSet</b> ()</td></tr>
<tr class="separator:ad01ff5ed5303bfdfc3f893c0bd743cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a652c2a92b3b3d8100f782aa21409ae61"><td class="memItemLeft" align="right" valign="top"><a id="a652c2a92b3b3d8100f782aa21409ae61"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>getIsoSurfaceAlpha</b> ()</td></tr>
<tr class="separator:a652c2a92b3b3d8100f782aa21409ae61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98294e22da1a4dca1f23c41e15e6323"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ae98294e22da1a4dca1f23c41e15e6323">getPaletteRange</a> (number xmin, number xmax)</td></tr>
<tr class="memdesc:ae98294e22da1a4dca1f23c41e15e6323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets minimum and maximum values of palette.  <a href="#ae98294e22da1a4dca1f23c41e15e6323">More...</a><br /></td></tr>
<tr class="separator:ae98294e22da1a4dca1f23c41e15e6323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7294b1b8f2ec69622fa1fad124726c55"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7294b1b8f2ec69622fa1fad124726c55">getPan</a> (float x, float y)</td></tr>
<tr class="memdesc:a7294b1b8f2ec69622fa1fad124726c55"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the current pan values  <a href="#a7294b1b8f2ec69622fa1fad124726c55">More...</a><br /></td></tr>
<tr class="separator:a7294b1b8f2ec69622fa1fad124726c55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a049f870422441eb05361fdd93df44c7f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a049f870422441eb05361fdd93df44c7f">getRotation</a> (float angle, float x, float y, float z)</td></tr>
<tr class="memdesc:a049f870422441eb05361fdd93df44c7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">get current rotation expressed in angle/axis form  <a href="#a049f870422441eb05361fdd93df44c7f">More...</a><br /></td></tr>
<tr class="separator:a049f870422441eb05361fdd93df44c7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3acd66fdc6083581a4598f4edd1566e"><td class="memItemLeft" align="right" valign="top"><a id="ac3acd66fdc6083581a4598f4edd1566e"></a>
std::vector&lt; boost::shared_ptr&lt; graphics::Scene &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>getScenes</b> ()</td></tr>
<tr class="separator:ac3acd66fdc6083581a4598f4edd1566e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a463529fc5f2589372708e416b315efe1"><td class="memItemLeft" align="right" valign="top"><a id="a463529fc5f2589372708e416b315efe1"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>getStructureAlpha</b> ()</td></tr>
<tr class="separator:a463529fc5f2589372708e416b315efe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e935e225e0809604a0a816f333a0b33"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8e935e225e0809604a0a816f333a0b33">getValueRange</a> (number xmin, number xmax)</td></tr>
<tr class="memdesc:a8e935e225e0809604a0a816f333a0b33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets minimum and maximum data values.  <a href="#a8e935e225e0809604a0a816f333a0b33">More...</a><br /></td></tr>
<tr class="separator:a8e935e225e0809604a0a816f333a0b33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7521972598ce04727dbf806ac7c4db83"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7521972598ce04727dbf806ac7c4db83">getVisibleCoordinates</a> ()</td></tr>
<tr class="memdesc:a7521972598ce04727dbf806ac7c4db83"><td class="mdescLeft">&#160;</td><td class="mdescRight">get coordinates of all vertices in the active scene  <a href="#a7521972598ce04727dbf806ac7c4db83">More...</a><br /></td></tr>
<tr class="separator:a7521972598ce04727dbf806ac7c4db83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47cbe0cbeac174b3ccfb1913fdf8ef30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a47cbe0cbeac174b3ccfb1913fdf8ef30">getVisibleTetCoordinates</a> ()</td></tr>
<tr class="memdesc:a47cbe0cbeac174b3ccfb1913fdf8ef30"><td class="mdescLeft">&#160;</td><td class="mdescRight">get coordinates of all tet vertices in the active scene  <a href="#a47cbe0cbeac174b3ccfb1913fdf8ef30">More...</a><br /></td></tr>
<tr class="separator:a47cbe0cbeac174b3ccfb1913fdf8ef30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad59a25d25ca854989abdc81ce4c80f4b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ad59a25d25ca854989abdc81ce4c80f4b">getZoom</a> ()</td></tr>
<tr class="memdesc:ad59a25d25ca854989abdc81ce4c80f4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">get current zoom factor  <a href="#ad59a25d25ca854989abdc81ce4c80f4b">More...</a><br /></td></tr>
<tr class="separator:ad59a25d25ca854989abdc81ce4c80f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1504f6a3c038cffa4b004b7f794227"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#acd1504f6a3c038cffa4b004b7f794227">initSlice</a> ()</td></tr>
<tr class="memdesc:acd1504f6a3c038cffa4b004b7f794227"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a slicing plane in the active scene, using the body coordinate system. The plane will be defined in Hessian normal form Only points with coordinates satisfying $ax+by+cz+d &gt; 0$ are shown, the rest is suppressed.  <a href="#acd1504f6a3c038cffa4b004b7f794227">More...</a><br /></td></tr>
<tr class="separator:acd1504f6a3c038cffa4b004b7f794227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1da585eaeeb198d66ced3699565766b0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a1da585eaeeb198d66ced3699565766b0">isElementSelected</a> (number part_idx, number element_idx)</td></tr>
<tr class="memdesc:a1da585eaeeb198d66ced3699565766b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">isSelected  <a href="#a1da585eaeeb198d66ced3699565766b0">More...</a><br /></td></tr>
<tr class="separator:a1da585eaeeb198d66ced3699565766b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ee825f116bbe7229ede8d3e7767a97c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a0ee825f116bbe7229ede8d3e7767a97c">isGraphicsEnabled</a> ()</td></tr>
<tr class="separator:a0ee825f116bbe7229ede8d3e7767a97c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18f3e9cc303d84ff6e1dfaa97bbb3883"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a18f3e9cc303d84ff6e1dfaa97bbb3883">isGraphicsSlicingEnabled</a> ()</td></tr>
<tr class="separator:a18f3e9cc303d84ff6e1dfaa97bbb3883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f215b949d6a778e50221c39393b2012"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7f215b949d6a778e50221c39393b2012">isNodeSelected</a> (number part_idx, number node_idx)</td></tr>
<tr class="memdesc:a7f215b949d6a778e50221c39393b2012"><td class="mdescLeft">&#160;</td><td class="mdescRight">isSelected  <a href="#a7f215b949d6a778e50221c39393b2012">More...</a><br /></td></tr>
<tr class="separator:a7f215b949d6a778e50221c39393b2012"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e29794f75e21d9ed039a2403e5001ba"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6e29794f75e21d9ed039a2403e5001ba">listPaletteIDs</a> ()</td></tr>
<tr class="memdesc:a6e29794f75e21d9ed039a2403e5001ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an order list of all known palette IDs including user defined ones.  <a href="#a6e29794f75e21d9ed039a2403e5001ba">More...</a><br /></td></tr>
<tr class="separator:a6e29794f75e21d9ed039a2403e5001ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b9533aaa4a00f783a8f9cf1a381a63f"><td class="memItemLeft" align="right" valign="top"><a id="a7b9533aaa4a00f783a8f9cf1a381a63f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7b9533aaa4a00f783a8f9cf1a381a63f">redraw</a> (bool sync)</td></tr>
<tr class="memdesc:a7b9533aaa4a00f783a8f9cf1a381a63f"><td class="mdescLeft">&#160;</td><td class="mdescRight">redraw the active scene <br /></td></tr>
<tr class="separator:a7b9533aaa4a00f783a8f9cf1a381a63f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05abf562d065b7fd4657ade1385c8bca"><td class="memItemLeft" align="right" valign="top"><a id="a05abf562d065b7fd4657ade1385c8bca"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a05abf562d065b7fd4657ade1385c8bca">removeSlice</a> ()</td></tr>
<tr class="memdesc:a05abf562d065b7fd4657ade1385c8bca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the slicing plane of the active scene. <br /></td></tr>
<tr class="separator:a05abf562d065b7fd4657ade1385c8bca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17f23ce554308def6e946547e508dffa"><td class="memItemLeft" align="right" valign="top">virtual string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a17f23ce554308def6e946547e508dffa">rendererInfo</a> ()</td></tr>
<tr class="memdesc:a17f23ce554308def6e946547e508dffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the graphics renderer information creates its own openGL context locally, to call glGetString()  <a href="#a17f23ce554308def6e946547e508dffa">More...</a><br /></td></tr>
<tr class="separator:a17f23ce554308def6e946547e508dffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa40a8e8e57d456d3e854172dd4f638"><td class="memItemLeft" align="right" valign="top"><a id="a2aa40a8e8e57d456d3e854172dd4f638"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a2aa40a8e8e57d456d3e854172dd4f638">resetScene</a> ()</td></tr>
<tr class="memdesc:a2aa40a8e8e57d456d3e854172dd4f638"><td class="mdescLeft">&#160;</td><td class="mdescRight">applies an empty data set to the active scene (resetting it to structure plot) <br /></td></tr>
<tr class="separator:a2aa40a8e8e57d456d3e854172dd4f638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4663e4ad297095c1c427dd138660f1"><td class="memItemLeft" align="right" valign="top"><a id="aca4663e4ad297095c1c427dd138660f1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aca4663e4ad297095c1c427dd138660f1">scale</a> ()</td></tr>
<tr class="memdesc:aca4663e4ad297095c1c427dd138660f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust scaling such that the entire structure fits into the viewport when viewed from any angle. <br /></td></tr>
<tr class="separator:aca4663e4ad297095c1c427dd138660f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d414be8137b229943717d955417ee80"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8d414be8137b229943717d955417ee80">SceneManager</a> (boost::shared_ptr&lt; <a class="el" href="class_structure.xhtml">Structure</a> &gt; dataBase, bool is_graphics_enabled=true)</td></tr>
<tr class="memdesc:a8d414be8137b229943717d955417ee80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the manager and adds a first scene provided that the database has a reference mesh defined. Adds a first scene without any data -&gt; calls addSene only.  <a href="#a8d414be8137b229943717d955417ee80">More...</a><br /></td></tr>
<tr class="separator:a8d414be8137b229943717d955417ee80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88c8a0e67db1ff2f23a38fde8e9e597"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#af88c8a0e67db1ff2f23a38fde8e9e597">selectedElementIndices</a> ()</td></tr>
<tr class="separator:af88c8a0e67db1ff2f23a38fde8e9e597"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c0f9ec57947a75d8bafb6ce38d714a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ac5c0f9ec57947a75d8bafb6ce38d714a">selectedNodeIndices</a> ()</td></tr>
<tr class="separator:ac5c0f9ec57947a75d8bafb6ce38d714a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c05f539b55985fe980d610883c4204"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a13c05f539b55985fe980d610883c4204">selectElement</a> (number part_idx, number element_idx, number value, bool showLabel)</td></tr>
<tr class="memdesc:a13c05f539b55985fe980d610883c4204"><td class="mdescLeft">&#160;</td><td class="mdescRight">select a single element in the active scene. Does <em>not</em> perform an automatic redraw  <a href="#a13c05f539b55985fe980d610883c4204">More...</a><br /></td></tr>
<tr class="separator:a13c05f539b55985fe980d610883c4204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a643132d27da3b0e945c39cbe9032f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a39a643132d27da3b0e945c39cbe9032f">selectElements</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> indices)</td></tr>
<tr class="memdesc:a39a643132d27da3b0e945c39cbe9032f"><td class="mdescLeft">&#160;</td><td class="mdescRight">selects the given elements  <a href="#a39a643132d27da3b0e945c39cbe9032f">More...</a><br /></td></tr>
<tr class="separator:a39a643132d27da3b0e945c39cbe9032f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4470f2f7d3ce20580e120701c73455d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aa4470f2f7d3ce20580e120701c73455d">selectMaximumValues</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:aa4470f2f7d3ce20580e120701c73455d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable largest data values of the active quantity among the whole FEM structure in the active scene.  <a href="#aa4470f2f7d3ce20580e120701c73455d">More...</a><br /></td></tr>
<tr class="separator:aa4470f2f7d3ce20580e120701c73455d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bb71f2499c19c102156a39251cc0cf6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a1bb71f2499c19c102156a39251cc0cf6">selectMinimumValues</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:a1bb71f2499c19c102156a39251cc0cf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable smallest data values of the active quantity among the whole FEM structure in the active scene.  <a href="#a1bb71f2499c19c102156a39251cc0cf6">More...</a><br /></td></tr>
<tr class="separator:a1bb71f2499c19c102156a39251cc0cf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e8979693f41ceec0214a046462a9ce5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6e8979693f41ceec0214a046462a9ce5">selectNode</a> (number part_idx, number node_idx, number value, bool showLabel)</td></tr>
<tr class="memdesc:a6e8979693f41ceec0214a046462a9ce5"><td class="mdescLeft">&#160;</td><td class="mdescRight">select a single node in the active scene. Does <em>not</em> perform an automatic redraw  <a href="#a6e8979693f41ceec0214a046462a9ce5">More...</a><br /></td></tr>
<tr class="separator:a6e8979693f41ceec0214a046462a9ce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed8d90a34a77ddb389d3c0547f7a6ab4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aed8d90a34a77ddb389d3c0547f7a6ab4">selectNodes</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> indices)</td></tr>
<tr class="memdesc:aed8d90a34a77ddb389d3c0547f7a6ab4"><td class="mdescLeft">&#160;</td><td class="mdescRight">selects the given nodes  <a href="#aed8d90a34a77ddb389d3c0547f7a6ab4">More...</a><br /></td></tr>
<tr class="separator:aed8d90a34a77ddb389d3c0547f7a6ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb6b0894e25b4846b6bb167fd8c8cbe9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#abb6b0894e25b4846b6bb167fd8c8cbe9">selectRelativeMaximumValues</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:abb6b0894e25b4846b6bb167fd8c8cbe9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls selectRelativeMaximumValuesWeak(...). Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene.  <a href="#abb6b0894e25b4846b6bb167fd8c8cbe9">More...</a><br /></td></tr>
<tr class="separator:abb6b0894e25b4846b6bb167fd8c8cbe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd0a4a8d15e51aba759442af8807d2d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#abd0a4a8d15e51aba759442af8807d2d6">selectRelativeMaximumValuesStrict</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:abd0a4a8d15e51aba759442af8807d2d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a SMALLER value.  <a href="#abd0a4a8d15e51aba759442af8807d2d6">More...</a><br /></td></tr>
<tr class="separator:abd0a4a8d15e51aba759442af8807d2d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e32eaaa46f6688f1461bf9e878b7c9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a84e32eaaa46f6688f1461bf9e878b7c9">selectRelativeMaximumValuesWeak</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:a84e32eaaa46f6688f1461bf9e878b7c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a SMALLER OR EQUAL value.  <a href="#a84e32eaaa46f6688f1461bf9e878b7c9">More...</a><br /></td></tr>
<tr class="separator:a84e32eaaa46f6688f1461bf9e878b7c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2818b2141eff95a92a5d345c3257cd1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#af2818b2141eff95a92a5d345c3257cd1">selectRelativeMinimumValues</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:af2818b2141eff95a92a5d345c3257cd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls selectRelativeMinimumValuesWeak(...). Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene.  <a href="#af2818b2141eff95a92a5d345c3257cd1">More...</a><br /></td></tr>
<tr class="separator:af2818b2141eff95a92a5d345c3257cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a523346a0f096b9bfa3fc27406968669e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a523346a0f096b9bfa3fc27406968669e">selectRelativeMinimumValuesStrict</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:a523346a0f096b9bfa3fc27406968669e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a LARGER value.  <a href="#a523346a0f096b9bfa3fc27406968669e">More...</a><br /></td></tr>
<tr class="separator:a523346a0f096b9bfa3fc27406968669e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a951530ae2d67c5cd87143fb4f508b9cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a951530ae2d67c5cd87143fb4f508b9cf">selectRelativeMinimumValuesWeak</a> (bool add_selection, number max_selectable)</td></tr>
<tr class="memdesc:a951530ae2d67c5cd87143fb4f508b9cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a LARGER OR EQUAL value.  <a href="#a951530ae2d67c5cd87143fb4f508b9cf">More...</a><br /></td></tr>
<tr class="separator:a951530ae2d67c5cd87143fb4f508b9cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1adc14ebabf7a6325d3215a96401f416"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a1adc14ebabf7a6325d3215a96401f416">setActiveScene</a> (number act)</td></tr>
<tr class="memdesc:a1adc14ebabf7a6325d3215a96401f416"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the active scene  <a href="#a1adc14ebabf7a6325d3215a96401f416">More...</a><br /></td></tr>
<tr class="separator:a1adc14ebabf7a6325d3215a96401f416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab064f09e8186276ca42a6de586d74b08"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ab064f09e8186276ca42a6de586d74b08">setAutoRedraw</a> (bool t)</td></tr>
<tr class="memdesc:ab064f09e8186276ca42a6de586d74b08"><td class="mdescLeft">&#160;</td><td class="mdescRight">setAutoRedraw set automatic redraw mode if scene settings are changed  <a href="#ab064f09e8186276ca42a6de586d74b08">More...</a><br /></td></tr>
<tr class="separator:ab064f09e8186276ca42a6de586d74b08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f5c4c7e02c082ab691b83ca76d8864f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8f5c4c7e02c082ab691b83ca76d8864f">setBackgroundBottom</a> (unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha)</td></tr>
<tr class="memdesc:a8f5c4c7e02c082ab691b83ca76d8864f"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the bottom background color  <a href="#a8f5c4c7e02c082ab691b83ca76d8864f">More...</a><br /></td></tr>
<tr class="separator:a8f5c4c7e02c082ab691b83ca76d8864f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad167abbd8b83b916d33c6326fb730bcf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ad167abbd8b83b916d33c6326fb730bcf">setBackgroundTop</a> (unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha)</td></tr>
<tr class="memdesc:ad167abbd8b83b916d33c6326fb730bcf"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the top background color  <a href="#ad167abbd8b83b916d33c6326fb730bcf">More...</a><br /></td></tr>
<tr class="separator:ad167abbd8b83b916d33c6326fb730bcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5306f657c8705eb5afba78f6c316dbc0"><td class="memItemLeft" align="right" valign="top"><a id="a5306f657c8705eb5afba78f6c316dbc0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a5306f657c8705eb5afba78f6c316dbc0">setClipBorder</a> (float border)</td></tr>
<tr class="memdesc:a5306f657c8705eb5afba78f6c316dbc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">set clip border rotation <br /></td></tr>
<tr class="separator:a5306f657c8705eb5afba78f6c316dbc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a965bacc782aea88a5c88c25b029a12c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a965bacc782aea88a5c88c25b029a12c0">setContour</a> (number c)</td></tr>
<tr class="memdesc:a965bacc782aea88a5c88c25b029a12c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">set single contour of contour plot  <a href="#a965bacc782aea88a5c88c25b029a12c0">More...</a><br /></td></tr>
<tr class="separator:a965bacc782aea88a5c88c25b029a12c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47a78c85c989e936b293e2b27e06e0f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a47a78c85c989e936b293e2b27e06e0f9">setContourType</a> (string cont=&quot;&quot;)</td></tr>
<tr class="memdesc:a47a78c85c989e936b293e2b27e06e0f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">setContourType define the type of contour plot  <a href="#a47a78c85c989e936b293e2b27e06e0f9">More...</a><br /></td></tr>
<tr class="separator:a47a78c85c989e936b293e2b27e06e0f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a58ea7960696a8ab3214792da855f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ac1a58ea7960696a8ab3214792da855f9">setCoordinateAxes</a> (bool value)</td></tr>
<tr class="memdesc:ac1a58ea7960696a8ab3214792da855f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">enable/disable coordinate axes  <a href="#ac1a58ea7960696a8ab3214792da855f9">More...</a><br /></td></tr>
<tr class="separator:ac1a58ea7960696a8ab3214792da855f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0b92d97141bfb67678abdab74c2b71c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ad0b92d97141bfb67678abdab74c2b71c">setCoordinateAxesLabels</a> (string x, string y, string z)</td></tr>
<tr class="memdesc:ad0b92d97141bfb67678abdab74c2b71c"><td class="mdescLeft">&#160;</td><td class="mdescRight">labels coordinate axes  <a href="#ad0b92d97141bfb67678abdab74c2b71c">More...</a><br /></td></tr>
<tr class="separator:ad0b92d97141bfb67678abdab74c2b71c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78df8d6138ceca808b158b803876d02c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a78df8d6138ceca808b158b803876d02c">setCoordinates</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> coordinates)</td></tr>
<tr class="memdesc:a78df8d6138ceca808b158b803876d02c"><td class="mdescLeft">&#160;</td><td class="mdescRight">set coordinates of all vertices in the active scene  <a href="#a78df8d6138ceca808b158b803876d02c">More...</a><br /></td></tr>
<tr class="separator:a78df8d6138ceca808b158b803876d02c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca1445f8e8c55da3b3a941e33b2204e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#abca1445f8e8c55da3b3a941e33b2204e">setCoorSystemPosition</a> (string pos=&quot;&quot;)</td></tr>
<tr class="memdesc:abca1445f8e8c55da3b3a941e33b2204e"><td class="mdescLeft">&#160;</td><td class="mdescRight">setCoorSystemPosition  <a href="#abca1445f8e8c55da3b3a941e33b2204e">More...</a><br /></td></tr>
<tr class="separator:abca1445f8e8c55da3b3a941e33b2204e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dc13f75162097aa006e9e7ca1b9da0c"><td class="memItemLeft" align="right" valign="top"><a id="a0dc13f75162097aa006e9e7ca1b9da0c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a0dc13f75162097aa006e9e7ca1b9da0c">setDefaultCamera</a> ()</td></tr>
<tr class="memdesc:a0dc13f75162097aa006e9e7ca1b9da0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">set default rotation/zoom/pan <br /></td></tr>
<tr class="separator:a0dc13f75162097aa006e9e7ca1b9da0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e566a3269e050325441ec3432cd3e9"><td class="memItemLeft" align="right" valign="top"><a id="aa4e566a3269e050325441ec3432cd3e9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aa4e566a3269e050325441ec3432cd3e9">setDefaultRotation</a> ()</td></tr>
<tr class="memdesc:aa4e566a3269e050325441ec3432cd3e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">set default rotation <br /></td></tr>
<tr class="separator:aa4e566a3269e050325441ec3432cd3e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa96e3d9273fb478c393a501b10cdf239"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aa96e3d9273fb478c393a501b10cdf239">setDrawMissing</a> (string how)</td></tr>
<tr class="memdesc:aa96e3d9273fb478c393a501b10cdf239"><td class="mdescLeft">&#160;</td><td class="mdescRight">define how to draw missing data  <a href="#aa96e3d9273fb478c393a501b10cdf239">More...</a><br /></td></tr>
<tr class="separator:aa96e3d9273fb478c393a501b10cdf239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab96c1acd4894f2b6824eae49d509c29"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aab96c1acd4894f2b6824eae49d509c29">setFont</a> (string <a class="el" href="class_scene_manager.xhtml#a0c20b047e7c89c25e95ad212000a64d0">font</a>, number fontsize)</td></tr>
<tr class="memdesc:aab96c1acd4894f2b6824eae49d509c29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the font for all text to be shown in the active scene.  <a href="#aab96c1acd4894f2b6824eae49d509c29">More...</a><br /></td></tr>
<tr class="separator:aab96c1acd4894f2b6824eae49d509c29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20169cf871cd649f68c5902ae1e4dee9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a20169cf871cd649f68c5902ae1e4dee9">setGeometricScaling</a> (number scaling, <a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:a20169cf871cd649f68c5902ae1e4dee9"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the scaling factor for geometric variations  <a href="#a20169cf871cd649f68c5902ae1e4dee9">More...</a><br /></td></tr>
<tr class="separator:a20169cf871cd649f68c5902ae1e4dee9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a73be253648821a91cde547abed1e90"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a2a73be253648821a91cde547abed1e90">setGeometricScaling</a> (number scaling)</td></tr>
<tr class="memdesc:a2a73be253648821a91cde547abed1e90"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines the scaling factor for geometric variations  <a href="#a2a73be253648821a91cde547abed1e90">More...</a><br /></td></tr>
<tr class="separator:a2a73be253648821a91cde547abed1e90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd205c533e72d4deeae4f01f37f8632a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#acd205c533e72d4deeae4f01f37f8632a">setGeometricStabilization</a> (bool enable, <a class="el" href="class_structure.xhtml">Structure</a> <a class="el" href="group__data.xhtml#gaebcac3a2836ec9fdf2e47bd812994b6b">database</a>)</td></tr>
<tr class="memdesc:acd205c533e72d4deeae4f01f37f8632a"><td class="mdescLeft">&#160;</td><td class="mdescRight">enables/disables mesh smoothening for geometric imperfections  <a href="#acd205c533e72d4deeae4f01f37f8632a">More...</a><br /></td></tr>
<tr class="separator:acd205c533e72d4deeae4f01f37f8632a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae68cd46cae4d65b27d838b926bad5c80"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ae68cd46cae4d65b27d838b926bad5c80">setGeometricStabilization</a> (bool enable)</td></tr>
<tr class="memdesc:ae68cd46cae4d65b27d838b926bad5c80"><td class="mdescLeft">&#160;</td><td class="mdescRight">enables/disables mesh smoothening for geometric imperfections  <a href="#ae68cd46cae4d65b27d838b926bad5c80">More...</a><br /></td></tr>
<tr class="separator:ae68cd46cae4d65b27d838b926bad5c80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4df8b71d8dd4312ce50b9522d1a0018"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#af4df8b71d8dd4312ce50b9522d1a0018">setGraphicsEnabled</a> (bool enabled)</td></tr>
<tr class="memdesc:af4df8b71d8dd4312ce50b9522d1a0018"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables graphics.  <a href="#af4df8b71d8dd4312ce50b9522d1a0018">More...</a><br /></td></tr>
<tr class="separator:af4df8b71d8dd4312ce50b9522d1a0018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a0a20707a463170eeabec71c67a7ae"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ae8a0a20707a463170eeabec71c67a7ae">setGraphicsSlicingEnabled</a> (bool enabled)</td></tr>
<tr class="memdesc:ae8a0a20707a463170eeabec71c67a7ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables slicing in graphics (only relevant for volume elements)  <a href="#ae8a0a20707a463170eeabec71c67a7ae">More...</a><br /></td></tr>
<tr class="separator:ae8a0a20707a463170eeabec71c67a7ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6e22d0784ec8ed158b0a9914134db5f"><td class="memItemLeft" align="right" valign="top"><a id="ad6e22d0784ec8ed158b0a9914134db5f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>setHiliteReferenceSet</b> (bool t)</td></tr>
<tr class="separator:ad6e22d0784ec8ed158b0a9914134db5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b41bc3076c8e3e464d5185e1e4902f"><td class="memItemLeft" align="right" valign="top"><a id="af7b41bc3076c8e3e464d5185e1e4902f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>setIsoSurfaceAlpha</b> (float <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>)</td></tr>
<tr class="separator:af7b41bc3076c8e3e464d5185e1e4902f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e873fbad1329e0aa1a69a1dbbab2e40"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a9e873fbad1329e0aa1a69a1dbbab2e40">setLegend</a> (string text)</td></tr>
<tr class="memdesc:a9e873fbad1329e0aa1a69a1dbbab2e40"><td class="mdescLeft">&#160;</td><td class="mdescRight">set the legend in the active scene  <a href="#a9e873fbad1329e0aa1a69a1dbbab2e40">More...</a><br /></td></tr>
<tr class="separator:a9e873fbad1329e0aa1a69a1dbbab2e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a749425bc47b9519f6793ea39ed742977"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a749425bc47b9519f6793ea39ed742977">setLegendPosition</a> (string pos=&quot;&quot;)</td></tr>
<tr class="memdesc:a749425bc47b9519f6793ea39ed742977"><td class="mdescLeft">&#160;</td><td class="mdescRight">setLegendPosition  <a href="#a749425bc47b9519f6793ea39ed742977">More...</a><br /></td></tr>
<tr class="separator:a749425bc47b9519f6793ea39ed742977"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ebff0555f34aa724952f8e557e007ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8ebff0555f34aa724952f8e557e007ff">setMarkPosition</a> (string pos=&quot;&quot;)</td></tr>
<tr class="memdesc:a8ebff0555f34aa724952f8e557e007ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">setMarkPosition  <a href="#a8ebff0555f34aa724952f8e557e007ff">More...</a><br /></td></tr>
<tr class="separator:a8ebff0555f34aa724952f8e557e007ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad249d4cef881e4001bcc8b739d39a791"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ad249d4cef881e4001bcc8b739d39a791">setMeshFeature</a> (string feat)</td></tr>
<tr class="memdesc:ad249d4cef881e4001bcc8b739d39a791"><td class="mdescLeft">&#160;</td><td class="mdescRight">set mesh features to be drawn  <a href="#ad249d4cef881e4001bcc8b739d39a791">More...</a><br /></td></tr>
<tr class="separator:ad249d4cef881e4001bcc8b739d39a791"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a0271f6d12d0129763eb854f08170a7"><td class="memItemLeft" align="right" valign="top"><a id="a2a0271f6d12d0129763eb854f08170a7"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>setPaletteColoringType</b> (string palette_id)</td></tr>
<tr class="separator:a2a0271f6d12d0129763eb854f08170a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa72299ee8a9ddf9e63bd71e6fd5dfeb3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aa72299ee8a9ddf9e63bd71e6fd5dfeb3">setPalettePosition</a> (string pos=&quot;&quot;)</td></tr>
<tr class="memdesc:aa72299ee8a9ddf9e63bd71e6fd5dfeb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">setPalettePosition  <a href="#aa72299ee8a9ddf9e63bd71e6fd5dfeb3">More...</a><br /></td></tr>
<tr class="separator:aa72299ee8a9ddf9e63bd71e6fd5dfeb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8350ad1dfe00dc97436b59ec6e8ea7aa"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8350ad1dfe00dc97436b59ec6e8ea7aa">setPaletteRange</a> (string how)</td></tr>
<tr class="memdesc:a8350ad1dfe00dc97436b59ec6e8ea7aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets minimum and maximum values of palette according to the algorithm defined by how.  <a href="#a8350ad1dfe00dc97436b59ec6e8ea7aa">More...</a><br /></td></tr>
<tr class="separator:a8350ad1dfe00dc97436b59ec6e8ea7aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b357edfd6bc9d2589a6dbf7ab1aca9a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7b357edfd6bc9d2589a6dbf7ab1aca9a">setPaletteRange</a> (number xmin, number xmax)</td></tr>
<tr class="memdesc:a7b357edfd6bc9d2589a6dbf7ab1aca9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets minimum and maximum values of palette.  <a href="#a7b357edfd6bc9d2589a6dbf7ab1aca9a">More...</a><br /></td></tr>
<tr class="separator:a7b357edfd6bc9d2589a6dbf7ab1aca9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d6ddc181b0e414cfef555aba6f7a3f2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a9d6ddc181b0e414cfef555aba6f7a3f2">setPan</a> (float x, float y)</td></tr>
<tr class="memdesc:a9d6ddc181b0e414cfef555aba6f7a3f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">set the current pan values  <a href="#a9d6ddc181b0e414cfef555aba6f7a3f2">More...</a><br /></td></tr>
<tr class="separator:a9d6ddc181b0e414cfef555aba6f7a3f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aef90b83a24d2a1ea4d8729afc3cfc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7aef90b83a24d2a1ea4d8729afc3cfc5">setPerspective</a> (bool persp)</td></tr>
<tr class="memdesc:a7aef90b83a24d2a1ea4d8729afc3cfc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">enable/disable perspective view  <a href="#a7aef90b83a24d2a1ea4d8729afc3cfc5">More...</a><br /></td></tr>
<tr class="separator:a7aef90b83a24d2a1ea4d8729afc3cfc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6724f50b4207f54aefbc744ef88ec0fd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6724f50b4207f54aefbc744ef88ec0fd">setPointSize</a> (float <a class="el" href="class_scene_manager.xhtml#abcd703e220fe34c4ff8364626470876d">size</a>)</td></tr>
<tr class="memdesc:a6724f50b4207f54aefbc744ef88ec0fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">set the size of points relative to model size  <a href="#a6724f50b4207f54aefbc744ef88ec0fd">More...</a><br /></td></tr>
<tr class="separator:a6724f50b4207f54aefbc744ef88ec0fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6329128a3b6e90f61aa4f24f46e17ec7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6329128a3b6e90f61aa4f24f46e17ec7">setRotation</a> (float angle, float x, float y, float z)</td></tr>
<tr class="memdesc:a6329128a3b6e90f61aa4f24f46e17ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">set current rotation expressed in angle/axis form  <a href="#a6329128a3b6e90f61aa4f24f46e17ec7">More...</a><br /></td></tr>
<tr class="separator:a6329128a3b6e90f61aa4f24f46e17ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57a9674604deb1b4f375df06fa2e0d32"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a57a9674604deb1b4f375df06fa2e0d32">setRulerVisibility</a> (bool on)</td></tr>
<tr class="memdesc:a57a9674604deb1b4f375df06fa2e0d32"><td class="mdescLeft">&#160;</td><td class="mdescRight">changes visibility of the ruler  <a href="#a57a9674604deb1b4f375df06fa2e0d32">More...</a><br /></td></tr>
<tr class="separator:a57a9674604deb1b4f375df06fa2e0d32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf4097a4a24e5a2172be248d2841a42b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aaf4097a4a24e5a2172be248d2841a42b">setScale</a> (float z)</td></tr>
<tr class="memdesc:aaf4097a4a24e5a2172be248d2841a42b"><td class="mdescLeft">&#160;</td><td class="mdescRight">set scale factor  <a href="#aaf4097a4a24e5a2172be248d2841a42b">More...</a><br /></td></tr>
<tr class="separator:aaf4097a4a24e5a2172be248d2841a42b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a757e1eda9c70aeefe7764241ec59bde3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a757e1eda9c70aeefe7764241ec59bde3">setSceneData</a> (<a class="el" href="class_render_data.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">RenderData::DataType</a> type, string design, string quantity)</td></tr>
<tr class="memdesc:a757e1eda9c70aeefe7764241ec59bde3"><td class="mdescLeft">&#160;</td><td class="mdescRight">a convenience function which assigns a constant contour plot to the active scene  <a href="#a757e1eda9c70aeefe7764241ec59bde3">More...</a><br /></td></tr>
<tr class="separator:a757e1eda9c70aeefe7764241ec59bde3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee87ccb88f3fa68588c12cf08ac442c5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#aee87ccb88f3fa68588c12cf08ac442c5">setSceneData</a> (<a class="el" href="class_all_render_data.xhtml">AllRenderData</a> render_data)</td></tr>
<tr class="memdesc:aee87ccb88f3fa68588c12cf08ac442c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">assigns the visible data to the active scene  <a href="#aee87ccb88f3fa68588c12cf08ac442c5">More...</a><br /></td></tr>
<tr class="separator:aee87ccb88f3fa68588c12cf08ac442c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae204a414ac9bcd86c4b0540daaf040f8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ae204a414ac9bcd86c4b0540daaf040f8">setSceneData</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> inputs)</td></tr>
<tr class="memdesc:ae204a414ac9bcd86c4b0540daaf040f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">changes the data of the input parameters for the currently set field data model and assigns them to the active scene  <a href="#ae204a414ac9bcd86c4b0540daaf040f8">More...</a><br /></td></tr>
<tr class="separator:ae204a414ac9bcd86c4b0540daaf040f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7af4dba2de8ab52494d821a1b19361"><td class="memItemLeft" align="right" valign="top"><a id="a6f7af4dba2de8ab52494d821a1b19361"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a6f7af4dba2de8ab52494d821a1b19361">setSceneScaleRelative</a> (float x, float y, float z)</td></tr>
<tr class="memdesc:a6f7af4dba2de8ab52494d821a1b19361"><td class="mdescLeft">&#160;</td><td class="mdescRight">set different scaling for all three axes <br /></td></tr>
<tr class="separator:a6f7af4dba2de8ab52494d821a1b19361"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52834e727b628c3890cbfe5b3999c66e"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a52834e727b628c3890cbfe5b3999c66e">setSelection</a> (int scene_widht, int scene_height, int x, int y, int width, int height, bool add_selection, number max_selectable, bool show_label)</td></tr>
<tr class="memdesc:a52834e727b628c3890cbfe5b3999c66e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Selects all elements of the active <a class="el" href="class_scene.xhtml" title="A class for 3D visualization of a structure Additionally, it can display palettes and text annotation...">Scene</a> within the rectangle defined by x, y, width and height given.  <a href="#a52834e727b628c3890cbfe5b3999c66e">More...</a><br /></td></tr>
<tr class="separator:a52834e727b628c3890cbfe5b3999c66e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b5f37ad3f6eaa46dd01df960260957"><td class="memItemLeft" align="right" valign="top"><a id="ad8b5f37ad3f6eaa46dd01df960260957"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>setShowInvisibleLabels</b> (bool t)</td></tr>
<tr class="separator:ad8b5f37ad3f6eaa46dd01df960260957"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8345f253d0b6278e435c44f19b680083"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a8345f253d0b6278e435c44f19b680083">setSize</a> (number w, number h)</td></tr>
<tr class="memdesc:a8345f253d0b6278e435c44f19b680083"><td class="mdescLeft">&#160;</td><td class="mdescRight">setSize Sets the size of the active scene  <a href="#a8345f253d0b6278e435c44f19b680083">More...</a><br /></td></tr>
<tr class="separator:a8345f253d0b6278e435c44f19b680083"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aad11ffebbfb0b66c12f0a01afa24e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7aad11ffebbfb0b66c12f0a01afa24e4">setSlice</a> (float <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>, float b, float c, float d)</td></tr>
<tr class="memdesc:a7aad11ffebbfb0b66c12f0a01afa24e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a slicing plane in the active scene, using the body coordinate system. The plane will be defined in Hessian normal form by normalizing the paramters $a$, $b$, $c$, and $d$ given Only points with coordinates satisfying $ax+by+cz+d &gt; 0$ are shown, the rest is suppressed.  <a href="#a7aad11ffebbfb0b66c12f0a01afa24e4">More...</a><br /></td></tr>
<tr class="separator:a7aad11ffebbfb0b66c12f0a01afa24e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5da521188e89896fe5393383f6977f45"><td class="memItemLeft" align="right" valign="top"><a id="a5da521188e89896fe5393383f6977f45"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>setStructureAlpha</b> (float <a class="el" href="group__tmath.xhtml#ga7e205066f67b9e3fd4c8cbd5859e8da3">a</a>)</td></tr>
<tr class="separator:a5da521188e89896fe5393383f6977f45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554e660f534f1bab2328fff34ea5a40c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a554e660f534f1bab2328fff34ea5a40c">setSyncCamera</a> (bool sync)</td></tr>
<tr class="memdesc:a554e660f534f1bab2328fff34ea5a40c"><td class="mdescLeft">&#160;</td><td class="mdescRight">defines if the scenes are synchronized in camera positioning  <a href="#a554e660f534f1bab2328fff34ea5a40c">More...</a><br /></td></tr>
<tr class="separator:a554e660f534f1bab2328fff34ea5a40c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6da645e07e19e7656e98d7e1f10ee02"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#af6da645e07e19e7656e98d7e1f10ee02">setTetCoordinates</a> (<a class="el" href="class_matrix.xhtml">Matrix</a> coordinates)</td></tr>
<tr class="memdesc:af6da645e07e19e7656e98d7e1f10ee02"><td class="mdescLeft">&#160;</td><td class="mdescRight">set coordinates of all tet vertices in the active scene  <a href="#af6da645e07e19e7656e98d7e1f10ee02">More...</a><br /></td></tr>
<tr class="separator:af6da645e07e19e7656e98d7e1f10ee02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7abac5cfa30e846fb03429bb4e40dc3c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a7abac5cfa30e846fb03429bb4e40dc3c">setZoom</a> (float z)</td></tr>
<tr class="memdesc:a7abac5cfa30e846fb03429bb4e40dc3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">set current zoom factor  <a href="#a7abac5cfa30e846fb03429bb4e40dc3c">More...</a><br /></td></tr>
<tr class="separator:a7abac5cfa30e846fb03429bb4e40dc3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd703e220fe34c4ff8364626470876d"><td class="memItemLeft" align="right" valign="top">number&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#abcd703e220fe34c4ff8364626470876d">size</a> ()</td></tr>
<tr class="separator:abcd703e220fe34c4ff8364626470876d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab88781e860a597acc837e09f80b6b853"><td class="memItemLeft" align="right" valign="top"><a id="ab88781e860a597acc837e09f80b6b853"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ab88781e860a597acc837e09f80b6b853">syncCamera</a> () const</td></tr>
<tr class="memdesc:ab88781e860a597acc837e09f80b6b853"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns if the camera settings are synchronized for all scenes <br /></td></tr>
<tr class="separator:ab88781e860a597acc837e09f80b6b853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36172b6f1300b9a30ef0b5ff77d71d3e"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a36172b6f1300b9a30ef0b5ff77d71d3e">syncCamera</a> ()</td></tr>
<tr class="memdesc:a36172b6f1300b9a30ef0b5ff77d71d3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the camera and slicing settings of the active scene to all other scenes.  <a href="#a36172b6f1300b9a30ef0b5ff77d71d3e">More...</a><br /></td></tr>
<tr class="separator:a36172b6f1300b9a30ef0b5ff77d71d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b8247d234169d15cfec25a40874301a"><td class="memItemLeft" align="right" valign="top"><a id="a2b8247d234169d15cfec25a40874301a"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a2b8247d234169d15cfec25a40874301a">syncDeco</a> ()</td></tr>
<tr class="memdesc:a2b8247d234169d15cfec25a40874301a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the decoration settings of the current, active view to all other views. <br /></td></tr>
<tr class="separator:a2b8247d234169d15cfec25a40874301a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3a368c0d3a6251d2e4092ec18704250"><td class="memItemLeft" align="right" valign="top"><a id="ae3a368c0d3a6251d2e4092ec18704250"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#ae3a368c0d3a6251d2e4092ec18704250">syncPalette</a> ()</td></tr>
<tr class="memdesc:ae3a368c0d3a6251d2e4092ec18704250"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the palette settings of the active scene to all other scenes. <br /></td></tr>
<tr class="separator:ae3a368c0d3a6251d2e4092ec18704250"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14974ed767112ef9dc8dd85f22c35ef4"><td class="memItemLeft" align="right" valign="top"><a id="a14974ed767112ef9dc8dd85f22c35ef4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_scene_manager.xhtml#a14974ed767112ef9dc8dd85f22c35ef4">syncSelection</a> ()</td></tr>
<tr class="memdesc:a14974ed767112ef9dc8dd85f22c35ef4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mirrors the selection of the current view to all other views. <br /></td></tr>
<tr class="separator:a14974ed767112ef9dc8dd85f22c35ef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A manager class for 3D visualization of a structure. </p>
<p>The <a class="el" href="class_scene_manager.xhtml" title="A manager class for 3D visualization of a structure. ">SceneManager</a> contains a <a class="el" href="class_structure.xhtml" title="The central data structure for SoS. ">Structure</a>, extracts the reference-mesh and adds it as a first scene via addScene. Since there is no data selected in the beginning, this will result in a structure-plot without contour or palette. After the first call of addSceneData(...) contour or palette are added.</p>
<p>Qt separation: This class contains no functionality relying on Qt classes. All methods using Qt classes are virtual and have no implementation, calling DYNARDO_LOG_WARN instead. Their implementation is done in SceneManagerQt, part of the sos_qt_extensions module. Class <a class="el" href="class_scene_manager.xhtml" title="A manager class for 3D visualization of a structure. ">SceneManager</a> is NO QObject, but SceneManagerQt is. Instances of <a class="el" href="class_scene_manager.xhtml" title="A manager class for 3D visualization of a structure. ">SceneManager</a> or SceneManagerQt are created with application_makeSceneManager(), implemented in the sos_qt_extensions or sos_noqt_extensions module respectively. </p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aa3b0cd6ed770783df3ac9e302f5a0bfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3b0cd6ed770783df3ac9e302f5a0bfd">&#9670;&nbsp;</a></span>SceneListenerList</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::list&lt;SceneListener*&gt; <a class="el" href="class_scene_manager.xhtml#aa3b0cd6ed770783df3ac9e302f5a0bfd">SceneListenerList</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a list of </p>
<dl class="section see"><dt>See also</dt><dd>SceneListener pointers </dd></dl>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8d414be8137b229943717d955417ee80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d414be8137b229943717d955417ee80">&#9670;&nbsp;</a></span>SceneManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_scene_manager.xhtml">SceneManager</a> </td>
          <td>(</td>
          <td class="paramtype">boost::shared_ptr&lt; <a class="el" href="class_structure.xhtml">Structure</a> &gt;&#160;</td>
          <td class="paramname"><em>dataBase</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_graphics_enabled</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the manager and adds a first scene provided that the database has a reference mesh defined. Adds a first scene without any data -&gt; calls addSene only. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dataBase</td><td>The database </td></tr>
    <tr><td class="paramname">is_graphics_enabled</td><td>if true then the graphics will be enabled, else disabled </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a933ec67b1fb48fbae1b7297f14b83377"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a933ec67b1fb48fbae1b7297f14b83377">&#9670;&nbsp;</a></span>activeScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_scene.xhtml">Scene</a> activeScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a const-reference to the currently active scene </dd></dl>

</div>
</div>
<a id="a922a65077df578203d04cb2ae0a92629"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a922a65077df578203d04cb2ae0a92629">&#9670;&nbsp;</a></span>activeSceneRef()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_scene.xhtml">Scene</a> activeSceneRef </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the currently active scene </dd></dl>

</div>
</div>
<a id="a428fd66163cef3883e58a2f41515a6c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a428fd66163cef3883e58a2f41515a6c3">&#9670;&nbsp;</a></span>addScene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual addScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>
<p>Adds a default scene to the scene manager</p>
<p>Initializes a new scene without any data and sets its index active. Sets the title to '<a class="el" href="class_structure.xhtml" title="The central data structure for SoS. ">Structure</a>' and generates a legend displaying some structure related information (i.e. mesh type, number of parts/elements/nodes, ...) only. Finally calls on all manager known listeners the ...AddScene method. </p>

</div>
</div>
<a id="a5bc15e60767959409f53ae11ef620037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bc15e60767959409f53ae11ef620037">&#9670;&nbsp;</a></span>eraseScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseScene </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes a scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the index of the scene to be deleted. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2c7b5615ec035363f860fa1f84060db9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c7b5615ec035363f860fa1f84060db9">&#9670;&nbsp;</a></span>eraseScenes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">eraseScenes </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>all</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>deletes all scenes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">all</td><td>if true, then all scenes are deleted, if false: the structural scene (index 0) is kept. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8dbe08127b637b3781091ce9adb23f36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dbe08127b637b3781091ce9adb23f36">&#9670;&nbsp;</a></span>exportTNG()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">exportTNG </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>file</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>export scene data to slangTNG </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output</td><td>file (txt) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6d539fe45f6c81c7836e1f7295a25f02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d539fe45f6c81c7836e1f7295a25f02">&#9670;&nbsp;</a></span>file()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">file </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>: Render the scene into a QImage </p>
<dl class="section return"><dt>Returns</dt><dd>a QImage : Render the scene into a file. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>File name. File type is determined by its extension (.png, .jpg, etc.) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0c20b047e7c89c25e95ad212000a64d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c20b047e7c89c25e95ad212000a64d0">&#9670;&nbsp;</a></span>font()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual font </td>
          <td>(</td>
          <td class="paramtype">QFont&#160;</td>
          <td class="paramname"><em>font</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a reference to the font for all text to be shown in the active scene </dd></dl>

</div>
</div>
<a id="a72091f1f477aadf12ed7d72655d199dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72091f1f477aadf12ed7d72655d199dd">&#9670;&nbsp;</a></span>getActiveScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int getActiveScene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the index of the active scene </dd></dl>

</div>
</div>
<a id="a3be486d81152d068143907738a8a06d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3be486d81152d068143907738a8a06d7">&#9670;&nbsp;</a></span>getAutoRedraw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool getAutoRedraw </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>getAutoRedraw set automatic redraw mode </p>
<dl class="section return"><dt>Returns</dt><dd>automatic redraw mode </dd></dl>

</div>
</div>
<a id="ae98294e22da1a4dca1f23c41e15e6323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98294e22da1a4dca1f23c41e15e6323">&#9670;&nbsp;</a></span>getPaletteRange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual getPaletteRange </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets minimum and maximum values of palette. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>minimum value of palette </td></tr>
    <tr><td class="paramname">xmax</td><td>maximum value of palette </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7294b1b8f2ec69622fa1fad124726c55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7294b1b8f2ec69622fa1fad124726c55">&#9670;&nbsp;</a></span>getPan()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">getPan </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get the current pan values </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>x value of pan </td></tr>
    <tr><td class="paramname">y</td><td>y value of pan </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a049f870422441eb05361fdd93df44c7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a049f870422441eb05361fdd93df44c7f">&#9670;&nbsp;</a></span>getRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">getRotation </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get current rotation expressed in angle/axis form </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">angle</td><td>Angle of rotation </td></tr>
    <tr><td class="paramname">x</td><td>x-component of rotation axis </td></tr>
    <tr><td class="paramname">y</td><td>y-component of rotation axis </td></tr>
    <tr><td class="paramname">z</td><td>z-component of rotation axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8e935e225e0809604a0a816f333a0b33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e935e225e0809604a0a816f333a0b33">&#9670;&nbsp;</a></span>getValueRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">getValueRange </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets minimum and maximum data values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>minimum data value </td></tr>
    <tr><td class="paramname">xmax</td><td>maximum data value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7521972598ce04727dbf806ac7c4db83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7521972598ce04727dbf806ac7c4db83">&#9670;&nbsp;</a></span>getVisibleCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> getVisibleCoordinates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get coordinates of all vertices in the active scene </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> containing the coordinates of size (3,n) in which n is the number of vertices </dd></dl>

</div>
</div>
<a id="a47cbe0cbeac174b3ccfb1913fdf8ef30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47cbe0cbeac174b3ccfb1913fdf8ef30">&#9670;&nbsp;</a></span>getVisibleTetCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> getVisibleTetCoordinates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get coordinates of all tet vertices in the active scene </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> containing the coordinates of size (3,n) in which n is the number of vertices </dd></dl>

</div>
</div>
<a id="ad59a25d25ca854989abdc81ce4c80f4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad59a25d25ca854989abdc81ce4c80f4b">&#9670;&nbsp;</a></span>getZoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float getZoom </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get current zoom factor </p>
<dl class="section return"><dt>Returns</dt><dd>current zoom factor </dd></dl>

</div>
</div>
<a id="acd1504f6a3c038cffa4b004b7f794227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1504f6a3c038cffa4b004b7f794227">&#9670;&nbsp;</a></span>initSlice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">initSlice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines a slicing plane in the active scene, using the body coordinate system. The plane will be defined in Hessian normal form Only points with coordinates satisfying $ax+by+cz+d &gt; 0$ are shown, the rest is suppressed. </p>
<dl class="section note"><dt>Note</dt><dd>Refer to <a href="http://mathworld.wolfram.com/Plane.html">Wolfram: Plane</a> for an explanation of the plane definition </dd></dl>

</div>
</div>
<a id="a1da585eaeeb198d66ced3699565766b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1da585eaeeb198d66ced3699565766b0">&#9670;&nbsp;</a></span>isElementSelected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isElementSelected </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>part_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>element_idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>isSelected </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part_idx</td><td>the index of the part in FEM kernel </td></tr>
    <tr><td class="paramname">element_idx</td><td>the index of the element in part of the FEM kernel </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool indicating if chosen element is selected </dd></dl>

</div>
</div>
<a id="a0ee825f116bbe7229ede8d3e7767a97c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ee825f116bbe7229ede8d3e7767a97c">&#9670;&nbsp;</a></span>isGraphicsEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isGraphicsEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current graphics enabled state </dd></dl>

</div>
</div>
<a id="a18f3e9cc303d84ff6e1dfaa97bbb3883"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18f3e9cc303d84ff6e1dfaa97bbb3883">&#9670;&nbsp;</a></span>isGraphicsSlicingEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isGraphicsSlicingEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>The current graphics slicing enabled state </dd></dl>

</div>
</div>
<a id="a7f215b949d6a778e50221c39393b2012"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f215b949d6a778e50221c39393b2012">&#9670;&nbsp;</a></span>isNodeSelected()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool isNodeSelected </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>part_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>node_idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>isSelected </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part_idx</td><td>the index of the part in FEM kernel </td></tr>
    <tr><td class="paramname">node_idx</td><td>the index of the node in part of the FEM kernel </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool indicating if chosen node is selected </dd></dl>

</div>
</div>
<a id="a6e29794f75e21d9ed039a2403e5001ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e29794f75e21d9ed039a2403e5001ba">&#9670;&nbsp;</a></span>listPaletteIDs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt; string &gt; listPaletteIDs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an order list of all known palette IDs including user defined ones. </p>
<dl class="section return"><dt>Returns</dt><dd>A vector of alphabetical ordered strings listing all palettes known by m_palette_manager </dd></dl>

</div>
</div>
<a id="a17f23ce554308def6e946547e508dffa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17f23ce554308def6e946547e508dffa">&#9670;&nbsp;</a></span>rendererInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual string rendererInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>get the graphics renderer information creates its own openGL context locally, to call glGetString() </p>
<dl class="section return"><dt>Returns</dt><dd>text formated to print in about dialog </dd></dl>

</div>
</div>
<a id="af88c8a0e67db1ff2f23a38fde8e9e597"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af88c8a0e67db1ff2f23a38fde8e9e597">&#9670;&nbsp;</a></span>selectedElementIndices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> selectedElementIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a vector of indices of all selected elements (if any). The indices refer to the active index mapper </dd></dl>

</div>
</div>
<a id="ac5c0f9ec57947a75d8bafb6ce38d714a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5c0f9ec57947a75d8bafb6ce38d714a">&#9670;&nbsp;</a></span>selectedNodeIndices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_matrix.xhtml">Matrix</a> selectedNodeIndices </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>a vector of indices of all selected nodes (if any). The indices refer to the active index mapper </dd></dl>

</div>
</div>
<a id="a13c05f539b55985fe980d610883c4204"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13c05f539b55985fe980d610883c4204">&#9670;&nbsp;</a></span>selectElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectElement </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>part_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>element_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>showLabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>select a single element in the active scene. Does <em>not</em> perform an automatic redraw </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part_idx</td><td>the index of the part in FEM kernel </td></tr>
    <tr><td class="paramname">element_idx</td><td>the index of the element in part of the FEM kernel </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a39a643132d27da3b0e945c39cbe9032f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a643132d27da3b0e945c39cbe9032f">&#9670;&nbsp;</a></span>selectElements()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectElements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>indices</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>selects the given elements </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">indices</td><td>the global indices (with respect to index mapper) of the elements to be selected </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4470f2f7d3ce20580e120701c73455d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4470f2f7d3ce20580e120701c73455d">&#9670;&nbsp;</a></span>selectMaximumValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectMaximumValues </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable largest data values of the active quantity among the whole FEM structure in the active scene. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1bb71f2499c19c102156a39251cc0cf6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bb71f2499c19c102156a39251cc0cf6">&#9670;&nbsp;</a></span>selectMinimumValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectMinimumValues </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable smallest data values of the active quantity among the whole FEM structure in the active scene. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6e8979693f41ceec0214a046462a9ce5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e8979693f41ceec0214a046462a9ce5">&#9670;&nbsp;</a></span>selectNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectNode </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>part_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>node_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>showLabel</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>select a single node in the active scene. Does <em>not</em> perform an automatic redraw </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">part_idx</td><td>the index of the part in FEM kernel </td></tr>
    <tr><td class="paramname">node_idx</td><td>the index of the node in part of the FEM kernel </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aed8d90a34a77ddb389d3c0547f7a6ab4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed8d90a34a77ddb389d3c0547f7a6ab4">&#9670;&nbsp;</a></span>selectNodes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectNodes </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>indices</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>selects the given nodes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">indices</td><td>the global indices (with respect to index mapper) of the nodes to be selected </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abb6b0894e25b4846b6bb167fd8c8cbe9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb6b0894e25b4846b6bb167fd8c8cbe9">&#9670;&nbsp;</a></span>selectRelativeMaximumValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMaximumValues </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls selectRelativeMaximumValuesWeak(...). Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abd0a4a8d15e51aba759442af8807d2d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd0a4a8d15e51aba759442af8807d2d6">&#9670;&nbsp;</a></span>selectRelativeMaximumValuesStrict()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMaximumValuesStrict </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a SMALLER value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a84e32eaaa46f6688f1461bf9e878b7c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e32eaaa46f6688f1461bf9e878b7c9">&#9670;&nbsp;</a></span>selectRelativeMaximumValuesWeak()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMaximumValuesWeak </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable local maxima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a SMALLER OR EQUAL value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af2818b2141eff95a92a5d345c3257cd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2818b2141eff95a92a5d345c3257cd1">&#9670;&nbsp;</a></span>selectRelativeMinimumValues()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMinimumValues </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calls selectRelativeMinimumValuesWeak(...). Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a523346a0f096b9bfa3fc27406968669e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a523346a0f096b9bfa3fc27406968669e">&#9670;&nbsp;</a></span>selectRelativeMinimumValuesStrict()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMinimumValuesStrict </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a LARGER value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a951530ae2d67c5cd87143fb4f508b9cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a951530ae2d67c5cd87143fb4f508b9cf">&#9670;&nbsp;</a></span>selectRelativeMinimumValuesWeak()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">selectRelativeMinimumValuesWeak </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Selects max_selectable local minima data values of the active quantity among the whole FEM structure in the active scene Will only select nodes with all adjacent nodes having a LARGER OR EQUAL value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected data. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected data on the structure. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1adc14ebabf7a6325d3215a96401f416"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1adc14ebabf7a6325d3215a96401f416">&#9670;&nbsp;</a></span>setActiveScene()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setActiveScene </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>act</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">act</td><td>the index of the scene to become active </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab064f09e8186276ca42a6de586d74b08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab064f09e8186276ca42a6de586d74b08">&#9670;&nbsp;</a></span>setAutoRedraw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setAutoRedraw </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>t</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setAutoRedraw set automatic redraw mode if scene settings are changed </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">t</td><td>bool defining if automatic redraw should be done </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8f5c4c7e02c082ab691b83ca76d8864f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f5c4c7e02c082ab691b83ca76d8864f">&#9670;&nbsp;</a></span>setBackgroundBottom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setBackgroundBottom </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>blue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the bottom background color </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>red channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">green</td><td>green channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">blue</td><td>blue channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">alpha</td><td>alpha channel; 0 = transparent, 1 = opaque </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad167abbd8b83b916d33c6326fb730bcf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad167abbd8b83b916d33c6326fb730bcf">&#9670;&nbsp;</a></span>setBackgroundTop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setBackgroundTop </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>blue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>alpha</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the top background color </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>red channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">green</td><td>green channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">blue</td><td>blue channel (0..255) in RGB color mode </td></tr>
    <tr><td class="paramname">alpha</td><td>alpha channel; 0 = transparent, 1 = opaque </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a965bacc782aea88a5c88c25b029a12c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a965bacc782aea88a5c88c25b029a12c0">&#9670;&nbsp;</a></span>setContour()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setContour </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set single contour of contour plot </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c</td><td>number defining the </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a47a78c85c989e936b293e2b27e06e0f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47a78c85c989e936b293e2b27e06e0f9">&#9670;&nbsp;</a></span>setContourType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setContourType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>cont</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setContourType define the type of contour plot </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cont</td><td>string defining the type of plot. Permissible values are "NONE", "LINE", and "SURFACE" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac1a58ea7960696a8ab3214792da855f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1a58ea7960696a8ab3214792da855f9">&#9670;&nbsp;</a></span>setCoordinateAxes()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setCoordinateAxes </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enable/disable coordinate axes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">axes</td><td>bool defining if perspective is enabled </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad0b92d97141bfb67678abdab74c2b71c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0b92d97141bfb67678abdab74c2b71c">&#9670;&nbsp;</a></span>setCoordinateAxesLabels()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setCoordinateAxesLabels </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>labels coordinate axes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>string labels defining </td></tr>
    <tr><td class="paramname">y</td><td>string labels defining </td></tr>
    <tr><td class="paramname">z</td><td>string labels defining </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a78df8d6138ceca808b158b803876d02c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78df8d6138ceca808b158b803876d02c">&#9670;&nbsp;</a></span>setCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>coordinates</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set coordinates of all vertices in the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> containing the coordinates, must have size (3,n) in which n is the number of vertices </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abca1445f8e8c55da3b3a941e33b2204e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abca1445f8e8c55da3b3a941e33b2204e">&#9670;&nbsp;</a></span>setCoorSystemPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setCoorSystemPosition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pos</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setCoorSystemPosition </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>defines the position of the coordinate system, recognized values are "", "NE", "SE", "SW", and "NW" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa96e3d9273fb478c393a501b10cdf239"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa96e3d9273fb478c393a501b10cdf239">&#9670;&nbsp;</a></span>setDrawMissing()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setDrawMissing </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>how</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>define how to draw missing data </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">draw</td><td>definition how to draw missing data </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aab96c1acd4894f2b6824eae49d509c29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab96c1acd4894f2b6824eae49d509c29">&#9670;&nbsp;</a></span>setFont()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setFont </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>font</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>fontsize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the font for all text to be shown in the active scene. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">font</td><td>the font name </td></tr>
    <tr><td class="paramname">fontsize</td><td>the size of the font in points </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a20169cf871cd649f68c5902ae1e4dee9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20169cf871cd649f68c5902ae1e4dee9">&#9670;&nbsp;</a></span>setGeometricScaling() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setGeometricScaling </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>scaling</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines the scaling factor for geometric variations </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scaling</td><td>the scaling factor </td></tr>
    <tr><td class="paramname">database</td><td>the database with mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2a73be253648821a91cde547abed1e90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a73be253648821a91cde547abed1e90">&#9670;&nbsp;</a></span>setGeometricScaling() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setGeometricScaling </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>scaling</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines the scaling factor for geometric variations </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scaling</td><td>the scaling factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acd205c533e72d4deeae4f01f37f8632a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd205c533e72d4deeae4f01f37f8632a">&#9670;&nbsp;</a></span>setGeometricStabilization() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setGeometricStabilization </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_structure.xhtml">Structure</a>&#160;</td>
          <td class="paramname"><em>database</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enables/disables mesh smoothening for geometric imperfections </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>the enable state </td></tr>
    <tr><td class="paramname">database</td><td>the database with mesh </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae68cd46cae4d65b27d838b926bad5c80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae68cd46cae4d65b27d838b926bad5c80">&#9670;&nbsp;</a></span>setGeometricStabilization() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setGeometricStabilization </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enables/disables mesh smoothening for geometric imperfections </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>the enable state </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af4df8b71d8dd4312ce50b9522d1a0018"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4df8b71d8dd4312ce50b9522d1a0018">&#9670;&nbsp;</a></span>setGraphicsEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool setGraphicsEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables graphics. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enabled</td><td>if true then the graphics will be enabled, else disabled </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the previous state</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function can only be called if the database has no mesh. </dd>
<dd>
The intention of this method is to reduce CPU time while loading FEM meshes in SIMULATION mode and other batch applications. </dd></dl>

</div>
</div>
<a id="ae8a0a20707a463170eeabec71c67a7ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a0a20707a463170eeabec71c67a7ae">&#9670;&nbsp;</a></span>setGraphicsSlicingEnabled()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool setGraphicsSlicingEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enabled</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables or disables slicing in graphics (only relevant for volume elements) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enabled</td><td>if true then the slicing will be enabled, else disabled </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the previous state</dd></dl>
<dl class="section note"><dt>Note</dt><dd>This function can only be called if the database has no mesh. </dd>
<dd>
The intention of this method is to reduce CPU time while loading FEM meshes and speed up visualization. </dd></dl>

</div>
</div>
<a id="a9e873fbad1329e0aa1a69a1dbbab2e40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e873fbad1329e0aa1a69a1dbbab2e40">&#9670;&nbsp;</a></span>setLegend()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setLegend </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set the legend in the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>defines the legend text (rich text coded as html) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a749425bc47b9519f6793ea39ed742977"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a749425bc47b9519f6793ea39ed742977">&#9670;&nbsp;</a></span>setLegendPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setLegendPosition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pos</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setLegendPosition </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>defines the position of the legend, recognized values are "", "NE", "SE", "SW", and "NW" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8ebff0555f34aa724952f8e557e007ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ebff0555f34aa724952f8e557e007ff">&#9670;&nbsp;</a></span>setMarkPosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMarkPosition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pos</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setMarkPosition </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>defines the position of the watermark recognized values are "NE", "SE", "SW", and "NW" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad249d4cef881e4001bcc8b739d39a791"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad249d4cef881e4001bcc8b739d39a791">&#9670;&nbsp;</a></span>setMeshFeature()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setMeshFeature </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>feat</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set mesh features to be drawn </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">feat</td><td>describes the features. Admissible values are "ALL", "SURFACES", "OUTLINE" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa72299ee8a9ddf9e63bd71e6fd5dfeb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa72299ee8a9ddf9e63bd71e6fd5dfeb3">&#9670;&nbsp;</a></span>setPalettePosition()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setPalettePosition </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>pos</em> = <code>&quot;&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setPalettePosition </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pos</td><td>defines palette position, recognized values are "", "NE", "SE", "SW", and "NW" </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8350ad1dfe00dc97436b59ec6e8ea7aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8350ad1dfe00dc97436b59ec6e8ea7aa">&#9670;&nbsp;</a></span>setPaletteRange() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual setPaletteRange </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>how</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets minimum and maximum values of palette according to the algorithm defined by how. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">how</td><td>The string determining the algorithm for choosing the palette ranges. Accepted values are: <ul>
<li>CURRENT </li>
<li>RANGE </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7b357edfd6bc9d2589a6dbf7ab1aca9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b357edfd6bc9d2589a6dbf7ab1aca9a">&#9670;&nbsp;</a></span>setPaletteRange() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setPaletteRange </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>xmax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets minimum and maximum values of palette. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>Minimum value of palette </td></tr>
    <tr><td class="paramname">xmax</td><td>Maximum value of palette </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9d6ddc181b0e414cfef555aba6f7a3f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d6ddc181b0e414cfef555aba6f7a3f2">&#9670;&nbsp;</a></span>setPan()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setPan </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set the current pan values </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>x value of pan </td></tr>
    <tr><td class="paramname">y</td><td>y value of pan </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7aef90b83a24d2a1ea4d8729afc3cfc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aef90b83a24d2a1ea4d8729afc3cfc5">&#9670;&nbsp;</a></span>setPerspective()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setPerspective </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>persp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>enable/disable perspective view </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">persp</td><td>bool defining if perspective is enabled </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6724f50b4207f54aefbc744ef88ec0fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6724f50b4207f54aefbc744ef88ec0fd">&#9670;&nbsp;</a></span>setPointSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setPointSize </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set the size of points relative to model size </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>the size of points </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6329128a3b6e90f61aa4f24f46e17ec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6329128a3b6e90f61aa4f24f46e17ec7">&#9670;&nbsp;</a></span>setRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setRotation </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set current rotation expressed in angle/axis form </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">angle</td><td>Angle of rotation </td></tr>
    <tr><td class="paramname">x</td><td>x-component of rotation axis </td></tr>
    <tr><td class="paramname">y</td><td>y-component of rotation axis </td></tr>
    <tr><td class="paramname">z</td><td>z-component of rotation axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a57a9674604deb1b4f375df06fa2e0d32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57a9674604deb1b4f375df06fa2e0d32">&#9670;&nbsp;</a></span>setRulerVisibility()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setRulerVisibility </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>on</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>changes visibility of the ruler </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">on</td><td>if true, the the ruler will be shown </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aaf4097a4a24e5a2172be248d2841a42b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf4097a4a24e5a2172be248d2841a42b">&#9670;&nbsp;</a></span>setScale()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setScale </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set scale factor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scale</td><td>factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a757e1eda9c70aeefe7764241ec59bde3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a757e1eda9c70aeefe7764241ec59bde3">&#9670;&nbsp;</a></span>setSceneData() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSceneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_render_data.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">RenderData::DataType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>design</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>quantity</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a convenience function which assigns a constant contour plot to the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>data type </td></tr>
    <tr><td class="paramname">design</td><td>design ident </td></tr>
    <tr><td class="paramname">quantity</td><td>quantity ident </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aee87ccb88f3fa68588c12cf08ac442c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee87ccb88f3fa68588c12cf08ac442c5">&#9670;&nbsp;</a></span>setSceneData() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSceneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_all_render_data.xhtml">AllRenderData</a>&#160;</td>
          <td class="paramname"><em>render_data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assigns the visible data to the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">render_data</td><td>the definition of the data to be rendered </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae204a414ac9bcd86c4b0540daaf040f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae204a414ac9bcd86c4b0540daaf040f8">&#9670;&nbsp;</a></span>setSceneData() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSceneData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>inputs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>changes the data of the input parameters for the currently set field data model and assigns them to the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">inputs</td><td>the new values of the field data model. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a52834e727b628c3890cbfe5b3999c66e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52834e727b628c3890cbfe5b3999c66e">&#9670;&nbsp;</a></span>setSelection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual setSelection </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>scene_widht</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>scene_height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_selection</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>max_selectable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>show_label</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Selects all elements of the active <a class="el" href="class_scene.xhtml" title="A class for 3D visualization of a structure Additionally, it can display palettes and text annotation...">Scene</a> within the rectangle defined by x, y, width and height given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">scene_widht</td><td>The scene width the rectangle definition is based on. </td></tr>
    <tr><td class="paramname">scene_height</td><td>The scene height the rectangle definition is based on. </td></tr>
    <tr><td class="paramname">x</td><td>The x coordinate of the top-left rectangle corner wihthin the scene given. </td></tr>
    <tr><td class="paramname">y</td><td>The y coordinate of the top-left rectangle corner wihthin the scene given. </td></tr>
    <tr><td class="paramname">width</td><td>The width of the rectangle corner. </td></tr>
    <tr><td class="paramname">height</td><td>The height of the rectangle corner. </td></tr>
    <tr><td class="paramname">add_selection</td><td>True if the selection should be added to previously selected elements. False otherwise. </td></tr>
    <tr><td class="paramname">max_selectable</td><td>Limits the maximum amount of automatically selected entities within the rectangle given. </td></tr>
    <tr><td class="paramname">show_label</td><td>If set to true, selected items will be label. Otherwise selected items will be only highlighted by color </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8345f253d0b6278e435c44f19b680083"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8345f253d0b6278e435c44f19b680083">&#9670;&nbsp;</a></span>setSize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSize </td>
          <td>(</td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">number&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setSize Sets the size of the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>new width of the scene </td></tr>
    <tr><td class="paramname">h</td><td>new height of the scene </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7aad11ffebbfb0b66c12f0a01afa24e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7aad11ffebbfb0b66c12f0a01afa24e4">&#9670;&nbsp;</a></span>setSlice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSlice </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>d</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines a slicing plane in the active scene, using the body coordinate system. The plane will be defined in Hessian normal form by normalizing the paramters $a$, $b$, $c$, and $d$ given Only points with coordinates satisfying $ax+by+cz+d &gt; 0$ are shown, the rest is suppressed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>coeffcient $a$ in the plane equation </td></tr>
    <tr><td class="paramname">b</td><td>coeffcient $b$ in the plane equation </td></tr>
    <tr><td class="paramname">c</td><td>coeffcient $c$ in the plane equation </td></tr>
    <tr><td class="paramname">d</td><td>coeffcient $d$ in the plane equation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Refer to <a href="http://mathworld.wolfram.com/Plane.html">Wolfram: Plane</a> for an explanation of the plane definition </dd></dl>

</div>
</div>
<a id="a554e660f534f1bab2328fff34ea5a40c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a554e660f534f1bab2328fff34ea5a40c">&#9670;&nbsp;</a></span>setSyncCamera()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setSyncCamera </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>sync</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>defines if the scenes are synchronized in camera positioning </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sync</td><td>if true then the camera settings apply to all scenes, else only to the active scene </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af6da645e07e19e7656e98d7e1f10ee02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6da645e07e19e7656e98d7e1f10ee02">&#9670;&nbsp;</a></span>setTetCoordinates()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setTetCoordinates </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_matrix.xhtml">Matrix</a>&#160;</td>
          <td class="paramname"><em>coordinates</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set coordinates of all tet vertices in the active scene </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">coordinates</td><td><a class="el" href="class_matrix.xhtml" title="Standard matrix class. ">Matrix</a> containing the coordinates, must have size (3,n) in which n is the number of vertices </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7abac5cfa30e846fb03429bb4e40dc3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7abac5cfa30e846fb03429bb4e40dc3c">&#9670;&nbsp;</a></span>setZoom()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">setZoom </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>set current zoom factor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">current</td><td>zoom factor </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abcd703e220fe34c4ff8364626470876d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcd703e220fe34c4ff8364626470876d">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">number size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of scenes </dd></dl>

</div>
</div>
<a id="a36172b6f1300b9a30ef0b5ff77d71d3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36172b6f1300b9a30ef0b5ff77d71d3e">&#9670;&nbsp;</a></span>syncCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual syncCamera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the camera and slicing settings of the active scene to all other scenes. </p>
<dl class="section note"><dt>Note</dt><dd>An empty slicing plane means that the slicing plane shall be removed </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
