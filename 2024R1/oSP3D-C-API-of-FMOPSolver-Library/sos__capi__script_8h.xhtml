<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Statistics on Structures programming library API Documentation: sos_capi_script.h File Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('sos__capi__script_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle">
<div class="title">sos_capi_script.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>C-API to run SoS scripts and exchange basic data.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="sos__capi__common_8h_source.xhtml">sos_capi_common.h</a>&quot;</code><br />
</div>
<p><a href="sos__capi__script_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:aab8ff16aaa9cf05fccc70920f4b62bfb"><td class="memItemLeft" align="right" valign="top"><a id="aab8ff16aaa9cf05fccc70920f4b62bfb"></a>
typedef void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a></td></tr>
<tr class="memdesc:aab8ff16aaa9cf05fccc70920f4b62bfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains the data required to post-process any Field-MOP. <br /></td></tr>
<tr class="separator:aab8ff16aaa9cf05fccc70920f4b62bfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Create / Initialize Data Objects</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API handling data object life time </p>
</div></td></tr>
<tr class="memitem:ace6f8c522f626dddbf5fc12d4d1d7a11"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#ace6f8c522f626dddbf5fc12d4d1d7a11">FMOP_globalScriptEngine</a> ()</td></tr>
<tr class="memdesc:ace6f8c522f626dddbf5fc12d4d1d7a11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the handle to the global script engine from the initialized library. The routine checks if the Lua interpreter is available. If no, it returns 0. If yes, it returns the handle to the Lua interpreter. There is only a single instance available. Repeated calls of this functions always return the same handle.  <a href="sos__capi__script_8h.xhtml#ace6f8c522f626dddbf5fc12d4d1d7a11">More...</a><br /></td></tr>
<tr class="separator:ace6f8c522f626dddbf5fc12d4d1d7a11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a585497e6891f11a032944d26f3b0d9c0"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#a585497e6891f11a032944d26f3b0d9c0">FMOP_script_execute</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const script)</td></tr>
<tr class="memdesc:a585497e6891f11a032944d26f3b0d9c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execute Lua script code. The script engine has the ability to parse and execute:  <a href="sos__capi__script_8h.xhtml#a585497e6891f11a032944d26f3b0d9c0">More...</a><br /></td></tr>
<tr class="separator:a585497e6891f11a032944d26f3b0d9c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86518674fc7aa5571d44f5d8544879f0"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#a86518674fc7aa5571d44f5d8544879f0">FMOP_script_createMatrix</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, int rows, int cols, const double *const data)</td></tr>
<tr class="memdesc:a86518674fc7aa5571d44f5d8544879f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a tmath.Matrix in Lua script context. This version may be more efficient than creating a matrix through a text based script - at least for large matrices.  <a href="sos__capi__script_8h.xhtml#a86518674fc7aa5571d44f5d8544879f0">More...</a><br /></td></tr>
<tr class="separator:a86518674fc7aa5571d44f5d8544879f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7c32369056cdee19411d3924538d5d"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#afe7c32369056cdee19411d3924538d5d">FMOP_script_getMatrix</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, int *rows, int *cols, const double **data)</td></tr>
<tr class="memdesc:afe7c32369056cdee19411d3924538d5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the binary data of a tmath.Matrix existing in the Lua script context The matrix must be saved in a Lua variable. The data can be retrieved in an efficient way by accessing only the data buffers in memory. Do not change the data from outside. Memory management remains with the Lua interpreter. Thus, the garbage collector may free the memory to which the output of this method refers to.  <a href="sos__capi__script_8h.xhtml#afe7c32369056cdee19411d3924538d5d">More...</a><br /></td></tr>
<tr class="separator:afe7c32369056cdee19411d3924538d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd830885fbde66f6d3133d7f1e943796"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#acd830885fbde66f6d3133d7f1e943796">FMOP_script_createNumber</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, double data)</td></tr>
<tr class="memdesc:acd830885fbde66f6d3133d7f1e943796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a double precision floating point number variable in the Lua script context.  <a href="sos__capi__script_8h.xhtml#acd830885fbde66f6d3133d7f1e943796">More...</a><br /></td></tr>
<tr class="separator:acd830885fbde66f6d3133d7f1e943796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b01058d679a651d52882f928caa14e7"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#a6b01058d679a651d52882f928caa14e7">FMOP_script_getNumber</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, double *const data)</td></tr>
<tr class="memdesc:a6b01058d679a651d52882f928caa14e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the pointer to a number variable in the Lua script context. The number is is stored in double precision floating point format.  <a href="sos__capi__script_8h.xhtml#a6b01058d679a651d52882f928caa14e7">More...</a><br /></td></tr>
<tr class="separator:a6b01058d679a651d52882f928caa14e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31383b3c0eb3e408c74430b1cd610183"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#a31383b3c0eb3e408c74430b1cd610183">FMOP_script_createString</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, const char *const data)</td></tr>
<tr class="memdesc:a31383b3c0eb3e408c74430b1cd610183"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a string variable in the Lua script context.  <a href="sos__capi__script_8h.xhtml#a31383b3c0eb3e408c74430b1cd610183">More...</a><br /></td></tr>
<tr class="separator:a31383b3c0eb3e408c74430b1cd610183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1304b306d77e15fcfd1e99603bbff62"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#ac1304b306d77e15fcfd1e99603bbff62">FMOP_script_getString</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident, const char **data)</td></tr>
<tr class="memdesc:ac1304b306d77e15fcfd1e99603bbff62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the char array pointer to a string variable in the Lua script context. The data can be retrieved in an efficient way by accessing only the data buffers in memory. Do not change the data from outside. Memory management remains with the Lua interpreter. Thus, the garbage collector may free the memory to which the output of this method refers to.  <a href="sos__capi__script_8h.xhtml#ac1304b306d77e15fcfd1e99603bbff62">More...</a><br /></td></tr>
<tr class="separator:ac1304b306d77e15fcfd1e99603bbff62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaf34349f4a16e537f5fe8a5ceb52856"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__script_8h.xhtml#adaf34349f4a16e537f5fe8a5ceb52856">FMOP_script_identExists</a> (<a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> context, const char *const ident)</td></tr>
<tr class="memdesc:adaf34349f4a16e537f5fe8a5ceb52856"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether a variable exists in the Lua script context.  <a href="sos__capi__script_8h.xhtml#adaf34349f4a16e537f5fe8a5ceb52856">More...</a><br /></td></tr>
<tr class="separator:adaf34349f4a16e537f5fe8a5ceb52856"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p class="">C-API to run SoS scripts and exchange basic data. </p>
<dl class="section copyright"><dt>Copyright</dt><dd>DYNARDO Austria GmbH</dd></dl>
<ul>
<li>This API follows the <em>Basic</em> exception safety <em>rule</em>. If any of the operations fail, the original data, e.g. the fmop_handle*_t, might have been overwritten, but there should be no resource leak.</li>
<li>Return values are typically of type fmop_error_t. To get a human readalbe interpretation forward this value to <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> or call <a class="el" href="sos__capi__common_8h.xhtml#a5e19e7fe152759a80115e908c593245d" title="Returns internal log messages of level warning and above.">FMOP_getLastErrorString()</a>. More information can be found in the Error Handling section</li>
<li>Log messages from the SoS kernel are all bufferd in an internal variable. Unless otherwise stated in a function description, this internal variable gets reset(!) right at the beginning of each function call. Therefore, the user is forced into fetching all log messages of interest before proceeding.</li>
</ul>
<dl class="section warning"><dt>Warning</dt><dd>Concurrent library calls are NOT supported </dd>
<dd>
Unless stated otherwise, function calls overwrite log messages of any previous function call </dd></dl>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="ace6f8c522f626dddbf5fc12d4d1d7a11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace6f8c522f626dddbf5fc12d4d1d7a11">&#9670;&nbsp;</a></span>FMOP_globalScriptEngine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a> FMOP_globalScriptEngine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the handle to the global script engine from the initialized library. The routine checks if the Lua interpreter is available. If no, it returns 0. If yes, it returns the handle to the Lua interpreter. There is only a single instance available. Repeated calls of this functions always return the same handle. </p>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef" title="Contains one specific single or cross correlated FMOP.">fmop_handle_t</a> if the FMOP library was previously initialized with <a class="el" href="sos__capi__common_8h.xhtml#a9c8f0f808d3f27c57a3a57d5f9cf4834" title="Initialize the FMOP library Allocates memory for the global script engine. Call FMOP_unloadLibrary() ...">FMOP_initializeLibrary()</a></li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the global script engine is unavailable </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a86518674fc7aa5571d44f5d8544879f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86518674fc7aa5571d44f5d8544879f0">&#9670;&nbsp;</a></span>FMOP_script_createMatrix()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_createMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *const&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a tmath.Matrix in Lua script context. This version may be more efficient than creating a matrix through a text based script - at least for large matrices. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the ident in Lua script of the matrix to be created </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rows</td><td>the number of rows of the matrix to be created </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">cols</td><td>the number of columns of the matrix to be created </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>the data array of the matrix to be created. The dimension of the data array must be rows*cols. The matrix data is stored in a column-major format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful matrix creation</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca749f1c6edf13b1303018d7a3632dc316" title="Object with ident not found in script engine.">fmop_script_no_object</a> ident could not be accessed</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becab6e0160bb71d6930176d907409618f4d" title="An error appeare while executing Lua script.">fmop_script_error</a> if an error occurred during LUA script execution</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has been acquired </li>
</ul>
</dd></dl>

</div>
</div>
<a id="acd830885fbde66f6d3133d7f1e943796"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd830885fbde66f6d3133d7f1e943796">&#9670;&nbsp;</a></span>FMOP_script_createNumber()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_createNumber </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a double precision floating point number variable in the Lua script context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the number's variable name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>the number's value </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful number creation</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a></li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has been acquired </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a31383b3c0eb3e408c74430b1cd610183"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31383b3c0eb3e408c74430b1cd610183">&#9670;&nbsp;</a></span>FMOP_script_createString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_createString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a string variable in the Lua script context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the string's variable name </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data</td><td>the string's text </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful string creation</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a></li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has been acquired </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a585497e6891f11a032944d26f3b0d9c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a585497e6891f11a032944d26f3b0d9c0">&#9670;&nbsp;</a></span>FMOP_script_execute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_execute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>script</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Execute Lua script code. The script engine has the ability to parse and execute: </p>
<ul>
<li>any SoS script code (check the command log in the SoS GUI and the scripting examples provided with your SoS installation, in the public documents folder on Windows)</li>
<li>any Lua code <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramname">script</td><td>the Lua script code to be executed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful script execution</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becab6e0160bb71d6930176d907409618f4d" title="An error appeare while executing Lua script.">fmop_script_error</a> if an error occurred during LUA script execution</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has beend acquired</li>
</ul>
</dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec" title="Error code definitions.">fmop_error_t</a> </dd></dl>
</li>
</ul>

</div>
</div>
<a id="afe7c32369056cdee19411d3924538d5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe7c32369056cdee19411d3924538d5d">&#9670;&nbsp;</a></span>FMOP_script_getMatrix()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_getMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>rows</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>cols</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double **&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieves the binary data of a tmath.Matrix existing in the Lua script context The matrix must be saved in a Lua variable. The data can be retrieved in an efficient way by accessing only the data buffers in memory. Do not change the data from outside. Memory management remains with the Lua interpreter. Thus, the garbage collector may free the memory to which the output of this method refers to. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the ident of the tmath.Matrix variable in Lua. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">rows</td><td>the number of rows </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">cols</td><td>the number of columns </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>*data will point to the matrix data array on output. The dimension of the data array must be rows*cols. The matrix data is stored in a column-major format. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful matrix access</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca749f1c6edf13b1303018d7a3632dc316" title="Object with ident not found in script engine.">fmop_script_no_object</a> ident could not be accessed</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has been acquired </li>
</ul>
</dd></dl>

</div>
</div>
<a id="a6b01058d679a651d52882f928caa14e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b01058d679a651d52882f928caa14e7">&#9670;&nbsp;</a></span>FMOP_script_getNumber()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_getNumber </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *const&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve the pointer to a number variable in the Lua script context. The number is is stored in double precision floating point format. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the number's variable name </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>contains the number's memory address on <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a>. The caller retains ownership of the pointer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> on successful number access</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca32eddc7d860101cdbb8e1571c726ee91" title="Object with ident has wrong type.">fmop_script_wrong_type</a></li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a></li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurred, e.g. no license has been acquired </li>
</ul>
</dd></dl>

</div>
</div>
<a id="ac1304b306d77e15fcfd1e99603bbff62"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1304b306d77e15fcfd1e99603bbff62">&#9670;&nbsp;</a></span>FMOP_script_getString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_script_getString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve the char array pointer to a string variable in the Lua script context. The data can be retrieved in an efficient way by accessing only the data buffers in memory. Do not change the data from outside. Memory management remains with the Lua interpreter. Thus, the garbage collector may free the memory to which the output of this method refers to. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the string's variable name </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">data</td><td>contain's the string's text on <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

</div>
</div>
<a id="adaf34349f4a16e537f5fe8a5ceb52856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaf34349f4a16e537f5fe8a5ceb52856">&#9670;&nbsp;</a></span>FMOP_script_identExists()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API bool FMOP_script_identExists </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__script_8h.xhtml#aab8ff16aaa9cf05fccc70920f4b62bfb">fmop_script_handle_t</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>ident</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether a variable exists in the Lua script context. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">context</td><td>handle to a script engine </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ident</td><td>the variable's name </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li>true: the ident exists</li>
<li>false: the ident does not exist </li>
</ul>
</dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
