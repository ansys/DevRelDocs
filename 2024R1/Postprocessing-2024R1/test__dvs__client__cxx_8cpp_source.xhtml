<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: D:/Product-src/ensight/user_defined_src/readers/dvs/test_dvs_client_cxx.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_efb5d67553d49169c49ef58de7241528.xhtml">ensight</a></li><li class="navelem"><a class="el" href="dir_4e0d2d4294803448cbce42ae5b7dbd77.xhtml">user_defined_src</a></li><li class="navelem"><a class="el" href="dir_359f060799dd509662b36dfd7584eb2e.xhtml">readers</a></li><li class="navelem"><a class="el" href="dir_1e237ac59110de3c5c813eb754d30339.xhtml">dvs</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">test_dvs_client_cxx.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="test__dvs__client__cxx_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  *************************************************************</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> *   Copyright 2017-2023 ANSYS, Inc.</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> *   All Rights Reserved.</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> *</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> *        Restricted Rights Legend</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> *</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"> *   Use, duplication, or disclosure of this</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment"> *   software and its documentation by the</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment"> *   Government is subject to restrictions as</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment"> *   set forth in subdivision [(b)(3)(ii)] of</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"> *   the Rights in Technical Data and Computer</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment"> *   Software clause at 52.227-7013.</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"> *  *************************************************************</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment"> */</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="preprocessor">#include &lt;stdint.h&gt;</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="preprocessor">#include &lt;stdarg.h&gt;</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="preprocessor">#include &quot;<a class="code" href="dvs__client__interface_8h.xhtml">dvs_client_interface.h</a>&quot;</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="preprocessor">#include &quot;<a class="code" href="dvs__server__interface_8h.xhtml">dvs_server_interface.h</a>&quot;</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#include &quot;<a class="code" href="dynamic__visualization__store__enums_8h.xhtml">dynamic_visualization_store_enums.h</a>&quot;</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="preprocessor">#include &quot;logger.h&quot;</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">#include &quot;test_dynamic_data.h&quot;</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#include &lt;Windows.h&gt;</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">static</span> <span class="keywordtype">void</span> logging_function(<span class="keywordtype">void</span>* user_data, <span class="keyword">const</span> <span class="keywordtype">char</span>* message)</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    fprintf(stderr, message);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>}</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="test__dvs__client__cxx_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">   56</a></span><span class="keywordtype">int</span> <a class="code hl_function" href="test__dvs__client__cxx_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a>(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>** argv)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>{</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    uint32_t port = 50055;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    uint32_t msec_delay = 0;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    <span class="keywordtype">char</span> host[512] = {0};</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    strcpy(host, <span class="stringliteral">&quot;127.0.0.1&quot;</span>);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    <span class="keywordtype">char</span> protocol[10] = {0};</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    strcpy(protocol, <span class="stringliteral">&quot;grpc&quot;</span>);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    uint32_t width = 50;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    uint32_t height = 50;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    uint32_t depth = 50;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    uint32_t max_timesteps = 10;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    uint32_t current_rank = 0;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    uint32_t total_ranks = 1;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    uint8_t create_ghosts = 1;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    uint8_t block_for_server = 1;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    uint32_t starting_timestep = 0;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    uint32_t dedup = 1;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="keywordtype">bool</span> send_structured_parts = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keywordtype">char</span> dataset_id[255] = {0};</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    strcpy(dataset_id, <span class="stringliteral">&quot;Test-C++-API&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    <span class="keywordtype">char</span> secret[255] = {0};</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    uint32_t plot_rank = 0;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    uint32_t server_number = 0;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    uint32_t server_verbosity = 0;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    uint32_t local_ranks = 0;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    uint32_t all_defs = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordtype">char</span> cache_uri[512] = {0};</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keywordtype">bool</span> log_all = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    uint32_t debug_wait = 0;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keywordtype">bool</span> start_server = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keywordtype">bool</span> test_delete = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    uint32_t i = 1;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="keywordflow">while</span> (i &lt; argc)</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    {</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-p&quot;</span>) == 0 ) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>            i++;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>            port = atoi(argv[i]);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>        }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-h&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>        {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>            i++;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>            strncpy(host, argv[i], 255);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>        }</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-protocol&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>        {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>            i++;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>            strncpy(protocol, argv[i], 10);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>            <span class="keywordflow">if</span> (strcmp(protocol, <span class="stringliteral">&quot;grpc&quot;</span>) != 0 &amp;&amp; strcmp(protocol, <span class="stringliteral">&quot;null&quot;</span>) != 0 )</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>            {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>                fprintf(stderr, <span class="stringliteral">&quot;protocol: %s invalid\n&quot;</span>, protocol);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>                exit(1);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>            }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>        }</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-d&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>        {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>            i++;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>            msec_delay = atoi(argv[i]);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>        }</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-s&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 3))</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>        {</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>            i++;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>            width = atoi(argv[i++]);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>            height = atoi(argv[i++]);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>            depth = atoi(argv[i]);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>        }</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-t&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>        {</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>            i++;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>            max_timesteps = atoi(argv[i]);</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>        }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-r&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 2))</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>        {</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>            i++;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>            current_rank = atoi(argv[i++]);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>            total_ranks = atoi(argv[i]);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>        }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-noghost&quot;</span>) == 0)</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>        {</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>            create_ghosts = 0;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>        }</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-nowait&quot;</span>) == 0)</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>        {</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>            block_for_server = 0;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>        }</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((strcmp(argv[i], <span class="stringliteral">&quot;-start&quot;</span>) == 0) &amp;&amp; (i &lt; argc - 1))</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        {</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>            i++;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>            starting_timestep = atoi(argv[i]);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>        }</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-nodedup&quot;</span>) == 0)</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>        {</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>            dedup = 0;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        }</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-id&quot;</span>) == 0)</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>        {</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>            i++;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>            memset(dataset_id, 0, 255);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>            strncpy(dataset_id, argv[i], 255);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>        }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-secret&quot;</span>) == 0)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>            i++;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>            strncpy(secret, argv[i], 255);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>        }</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-structured&quot;</span>) == 0)</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>        {</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>            send_structured_parts = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>        }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-plot_rank&quot;</span>) == 0)</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        {</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>            i++;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>            plot_rank = atoi(argv[i]);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>        }</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-server&quot;</span>) == 0 &amp;&amp; (i &lt; argc - 3))</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        {</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>            i++;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>            start_server = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>            server_number = atoi(argv[i++]);</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>            local_ranks = atoi(argv[i++]);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>            server_verbosity = atoi(argv[i]);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>        }</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-cache_uri&quot;</span>) == 0)</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        {</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>            i++;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>            strncpy(cache_uri, argv[i], 512);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>        }</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-all_defs&quot;</span>) == 0)</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>        {</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>            all_defs = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        }</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-log_all&quot;</span>) == 0)</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>        {</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>            log_all = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>        }</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-debug_wait&quot;</span>) == 0)</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>        {</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>            i++;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>            debug_wait = atoi(argv[i]);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>        }</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-test_delete&quot;</span>) == 0)</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>        {</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>            test_delete = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>        }</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>        {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>            fprintf(stderr, <span class="stringliteral">&quot;Unknown option: %s\n&quot;</span>, argv[i]);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>            fprintf(stderr, <span class="stringliteral">&quot;Usage: %s [-p port] [-h host] [-d msec_delay] [-t num_timesteps] [-s dx dy dz] [-noghost] [-nowait] [-start t]\n&quot;</span>, argv[0]);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>            fprintf(stderr, <span class="stringliteral">&quot;Options:\n&quot;</span>);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>            fprintf(stderr, <span class="stringliteral">&quot;  -t timesteps         Number of timesteps to generate.  Default: %u\n&quot;</span>, max_timesteps);</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>            fprintf(stderr, <span class="stringliteral">&quot;  -p port              Server port to connect to.  Default: %u\n&quot;</span>, port);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>            fprintf(stderr, <span class="stringliteral">&quot;  -h host              Server hostname to connect to.  Default: %s\n&quot;</span>, host);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>            fprintf(stderr, <span class="stringliteral">&quot;  -protocol str        Server protocol. I.E. grpc or null. Default: grpc&quot;</span>);</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>            fprintf(stderr, <span class="stringliteral">&quot;  -d delay             Number of milliseconds to delay between timestep pushes.  Default: %u\n&quot;</span>, msec_delay);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>            fprintf(stderr, <span class="stringliteral">&quot;  -s dx dy dz          Size of 3D hex grid (width height depth) Default: %u %u %u\n&quot;</span>, width, height, depth);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>            fprintf(stderr, <span class="stringliteral">&quot;  -r x y               Rank information x=current rank (0 based), y=total number of ranks. Default: %u %u\n&quot;</span>, current_rank, total_ranks);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>            fprintf(stderr, <span class="stringliteral">&quot;  -noghost             Do not create ghost elements\n&quot;</span>);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>            fprintf(stderr, <span class="stringliteral">&quot;  -nowait              Do not wait for server to be available\n&quot;</span>);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>            fprintf(stderr, <span class="stringliteral">&quot;  -start t             Begin timesteps with timestep Default: %u\n&quot;</span>, starting_timestep);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>            fprintf(stderr, <span class="stringliteral">&quot;  -nodedup             Do not de-duplicate data on the client side Default: deduplicate\n&quot;</span>);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>            fprintf(stderr, <span class="stringliteral">&quot;  -id string           Set an id/name for the dataset Default: TestID\n&quot;</span>);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>            fprintf(stderr, <span class="stringliteral">&quot;  -secret string       Shared secret to use when talking with server Default: no shared secret\n&quot;</span>);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>            fprintf(stderr, <span class="stringliteral">&quot;  -structured          Turn on sending structured part data Default: Don&#39;t send structured part data\n&quot;</span>);</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>            fprintf(stderr, <span class="stringliteral">&quot;  -plot_rank           Set the rank which should send plot data to EnSight (zero based) Default: %u\n&quot;</span>, plot_rank);</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>            fprintf(stderr, <span class="stringliteral">&quot;  -server n r v        Start a server using server number [n], expecting [r] local ranks for DVS connections to connect to with verbosity [v]. Local Rank Min/Max: 1/1000\n&quot;</span>);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>            fprintf(stderr, <span class="stringliteral">&quot;  -cache_uri str       The URI for the server to use for the cache. Default: No cache\n&quot;</span>);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>            fprintf(stderr, <span class="stringliteral">&quot;  -all_defs            Send all part/var definitions no matter the current rank. Default: No\n&quot;</span>);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>            fprintf(stderr, <span class="stringliteral">&quot;  -log_all             Print out all client logging information\n. Default: No client logs&quot;</span>);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>            fprintf(stderr, <span class="stringliteral">&quot;  -debug_wait ms       Wait for [ms] for debugging\n&quot;</span>);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>            fprintf(stderr, <span class="stringliteral">&quot;  -test_delete         Test deleting all timesteps before each update Default: Do not test\n&quot;</span>);</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>            exit(1);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>        }</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>        i++;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>    }</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    <span class="keywordflow">if</span> (debug_wait &gt; 0)</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    {</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="preprocessor">        #ifdef _WIN32</span></div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>            Sleep(debug_wait);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="preprocessor">        #else</span></div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>            usleep(debug_wait*1000);</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span><span class="preprocessor">        #endif</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>    }</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span> </div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    <span class="keywordtype">char</span> uri[512] = {0};</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>    sprintf(uri, <span class="stringliteral">&quot;%s://%s:%u&quot;</span>, protocol, host, port);</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    fprintf(stderr, <span class="stringliteral">&quot;Connecting to: %s\n&quot;</span>, uri);</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>    fprintf(stderr, <span class="stringliteral">&quot;Timestep delay: %u\n&quot;</span>, msec_delay);</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    uint32_t send_vars = 1;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    uint32_t send_elems = 1;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>    uint32_t send_hex_elems = 1;</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>    uint32_t send_nfaced_elems = 1;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>    uint32_t send_pnt_elems = 1;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    uint32_t send_tri_quad_elems = 1;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    uint32_t send_nsided_elems = 0;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    uint32_t send_plots = 1;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>    <a class="code hl_enumeration" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9f">dvs_client_flags</a> flags;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>    <span class="keywordflow">if</span> (block_for_server) flags = <span class="keyword">static_cast&lt;</span><a class="code hl_enumeration" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9f">dvs_client_flags</a><span class="keyword">&gt;</span>(flags | <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa9feb185df8061416aa9a23b0150dc821">dvs_client_flags::BLOCK_FOR_SERVER</a>);</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>    <span class="keywordflow">if</span> (dedup) flags = <span class="keyword">static_cast&lt;</span><a class="code hl_enumeration" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9f">dvs_client_flags</a><span class="keyword">&gt;</span>(flags | <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa81b113ffc96eb6d968a19950727c0ff9">dvs_client_flags::DEDUP</a>);</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    fprintf(stderr, <span class="stringliteral">&quot;Client Flags: Blocking: %d, Dedup: %u\n&quot;</span>, (<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa9feb185df8061416aa9a23b0150dc821">BLOCK_FOR_SERVER</a> &amp; flags) &gt; 0, (<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa81b113ffc96eb6d968a19950727c0ff9">DEDUP</a> &amp; flags) &gt; 0);</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>    <a class="code hl_class" href="class_d_v_s_1_1_i_server.xhtml">DVS::IServer</a>* server = DVS::CREATE_SERVER_INSTANCE(uri);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <span class="keywordflow">if</span> (server == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    {</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>        fprintf(stderr, <span class="stringliteral">&quot;Failed to create server\n&quot;</span>);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>        exit(1);</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    }</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    <span class="keywordflow">if</span> (start_server)</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    {</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>        <span class="keywordtype">char</span> temp[10];</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>        snprintf(temp, 10, <span class="stringliteral">&quot;%u&quot;</span>, server_verbosity);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>        server-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_server.xhtml#a1edb4dec67086f10bc0329b6adf9084c">set_option</a>(<span class="stringliteral">&quot;VERBOSE&quot;</span>,temp);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>        <span class="keywordflow">if</span> (strlen(cache_uri) &gt; 0) server-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_server.xhtml#a1edb4dec67086f10bc0329b6adf9084c">set_option</a>(<span class="stringliteral">&quot;CACHE_URI&quot;</span>,cache_uri);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>        server-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_server.xhtml#a6699cf48b29583ab3391b9b8397e611c">startup</a>(server_number, local_ranks);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>        <span class="keyword">auto</span> uri = server-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_server.xhtml#a087c3fed77651e0f62d7189f44a32443">get_uri</a>();</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>        <span class="keywordflow">if</span> (uri){</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>            fprintf(stderr, <span class="stringliteral">&quot;The final uri is: %s\n&quot;</span>, uri);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>        }</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    }</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    <a class="code hl_class" href="class_d_v_s_1_1_i_client.xhtml">DVS::IClient</a>* client = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    client = DVS::CREATE_CLIENT_INSTANCE(server, flags, secret);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>    fprintf(stderr, <span class="stringliteral">&quot;Current Client Version: %s\n&quot;</span>, client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aa5d98105d78c61e4e0c4043e28174fe1">get_version</a>());</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    <span class="keywordflow">if</span> (client == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>    {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>        fprintf(stderr, <span class="stringliteral">&quot;Failed to create client\n&quot;</span>);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>        exit(1);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>    }</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    <a class="code hl_enumeration" href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609">dvs_log_flags</a> log_flags = log_all ? <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609a87cff070224b283d7aace436723245fc">dvs_log_flags::LOG_ALL</a> : <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609a1a3a1b2a98f96b6de074cd9ae93805bb">dvs_log_flags::LOG_UPDATE_BEG_END</a>;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a024475b03496bc310e211632d153517d">set_logger</a>(<span class="keyword">new</span> DVS::Logger(<span class="keyword">nullptr</span>, log_flags, logging_function));</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>    {</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>        <span class="keywordflow">if</span> (part_info_num != 7 || var_info_num != 9)</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>        {</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>            fprintf(stderr, <span class="stringliteral">&quot;This pseudo client code relies on part infos == 7 and var infos == 7, needs modified otherwise\n&quot;</span>);</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>            exit(1);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>        }</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span> </div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>        <span class="keyword">struct </span>TestDynamicData test;</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>        test_dynamic_data_init(&amp;test, 0, current_rank, total_ranks);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aff782ecd341fddd87a22a15107efeb3b">begin_init</a>(dataset_id, test.current_rank, test.total_ranks, test.num_chunks);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a284f922fec402e03365c7873502d1fde">set_unit_system</a>(test.unit_system);</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ab4144e59bfdcf9c095c6510c4298d160">add_metadata</a>(test.metadata_keys, test.metadata_vals, test.metadata_num_pairs);</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>        <span class="comment">//TODO: Have this done in only the 0th rank once merging definitions is finished</span></div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>        <span class="keywordflow">if</span> (send_plots &amp;&amp; current_rank == plot_rank) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a1bdb7ca9cf25c63e533f47fe26132af6">add_plot_info</a>(test.plots, plot_info_num);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span> </div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>        <span class="keywordflow">if</span> ((total_ranks == 1) || (total_ranks == 2) || all_defs)</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>        {</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>            <span class="comment">//If one rank or two ranks and first rank send everything (tests second rank having no definitions)</span></div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>            <span class="keywordflow">if</span> (current_rank == 0 || all_defs)</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>            {</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(test.parts, part_info_num);</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(test.vars, var_info_num);</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>            }</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>        }</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (total_ranks == 3)</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>        {</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>            <span class="comment">//If 3 ranks splitup definition data between first 2 ranks</span></div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>            <span class="comment">//the last rank will not have any (will receive data from others)</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>            <span class="keywordflow">if</span> (current_rank == 0)</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>            {</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>                <span class="comment">//Send part 0</span></div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(test.parts, 1);</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>                <span class="comment">//Send vars 0-&gt;1</span></div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(test.vars, 2);</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>            }</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (current_rank == 1)</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>            {</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>                <span class="comment">//Send parts 1-&gt;2</span></div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(&amp;test.parts[1], part_info_num-1);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>                <span class="comment">//Send vars 2-&gt;5</span></div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(&amp;test.vars[2], var_info_num - 2);</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>            }</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>            <span class="comment">//Third rank will have empty definitions which should be filled in</span></div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>        }</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (total_ranks &gt; 3)</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>        {</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>            <span class="comment">//If more than 3 ranks splitup data between first 3 ranks</span></div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>            <span class="comment">//other 3 ranks will not have any (will receive data from others)</span></div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>            <span class="keywordflow">if</span> (current_rank == 0)</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>            {</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>                <span class="comment">//Send part 0</span></div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(test.parts, 1);</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>                <span class="comment">//Send vars 0-&gt;1</span></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(test.vars, 2);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>            }</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (current_rank == 1)</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>            {</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>                <span class="comment">//Send part 1</span></div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(&amp;test.parts[1], 1);</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>                <span class="comment">//Send parts 2-&gt;3</span></div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(&amp;test.vars[2], 2);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>            }</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (current_rank == 2)</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>            {</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>                <span class="comment">//Send part 2</span></div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">add_part_info</a>(&amp;test.parts[2], part_info_num-2);</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>                <span class="comment">//Send parts 4-&gt;5</span></div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">add_var_info</a>(&amp;test.vars[4], var_info_num - 4);</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>            }</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>        }</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>        {</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>            <span class="comment">//Situation not currently handled exit out</span></div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>            fprintf(stderr, <span class="stringliteral">&quot;Bad Initialization of Ranks\n&quot;</span>);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>            exit(1);</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>        }</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span> </div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aaf1641a1afbf8bb6257940be28dd94b2">end_init</a>();</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>    }</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>    uint32_t update_num = 0; <span class="comment">// Keep a running update number for this session</span></div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>    <span class="keywordflow">for</span> (uint32_t i = starting_timestep; i &lt; max_timesteps; i++)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>    {</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>        <span class="keywordflow">if</span> (i &gt; 1 + starting_timestep &amp;&amp; msec_delay)</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>        {</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span><span class="preprocessor">            #ifdef _WIN32</span></div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>            Sleep(msec_delay);</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span><span class="preprocessor">            #else</span></div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>            usleep(msec_delay*1000);</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span><span class="preprocessor">            #endif</span></div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>        }</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>        <span class="keywordflow">if</span> (test_delete &amp;&amp; i != starting_timestep) {</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>            fprintf(stderr, <span class="stringliteral">&quot;Rank: %i of %i Deleting Item\n&quot;</span>, (current_rank+1), total_ranks);</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a5e8f192f5c683a8265dd94020506a0aa">delete_item</a>(update_num++, current_rank, <span class="stringliteral">&quot;/timestep.time/gte/0.0&quot;</span>);</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>        }</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>        fprintf(stderr, <span class="stringliteral">&quot;Rank: %i of %i Sending Timestep: %i of %i\n&quot;</span>, (current_rank+1), total_ranks, (i+1), max_timesteps);</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span> </div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>        <span class="keyword">struct </span>TestDynamicData test;</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>        test_dynamic_data_init(&amp;test, i, current_rank, total_ranks);</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>        test.ghosts = create_ghosts;</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>        test_dynamic_data_create_mesh_and_elements(&amp;test, width, height, depth);</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#abd1cbbd2007346ad616dc74eab9d0553">begin_update</a>(update_num++, current_rank, test.current_chunk, test.time);</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>        <span class="keywordflow">if</span> (send_structured_parts)</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>        {</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a1588c437020e0ba5702ec48460a792a9">update_nodes_structured</a></div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>            (</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>                test.parts[5]._id,</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>                test.pp_global_ijk_max,</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>                test.pp_local_ijk_min,</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>                test.pp_local_ijk_max,</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>                test.pp_origin,</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>                test.pp_unit_vec_i,</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>                test.pp_unit_vec_j,</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>                test.pp_unit_vec_k,</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>                test.pp_i_vals,</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>                test.pp_j_vals,</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>                test.pp_k_vals</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>            );</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a1588c437020e0ba5702ec48460a792a9">update_nodes_structured</a></div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>            (</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>                test.parts[6]._id,</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>                test.curv_global_ijk_max,</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>                test.curv_local_ijk_min,</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>                test.curv_local_ijk_max,</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>                test.curv_x_vals,</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>                test.curv_y_vals,</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>                test.curv_z_vals</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>            );</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>        }</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span> </div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>        <span class="keywordflow">if</span> (send_hex_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">update_nodes</a>(test.parts[0]._id, test.mesh_x_coords, test.mesh_y_coords, test.mesh_z_coords, test.mesh_coords_size);</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>        <span class="keywordflow">if</span> (send_pnt_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">update_nodes</a>(test.parts[1]._id, test.mesh_x_coords, test.mesh_y_coords, test.mesh_z_coords, test.mesh_coords_size);</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>        <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">update_nodes</a>(test.parts[2]._id, test.mesh_x_coords, test.mesh_y_coords, test.mesh_z_coords, test.mesh_coords_size);</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>        <span class="keywordflow">if</span> (send_tri_quad_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">update_nodes</a>(test.parts[3]._id, test.mesh_x_coords, test.mesh_y_coords, test.mesh_z_coords, test.mesh_coords_size);</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>        <span class="keywordflow">if</span> (send_nsided_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">update_nodes</a>(test.parts[4]._id, test.polymesh_x_coords, test.polymesh_y_coords, test.polymesh_z_coords, test.polymesh_coords_size);</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span> </div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>        <span class="keywordflow">if</span> (send_elems)</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>        {</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>            <span class="keywordflow">if</span> (send_hex_elems)</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>            {</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">update_elements</a>(test.parts[0]._id, HEXAHEDRON, test.mesh_hex_elem_coords, test.mesh_hex_elem_coords_size);</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>                <span class="keywordflow">if</span> (test.mesh_hex_ghost_elem_coords_size &gt; 0)</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>                {</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>                    client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">update_elements</a>(test.parts[0]._id, HEXAHEDRON_GHOST, test.mesh_hex_ghost_elem_coords, test.mesh_hex_ghost_elem_coords_size);</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>                }</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>            }</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span> </div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>            <span class="keywordflow">if</span> (send_nfaced_elems)</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>            {</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a7a9ccf04ed8502d23913d8eef21607ec">update_elements_polyhedral</a></div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>                (</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>                    test.parts[2]._id,</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>                    CONVEX_POLYHEDRON,</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>                    test.mesh_nfaced_hex_elem_faces_per_elem,</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>                    test.mesh_nfaced_hex_elem_faces_per_elem_size,</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>                    test.mesh_nfaced_hex_elem_nodes_per_face,</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>                    test.mesh_nfaced_hex_elem_nodes_per_face_size,</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>                    test.mesh_nfaced_hex_elem_coords,</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>                    test.mesh_nfaced_hex_elem_coords_size</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>                );</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>                <span class="keywordflow">if</span> (test.mesh_nfaced_hex_ghost_elem_coords_size &gt; 0)</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>                {</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>                    client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a7a9ccf04ed8502d23913d8eef21607ec">update_elements_polyhedral</a></div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>                    (</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>                        test.parts[2]._id,</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>                        CONVEX_POLYHEDRON_GHOST,</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>                        test.mesh_nfaced_hex_ghost_elem_faces_per_elem,</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>                        test.mesh_nfaced_hex_ghost_elem_faces_per_elem_size,</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>                        test.mesh_nfaced_hex_ghost_elem_nodes_per_face,</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>                        test.mesh_nfaced_hex_ghost_elem_nodes_per_face_size,</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>                        test.mesh_nfaced_hex_ghost_elem_coords,</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>                        test.mesh_nfaced_hex_ghost_elem_coords_size</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>                    );</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>                }</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>            }</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span> </div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>            <span class="keywordflow">if</span> (send_nsided_elems &amp;&amp; current_rank == 0)</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>            {</div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>                <span class="comment">//Only send if current rank is 0 as we aren&#39;t</span></div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>                <span class="comment">//splitting this part up based on rank</span></div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ac6b3990562f507eda4abedf53e021647">update_elements_polygon</a></div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>                (</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>                    test.parts[4]._id,</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>                    N_SIDED_POLYGON,</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>                    test.polymesh_elem_nodes_per_face,</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>                    test.polymesh_elem_nodes_per_face_size,</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>                    test.polymesh_elem_nodes,</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>                    test.polymesh_elem_nodes_size</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>                );</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>            }</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span> </div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>            <span class="keywordflow">if</span> (send_pnt_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">update_elements</a>(test.parts[1]._id, PNT, test.mesh_point_elem_coords, test.mesh_point_elem_coords_size);</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span> </div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>            <span class="keywordflow">if</span> (send_tri_quad_elems)</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>            {</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">update_elements</a>(test.parts[3]._id, QUADRANGLE, test.mesh_quad_elem_coords, test.mesh_quad_elem_coords_size);</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">update_elements</a>(test.parts[3]._id, TRIANGLE, test.mesh_tri_elem_coords, test.mesh_tri_elem_coords_size);</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>            }</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>        }</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span> </div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>        <span class="keywordflow">if</span> (send_vars)</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>        {</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>            <span class="comment">//Case vars not working correctly with DVS</span></div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a8f2e7174f9e89ef5285043dd9357f9b0">update_var_case</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[6]._id, &amp;test.case_var_value, 1);</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ab18cc3827eda737ea73c31aa7fe6ef68">update_var_part</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[4]._id, test.parts[0]._id, &amp;test.part_scalar[0], 1);</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ab18cc3827eda737ea73c31aa7fe6ef68">update_var_part</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[4]._id, test.parts[1]._id, &amp;test.part_scalar[1], 1);</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span>            <span class="keywordflow">if</span> (send_hex_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[0]._id, test.mesh_hex_elem_var_scalar, test.mesh_hex_elem_var_scalar_size);</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>            <span class="keywordflow">if</span> (send_hex_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[0]._id, test.mesh_hex_elem_var_rank_scalar, test.mesh_hex_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span> </div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>            <span class="comment">//N-FACED Elements use the same elemental vars for now as hex elements</span></div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span>            <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(CONVEX_POLYHEDRON, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[2]._id, test.mesh_hex_elem_var_scalar, test.mesh_hex_elem_var_scalar_size);</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>            <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(CONVEX_POLYHEDRON, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[2]._id, test.mesh_hex_elem_var_rank_scalar, test.mesh_hex_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span> </div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>            <span class="keywordflow">if</span> (send_structured_parts)</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>            {</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(STRUCTURED, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[5]._id, test.structured_elem_var_scalar, test.structured_elem_var_scalar_size);</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(STRUCTURED, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[5]._id, test.structured_elem_var_scalar_rank, test.structured_elem_var_scalar_rank_size);</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span> </div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(STRUCTURED, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[6]._id, test.structured_elem_var_scalar, test.structured_elem_var_scalar_size);</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(STRUCTURED, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[6]._id, test.structured_elem_var_scalar_rank, test.structured_elem_var_scalar_rank_size);</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>            }</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span> </div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>            <span class="keywordflow">if</span> (test.mesh_hex_ghost_elem_var_scalar_size &gt; 0)</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span>            {</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span>                <span class="keywordflow">if</span> (send_hex_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON_GHOST, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[0]._id, test.mesh_hex_ghost_elem_var_scalar, test.mesh_hex_ghost_elem_var_scalar_size);</div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>                <span class="comment">//N-FACED Elements use the same elemental vars for now as hex elements</span></div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>                <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(CONVEX_POLYHEDRON_GHOST, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[2]._id, test.mesh_hex_ghost_elem_var_scalar, test.mesh_hex_ghost_elem_var_scalar_size);</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>            }</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span>            <span class="keywordflow">if</span> (test.mesh_hex_ghost_elem_var_rank_scalar_size &gt; 0)</div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span>            {</div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span>                <span class="keywordflow">if</span> (send_hex_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON_GHOST, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[0]._id, test.mesh_hex_ghost_elem_var_rank_scalar, test.mesh_hex_ghost_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno">  525</span>                <span class="comment">//N-FACED Elements use the same elemental vars for now as hex elements</span></div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span>                <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(CONVEX_POLYHEDRON_GHOST, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[2]._id, test.mesh_hex_ghost_elem_var_rank_scalar, test.mesh_hex_ghost_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span>            }</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span> </div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>            <span class="keywordflow">if</span> (send_pnt_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(PNT, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[1]._id, test.mesh_point_elem_var_rank_scalar, test.mesh_point_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span> </div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>            <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958">dvs_var_type::VECTOR</a>, test.vars[3]._id, test.parts[0]._id, test.mesh_hex_elem_var_vector, test.mesh_hex_elem_var_vector_size);</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span>            <span class="keywordflow">if</span> (test.mesh_hex_ghost_elem_var_vector_size &gt; 0)</div>
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno">  533</span>            {</div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno">  534</span>                <span class="keywordflow">if</span> (send_nfaced_elems) client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(HEXAHEDRON_GHOST, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958">dvs_var_type::VECTOR</a>, test.vars[3]._id, test.parts[0]._id, test.mesh_hex_ghost_elem_var_vector, test.mesh_hex_ghost_elem_var_vector_size);</div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>            }</div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span> </div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>            <span class="keywordflow">if</span> (send_tri_quad_elems)</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>            {</div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(QUADRANGLE, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[3]._id, test.mesh_quad_elem_var_scalar, test.mesh_quad_elem_var_scalar_size);</div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(QUADRANGLE, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[3]._id, test.mesh_quad_elem_var_rank_scalar, test.mesh_quad_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(TRIANGLE, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[2]._id, test.parts[3]._id, test.mesh_tri_elem_var_scalar, test.mesh_tri_elem_var_scalar_size);</div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">update_var_element</a>(TRIANGLE, <a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[5]._id, test.parts[3]._id, test.mesh_tri_elem_var_rank_scalar, test.mesh_tri_elem_var_rank_scalar_size);</div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>            }</div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span> </div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[0]._id, test.parts[0]._id, test.mesh_node_var_scalar, test.mesh_node_var_scalar_size);</div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958">dvs_var_type::VECTOR</a>, test.vars[1]._id, test.parts[0]._id, test.mesh_node_var_vector, test.mesh_node_var_vector_size);</div>
<div class="line"><a id="l00547" name="l00547"></a><span class="lineno">  547</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[0]._id, test.parts[2]._id, test.mesh_node_var_scalar, test.mesh_node_var_scalar_size);</div>
<div class="line"><a id="l00548" name="l00548"></a><span class="lineno">  548</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958">dvs_var_type::VECTOR</a>, test.vars[1]._id, test.parts[2]._id, test.mesh_node_var_vector, test.mesh_node_var_vector_size);</div>
<div class="line"><a id="l00549" name="l00549"></a><span class="lineno">  549</span> </div>
<div class="line"><a id="l00550" name="l00550"></a><span class="lineno">  550</span>            <span class="keywordflow">if</span> (send_structured_parts)</div>
<div class="line"><a id="l00551" name="l00551"></a><span class="lineno">  551</span>            {</div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[0]._id, test.parts[5]._id, test.structured_nodal_scalar, test.structured_nodal_scalar_size);</div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span>                client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">update_var_node</a>(<a class="code hl_enumvalue" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">dvs_var_type::SCALAR</a>, test.vars[0]._id, test.parts[6]._id, test.structured_nodal_scalar, test.structured_nodal_scalar_size);</div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>            }</div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>        }</div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span> </div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span>        <span class="keywordflow">if</span> (send_plots &amp;&amp; current_rank == plot_rank)</div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span>        {</div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#afcf7811f22d58bd328bed415116a4c41">update_plot</a>(test.plots[0]._id, test.plot_x_values[0], test.plot_y_values[0], test.plot_num_values);</div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#afcf7811f22d58bd328bed415116a4c41">update_plot</a>(test.plots[1]._id, test.plot_x_values[1], test.plot_y_values[1], test.plot_num_values);</div>
<div class="line"><a id="l00561" name="l00561"></a><span class="lineno">  561</span>            client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#afcf7811f22d58bd328bed415116a4c41">update_plot</a>(test.plots[2]._id, test.plot_x_values[2], test.plot_y_values[2], test.plot_num_values);</div>
<div class="line"><a id="l00562" name="l00562"></a><span class="lineno">  562</span>        }</div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno">  563</span>        client-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_client.xhtml#a6396cc4ae967ad5f0da8e234429a97cd">end_update</a>();</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span> </div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span>        test_dynamic_data_free(&amp;test);</div>
<div class="line"><a id="l00566" name="l00566"></a><span class="lineno">  566</span>    }</div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span>    DVS::DESTROY_CLIENT_INSTANCE(client);</div>
<div class="line"><a id="l00568" name="l00568"></a><span class="lineno">  568</span> </div>
<div class="line"><a id="l00569" name="l00569"></a><span class="lineno">  569</span>    <span class="keywordflow">if</span> (start_server)</div>
<div class="line"><a id="l00570" name="l00570"></a><span class="lineno">  570</span>    {</div>
<div class="line"><a id="l00571" name="l00571"></a><span class="lineno">  571</span>        <span class="comment">//If we started our own server wait for the pending timesteps to clear before tearing everything down</span></div>
<div class="line"><a id="l00572" name="l00572"></a><span class="lineno">  572</span>        <span class="comment">//in case it was writing stuff. </span></div>
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno">  573</span> </div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>        <span class="comment">//Not waiting isn&#39;t a problem but if we had another process connecting to this</span></div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span>        <span class="comment">//process&#39; server and sending data we might lose the last timestep since it won&#39;t be </span></div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span>        <span class="comment">//fully complete and we would not have written it yet.</span></div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno">  577</span>        uint32_t num_pending = 1;</div>
<div class="line"><a id="l00578" name="l00578"></a><span class="lineno">  578</span>        uint32_t num_complete = 0;</div>
<div class="line"><a id="l00579" name="l00579"></a><span class="lineno">  579</span>        <span class="keywordflow">while</span> (num_pending &gt; 0) {</div>
<div class="line"><a id="l00580" name="l00580"></a><span class="lineno">  580</span>            <a class="code hl_typedef" href="dynamic__visualization__store__error__codes_8h.xhtml#a1d7466ae72e89fe36cbf2408b4f7d9c1">dvs_ret</a> error = server-&gt;<a class="code hl_function" href="class_d_v_s_1_1_i_server.xhtml#a8a5339f222bcd46b06c2fa9a474b2c37">get_timestep_count</a>(num_pending, num_complete);</div>
<div class="line"><a id="l00581" name="l00581"></a><span class="lineno">  581</span>            <span class="keywordflow">if</span> (error != <a class="code hl_define" href="dynamic__visualization__store__error__codes_8h.xhtml#a83b88ce16159d34fe5ce63e7024462a7">DVS_NONE</a>) <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00582" name="l00582"></a><span class="lineno">  582</span>            <span class="comment">// Avoid burning up a CPU waiting for the I/O to complete</span></div>
<div class="line"><a id="l00583" name="l00583"></a><span class="lineno">  583</span>            <span class="keyword">const</span> uint32_t temp_delay_ms = 50;</div>
<div class="line"><a id="l00584" name="l00584"></a><span class="lineno">  584</span><span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span>            Sleep(temp_delay_ms);</div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno">  586</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span>            usleep(temp_delay_ms * 1000);</div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span>        }</div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    }</div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>    DVS::DESTROY_SERVER_INSTANCE(server);</div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span> </div>
<div class="line"><a id="l00593" name="l00593"></a><span class="lineno">  593</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00594" name="l00594"></a><span class="lineno">  594</span>}</div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml">DVS::IClient</a></div><div class="ttdoc">API for solvers to use to send data to EnSight servers.</div><div class="ttdef"><b>Definition:</b> <a href="dvs__client__interface_8h_source.xhtml#l00080">dvs_client_interface.h:81</a></div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a024475b03496bc310e211632d153517d"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a024475b03496bc310e211632d153517d">DVS::IClient::set_logger</a></div><div class="ttdeci">virtual void set_logger(ILogger *logger)=0</div><div class="ttdoc">Set the logger interface to use.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a1588c437020e0ba5702ec48460a792a9"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a1588c437020e0ba5702ec48460a792a9">DVS::IClient::update_nodes_structured</a></div><div class="ttdeci">virtual dvs_ret update_nodes_structured(uint32_t part_id, const uint32_t global_ijk_max[3], const uint32_t local_ijk_min[3], const uint32_t local_ijk_max[3], const float origin[3], const float dir_i[3], const float dir_j[3], const float dir_k[3], const float *i_vals, const float *j_vals, const float *k_vals)=0</div><div class="ttdoc">Update the nodes for a parallelepiped structured part.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a1bdb7ca9cf25c63e533f47fe26132af6"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a1bdb7ca9cf25c63e533f47fe26132af6">DVS::IClient::add_plot_info</a></div><div class="ttdeci">virtual dvs_ret add_plot_info(const dvs_plot_info *plot_info, uint32_t num_plots)=0</div><div class="ttdoc">Add plot information for session.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a284f922fec402e03365c7873502d1fde"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a284f922fec402e03365c7873502d1fde">DVS::IClient::set_unit_system</a></div><div class="ttdeci">virtual dvs_ret set_unit_system(const char *system)=0</div><div class="ttdoc">Set the unit system we are using for this session (optional)</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a41aa2ad12fbfa456f3ec8e48530ea6f6"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a41aa2ad12fbfa456f3ec8e48530ea6f6">DVS::IClient::update_elements</a></div><div class="ttdeci">virtual dvs_ret update_elements(uint32_t part_id, dvs_element_type type, const uint32_t *indices, uint32_t num_indices)=0</div><div class="ttdoc">Update elements for a specific part and element type.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a5e8f192f5c683a8265dd94020506a0aa"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a5e8f192f5c683a8265dd94020506a0aa">DVS::IClient::delete_item</a></div><div class="ttdeci">virtual dvs_ret delete_item(uint32_t update_num, uint32_t rank, const char *filter)=0</div><div class="ttdoc">Delete an item.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a5e9ee6af237e76a6e270d99ec8cd4388"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388">DVS::IClient::add_part_info</a></div><div class="ttdeci">virtual dvs_ret add_part_info(const dvs_part_info *part_info, uint32_t num_parts)=0</div><div class="ttdoc">Add part information for session.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a6396cc4ae967ad5f0da8e234429a97cd"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a6396cc4ae967ad5f0da8e234429a97cd">DVS::IClient::end_update</a></div><div class="ttdeci">virtual dvs_ret end_update()=0</div><div class="ttdoc">Call to end the update for this timestep/rank/chunk.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a7a9ccf04ed8502d23913d8eef21607ec"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a7a9ccf04ed8502d23913d8eef21607ec">DVS::IClient::update_elements_polyhedral</a></div><div class="ttdeci">virtual dvs_ret update_elements_polyhedral(uint32_t part_id, dvs_element_type type, const uint32_t *faces_per_element, uint32_t faces_per_element_size, const uint32_t *nodes_per_face, uint32_t nodes_per_face_size, const uint32_t *indices, uint32_t indices_size)=0</div><div class="ttdoc">Update N-FACED Elements.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a82f841d7f6f33071bf8c709623ca215d"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d">DVS::IClient::add_var_info</a></div><div class="ttdeci">virtual dvs_ret add_var_info(const dvs_var_info *var_info, uint32_t num_vars)=0</div><div class="ttdoc">Add variable information for session.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a87ab36c2f16d093c0beaba60da2cd661"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a87ab36c2f16d093c0beaba60da2cd661">DVS::IClient::update_nodes</a></div><div class="ttdeci">virtual dvs_ret update_nodes(uint32_t part_id, const float *x, const float *y, const float *z, uint32_t num_values)=0</div><div class="ttdoc">Update nodes for a specific part.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_a8f2e7174f9e89ef5285043dd9357f9b0"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#a8f2e7174f9e89ef5285043dd9357f9b0">DVS::IClient::update_var_case</a></div><div class="ttdeci">virtual dvs_ret update_var_case(dvs_var_type var_type, uint32_t var_id, const float *values, uint32_t num_values)=0</div><div class="ttdoc">Update case variable.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_aa5d98105d78c61e4e0c4043e28174fe1"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#aa5d98105d78c61e4e0c4043e28174fe1">DVS::IClient::get_version</a></div><div class="ttdeci">virtual const char * get_version()=0</div><div class="ttdoc">Get the version of the client API.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_aaf1641a1afbf8bb6257940be28dd94b2"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#aaf1641a1afbf8bb6257940be28dd94b2">DVS::IClient::end_init</a></div><div class="ttdeci">virtual dvs_ret end_init()=0</div><div class="ttdoc">Finish initialization for this rank.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_ab18cc3827eda737ea73c31aa7fe6ef68"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#ab18cc3827eda737ea73c31aa7fe6ef68">DVS::IClient::update_var_part</a></div><div class="ttdeci">virtual dvs_ret update_var_part(dvs_var_type var_type, uint32_t var_id, uint32_t part_id, const float *values, uint32_t num_values)=0</div><div class="ttdoc">Update part vector variable.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_ab4144e59bfdcf9c095c6510c4298d160"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#ab4144e59bfdcf9c095c6510c4298d160">DVS::IClient::add_metadata</a></div><div class="ttdeci">virtual dvs_ret add_metadata(const char *const keys[], const char *const vals[], uint32_t num_metadata_pairs)=0</div><div class="ttdoc">Add metadata for the current dataset.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_abd1cbbd2007346ad616dc74eab9d0553"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#abd1cbbd2007346ad616dc74eab9d0553">DVS::IClient::begin_update</a></div><div class="ttdeci">virtual dvs_ret begin_update(uint32_t update_num, uint32_t rank, uint32_t chunk, float time)=0</div><div class="ttdoc">Method to begin an update.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_ac6b3990562f507eda4abedf53e021647"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#ac6b3990562f507eda4abedf53e021647">DVS::IClient::update_elements_polygon</a></div><div class="ttdeci">virtual dvs_ret update_elements_polygon(uint32_t part_id, dvs_element_type type, const uint32_t *nodes_per_polygon, uint32_t nodes_per_polygon_size, const uint32_t *indices, uint32_t indices_size)=0</div><div class="ttdoc">Update N-SIDED elements.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_ae67a2884dd8f68f4757d8d7fac3828d3"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#ae67a2884dd8f68f4757d8d7fac3828d3">DVS::IClient::update_var_node</a></div><div class="ttdeci">virtual dvs_ret update_var_node(dvs_var_type var_type, uint32_t var_id, uint32_t part_id, const float *values, uint32_t num_values)=0</div><div class="ttdoc">Update nodal variable values.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_aec8ed14b290237049976f68cb81b200f"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#aec8ed14b290237049976f68cb81b200f">DVS::IClient::update_var_element</a></div><div class="ttdeci">virtual dvs_ret update_var_element(dvs_element_type elem_type, dvs_var_type var_type, uint32_t var_id, uint32_t part_id, const float *values, uint32_t num_values)=0</div><div class="ttdoc">Update elemental scalar variable values.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_afcf7811f22d58bd328bed415116a4c41"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#afcf7811f22d58bd328bed415116a4c41">DVS::IClient::update_plot</a></div><div class="ttdeci">virtual dvs_ret update_plot(uint32_t plot_id, const float *x_values, const float *y_values, uint32_t num_values)=0</div><div class="ttdoc">Update plot data for plot.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_client_xhtml_aff782ecd341fddd87a22a15107efeb3b"><div class="ttname"><a href="class_d_v_s_1_1_i_client.xhtml#aff782ecd341fddd87a22a15107efeb3b">DVS::IClient::begin_init</a></div><div class="ttdeci">virtual dvs_ret begin_init(const char *dataset_name, uint32_t current_rank, uint32_t total_ranks, uint32_t num_chunks)=0</div><div class="ttdoc">Begins initialization for this rank.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_server_xhtml"><div class="ttname"><a href="class_d_v_s_1_1_i_server.xhtml">DVS::IServer</a></div><div class="ttdoc">Interface class used to run a dynamic data server in a thread accepting incoming client connections.</div><div class="ttdef"><b>Definition:</b> <a href="dvs__server__interface_8h_source.xhtml#l00056">dvs_server_interface.h:57</a></div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_server_xhtml_a087c3fed77651e0f62d7189f44a32443"><div class="ttname"><a href="class_d_v_s_1_1_i_server.xhtml#a087c3fed77651e0f62d7189f44a32443">DVS::IServer::get_uri</a></div><div class="ttdeci">virtual const char * get_uri()=0</div><div class="ttdoc">Get URI of this server.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_server_xhtml_a1edb4dec67086f10bc0329b6adf9084c"><div class="ttname"><a href="class_d_v_s_1_1_i_server.xhtml#a1edb4dec67086f10bc0329b6adf9084c">DVS::IServer::set_option</a></div><div class="ttdeci">virtual void set_option(const char *key, const char *value)=0</div><div class="ttdoc">Set a specific option on the server, these are used during startup See See Server Options.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_server_xhtml_a6699cf48b29583ab3391b9b8397e611c"><div class="ttname"><a href="class_d_v_s_1_1_i_server.xhtml#a6699cf48b29583ab3391b9b8397e611c">DVS::IServer::startup</a></div><div class="ttdeci">virtual dvs_ret startup(uint32_t server_number, uint32_t local_ranks)=0</div><div class="ttdoc">Start the server.</div></div>
<div class="ttc" id="aclass_d_v_s_1_1_i_server_xhtml_a8a5339f222bcd46b06c2fa9a474b2c37"><div class="ttname"><a href="class_d_v_s_1_1_i_server.xhtml#a8a5339f222bcd46b06c2fa9a474b2c37">DVS::IServer::get_timestep_count</a></div><div class="ttdeci">virtual dvs_ret get_timestep_count(uint32_t &amp;num_pending, uint32_t &amp;num_complete) const =0</div><div class="ttdoc">return the current number of pending and complete timesteps in the server</div></div>
<div class="ttc" id="advs__client__interface_8h_xhtml"><div class="ttname"><a href="dvs__client__interface_8h.xhtml">dvs_client_interface.h</a></div><div class="ttdoc">C++ Client API for using the Dynamic Visualization Store.</div></div>
<div class="ttc" id="advs__server__interface_8h_xhtml"><div class="ttname"><a href="dvs__server__interface_8h.xhtml">dvs_server_interface.h</a></div><div class="ttdoc">C++ Server API for using Dynamic Visualization Store Server.</div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml">dynamic_visualization_store_enums.h</a></div><div class="ttdoc">Contains enums used in C/C++ API.</div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_a9bca12092877a90e6c497994093a8609"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609">dvs_log_flags</a></div><div class="ttdeci">dvs_log_flags</div><div class="ttdoc">Flags to control logging filters.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00066">dynamic_visualization_store_enums.h:67</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_a9bca12092877a90e6c497994093a8609a1a3a1b2a98f96b6de074cd9ae93805bb"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609a1a3a1b2a98f96b6de074cd9ae93805bb">LOG_UPDATE_BEG_END</a></div><div class="ttdeci">@ LOG_UPDATE_BEG_END</div><div class="ttdoc">Log messages related to begin and end of updates.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00071">dynamic_visualization_store_enums.h:71</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_a9bca12092877a90e6c497994093a8609a87cff070224b283d7aace436723245fc"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#a9bca12092877a90e6c497994093a8609a87cff070224b283d7aace436723245fc">LOG_ALL</a></div><div class="ttdeci">@ LOG_ALL</div><div class="ttdoc">Log all messages.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00073">dynamic_visualization_store_enums.h:72</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_aec8cbac60b9cafe5d1c0ad6593f05e9f"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9f">dvs_client_flags</a></div><div class="ttdeci">dvs_client_flags</div><div class="ttdoc">Flags for specific server setup.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00054">dynamic_visualization_store_enums.h:55</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_aec8cbac60b9cafe5d1c0ad6593f05e9fa81b113ffc96eb6d968a19950727c0ff9"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa81b113ffc96eb6d968a19950727c0ff9">DEDUP</a></div><div class="ttdeci">@ DEDUP</div><div class="ttdoc">Do not send duplicate data to server.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00058">dynamic_visualization_store_enums.h:58</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_aec8cbac60b9cafe5d1c0ad6593f05e9fa9feb185df8061416aa9a23b0150dc821"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#aec8cbac60b9cafe5d1c0ad6593f05e9fa9feb185df8061416aa9a23b0150dc821">BLOCK_FOR_SERVER</a></div><div class="ttdeci">@ BLOCK_FOR_SERVER</div><div class="ttdoc">Clients should block for servers to be initialized before sending data.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00057">dynamic_visualization_store_enums.h:57</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a1a85ef13eaa80e8561743892f9dba958">VECTOR</a></div><div class="ttdeci">@ VECTOR</div><div class="ttdoc">XYZ Coordinates.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00032">dynamic_visualization_store_enums.h:32</a></div></div>
<div class="ttc" id="adynamic__visualization__store__enums_8h_xhtml_af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68"><div class="ttname"><a href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0a7efbb6cac96595e63e8fa171bde1eb68">SCALAR</a></div><div class="ttdeci">@ SCALAR</div><div class="ttdoc">Scalar.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__enums_8h_source.xhtml#l00031">dynamic_visualization_store_enums.h:31</a></div></div>
<div class="ttc" id="adynamic__visualization__store__error__codes_8h_xhtml_a1d7466ae72e89fe36cbf2408b4f7d9c1"><div class="ttname"><a href="dynamic__visualization__store__error__codes_8h.xhtml#a1d7466ae72e89fe36cbf2408b4f7d9c1">dvs_ret</a></div><div class="ttdeci">int32_t dvs_ret</div><div class="ttdoc">Return value of methods, TODO.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__error__codes_8h_source.xhtml#l00032">dynamic_visualization_store_error_codes.h:32</a></div></div>
<div class="ttc" id="adynamic__visualization__store__error__codes_8h_xhtml_a83b88ce16159d34fe5ce63e7024462a7"><div class="ttname"><a href="dynamic__visualization__store__error__codes_8h.xhtml#a83b88ce16159d34fe5ce63e7024462a7">DVS_NONE</a></div><div class="ttdeci">#define DVS_NONE</div><div class="ttdoc">No detected error has occurred.</div><div class="ttdef"><b>Definition:</b> <a href="dynamic__visualization__store__error__codes_8h_source.xhtml#l00099">dynamic_visualization_store_error_codes.h:99</a></div></div>
<div class="ttc" id="atest__dvs__client__cxx_8cpp_xhtml_a3c04138a5bfe5d72780bb7e82a18e627"><div class="ttname"><a href="test__dvs__client__cxx_8cpp.xhtml#a3c04138a5bfe5d72780bb7e82a18e627">main</a></div><div class="ttdeci">int main(int argc, char **argv)</div><div class="ttdoc">Main method of test client application.</div><div class="ttdef"><b>Definition:</b> <a href="test__dvs__client__cxx_8cpp_source.xhtml#l00056">test_dvs_client_cxx.cpp:56</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
