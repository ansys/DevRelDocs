<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: ANSYS::Nexus::GLTFWriter::Parameter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_a_n_s_y_s.xhtml">ANSYS</a></li><li class="navelem"><b>Nexus</b></li><li class="navelem"><b>GLTFWriter</b></li><li class="navelem"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ANSYS::Nexus::GLTFWriter::Parameter Class Reference<div class="ingroups"><a class="el" href="group__gltf.xhtml">GLTFWriter Interface</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_g_l_t_f_writer_8h_source.xhtml">GLTFWriter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ANSYS::Nexus::GLTFWriter::Parameter:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a93b92cf730f9530cef13458f0b12572c"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ParameterType</a> { <br />
&#160;&#160;<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca2d1bb71b03b6441e9908b149d6dd1fb3">PT_INT</a> = 5124
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca19c98b6589cd105e66bd34418a401781">PT_FLOAT</a> = 5126
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572caf1f10a2c8fd2982bf1826370bb7a0f4b">PT_FLOAT_VEC2</a> = 35664
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca9e032d6885dc8956db47d4de23a046ce">PT_FLOAT_VEC3</a> = 35665
, <br />
&#160;&#160;<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca2ee53691b02a2647b586f8325184aee9">PT_FLOAT_VEC4</a> = 35666
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572caada3187a9c39033ca76fd91257c1843d">PT_INT_VEC2</a> = 35667
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca1f6e42c4388d7749ab49fefeaed8cc1d">PT_INT_VEC3</a> = 35668
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572caf01904fd050d19781c08eb65e0a0c89d">PT_INT_VEC4</a> = 35669
, <br />
&#160;&#160;<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572cabb63552893274e73c04b7caf7c168cbb">PT_BOOL</a> = 35670
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca079041140bb22dd4fe83de8e06557661">PT_FLOAT_MAT3</a> = 35675
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572ca3ee4f3ed5774f20008423350a5baa74a">PT_FLOAT_MAT4</a> = 35676
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572caae7eac8db24a1df5567994ab2062d468">PT_SAMPLER_2D</a> = 35678
<br />
 }</td></tr>
<tr class="separator:a93b92cf730f9530cef13458f0b12572c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:af910e4f7a293f6ad116435996ea10b8c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#af910e4f7a293f6ad116435996ea10b8c">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName, const char *externalName, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ParameterType</a> type, const <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *defaultValue=0)</td></tr>
<tr class="separator:af910e4f7a293f6ad116435996ea10b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec6eb14537787ab00a7279d148761ae"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a6ec6eb14537787ab00a7279d148761ae">CreateModelViewMatrix</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:a6ec6eb14537787ab00a7279d148761ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7e19f42eba3e0df0226f41992b8aeba"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#af7e19f42eba3e0df0226f41992b8aeba">CreateModelMatrix</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:af7e19f42eba3e0df0226f41992b8aeba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4887dd4bd648faf5da812e53eb675625"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a4887dd4bd648faf5da812e53eb675625">CreateViewMatrix</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:a4887dd4bd648faf5da812e53eb675625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4bc368d72a3f8575348ff19660dc44f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#ab4bc368d72a3f8575348ff19660dc44f">CreateProjectionMatrix</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:ab4bc368d72a3f8575348ff19660dc44f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4e907f6015a27d504eeedd7bba909d5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#af4e907f6015a27d504eeedd7bba909d5">CreateNormalMatrix</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:af4e907f6015a27d504eeedd7bba909d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a505e89649ef3d083b52c7b13ea6889c1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a505e89649ef3d083b52c7b13ea6889c1">CreateViewport</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:a505e89649ef3d083b52c7b13ea6889c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7868057b3b6137c0477bd6fbbb0fbd67"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a7868057b3b6137c0477bd6fbbb0fbd67">CreateTexture</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName, unsigned int num)</td></tr>
<tr class="separator:a7868057b3b6137c0477bd6fbbb0fbd67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c7eb4aec32bdb3ca79d2eeb89904dce"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a9c7eb4aec32bdb3ca79d2eeb89904dce">CreatePosition</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:a9c7eb4aec32bdb3ca79d2eeb89904dce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a6325f1fbf7c4af67900676cd5cbb20"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a9a6325f1fbf7c4af67900676cd5cbb20">CreateColor</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ParameterType</a> type)</td></tr>
<tr class="separator:a9a6325f1fbf7c4af67900676cd5cbb20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c171f7cda94f6266a8dc45753babda"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#aa4c171f7cda94f6266a8dc45753babda">CreatePointSize</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:aa4c171f7cda94f6266a8dc45753babda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3834e9d02b9466d46c1ba66786a700ea"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a3834e9d02b9466d46c1ba66786a700ea">CreateDisplacementScale</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:a3834e9d02b9466d46c1ba66786a700ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9539f4e642671bc97c39eb58f518a8c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#ab9539f4e642671bc97c39eb58f518a8c">CreateNormal</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName)</td></tr>
<tr class="separator:ab9539f4e642671bc97c39eb58f518a8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4bca02bd752b9f5cfa7384b0cdb1e52"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#ab4bca02bd752b9f5cfa7384b0cdb1e52">CreateTexCoord</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *shaderName, unsigned int num)</td></tr>
<tr class="separator:ab4bca02bd752b9f5cfa7384b0cdb1e52"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Parameters are part of techniques. Every attribute or uniform defined in the technique program must have a corresponding parameter. </p>

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_technique_8h_source.xhtml#l00028">28</a> of file <a class="el" href="_g_l_t_f_technique_8h_source.xhtml">GLTFTechnique.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a93b92cf730f9530cef13458f0b12572c" name="a93b92cf730f9530cef13458f0b12572c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93b92cf730f9530cef13458f0b12572c">&#9670;&#160;</a></span>ParameterType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ANSYS::Nexus::GLTFWriter::Parameter::ParameterType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Type of parameter </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca2d1bb71b03b6441e9908b149d6dd1fb3" name="a93b92cf730f9530cef13458f0b12572ca2d1bb71b03b6441e9908b149d6dd1fb3"></a>PT_INT&#160;</td><td class="fielddoc"><p>4 byte integer </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca19c98b6589cd105e66bd34418a401781" name="a93b92cf730f9530cef13458f0b12572ca19c98b6589cd105e66bd34418a401781"></a>PT_FLOAT&#160;</td><td class="fielddoc"><p>4 byte float </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572caf1f10a2c8fd2982bf1826370bb7a0f4b" name="a93b92cf730f9530cef13458f0b12572caf1f10a2c8fd2982bf1826370bb7a0f4b"></a>PT_FLOAT_VEC2&#160;</td><td class="fielddoc"><p>2 PT_FLOAT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca9e032d6885dc8956db47d4de23a046ce" name="a93b92cf730f9530cef13458f0b12572ca9e032d6885dc8956db47d4de23a046ce"></a>PT_FLOAT_VEC3&#160;</td><td class="fielddoc"><p>3 PT_FLOAT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca2ee53691b02a2647b586f8325184aee9" name="a93b92cf730f9530cef13458f0b12572ca2ee53691b02a2647b586f8325184aee9"></a>PT_FLOAT_VEC4&#160;</td><td class="fielddoc"><p>4 PT_FLOAT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572caada3187a9c39033ca76fd91257c1843d" name="a93b92cf730f9530cef13458f0b12572caada3187a9c39033ca76fd91257c1843d"></a>PT_INT_VEC2&#160;</td><td class="fielddoc"><p>2 PT_INT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca1f6e42c4388d7749ab49fefeaed8cc1d" name="a93b92cf730f9530cef13458f0b12572ca1f6e42c4388d7749ab49fefeaed8cc1d"></a>PT_INT_VEC3&#160;</td><td class="fielddoc"><p>3 PT_INT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572caf01904fd050d19781c08eb65e0a0c89d" name="a93b92cf730f9530cef13458f0b12572caf01904fd050d19781c08eb65e0a0c89d"></a>PT_INT_VEC4&#160;</td><td class="fielddoc"><p>4 PT_INT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572cabb63552893274e73c04b7caf7c168cbb" name="a93b92cf730f9530cef13458f0b12572cabb63552893274e73c04b7caf7c168cbb"></a>PT_BOOL&#160;</td><td class="fielddoc"><p>1 byte bool </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca079041140bb22dd4fe83de8e06557661" name="a93b92cf730f9530cef13458f0b12572ca079041140bb22dd4fe83de8e06557661"></a>PT_FLOAT_MAT3&#160;</td><td class="fielddoc"><p>3x3 (9) AT_FLOAT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572ca3ee4f3ed5774f20008423350a5baa74a" name="a93b92cf730f9530cef13458f0b12572ca3ee4f3ed5774f20008423350a5baa74a"></a>PT_FLOAT_MAT4&#160;</td><td class="fielddoc"><p>4x4 (16) PT_FLOAT's </p>
</td></tr>
<tr><td class="fieldname"><a id="a93b92cf730f9530cef13458f0b12572caae7eac8db24a1df5567994ab2062d468" name="a93b92cf730f9530cef13458f0b12572caae7eac8db24a1df5567994ab2062d468"></a>PT_SAMPLER_2D&#160;</td><td class="fielddoc"><p>2D <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_texture.xhtml" title="Textures are images that can be used to color a primitive.">Texture</a> </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_technique_8h_source.xhtml#l00032">32</a> of file <a class="el" href="_g_l_t_f_technique_8h_source.xhtml">GLTFTechnique.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abc4d125c1bf4d829d86dabec43371d42" name="abc4d125c1bf4d829d86dabec43371d42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc4d125c1bf4d829d86dabec43371d42">&#9670;&#160;</a></span>~Parameter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ANSYS::Nexus::GLTFWriter::Parameter::~Parameter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_technique_8h_source.xhtml#l00058">58</a> of file <a class="el" href="_g_l_t_f_technique_8h_source.xhtml">GLTFTechnique.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af910e4f7a293f6ad116435996ea10b8c" name="af910e4f7a293f6ad116435996ea10b8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af910e4f7a293f6ad116435996ea10b8c">&#9670;&#160;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>externalName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ParameterType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td>
          <td class="paramname"><em>defaultValue</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get shader shaderName uniform or attribute value. This can be used for creating non-specific parameters. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">externalName</td><td>Name of object from where to get value. The name can be from:<ul>
<li>built-in value such as "MODELVIEW", "PROJECTION", or "MODELVIEWINVERSETRANSPOSE"</li>
<li>material value name</li>
<li>attribute name</li>
</ul>
</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">Parameter::ParameterType</a> defining type of parameter.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">defaultValue</td><td>Optional, default <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> for parameter. Can be overridden by value in material. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9a6325f1fbf7c4af67900676cd5cbb20" name="a9a6325f1fbf7c4af67900676cd5cbb20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a6325f1fbf7c4af67900676cd5cbb20">&#9670;&#160;</a></span>CreateColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateColor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">ParameterType</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader color attribute value. The externalName is "COLOR" and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">type</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml#a93b92cf730f9530cef13458f0b12572c">Parameter::ParameterType</a> defining type of parameter. Possible values are:<ul>
<li>PT_FLOAT</li>
<li>PT_FLOAT_VEC2</li>
<li>PT_FLOAT_VEC3</li>
<li>PT_FLOAT_VEC4 </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3834e9d02b9466d46c1ba66786a700ea" name="a3834e9d02b9466d46c1ba66786a700ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3834e9d02b9466d46c1ba66786a700ea">&#9670;&#160;</a></span>CreateDisplacementScale()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateDisplacementScale </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader DisplacementScale attribute value. The externalName is "DISPLACEMENTSCALE" and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af7e19f42eba3e0df0226f41992b8aeba" name="af7e19f42eba3e0df0226f41992b8aeba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7e19f42eba3e0df0226f41992b8aeba">&#9670;&#160;</a></span>CreateModelMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateModelMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the model matrix. The externalName is "MODEL". The model matrix is the model/object part of the modelview matrix. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6ec6eb14537787ab00a7279d148761ae" name="a6ec6eb14537787ab00a7279d148761ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ec6eb14537787ab00a7279d148761ae">&#9670;&#160;</a></span>CreateModelViewMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateModelViewMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the modelview matrix. The externalName is "MODELVIEW". </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab9539f4e642671bc97c39eb58f518a8c" name="ab9539f4e642671bc97c39eb58f518a8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9539f4e642671bc97c39eb58f518a8c">&#9670;&#160;</a></span>CreateNormal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateNormal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader normal attribute value. The externalName is "NORMAL" and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af4e907f6015a27d504eeedd7bba909d5" name="af4e907f6015a27d504eeedd7bba909d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4e907f6015a27d504eeedd7bba909d5">&#9670;&#160;</a></span>CreateNormalMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateNormalMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the normal matrix. The normal matrix is the inverse transpose of the modelview matrix. The externalName is "MODELVIEWINVERSETRANSPOSE". </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4c171f7cda94f6266a8dc45753babda" name="aa4c171f7cda94f6266a8dc45753babda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c171f7cda94f6266a8dc45753babda">&#9670;&#160;</a></span>CreatePointSize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreatePointSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader pointSize attribute value. The externalName is "POINTSIZE" and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9c7eb4aec32bdb3ca79d2eeb89904dce" name="a9c7eb4aec32bdb3ca79d2eeb89904dce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c7eb4aec32bdb3ca79d2eeb89904dce">&#9670;&#160;</a></span>CreatePosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreatePosition </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader position attribute value. The externalName is "POSITION" and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab4bc368d72a3f8575348ff19660dc44f" name="ab4bc368d72a3f8575348ff19660dc44f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4bc368d72a3f8575348ff19660dc44f">&#9670;&#160;</a></span>CreateProjectionMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateProjectionMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the projection matrix. The externalName is "PROJECTION". </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab4bca02bd752b9f5cfa7384b0cdb1e52" name="ab4bca02bd752b9f5cfa7384b0cdb1e52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4bca02bd752b9f5cfa7384b0cdb1e52">&#9670;&#160;</a></span>CreateTexCoord()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateTexCoord </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader texture coordinate num attribute value. The externalName is "TEXCOORD???" where "???" is num and must match that of an attribute in the primitive. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_texture.xhtml" title="Textures are images that can be used to color a primitive.">Texture</a> number, starting at 0. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7868057b3b6137c0477bd6fbbb0fbd67" name="a7868057b3b6137c0477bd6fbbb0fbd67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7868057b3b6137c0477bd6fbbb0fbd67">&#9670;&#160;</a></span>CreateTexture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateTexture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for defining how to get a value for the shader texture num uniform value. The externalName is "texture???" where "???" is num and must match that of a material value. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_texture.xhtml" title="Textures are images that can be used to color a primitive.">Texture</a> number, starting at 0. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4887dd4bd648faf5da812e53eb675625" name="a4887dd4bd648faf5da812e53eb675625"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4887dd4bd648faf5da812e53eb675625">&#9670;&#160;</a></span>CreateViewMatrix()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateViewMatrix </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the view matrix. The externalName is "VIEW". The view matrix is the view/camera part of the modelview matrix. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a505e89649ef3d083b52c7b13ea6889c1" name="a505e89649ef3d083b52c7b13ea6889c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a505e89649ef3d083b52c7b13ea6889c1">&#9670;&#160;</a></span>CreateViewport()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml">Parameter</a> * ANSYS::Nexus::GLTFWriter::Parameter::CreateViewport </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>shaderName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a parameter for utilizing the viewport. The viewport is a vec4 parameter, with parameters being x,y,w,h. The externalName is "VIEWPORT". </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_parameter.xhtml" title="Parameters describe how and from where program attributes and uniforms are derived.">Parameter</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shaderName</td><td>Name of parameter as defined in shader. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/Product-src/webgl_viewer/gltfwriterlib/include/<a class="el" href="_g_l_t_f_technique_8h_source.xhtml">GLTFTechnique.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
