<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: DVS Filtering</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li class="current"><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DVS Filtering<div class="ingroups"><a class="el" href="group__dvs__main.xhtml">Dynamic Visualization Store</a></div></div></div>
</div><!--header-->
<div class="contents">
<p>Data selection of the current view of data is done via a chained set of filters (<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_stanzas">Query Stanzas</a>). These filters make it possible to dynamically down select to a subset of data in the cache. This can be used to filter data within a single cache and in the future form multiple DVS data sources at the same time. This will enable the creation of ensemble views of multiple disparate DVS data sources, allowing users to combine design points or even data from different domains (i.e. mechanical and fluids) into one overall view to iterate over. Allowing more powerful and interesting postprocessing of the data for comparison.</p>
<p>These filters are used in the <a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_stanzas">Query Stanzas</a> section of the <a class="el" href="group__group__dvs__uri.xhtml#dvs_cache_uri">Cache URIs</a> and also in the DVS Reader API <a class="el" href="class_d_v_s_1_1_i_query.xhtml" title="The query interface for the DVS Reader API.">DVS::IQuery</a>.</p>
<p>In <a class="el" href="group__group__dvs__uri.xhtml#dvs_cache_uri">Cache URIs</a> the filters are specified by adding a query option to the <a class="el" href="group__group__dvs__uri.xhtml#dvs_cache_uri_options">Cache URI Options</a> section of the <a class="el" href="group__group__dvs__uri.xhtml#dvs_cache_uri">Cache URIs</a>.</p>
<p>The specifics of these filters are in the sections below.</p>
<hr  />
 <h3>Table of Contents</h3>
<ul>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_stanzas">Query Stanzas</a><ul>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_top_level_operator">Top Level Operator</a></li>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a></li>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a></li>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a></li>
</ul>
</li>
<li><a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_examples">Misc Query Examples</a></li>
</ul>
<hr  />
<hr  />
 <h2><a class="anchor" id="dvs_query_stanzas"></a>
Query Stanzas</h2>
<p>A query in DVS is specified by a number of query stanzas chained together to select a specific set of data entries from a larger set. These stanzas in general are usually AND'd together. The overall structure is in the table below. An individual query stanza has multiple sections separate by a single '/' character and ended with 2 '//' characters. For Examples see <a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_examples">Misc Query Examples</a>.</p>
<p><b>Only objects mentioned in the query will be filtered, so if there isn't a query stanza related to plots all of them will be loaded for the datasets.</b></p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Stanza Format   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_top_level_operator">Top Level Operator</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a>}   </td><td class="markdownTableBodyNone">The format of a single query stanza    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_top_level_operator">Top Level Operator</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a>}//{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_top_level_operator">Top Level Operator</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a>}   </td><td class="markdownTableBodyNone">Example of multiple stanzas    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_top_level_operator">Top Level Operator</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a>}/{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a>}|{<a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operands">Operands</a>}   </td><td class="markdownTableBodyNone">Multiple operands   </td></tr>
</table>
<p><b>Using a top level OR currently can cause unintented consequences as it will "overwrite" previous stanzas.</b></p>
<p>For example if you have 3 stanzas that have the meaning: </p><blockquote class="doxtable">
<p>&zwj;"Select Dataset 1" AND "Select Parts with name Inlet*" OR "Select Dataset 2" </p>
</blockquote>
<p>This will cause everything from Dataset 2 to be loaded regardless of the name. In the future the meaning or OR will be to split the Query up into parts. So that if you had stanzas with the meaning: </p><blockquote class="doxtable">
<p>&zwj;"Select Dataset 1" AND "Select Parts with name Inlet*" OR "Select Dataset 2" AND "Select Parts with name Wall*" </p>
</blockquote>
<p>The or would split the statements to be wrapped with "()" so it would effectively be: </p><blockquote class="doxtable">
<p>&zwj;("Select Dataset 1" AND "Select Parts with name Inlet*") OR ("Select Dataset 2" AND "Select Parts with name Wall*"). </p>
</blockquote>
<p>This should hopefully make the intents clearer for future iterations.</p>
<h3><a class="anchor" id="dvs_query_top_level_operator"></a>
Top Level Operator</h3>
<p>The first part of a query stanza is an operator which is used to chain it with the previous stanza. The overall operator portion of the <b>first</b> stanza is ignored and optional but must have a '/' separator before the <a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_objects">Objects/Attributes</a> section.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Top Level Operator   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">and   </td><td class="markdownTableBodyNone">AND this stanza with the previous stanza    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">or   </td><td class="markdownTableBodyNone">OR this stanza with the previous stanza, (use '|' to OR multiple operand names together within the same stanza, see examples below)   </td></tr>
</table>
<p><br  />
 </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Example (Top Level Operator)   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset1//and/var.name/eq/my_var   </td><td class="markdownTableBodyNone">Load all entries from Dataset1 and only vars named my_var    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset1//or/dataset.name/eq/Dataset2   </td><td class="markdownTableBodyNone">Load all entries from Dataset1 or Dataset2   </td></tr>
</table>
<h3><a class="anchor" id="dvs_query_objects"></a>
Objects/Attributes</h3>
<p>The object and attribute section is simply defined by object.attribute. This specifies which object and attributes on that object to apply the query to. Currently the only specifically named attribute is name. All other attributes are generically applied to the metadata attached to the object. So dataset.my_tag will only match with datasets which have the my_tag metadata attribute. These attributes are case sensitive. Some objects, such as timestep/rank/chunk are global across every cache entry and do not have specific attributes currently.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Object   </th><th class="markdownTableHeadNone">Specific Attributes    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">dataset   </td><td class="markdownTableBodyNone">name    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">part   </td><td class="markdownTableBodyNone">name    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">plot   </td><td class="markdownTableBodyNone">name    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">var   </td><td class="markdownTableBodyNone">name    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">timestep   </td><td class="markdownTableBodyNone">N/A    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">rank   </td><td class="markdownTableBodyNone">N/A    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">chunk   </td><td class="markdownTableBodyNone">N/A   </td></tr>
</table>
<p><b>Attributes in this section which have a space should use '+' to replace spaces. Reserved characters in names should be escaped with % hex values, below is a list of reserved characters.</b></p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Reserved Characters   </th><th class="markdownTableHeadNone">Escape Sequence    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">+   </td><td class="markdownTableBodyNone">%2B    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">|   </td><td class="markdownTableBodyNone">%7C    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">/   </td><td class="markdownTableBodyNone">%2F   </td></tr>
</table>
<p><br  />
 </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Example (Object Attributes)   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset1//and/part.name/eq/Fan+1   </td><td class="markdownTableBodyNone">Select all entries from dataset "Dataset1" and only parts named "Fan 1"    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset1//and/part.my%7Cattribute/eq/Fan+1%2B   </td><td class="markdownTableBodyNone">Select all entries from dataset "Dataset1" and only parts with the attribute "my\|attribute" == "Fan 1+"    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset1//and/timestep/rngi/2.0|10.0   </td><td class="markdownTableBodyNone">Select all entries from dataset "Dataset1" for timesteps &gt;= 2.0 and &lt;= 10.0   </td></tr>
</table>
<h3><a class="anchor" id="dvs_query_operator"></a>
Operators</h3>
<p>Below are a list of valid operators and their operands. Operands are separated by '|' to allow for easily chaining multiple statements.<br  />
</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Operator   </th><th class="markdownTableHeadNone">Number of operands   </th><th class="markdownTableHeadNone">Valid Objects   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">eq   </td><td class="markdownTableBodyNone">1-many   </td><td class="markdownTableBodyNone">all   </td><td class="markdownTableBodyNone">Equal, supports * for simple pattern matching    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">neq   </td><td class="markdownTableBodyNone">1-many   </td><td class="markdownTableBodyNone">all   </td><td class="markdownTableBodyNone">Not Equal, supports * for simple pattern matching    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">gt   </td><td class="markdownTableBodyNone">1   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">&gt;    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">gte   </td><td class="markdownTableBodyNone">1   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">&gt;=    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">lt   </td><td class="markdownTableBodyNone">1   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">&lt;    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">lte   </td><td class="markdownTableBodyNone">1   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">&lt;=    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">rnge   </td><td class="markdownTableBodyNone">2   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">Range exclude Operands i.e. '/and/rank/rnge/1|3' means select ranks where rank &gt; 1 and rank &lt; 3    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">rngi   </td><td class="markdownTableBodyNone">2   </td><td class="markdownTableBodyNone">timestep, rank, chunk   </td><td class="markdownTableBodyNone">Range include Operands i.e. '/and/rank/rngi/1|3' means select ranks where rank &gt;= 1 and rank &lt;= 3    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">mod   </td><td class="markdownTableBodyNone">2   </td><td class="markdownTableBodyNone">rank, chunk   </td><td class="markdownTableBodyNone">Modulus, useful for selecting ranks i.e. '/and/rank/mod/2|0' means select every rank where rank % 2 == 0   </td></tr>
</table>
<p><br  />
 </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Example (Operators)   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/dataset.name/neq/dataset+1|dataset+2   </td><td class="markdownTableBodyNone">Select all entries which do not have the dataset name of "dataset 1" or "dataset 2"    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">query=/timestep/gt/1.5   </td><td class="markdownTableBodyNone">Select all timesteps &gt; 1.5    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/rank/mod/2|0   </td><td class="markdownTableBodyNone">Select all entries which rank % 2 == 0    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">query=/rank/rngi/0|5   </td><td class="markdownTableBodyNone">Select all entries which rank &gt;= 0 and rank &lt;= 5   </td></tr>
</table>
<h3><a class="anchor" id="dvs_query_operands"></a>
Operands</h3>
<p>Operands can be separated by the '|' character to OR them together for eq, neg cases. The number of operands allowed per operator is in the <a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_operator">Operators</a> table.</p>
<p><b>Operands have special characters reserved should use '+' to replace spaces. Reserved characters in names should be escaped with % hex values, below is a list of reserved characters.</b></p>
<p><br  />
 </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Reserved Characters   </th><th class="markdownTableHeadNone">Escape Sequence    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">+   </td><td class="markdownTableBodyNone">%2B    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">|   </td><td class="markdownTableBodyNone">%7C    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">/   </td><td class="markdownTableBodyNone">%2F   </td></tr>
</table>
<p><br  />
 </p><table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Example (Operands)   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/dataset.name/eq/my+dataset|Dataset+2   </td><td class="markdownTableBodyNone">Load all cache entries from 'my dataset' OR 'Dataset 2'    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">query=/dataset.name/eq/Dataset%2B1|Dataset%7C2   </td><td class="markdownTableBodyNone">Load all cache entries from 'Dataset+1' OR 'Dataset|2'    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">query=/timestep/rnge/2.0|10.0   </td><td class="markdownTableBodyNone">Load all timesteps &gt; 2.0 AND &lt; 10.0   </td></tr>
</table>
<hr  />
 <h2><a class="anchor" id="dvs_query_examples"></a>
Misc Query Examples</h2>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Query Example   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/dataset.name/eq/Dataset1|Dataset2//and/var.name/neq/pressure//and/plot.name/eq/my+plot   </td><td class="markdownTableBodyNone">Load entries from Dataset1 OR Dataset2. Do not load vars with name 'pressure'. Only load plots named 'my plot'.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/dataset.name/eq/Dataset1|Dataset2|Dataset3   </td><td class="markdownTableBodyNone">Load entries from Dataset1 OR Dataset2 OR Dataset3    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/dataset.name/eq/Dataset+1|Dataset+2//and/rank/mod/3|0   </td><td class="markdownTableBodyNone">Load all cache entries from 'Dataset 1' OR 'Dataset 2' where rank % 3 == 0    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/part.name/eq/inlet*   </td><td class="markdownTableBodyNone">Load all cache entries for parts with partial name inlet, i.e. inlet 1, inlet 2 etc    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/dataset.name/eq/my+dataset//and/timestep/rngi/1.2|2.3   </td><td class="markdownTableBodyNone">Load all cache entries from 'my dataset' where time &gt;= 1.2 and time &lt;= 2.3    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">hdf5:///D:/my_cache/?query=/part.name/neq/inlet*|outlet*   </td><td class="markdownTableBodyNone">Load all cache entries for parts that do not partial match 'inlet' OR 'outlet'   </td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
