<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: ANSYS::Nexus::GLTFWriter::Node Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_a_n_s_y_s.xhtml">ANSYS</a></li><li class="navelem"><b>Nexus</b></li><li class="navelem"><b>GLTFWriter</b></li><li class="navelem"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ANSYS::Nexus::GLTFWriter::Node Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__gltf.xhtml">GLTFWriter Interface</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_g_l_t_f_writer_8h_source.xhtml">GLTFWriter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ANSYS::Nexus::GLTFWriter::Node:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a85f627158b9e2f1a6565ffe1305e7439"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a85f627158b9e2f1a6565ffe1305e7439">AppendChild</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *node)=0</td></tr>
<tr class="separator:a85f627158b9e2f1a6565ffe1305e7439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353d1047251b29924de156f23e3f911a"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a353d1047251b29924de156f23e3f911a">NumChildren</a> () const =0</td></tr>
<tr class="separator:a353d1047251b29924de156f23e3f911a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e43db3c3bd933a51c2e99e223e41bd"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a29e43db3c3bd933a51c2e99e223e41bd">AppendMesh</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_mesh.xhtml">Mesh</a> *mesh)=0</td></tr>
<tr class="separator:a29e43db3c3bd933a51c2e99e223e41bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bcc098d4b34c70e49e1b898b5d995bc"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a9bcc098d4b34c70e49e1b898b5d995bc">NumMeshes</a> () const =0</td></tr>
<tr class="separator:a9bcc098d4b34c70e49e1b898b5d995bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a229725aed9694dd14f7023d5445bbc72"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a229725aed9694dd14f7023d5445bbc72">AppendLight</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_light.xhtml">Light</a> *light)=0</td></tr>
<tr class="separator:a229725aed9694dd14f7023d5445bbc72"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a971f3f45763d2ffea46ff200533f3a9a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a971f3f45763d2ffea46ff200533f3a9a">CreateMesh</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name=0, bool visible=true, const double *matrix=0)</td></tr>
<tr class="separator:a971f3f45763d2ffea46ff200533f3a9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0661ea032f468ce3b160d7c6b3881af7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a0661ea032f468ce3b160d7c6b3881af7">CreateCamera</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_camera.xhtml">Camera</a> *camera, const char *name=0, const double *matrix=0)</td></tr>
<tr class="separator:a0661ea032f468ce3b160d7c6b3881af7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9072424318811c6d563d515286d954c6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#a9072424318811c6d563d515286d954c6">CreateLegend</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_legend.xhtml">Legend</a> *legend, const char *name=0, bool visible=true)</td></tr>
<tr class="separator:a9072424318811c6d563d515286d954c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4830c613f678819db3aa3773ff8b49a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#af4830c613f678819db3aa3773ff8b49a">CreateLight</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf)</td></tr>
<tr class="separator:af4830c613f678819db3aa3773ff8b49a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af105702b586195877db62a761c263d3f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml#af105702b586195877db62a761c263d3f">CreateProxyImage</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_image.xhtml">Image</a> *image, const char *name=0)</td></tr>
<tr class="separator:af105702b586195877db62a761c263d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#_a2">Test001.cpp</a>, <a class="el" href="_test002_8cpp-example.xhtml#_a4">Test002.cpp</a>, <a class="el" href="_test003_8cpp-example.xhtml#_a2">Test003.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#_a2">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#_a2">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#_a5">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#_a2">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#_a5">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#_a3">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#_a2">Test010.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#_a3">Test012.cpp</a>, <a class="el" href="_test013_8cpp-example.xhtml#_a3">Test013.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#_a3">Test014.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_node_8h_source.xhtml#l00030">30</a> of file <a class="el" href="_g_l_t_f_node_8h_source.xhtml">GLTFNode.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a52f9112b9ffa4fde23383ae0e19c0be1" name="a52f9112b9ffa4fde23383ae0e19c0be1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52f9112b9ffa4fde23383ae0e19c0be1">&#9670;&#160;</a></span>~Node()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ANSYS::Nexus::GLTFWriter::Node::~Node </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_node_8h_source.xhtml#l00033">33</a> of file <a class="el" href="_g_l_t_f_node_8h_source.xhtml">GLTFNode.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a85f627158b9e2f1a6565ffe1305e7439" name="a85f627158b9e2f1a6565ffe1305e7439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85f627158b9e2f1a6565ffe1305e7439">&#9670;&#160;</a></span>AppendChild()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Node::AppendChild </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a child mesh node to a mesh node. Multiple child nodes can be appended to a mesh node. </p><dl class="section return"><dt>Returns</dt><dd>Status of AppendChild. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_mesh.xhtml" title="Meshes define the renderable objects that can be added to a node.">Mesh</a> node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test002_8cpp-example.xhtml#a6">Test002.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a16">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a12">Test007.cpp</a>, and <a class="el" href="_test013_8cpp-example.xhtml#a9">Test013.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="a229725aed9694dd14f7023d5445bbc72" name="a229725aed9694dd14f7023d5445bbc72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a229725aed9694dd14f7023d5445bbc72">&#9670;&#160;</a></span>AppendLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Node::AppendLight </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_light.xhtml">Light</a> *&#160;</td>
          <td class="paramname"><em>light</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a light to a light node. Multiple lights can be appended to a light node. Lights are only required for techniques that have auto-generated programs. All lighting calculations must be done in shader programs. </p><dl class="section return"><dt>Returns</dt><dd>Status of AppendLight. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">light</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_light.xhtml" title="Lights define the light objects that can be added to a light node.">Light</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#a5">Test001.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#a5">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#a5">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a8">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a5">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#a8">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#a6">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#a5">Test010.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#a6">Test012.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#a6">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="a29e43db3c3bd933a51c2e99e223e41bd" name="a29e43db3c3bd933a51c2e99e223e41bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29e43db3c3bd933a51c2e99e223e41bd">&#9670;&#160;</a></span>AppendMesh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Node::AppendMesh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_mesh.xhtml">Mesh</a> *&#160;</td>
          <td class="paramname"><em>mesh</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a mesh to a mesh node. Multiple meshes can be appended to a mesh node. </p><dl class="section return"><dt>Returns</dt><dd>Status of AppendMesh. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mesh</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_mesh.xhtml" title="Meshes define the renderable objects that can be added to a node.">Mesh</a> object. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#a10">Test001.cpp</a>, <a class="el" href="_test002_8cpp-example.xhtml#a8">Test002.cpp</a>, <a class="el" href="_test003_8cpp-example.xhtml#a5">Test003.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#a10">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#a8">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a13">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a10">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#a13">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#a11">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#a8">Test010.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#a11">Test012.cpp</a>, <a class="el" href="_test013_8cpp-example.xhtml#a11">Test013.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#a13">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="a0661ea032f468ce3b160d7c6b3881af7" name="a0661ea032f468ce3b160d7c6b3881af7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0661ea032f468ce3b160d7c6b3881af7">&#9670;&#160;</a></span>CreateCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> * ANSYS::Nexus::GLTFWriter::Node::CreateCamera </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_camera.xhtml">Camera</a> *&#160;</td>
          <td class="paramname"><em>camera</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>matrix</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a camera node. The camera node contains an initial orientation that can be used to set an overall scene orientation. Only one camera node is allowed per scene. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">camera</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_camera.xhtml" title="Cameras define an orthographic or perspective projection of the scene.">Camera</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Optional, name of camera node.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">matrix</td><td>Optional, 4x4 transformation matrix defining the initial scene orientation for this camera. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9072424318811c6d563d515286d954c6" name="a9072424318811c6d563d515286d954c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9072424318811c6d563d515286d954c6">&#9670;&#160;</a></span>CreateLegend()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> * ANSYS::Nexus::GLTFWriter::Node::CreateLegend </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_legend.xhtml">Legend</a> *&#160;</td>
          <td class="paramname"><em>legend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>visible</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a legend node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">legend</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_legend.xhtml" title="Legends are colored bars with numbers at intervals along bar.">Legend</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Optional, name of legend node.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">visible</td><td>Optional, initial legend visibility. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af4830c613f678819db3aa3773ff8b49a" name="af4830c613f678819db3aa3773ff8b49a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4830c613f678819db3aa3773ff8b49a">&#9670;&#160;</a></span>CreateLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> * ANSYS::Nexus::GLTFWriter::Node::CreateLight </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a light node. The light node contains all of the lights for the scene. Lights are only required for techniques that have auto-generated programs. All lighting calculations must be done in shader programs. Only one light node is allowed per scene. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a971f3f45763d2ffea46ff200533f3a9a" name="a971f3f45763d2ffea46ff200533f3a9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a971f3f45763d2ffea46ff200533f3a9a">&#9670;&#160;</a></span>CreateMesh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> * ANSYS::Nexus::GLTFWriter::Node::CreateMesh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>visible</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>matrix</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a mesh node. The mesh node can contain only mesh objects, for a pure mesh node that appears at a leaf node of the scene graph. It can contain only child nodes, for an interior grouping node in the scene graph. Or it can contain both, for an interior grouping node with a mesh object. Multiple mesh nodes can be added to a scene. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Optional, name of mesh node. This is required for the mesh node to appear in the visibility selector.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">visible</td><td>Optional, initial node visibility.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">matrix</td><td>Optional, 4x4 transformation matrix that is applied to all meshes and child nodes. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af105702b586195877db62a761c263d3f" name="af105702b586195877db62a761c263d3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af105702b586195877db62a761c263d3f">&#9670;&#160;</a></span>CreateProxyImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> * ANSYS::Nexus::GLTFWriter::Node::CreateProxyImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_image.xhtml">Image</a> *&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a proxy image node. The proxy image can be displayed in place of the scene, while loading, or for systems that do not support WebGL. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">image</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_image.xhtml" title="Images define texture data.">Image</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Optional, name of proxy image node. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a353d1047251b29924de156f23e3f911a" name="a353d1047251b29924de156f23e3f911a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a353d1047251b29924de156f23e3f911a">&#9670;&#160;</a></span>NumChildren()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int ANSYS::Nexus::GLTFWriter::Node::NumChildren </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns number of child nodes </p><dl class="section return"><dt>Returns</dt><dd>Number of child nodes. </dd></dl>

</div>
</div>
<a id="a9bcc098d4b34c70e49e1b898b5d995bc" name="a9bcc098d4b34c70e49e1b898b5d995bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bcc098d4b34c70e49e1b898b5d995bc">&#9670;&#160;</a></span>NumMeshes()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int ANSYS::Nexus::GLTFWriter::Node::NumMeshes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns number of meshes. </p><dl class="section return"><dt>Returns</dt><dd>Number of meshes. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/Product-src/webgl_viewer/gltfwriterlib/include/<a class="el" href="_g_l_t_f_node_8h_source.xhtml">GLTFNode.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
