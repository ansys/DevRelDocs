<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: DVS Server</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li class="current"><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DVS Server<div class="ingroups"><a class="el" href="group__dvs__main.xhtml">Dynamic Visualization Store</a></div></div></div>
</div><!--header-->
<div class="contents">
<p>DVS Servers receive data from the DVS Clients. A server can be ran as part of the postprocessing package (such as EnSight) or within any process as it is part of the DVS API. A server object is always used by the client to connect to a server (if starting a server locally it must be started before connecting with the client). However this server object is only a shell/proxy object unless it is started using <a class="el" href="dynamic__visualization__store__api_8h.xhtml#aa5722a5316ee73bdd998c9a327e8cb3d" title="Start a Dynamic Visualization Store server in a separate thread to receive data from solver node.">dvs_server_start()</a> or <a class="el" href="class_d_v_s_1_1_i_server.xhtml#a6699cf48b29583ab3391b9b8397e611c" title="Start the server.">DVS::IServer::startup()</a>. If a server isn't started it is assumed another process/thread has started it and it is only used for connecting the client to the real server.</p>
<h2><a class="anchor" id="dvs_server_options"></a>
Server Options</h2>
<p>Server options are specified by the C API call <a class="el" href="dynamic__visualization__store__api_8h.xhtml#ae8abdb8455cea44bbd9f509c1a063516" title="Add an option to the server.">dvs_server_set_option()</a>, or the C++ API call <a class="el" href="class_d_v_s_1_1_i_server.xhtml#a1edb4dec67086f10bc0329b6adf9084c" title="Set a specific option on the server, these are used during startup See See Server Options.">DVS::IServer::set_option()</a>.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Server Option   </th><th class="markdownTableHeadNone">Default   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">CACHE_URI   </td><td class="markdownTableBodyNone">None   </td><td class="markdownTableBodyNone">A URI used to specify cache type, location and filtering options. See <a class="el" href="group__group__dvs__uri.xhtml#dvs_cache_uri">Cache URIs</a> for more information.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">SERVER_PORT_BASE   </td><td class="markdownTableBodyNone">50051   </td><td class="markdownTableBodyNone">The base port to use for a group of servers. Used with SERVER_PORT_MULT to determine the port to listen to. i.e. SERVER_PORT_BASE + (server_num * SERVER_PORT_MULT).    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">SERVER_PORT_MULT   </td><td class="markdownTableBodyNone">0   </td><td class="markdownTableBodyNone">The multiplier to use with server number to increase SERVER_PORT_BASE by. i.e. SERVER_PORT_BASE + (server_num * SERVER_PORT_MULT).    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">SERVER_SECURITY_SECRET   </td><td class="markdownTableBodyNone">None   </td><td class="markdownTableBodyNone">The secret string to use for a client to connect to this server. If none is specified no secret is needed by the client.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">ENABLE_DYNAMIC_SOURCE   </td><td class="markdownTableBodyNone">True   </td><td class="markdownTableBodyNone">Used to force the server into waiting for external data or not. If false only reads from the specified cache.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">VERBOSE   </td><td class="markdownTableBodyNone">0   </td><td class="markdownTableBodyNone">Verbosity level of the server, Min 0, Max 3.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">DVS_FILE_LOCATION   </td><td class="markdownTableBodyNone">Cache location   </td><td class="markdownTableBodyNone">Set the location for the dvs files created when creating datasets. This can be a fully qualified pathname or relative to the root of the cache specified by the CACHE_URI. The internal link stored in the file pointing to the cache location is also controlled by if the DVS_FILE_LOCATION is a fully qualified pathname or relative. If it is fully qualified the link will be fully qualified. Allowing you to move the dvs file around with the cache staying in a static location. If the DVS_FILE_LOCATION is relative, then the internal link will be relative to the cache location. This will allow you to move the cache and dvs files around together and they will still work (recommended).    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">GRPC_MAX_NUM_RETRIES   </td><td class="markdownTableBodyNone">3   </td><td class="markdownTableBodyNone">Sets the maximum number of retries to use if using GRPC. This setting can help if having problems with too many clients going into a small number of servers. This should be used in conjunction with GRPC_BACKOFF_MIN_MS and GRPC_BACKOFF_MAX_MS    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">GRPC_BACKOFF_MIN_MS   </td><td class="markdownTableBodyNone">100   </td><td class="markdownTableBodyNone">The minimum time to wait before attempting a retry    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">GRPC_BACKOFF_MAX_MS   </td><td class="markdownTableBodyNone">1000   </td><td class="markdownTableBodyNone">The maximum time to wait before attempting a retry, the current algorithm is linear and increments each retry by GRPC_BACKOFF_LINEAR_MS until reaching either the maximum number of retries * GRPC_BACKOFF_LINEAR_MS or GRPC_BACKOFF_MAX_MS    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">GRPC_BACKOFF_LINEAR_MS   </td><td class="markdownTableBodyNone">100   </td><td class="markdownTableBodyNone">The linear amount to increment the backoff timer for each retry   </td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
