<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: D:/Product-src/ensight/client/rpc_interface/shared_memory_image_client_priv.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_efb5d67553d49169c49ef58de7241528.xhtml">ensight</a></li><li class="navelem"><a class="el" href="dir_fdd9705442facc8925ef373a77ec3b73.xhtml">client</a></li><li class="navelem"><a class="el" href="dir_015c1e161be69977b413cdd9480f9dc4.xhtml">rpc_interface</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">shared_memory_image_client_priv.h</div></div>
</div><!--header-->
<div class="contents">
<a href="shared__memory__image__client__priv_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="comment">/*  *************************************************************</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment"> *   Copyright 2017-2020 ANSYS, Inc.</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> *   All Rights Reserved.</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> *</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> *        Restricted Rights Legend</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> *</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment"> *   Use, duplication, or disclosure of this</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment"> *   software and its documentation by the</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment"> *   Government is subject to restrictions as</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="comment"> *   set forth in subdivision [(b)(3)(ii)] of</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="comment"> *   the Rights in Technical Data and Computer</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="comment"> *   Software clause at 52.227-7013.</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment"> *  *************************************************************</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment"> */</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#ifndef ___ENSIGHT_GRPC_SHMEM_CLIENT_PRIV_H___</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#define ___ENSIGHT_GRPC_SHMEM_CLIENT_PRIV_H___</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="preprocessor">#include &lt;string.h&gt;</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="preprocessor">#include &quot;<a class="code" href="shared__memory__image__client_8h.xhtml">shared_memory_image_client.h</a>&quot;</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="preprocessor">#ifdef WIN32</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="preprocessor">#include &lt;windows.h&gt;</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="preprocessor">#include &lt;sys/types.h&gt;</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="preprocessor">#include &lt;fcntl.h&gt;</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="preprocessor">#include &lt;sys/mman.h&gt;</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="preprocessor">#include &lt;pthread.h&gt;</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="comment">/* additional, private, creation options.  These are normally used by EnSight, not clients */</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="comment">/* if set, the BufferHeader structures are initialized to IMAGESTREAM_BUFFER_STATE_SERVER */</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="shared__memory__image__client__priv_8h.xhtml#a24ac2d665ce98370e25639bba2d992b6">  132</a></span><span class="preprocessor">#define IMAGESTREAM_OPTIONS_INITBUFFERHEADERS    0x00000001   </span></div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="shared__memory__image__client__priv_8h.xhtml#a673fd1d2f27007af83467699cb53614f">  133</a></span><span class="preprocessor">#define IMAGESTREAM_OPTIONS_NOTHREADS            0x00000002   </span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="comment">/* common server creation options */</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="shared__memory__image__client__priv_8h.xhtml#aa87740042e4f5882fa4c990a6528c2e3">  135</a></span><span class="preprocessor">#define IMAGESTREAM_OPTIONS_SERVER            IMAGESTREAM_OPTIONS_INITBUFFERHEADERS|IMAGESTREAM_OPTIONS_NOTHREADS    </span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> <span class="comment">/*</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="comment">  * Shared memory layout:</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="comment">  *</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span><span class="comment">  * Note: all pixels are 3 bytes RGB byte ordering, no scanline gaps/alignment</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span><span class="comment">  *</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span><span class="comment">  * base memory mapped pointer</span></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span><span class="comment">  *   struct BufferHeader for buffer 0</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span><span class="comment">  *   uint_8 data[n] image payload data</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="comment">  *   struct BufferHeader for buffer 1</span></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="comment">  *   uint_8 data[n] image payload data</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="comment">  *</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span><span class="comment">  * BufferHeader</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="comment">  * uint32_t  frame_number</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="comment">  * uint32_t  width in pixels of the entire frame</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="comment">  * uint32_t  height in pixels of the entire frame</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="comment">  * uint32_t  offset          offset from the top of the image in scanlines for this block  (0=end of frame)</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="comment">  * uint32_t  num_scanlines   number of scanlines of data in the current payload</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="comment">  * uint8_t   buffer_state:   0=server owned, 1=server writing, 2=client owned, 3=client reading</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="comment">  *</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="comment">  * The server is responsible for initializing the shared memory header states.</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span><span class="comment">  * </span></div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="comment">  *</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="comment">  * These are the values for &#39;buffer_state&#39; flag in the BufferHeader</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="comment">  * structures.  Only the process that has control over the buffer can</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="comment">  * change its state.  State progression:</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="comment">  *</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="comment">  * server sets to 4</span></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span><span class="comment">  * client sets to 0</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="comment">  * server sets to 1</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="comment">  * server sets to 2</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span><span class="comment">  * client sets to 3</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="comment">  * client sets to 0</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="comment">  *</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="comment">  */</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="comment">/* 0=server has control over this buffer */</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="preprocessor">#define IMAGESTREAM_BUFFER_STATE_SERVER           0</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="comment">/* 1=server has control over this buffer and it actively writing to it */</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="preprocessor">#define IMAGESTREAM_BUFFER_STATE_SERVER_LOCKED    1</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="comment">/* 2=client has control over this buffer and it has content written to by the server */</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="preprocessor">#define IMAGESTREAM_BUFFER_STATE_CLIENT           2</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="comment">/* 3=client has control over this buffer and has mapped it to a frame */</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span><span class="preprocessor">#define IMAGESTREAM_BUFFER_STATE_CLIENT_LOCKED    3</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="comment">/* 4=(unconnected) client has control over the buffer.  The server initializes the buffer</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="comment"> * state to this value and waits for a client to connect.  When a client connects, it </span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span><span class="comment"> * changes the state to 0 */</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span><span class="preprocessor">#define IMAGESTREAM_BUFFER_STATE_INIT             4</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">typedef</span> <span class="keyword">struct </span>{</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    uint32_t frame_number;  </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    uint32_t width;         </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    uint32_t height;        </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    uint32_t offset;        </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>    uint32_t num_scanlines; </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    uint8_t  buffer_state;  </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    uint8_t  pad[3];        </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>} BufferHeader;             </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span><span class="comment">/* </span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span><span class="comment"> * These are the values for the &#39;frame_state&#39; flag in the _SharedMemoryImageStream</span></div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="comment"> * structure. </span></div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span><span class="comment"> * The frame starts in UNDEFINED state.  The lcl_thread_process() thread will</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span><span class="comment"> * transition the frame to the READY state.  SharedMemoryImageStream_lock() will</span></div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span><span class="comment"> * transition the frame to the LOCKED state.  SharedMemoryImageStream_unlock() will</span></div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span><span class="comment"> * transition the frame back to the UNDEFINED state.</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span><span class="comment"> *</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span><span class="comment"> * Note: if the image frame is locked, any associated buffer (frame_buffer_number),</span></div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span><span class="comment"> * will also be moved to IMAGESTREAM_BUFFER_STATE_CLIENT_LOCKED and then released to</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span><span class="comment"> * IMAGESTREAM_BUFFER_STATE_SERVER when the frame goes back to </span></div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span><span class="comment"> * IMAGESTREAM_FRAME_STATE_UNDEFINED.</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span><span class="comment"> */</span></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="preprocessor">#define IMAGESTREAM_FRAME_STATE_UNDEFINED         0</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="preprocessor">#define IMAGESTREAM_FRAME_STATE_IMAGE_READY       1</span></div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="preprocessor">#define IMAGESTREAM_FRAME_STATE_IMAGE_LOCKED      2</span></div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span><span class="keyword">struct </span>_SharedMemoryImageStream {</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    <span class="comment">/* memory mapped pointer and its length (note: this is not marked volatile as it is not</span></div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><span class="comment">     * intended to be accessed directly, but the data it points to is volatile) */</span></div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    uint8_t *ptr;            </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <span class="keywordtype">size_t</span> length;           </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    uint8_t shutting_down;   </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    uint8_t frame_state;     </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>    <span class="keyword">struct </span><a class="code hl_struct" href="struct___shared_memory_frame.xhtml">_SharedMemoryFrame</a> frame;  </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>    int32_t frame_buffer_number;      </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    <span class="comment">/* pointers into the memory mapped space (ptr) */</span></div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    BufferHeader <span class="keyword">volatile</span> *buffer_header[2];  </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>    uint8_t *buffer_data[2]; </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    <span class="keywordtype">size_t</span> payload_length;   </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    uint32_t options;        </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="comment">/* platform specific bits for memory mapped I/O, a thread and a mutex */</span></div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="preprocessor">#ifdef WIN32</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>    HANDLE fd;</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    HANDLE file_map;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    CRITICAL_SECTION mutex;</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    HANDLE thread;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordtype">int</span> fd;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    pthread_mutex_t mutex;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    pthread_t thread;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>};</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno"><a class="line" href="shared__memory__image__client__priv_8h.xhtml#abe3cb5374af97eeccf691864f6e2b2ad">  264</a></span> <a class="code hl_typedef" href="shared__memory__image__client_8h.xhtml#a0496a9a3db499fa9145fe97d2e6dae9a">SharedMemoryImageError</a> <a class="code hl_function" href="shared__memory__image__client__priv_8h.xhtml#abe3cb5374af97eeccf691864f6e2b2ad">SharedMemoryImageStream_putframe</a>(<a class="code hl_typedef" href="shared__memory__image__client_8h.xhtml#af5b8eb2ae90823f10e9a17698ea80749">SharedMemoryImageStream</a> stream,</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>    <a class="code hl_struct" href="struct___shared_memory_frame.xhtml">SharedMemoryFrame</a> frame);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span><span class="preprocessor">#ifdef __cplusplus</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>}</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="preprocessor">#endif</span></div>
<div class="ttc" id="ashared__memory__image__client_8h_xhtml"><div class="ttname"><a href="shared__memory__image__client_8h.xhtml">shared_memory_image_client.h</a></div><div class="ttdoc">C API for using the EnSight grpc shared memory image transport API.</div></div>
<div class="ttc" id="ashared__memory__image__client_8h_xhtml_a0496a9a3db499fa9145fe97d2e6dae9a"><div class="ttname"><a href="shared__memory__image__client_8h.xhtml#a0496a9a3db499fa9145fe97d2e6dae9a">SharedMemoryImageError</a></div><div class="ttdeci">int SharedMemoryImageError</div><div class="ttdoc">common error codes see the non-hex, non-string IMAGESTREAM macros</div><div class="ttdef"><b>Definition:</b> <a href="shared__memory__image__client_8h_source.xhtml#l00109">shared_memory_image_client.h:109</a></div></div>
<div class="ttc" id="ashared__memory__image__client_8h_xhtml_af5b8eb2ae90823f10e9a17698ea80749"><div class="ttname"><a href="shared__memory__image__client_8h.xhtml#af5b8eb2ae90823f10e9a17698ea80749">SharedMemoryImageStream</a></div><div class="ttdeci">struct _SharedMemoryImageStream * SharedMemoryImageStream</div><div class="ttdoc">image transport stream pointer</div><div class="ttdef"><b>Definition:</b> <a href="shared__memory__image__client_8h_source.xhtml#l00111">shared_memory_image_client.h:111</a></div></div>
<div class="ttc" id="ashared__memory__image__client__priv_8h_xhtml_abe3cb5374af97eeccf691864f6e2b2ad"><div class="ttname"><a href="shared__memory__image__client__priv_8h.xhtml#abe3cb5374af97eeccf691864f6e2b2ad">SharedMemoryImageStream_putframe</a></div><div class="ttdeci">DEV SharedMemoryImageError SharedMemoryImageStream_putframe(SharedMemoryImageStream stream, SharedMemoryFrame frame)</div><div class="ttdoc">SharedMemoryImageStream_putframe push a new image into a server image stream channel.</div></div>
<div class="ttc" id="astruct___shared_memory_frame_xhtml"><div class="ttname"><a href="struct___shared_memory_frame.xhtml">_SharedMemoryFrame</a></div><div class="ttdef"><b>Definition:</b> <a href="shared__memory__image__client_8h_source.xhtml#l00115">shared_memory_image_client.h:115</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
