<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: DynamicSceneGraphService</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li class="current"><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">DynamicSceneGraphService<div class="ingroups"><a class="el" href="group__grpc.xhtml">EnSight gRPC Interface</a></div></div></div>
</div><!--header-->
<div class="contents">
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>The dynamic scene graph gRPC service provides a mechanism by which a client application can attach to a running EnSight session and read the current scene geometry. The API allows the client application to track the client scene graph state. It supports both complete and incremental updates. For incremental updates, the EnSight client tracks the remote scene graph state specific to each active scene stream.</p>
<p>The EnSight distribution includes a simple example client written in Python. The renderer in the example client is not complete (e.g. it does not support all of the texturing modes or two sided lighting), but it does demonstrate how a client should interpret the various messages that constitute a scene update operation. This example is located in the same directory (ensightXXX/site_preferences/extensions/grpc) as this .proto file and is named dynamic_scene_graph_example_client.py. To run the example client (Windows example, <a class="el" href="namespace_a_n_s_y_s.xhtml" title="GLTFWriter API Documentation.">ANSYS</a> 2021 R1 distribution), first start EnSight with the following command line: </p><div class="fragment"><div class="line">ensight.bat -grpc_server 12345</div>
</div><!-- fragment --><p> Then in another shell window run the Python script using the EnSight Python interpreter: </p><div class="fragment"><div class="line">cpython.bat dynamic_scene_graph_example_client.py</div>
</div><!-- fragment --><p> Load some data into the EnSight session and then select "Update" from the example client GUI menus to initiate a scene refresh. By default, the example client will send a <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> (<a class="el" href="structensightservice_1_1_scene_client_command.xhtml#a0d35bc799b8649f6ca89ba7b81d85c9daf4d487da2248189a4581a1da2ef697a6" title="Initial command to be sent. Can be sent repeatedly to reset session parameters or request a scene upd...">SceneClientCommand::ClientCommandType::INIT</a>) message and EnSight will respond with a sequence of update messages. If the File-&gt;Allow push updates option is enabled in the sample client, it will allow EnSight to push scene graph updates in asynchronous fashion. An EnSight initiated scene update can be started from the Python interpreter in the EnSight client using this code fragment: </p><div class="fragment"><div class="line"><span class="keyword">import</span> enspyqtgui_int</div>
<div class="line">enspyqtgui_int.dynamic_scene_graph_command(<span class="stringliteral">&quot;dynamicscenegraph://localhost/client/update&quot;</span>)</div>
</div><!-- fragment --><p> This update will be seen by all current dynamic scene graph sessions that have the allow_spontaneous flag set in their <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> INIT messages.</p>
<p>EnSight will export all of the geometry visible in the viewport 0 as the scene contents. Individual parts may have the metadata tag "ENS_DSG_HINTS" set to a string. If the string contains the substring "HIDE", that part will not be included in the export, even if it is visible in viewport 0.</p>
<h1><a class="anchor" id="entities"></a>
Overview of the dynamic scene graph API entities</h1>
<hr  />
<p>The gRPC API update commands define a collection of entities that describe the scene graph. These entities refer to each other using entity IDs. The IDs are a proxy for pointers. An individual entity can be updated (one <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> message for each update message) or destroyed by <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> messages. All addressable entities have a 64bit "id" associated with them. An "update" command is used to create an entity and to update its attributes.</p>
<p>An incremental update will only send updates for the entities that have changed since the previous update. If an entity no longer exists after this update, the entity ID will be sent in a <a class="el" href="structensightservice_1_1_delete_i_d.xhtml" title="Delete a list of entities.">DeleteID</a> command.</p>
<p>The currently defined entities are:</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">Entity   </th><th class="markdownTableHeadNone">Description    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">Scene   </td><td class="markdownTableBodyNone">Top of the tree of entities. It may contain View and Variable entities.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">View   </td><td class="markdownTableBodyNone">Contains timestep and camera information for a tree of geometry. It may contain Group and Part entities.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">Group   </td><td class="markdownTableBodyNone">Child of a View or another Group. It may contain Part and Group entities. Includes a 4x4 matrix transform and arbitrary attributes.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">Part   </td><td class="markdownTableBodyNone">Child of a Group, parent to Geom entities. Defines a "mesh" and display attributes.    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">Geom   </td><td class="markdownTableBodyNone">Child of a Part. Storage for the arrays that define a block of a geometry. Note: a single Geom will have connectivity defining either be LINES or TRIANGLES, not both. Includes: Coordinates, Connectivity, current variable data, edge flags    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">Variable   </td><td class="markdownTableBodyNone">Defines variable display properties: Nodal, Elemental, ranges, interpolation, etc. Child of a Scene.   </td></tr>
</table>
<p>The View, Group, Part, Geom and Variable entities all include a hash field. This string is unique to the contents of the update message. Thus, if two messages of the same type have the same hash, they can be considered to have identical contents.</p>
<h2><a class="anchor" id="updateprocess"></a>
The entity update gRPC message sequence</h2>
<hr  />
<p>The update process is initiated by the client application unless a <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> message has enabled spontaneous updates. A spontaneous update starts with step 2.</p>
<ol type="1">
<li>Client sends a <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> (<a class="el" href="structensightservice_1_1_scene_client_command.xhtml#a0d35bc799b8649f6ca89ba7b81d85c9daf4d487da2248189a4581a1da2ef697a6" title="Initial command to be sent. Can be sent repeatedly to reset session parameters or request a scene upd...">SceneClientCommand::ClientCommandType::INIT</a>) message to the EnSight gRPC service of the type <a class="el" href="structensightservice_1_1_scene_client_init.xhtml" title="Request by the client for an EnSight scene update.">SceneClientInit</a>. This triggers the update sequence.</li>
<li>EnSight sends a <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> <a class="el" href="structensightservice_1_1_update_scene_begin.xhtml" title="Begin an update sequence.">UpdateSceneBegin</a> (<a class="el" href="structensightservice_1_1_scene_update_command.xhtml#a80ae6b52bf49715cfdc5392b614b32eaa1e55874750a5e9ffbf781850865d9db5" title="Marks the beginning of a scene update.">SceneUpdateCommand::SceneUpdateCommandType::UPDATE_SCENE_BEGIN</a>) message to the client.</li>
<li>EnSight sends a series of <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> messages to the client. These messages can be of these types (<a class="el" href="structensightservice_1_1_delete_i_d.xhtml" title="Delete a list of entities.">DeleteID</a>, <a class="el" href="structensightservice_1_1_update_part.xhtml" title="Update a Part entity.">UpdatePart</a>, <a class="el" href="structensightservice_1_1_update_group.xhtml" title="Update a Group entity.">UpdateGroup</a>, <a class="el" href="structensightservice_1_1_update_geom.xhtml" title="Update a Geom entity.">UpdateGeom</a>, <a class="el" href="structensightservice_1_1_update_variable.xhtml" title="Update a Variable entity.">UpdateVariable</a>, <a class="el" href="structensightservice_1_1_update_view.xhtml" title="Update a View entity.">UpdateView</a>). Note there should be no assumption about the order of these messages.</li>
<li>EnSight sends a final <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> <a class="el" href="structensightservice_1_1_update_scene_end.xhtml" title="End an update sequence.">UpdateSceneEnd</a> (<a class="el" href="structensightservice_1_1_scene_update_command.xhtml#a80ae6b52bf49715cfdc5392b614b32eaa376ded6d437b36e6d4723d10ebbce06d" title="Marks the completion of a scene update.">SceneUpdateCommand::SceneUpdateCommandType::UPDATE_SCENE_END</a>) message to the client, signifying the end of a scene graph update.</li>
</ol>
<h2><a class="anchor" id="entitydiagram"></a>
Entity relationship diagram</h2>
<hr  />
<div class="image">
<object type="image/svg+xml" data="./dynamic_scene_graph_service_entities.svg" style="pointer-events: none;"></object>
</div>
 <h2 class="groupheader">Function Documentation</h2>
<a id="ga52fdddcd2932b5fd9a19d0a740d24680" name="ga52fdddcd2932b5fd9a19d0a740d24680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga52fdddcd2932b5fd9a19d0a740d24680">&#9670;&#160;</a></span>GetAPIVersion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">rpc ensightservice::DynamicSceneGraphService::GetAPIVersion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structensightservice_1_1_version_request.xhtml">VersionRequest</a>&#160;</td>
          <td class="paramname"><em>versionrequest</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the server version of the dynamic scene graph stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">versionrequest</td><td>dummy argument </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structensightservice_1_1_version_reply.xhtml" title="The server API version.">VersionReply</a> the API version currently supported by the server </dd></dl>

<p class="definition">Definition at line <a class="el" href="dynamic__scene__graph_8proto_source.xhtml#l00140">140</a> of file <a class="el" href="dynamic__scene__graph_8proto_source.xhtml">dynamic_scene_graph.proto</a>.</p>

</div>
</div>
<a id="ga013fc67ee73abc7c3d7ce82115972b67" name="ga013fc67ee73abc7c3d7ce82115972b67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga013fc67ee73abc7c3d7ce82115972b67">&#9670;&#160;</a></span>GetSceneStream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">rpc ensightservice::DynamicSceneGraphService::GetSceneStream </td>
          <td>(</td>
          <td class="paramtype">stream&#160;</td>
          <td class="paramname"><em>SceneClientCommand</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start a new dynamic scene graph stream. </p>
<p>This gRPC call opens a bi-directional stream between the client application and the EnSight gRPC server. The client application can make requests for updates to the current scene graph by sending <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> messages. The EnSight server responds with a series of <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> messages. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname"><a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a></td><td>A stream of <a class="el" href="structensightservice_1_1_scene_client_command.xhtml" title="Aggregate command sent by a dynamic scene graph client.">SceneClientCommand</a> objects </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> A stream of <a class="el" href="structensightservice_1_1_scene_update_command.xhtml" title="Aggregate command sent by EnSight to a client.">SceneUpdateCommand</a> messages from the EnSight client </dd></dl>

<p class="definition">Definition at line <a class="el" href="dynamic__scene__graph_8proto_source.xhtml#l00135">135</a> of file <a class="el" href="dynamic__scene__graph_8proto_source.xhtml">dynamic_scene_graph.proto</a>.</p>

</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga013fc67ee73abc7c3d7ce82115972b67"><td class="memItemLeft" align="right" valign="top">rpc&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___d_s_g.xhtml#ga013fc67ee73abc7c3d7ce82115972b67">ensightservice::DynamicSceneGraphService::GetSceneStream</a> (stream <a class="el" href="structensightservice_1_1_scene_client_command.xhtml">SceneClientCommand</a>) returns(stream <a class="el" href="structensightservice_1_1_scene_update_command.xhtml">SceneUpdateCommand</a>)</td></tr>
<tr class="separator:ga013fc67ee73abc7c3d7ce82115972b67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga52fdddcd2932b5fd9a19d0a740d24680"><td class="memItemLeft" align="right" valign="top">rpc&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___d_s_g.xhtml#ga52fdddcd2932b5fd9a19d0a740d24680">ensightservice::DynamicSceneGraphService::GetAPIVersion</a> (<a class="el" href="structensightservice_1_1_version_request.xhtml">VersionRequest</a> versionrequest) returns(<a class="el" href="structensightservice_1_1_version_reply.xhtml">VersionReply</a>)</td></tr>
<tr class="separator:ga52fdddcd2932b5fd9a19d0a740d24680"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
