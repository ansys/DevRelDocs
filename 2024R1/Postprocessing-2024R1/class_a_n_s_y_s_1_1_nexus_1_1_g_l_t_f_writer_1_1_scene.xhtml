<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: ANSYS::Nexus::GLTFWriter::Scene Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_a_n_s_y_s.xhtml">ANSYS</a></li><li class="navelem"><b>Nexus</b></li><li class="navelem"><b>GLTFWriter</b></li><li class="navelem"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml">Scene</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ANSYS::Nexus::GLTFWriter::Scene Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__gltf.xhtml">GLTFWriter Interface</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_g_l_t_f_writer_8h_source.xhtml">GLTFWriter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ANSYS::Nexus::GLTFWriter::Scene:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac17baf491cdba3613b0aa39719a3dbd8"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8">BackgroundType</a> { <br />
&#160;&#160;<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8a65fc5b9c2360c79b260b212430053e59">BT_NONE</a> = -1
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8aeea551002921bb989b3ed35678ec982b">BT_SOLID</a> = 0
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8a0e9df8d9774401657f9d7aad4e18728f">BT_TB</a>
, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8a563f2a71e6d4083ff6d0e2e6febfac72">BT_LR</a>
, <br />
&#160;&#160;<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8acc30bd85d5eae5626281239fe84c3522">BT_TLBR</a>
<br />
 }</td></tr>
<tr class="separator:ac17baf491cdba3613b0aa39719a3dbd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a032a02e7ff85707f8ae02dce0ec11ce4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#a032a02e7ff85707f8ae02dce0ec11ce4">SetCamera</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *camera)=0</td></tr>
<tr class="separator:a032a02e7ff85707f8ae02dce0ec11ce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad59f57e366c5376b197aed0b10de4f71"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ad59f57e366c5376b197aed0b10de4f71">SetLight</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *light)=0</td></tr>
<tr class="separator:ad59f57e366c5376b197aed0b10de4f71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac53c52f457c3d6616e467438df37d621"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac53c52f457c3d6616e467438df37d621">SetProxyImage</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *image)=0</td></tr>
<tr class="separator:ac53c52f457c3d6616e467438df37d621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de67b73e229a59c58113807e04af2dd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#a1de67b73e229a59c58113807e04af2dd">SetClipPlane</a> (float p0x, float p0y, float p0z, float p1x, float p1y, float p1z, float p2x, float p2y, float p2z)=0</td></tr>
<tr class="separator:a1de67b73e229a59c58113807e04af2dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adea272bb6570744737a12f7f639e40fd"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#adea272bb6570744737a12f7f639e40fd">AppendMesh</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *mesh)=0</td></tr>
<tr class="separator:adea272bb6570744737a12f7f639e40fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17ec197a0df8ce135b3c0100b79c11d7"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#a17ec197a0df8ce135b3c0100b79c11d7">Add2DText</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *text, float x, float y, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a> textAttach=<a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86aae3d3102ce5048d7838718bccc291ccd">Markup::MTAT_CENTER</a>, float textSize=20, const char *textFont=0, float textR=0, float textG=0, float textB=0, float bgR=1, float bgG=1, float bgB=1, float bgA=0, const char *path=0)=0</td></tr>
<tr class="separator:a17ec197a0df8ce135b3c0100b79c11d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4abd212be82d4a229706c245d8db9a35"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#a4abd212be82d4a229706c245d8db9a35">Add3DText</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *text, float x, float y, float z, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a> textAttach=<a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86a00c009bc6c57ab36d9f3b0ed458bb5af">Markup::MTAT_AUTO</a>, float textSize=12, const char *textFont=0, float textOffX=0, float textOffY=0, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#ad50873251725f3a325ca393a84ac7bc8">Markup::MarkupLineType</a> lineShape=<a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#ad50873251725f3a325ca393a84ac7bc8a725b3dfb79cfdaba1a9eab54b1359c90">Markup::MLT_LINE</a>, float lineR=0, float lineG=0, float lineB=0, float textR=0, float textG=0, float textB=0, float bgR=1, float bgG=1, float bgB=1, float bgA=0.5, const char *path=0)=0</td></tr>
<tr class="separator:a4abd212be82d4a229706c245d8db9a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa0eb31bb6d40ed9784244c03f9ab3d9d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml">Scene</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#aa0eb31bb6d40ed9784244c03f9ab3d9d">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name=0, const char *units=0, float scale=1, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8">Scene::BackgroundType</a> backgroundType=<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8a65fc5b9c2360c79b260b212430053e59">Scene::BT_NONE</a>, float r1=0, float g1=0, float b1=0, float r2=0, float g2=0, float b2=0)</td></tr>
<tr class="separator:aa0eb31bb6d40ed9784244c03f9ab3d9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Multiple scene can be defined, but only one is visible at a time. The initial scene displayed is defined by SetDefaultScene </p>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#_a1">Test001.cpp</a>, <a class="el" href="_test002_8cpp-example.xhtml#_a2">Test002.cpp</a>, <a class="el" href="_test003_8cpp-example.xhtml#_a1">Test003.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#_a1">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#_a1">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#_a1">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#_a1">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#_a1">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#_a2">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#_a1">Test010.cpp</a>, <a class="el" href="_test011_8cpp-example.xhtml#_a1">Test011.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#_a1">Test012.cpp</a>, <a class="el" href="_test013_8cpp-example.xhtml#_a1">Test013.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#_a2">Test014.cpp</a>.</dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_scene_8h_source.xhtml#l00028">28</a> of file <a class="el" href="_g_l_t_f_scene_8h_source.xhtml">GLTFScene.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ac17baf491cdba3613b0aa39719a3dbd8" name="ac17baf491cdba3613b0aa39719a3dbd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac17baf491cdba3613b0aa39719a3dbd8">&#9670;&#160;</a></span>BackgroundType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8">ANSYS::Nexus::GLTFWriter::Scene::BackgroundType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Type of background. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ac17baf491cdba3613b0aa39719a3dbd8a65fc5b9c2360c79b260b212430053e59" name="ac17baf491cdba3613b0aa39719a3dbd8a65fc5b9c2360c79b260b212430053e59"></a>BT_NONE&#160;</td><td class="fielddoc"><p>Use viewer default background. </p>
</td></tr>
<tr><td class="fieldname"><a id="ac17baf491cdba3613b0aa39719a3dbd8aeea551002921bb989b3ed35678ec982b" name="ac17baf491cdba3613b0aa39719a3dbd8aeea551002921bb989b3ed35678ec982b"></a>BT_SOLID&#160;</td><td class="fielddoc"><p>Make solid color from color 1. </p>
</td></tr>
<tr><td class="fieldname"><a id="ac17baf491cdba3613b0aa39719a3dbd8a0e9df8d9774401657f9d7aad4e18728f" name="ac17baf491cdba3613b0aa39719a3dbd8a0e9df8d9774401657f9d7aad4e18728f"></a>BT_TB&#160;</td><td class="fielddoc"><p>Make gradient from color 1 top to color 2 bottom. </p>
</td></tr>
<tr><td class="fieldname"><a id="ac17baf491cdba3613b0aa39719a3dbd8a563f2a71e6d4083ff6d0e2e6febfac72" name="ac17baf491cdba3613b0aa39719a3dbd8a563f2a71e6d4083ff6d0e2e6febfac72"></a>BT_LR&#160;</td><td class="fielddoc"><p>Make gradient from color 1 left to color 2 right. </p>
</td></tr>
<tr><td class="fieldname"><a id="ac17baf491cdba3613b0aa39719a3dbd8acc30bd85d5eae5626281239fe84c3522" name="ac17baf491cdba3613b0aa39719a3dbd8acc30bd85d5eae5626281239fe84c3522"></a>BT_TLBR&#160;</td><td class="fielddoc"><p>Make gradient from color 1 top/left to color 2 bottom/right. </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_scene_8h_source.xhtml#l00032">32</a> of file <a class="el" href="_g_l_t_f_scene_8h_source.xhtml">GLTFScene.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="afb0b5602239c04079581cee5013ad547" name="afb0b5602239c04079581cee5013ad547"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb0b5602239c04079581cee5013ad547">&#9670;&#160;</a></span>~Scene()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ANSYS::Nexus::GLTFWriter::Scene::~Scene </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_scene_8h_source.xhtml#l00042">42</a> of file <a class="el" href="_g_l_t_f_scene_8h_source.xhtml">GLTFScene.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a17ec197a0df8ce135b3c0100b79c11d7" name="a17ec197a0df8ce135b3c0100b79c11d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17ec197a0df8ce135b3c0100b79c11d7">&#9670;&#160;</a></span>Add2DText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::Add2DText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a>&#160;</td>
          <td class="paramname"><em>textAttach</em> = <code><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86aae3d3102ce5048d7838718bccc291ccd">Markup::MTAT_CENTER</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textSize</em> = <code>20</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>textFont</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textR</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textG</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textB</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgR</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgG</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgB</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgA</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a 2D text label to the scene. 2D text labels remain stationary when the viewer is transformed. </p><dl class="section return"><dt>Returns</dt><dd>Status of Add2DText. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text label.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Horizontal offset from left. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Vertical offset from top. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textAttach</td><td>Optional, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a> describing how label is positioned relative to x,y.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textSize</td><td>Optional, height of label font in pixels.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textFont</td><td>Optional, label font. Good choices are "serif" and "sans-serif".</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textR</td><td>Optional, red component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textG</td><td>Optional, green component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textB</td><td>Optional, blue component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgR</td><td>Optional, red component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgG</td><td>Optional, green component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgB</td><td>Optional, blue component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgA</td><td>Optional, alpha component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Optional full path to node to which this markup is attached. If not specified, markup is attached to scene. If specified, the markup does not appear in the visibility selector under annotations. The visibility is controlled by the node's visibility. For a node that is directly under the scene, this is simply the <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> ID of the node. For a <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> that is a child of another node, the path is "NodeIDParent;NodeID". The path is simply a concatenation of nodeIDs that lead to the node to which the markup is attached. The concatenation is with the ';' character. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test011_8cpp-example.xhtml#a2">Test011.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="a4abd212be82d4a229706c245d8db9a35" name="a4abd212be82d4a229706c245d8db9a35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4abd212be82d4a229706c245d8db9a35">&#9670;&#160;</a></span>Add3DText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::Add3DText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a>&#160;</td>
          <td class="paramname"><em>textAttach</em> = <code><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86a00c009bc6c57ab36d9f3b0ed458bb5af">Markup::MTAT_AUTO</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textSize</em> = <code>12</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>textFont</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textOffX</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textOffY</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#ad50873251725f3a325ca393a84ac7bc8">Markup::MarkupLineType</a>&#160;</td>
          <td class="paramname"><em>lineShape</em> = <code><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#ad50873251725f3a325ca393a84ac7bc8a725b3dfb79cfdaba1a9eab54b1359c90">Markup::MLT_LINE</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>lineR</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>lineG</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>lineB</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textR</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textG</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>textB</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgR</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgG</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgB</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>bgA</em> = <code>0.5</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a 3D text label to the scene. 3D text labels change position when the viewer is transformed. </p><dl class="section return"><dt>Returns</dt><dd>Status of Add3DText. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">text</td><td>Text label.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>X location in mesh space.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Y location in mesh space.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">z</td><td>Z location in mesh space.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textAttach</td><td>Optional, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#af00d39b7f1008aee7b1f4f56aee12c86">Markup::MarkupTextAttachmentType</a> describing how label is positioned relative to x,y,z + textOffX,textOffY.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textSize</td><td>Optional, height of label font in pixels.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textFont</td><td>Optional, label font. Good choices are "serif" and "sans-serif".</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textOffX</td><td>Optional amount label is offset, in pixels, from x,y,z in screen X direction.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textOffY</td><td>Optional amount label is offset, in pixels, from x,y,z in screen Y direction.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lineShape</td><td>Optional, <a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_markup.xhtml#ad50873251725f3a325ca393a84ac7bc8">Markup::MarkupLineType</a> defining symbol at end of line.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lineR</td><td>Optional red component of line color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lineG</td><td>Optional green component of line color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">lineB</td><td>Optional blue component of line color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textR</td><td>Optional red component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textG</td><td>Optional green component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">textB</td><td>Optional blue component of text color. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgR</td><td>Optional red component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgG</td><td>Optional green component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgB</td><td>Optional blue component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bgA</td><td>Optional alpha component of text background. Ranges from 0 to 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>Optional full path to node to which this markup is attached. If not specified, markup is attached to scene. If specified, the markup moves with node and visibility is controlled by node, as well as the Annotations entry under the visibility selector. For a node that is directly under the scene, this is simply the <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> ID of the node. For a <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml" title="Nodes are the GLTFWriter class that contain the data that is defined in the GLTF file.">Node</a> that is a child of another node, the path is "NodeIDParent;NodeID". The path is simply a concatenation of nodeIDs that lead to the node to which the markup is attached. The concatenation is with the ';' character. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test011_8cpp-example.xhtml#a3">Test011.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="adea272bb6570744737a12f7f639e40fd" name="adea272bb6570744737a12f7f639e40fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adea272bb6570744737a12f7f639e40fd">&#9670;&#160;</a></span>AppendMesh()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::AppendMesh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td>
          <td class="paramname"><em>mesh</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a mesh node to the scene. Multiple mesh nodes can be appended to a scene. </p><dl class="section return"><dt>Returns</dt><dd>Status of AppendMesh. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">mesh</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_mesh.xhtml" title="Meshes define the renderable objects that can be added to a node.">Mesh</a> node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#a8">Test001.cpp</a>, <a class="el" href="_test002_8cpp-example.xhtml#a5">Test002.cpp</a>, <a class="el" href="_test003_8cpp-example.xhtml#a3">Test003.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#a8">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#a6">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a11">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a8">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#a11">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#a9">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#a6">Test010.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#a9">Test012.cpp</a>, <a class="el" href="_test013_8cpp-example.xhtml#a8">Test013.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#a11">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="aa0eb31bb6d40ed9784244c03f9ab3d9d" name="aa0eb31bb6d40ed9784244c03f9ab3d9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0eb31bb6d40ed9784244c03f9ab3d9d">&#9670;&#160;</a></span>Create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml">Scene</a> * ANSYS::Nexus::GLTFWriter::Scene::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>units</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>scale</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8">Scene::BackgroundType</a>&#160;</td>
          <td class="paramname"><em>backgroundType</em> = <code><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8a65fc5b9c2360c79b260b212430053e59">Scene::BT_NONE</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>r1</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>g1</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>b1</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>r2</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>g2</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>b2</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> scene. The scene node is automatically added to the <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> file. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml" title="Scenes are the GLTFWriter class that create the view of the data that is defined in the GLTF file.">Scene</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Optional, name of scene.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">units</td><td>Optional, units to display with ruler.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">scale</td><td>Optional, scale factor that converts displayed units to scene mesh units.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">backgroundType</td><td>Optional, <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_scene.xhtml#ac17baf491cdba3613b0aa39719a3dbd8">Scene::BackgroundType</a> defining type of background to create.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">r1</td><td>Optional, red component of solid color or first color of gradient.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">g1</td><td>Optional, green component of solid color or first color of gradient.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b1</td><td>Optional, blue component of solid color or first color of gradient.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">r2</td><td>Optional, red component of second color of gradient.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">g2</td><td>Optional, green component of second color of gradient.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">b2</td><td>Optional, blue component of second color of gradient. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a032a02e7ff85707f8ae02dce0ec11ce4" name="a032a02e7ff85707f8ae02dce0ec11ce4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a032a02e7ff85707f8ae02dce0ec11ce4">&#9670;&#160;</a></span>SetCamera()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::SetCamera </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td>
          <td class="paramname"><em>camera</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the camera node for the scene. Only a single camera can be set to a scene. If this is called a second time the second camera will be attached to the scene. The camera node is optional. By default, an orthographic camera is created with an isometric orientation that encompasses the entire scene. </p><dl class="section return"><dt>Returns</dt><dd>Status of SetCamera. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">camera</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_camera.xhtml" title="Cameras define an orthographic or perspective projection of the scene.">Camera</a> node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#a7">Test001.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#a7">Test004.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a10">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a7">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#a10">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#a8">Test009.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#a8">Test012.cpp</a>, <a class="el" href="_test013_8cpp-example.xhtml#a4">Test013.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#a8">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="a1de67b73e229a59c58113807e04af2dd" name="a1de67b73e229a59c58113807e04af2dd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de67b73e229a59c58113807e04af2dd">&#9670;&#160;</a></span>SetClipPlane()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ANSYS::Nexus::GLTFWriter::Scene::SetClipPlane </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p0x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p0y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p0z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p1x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p1y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p1z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p2x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p2y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>p2z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets a clip plane based on the three points given. Clipping plane is based on right hand rule, where normal is given by thumb direction when fingers follow direction of three points.</p>
<p>The part of the object above the plane (normal direction) is clipped </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">p0x</td><td>x coordinate of first point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p0y</td><td>y coordinate of first point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p0z</td><td>z coordinate of first point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p1x</td><td>x coordinate of second point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p1y</td><td>y coordinate of second point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p1z</td><td>z coordinate of second point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p2x</td><td>x coordinate of third point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p2y</td><td>y coordinate of third point of plane.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">p2z</td><td>z coordinate of third point of plane. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test012_8cpp-example.xhtml#a2">Test012.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ad59f57e366c5376b197aed0b10de4f71" name="ad59f57e366c5376b197aed0b10de4f71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad59f57e366c5376b197aed0b10de4f71">&#9670;&#160;</a></span>SetLight()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::SetLight </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td>
          <td class="paramname"><em>light</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the light node for the scene. This node is only required for techniques that have auto-generated programs. All lighting calculations must be done in shader programs. </p><dl class="section return"><dt>Returns</dt><dd>Status of SetLight. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">light</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_light.xhtml" title="Lights define the light objects that can be added to a light node.">Light</a> node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test001_8cpp-example.xhtml#a3">Test001.cpp</a>, <a class="el" href="_test004_8cpp-example.xhtml#a3">Test004.cpp</a>, <a class="el" href="_test005_8cpp-example.xhtml#a3">Test005.cpp</a>, <a class="el" href="_test006_8cpp-example.xhtml#a6">Test006.cpp</a>, <a class="el" href="_test007_8cpp-example.xhtml#a3">Test007.cpp</a>, <a class="el" href="_test008_8cpp-example.xhtml#a6">Test008.cpp</a>, <a class="el" href="_test009_8cpp-example.xhtml#a4">Test009.cpp</a>, <a class="el" href="_test010_8cpp-example.xhtml#a3">Test010.cpp</a>, <a class="el" href="_test012_8cpp-example.xhtml#a4">Test012.cpp</a>, and <a class="el" href="_test014_8cpp-example.xhtml#a4">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<a id="ac53c52f457c3d6616e467438df37d621" name="ac53c52f457c3d6616e467438df37d621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac53c52f457c3d6616e467438df37d621">&#9670;&#160;</a></span>SetProxyImage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Scene::SetProxyImage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_node.xhtml">Node</a> *&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the proxy image node for the scene. A proxy image can be used while loading or on a system that does not support WebGL. The proxy image node is optional. </p><dl class="section return"><dt>Returns</dt><dd>Status of SetProxyImage. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">image</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_image.xhtml" title="Images define texture data.">Image</a> node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="_test014_8cpp-example.xhtml#a10">Test014.cpp</a>.</dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/Product-src/webgl_viewer/gltfwriterlib/include/<a class="el" href="_g_l_t_f_scene_8h_source.xhtml">GLTFScene.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
