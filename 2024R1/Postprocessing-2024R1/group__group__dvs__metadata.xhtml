<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: DVS Metadata</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li class="current"><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DVS Metadata<div class="ingroups"><a class="el" href="group__dvs__main.xhtml">Dynamic Visualization Store</a></div></div></div>
</div><!--header-->
<div class="contents">
<hr  />
 <h3>Table of Contents</h3>
<ul>
<li><a class="el" href="group__group__dvs__metadata.xhtml#dvs_dataset_metadata">DVS Dataset Metadata</a></li>
<li><a class="el" href="group__group__dvs__metadata.xhtml#dvs_part_metadata">DVS Part Metadata</a></li>
<li><a class="el" href="group__group__dvs__metadata.xhtml#dvs_plot_metadata">DVS Plot Metadata</a></li>
<li><a class="el" href="group__group__dvs__metadata.xhtml#dvs_variable_metadata">DVS Variable Metadata</a></li>
</ul>
<hr  />
 <h2><a class="anchor" id="dvs_dataset_metadata"></a>
DVS Dataset Metadata</h2>
<p>The DVS API supports writing dataset metadata via the <a class="el" href="dynamic__visualization__store__api_8h.xhtml#ac5c67fdc3806bf89eebbe49e6daea5c2" title="Add metadata for the current dataset.">dvs_add_metadata()</a> or <a class="el" href="class_d_v_s_1_1_i_client.xhtml#ab4144e59bfdcf9c095c6510c4298d160" title="Add metadata for the current dataset.">DVS::IClient::add_metadata()</a> methods for the C/C++ API (similarly named methods for the Python API). This must be done during the initialization step between begin_init and end_init.</p>
<h3><a class="anchor" id="dvs_dataset_metadata_ensight_supported"></a>
Supported EnSight Dataset Metadata</h3>
<p>The EnSight DVS reader reserves specific metadata key/value pairs for specific operations within EnSight. Below is a list of currently supported tags.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">KEY   </th><th class="markdownTableHeadNone">VALUE/DESCRIPTION    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_VAR   </td><td class="markdownTableBodyNone">The name of the variable definition being used to filter elements, see <a class="el" href="group__group__dvs__metadata.xhtml#dvs_element_filtering">EnSight DVS Element Filtering</a>    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_FILTER   </td><td class="markdownTableBodyNone">The logical equation to use when filtering elements based on a variable's value, see <a class="el" href="group__group__dvs__metadata.xhtml#dvs_element_filtering">EnSight DVS Element Filtering</a>   </td></tr>
</table>
<h3><a class="anchor" id="dvs_element_filtering"></a>
EnSight DVS Element Filtering</h3>
<p>EnSight will automatically filter out elements based on a scalar variable value if the metadata tags are set on a dataset. To do this you first set _DVS::REMOVE_ELEMENT_VAR to the name of the variable definition that will be used and then set _DVS::REMOVE_ELEMENT_FILTER to the filtering equation. The filtering equation follows the standard format for <a class="el" href="group__group__dvs__filtering.xhtml#dvs_query_stanzas">Query Stanzas</a>. There are some limitations however. Element filtering only works with scalar variables and the object/attribute must be "var.value". It also only supports the operators gt (&gt;), lt (&lt;), eq (==), and neq (!=). Lastly it only works for a max of 2 chained query stanzas. A few examples should help this make sense.</p>
<h3><a class="anchor" id="dvs_element_filter_example_1"></a>
Example 1</h3>
<p>A user would like to filter out elements if the value of "my_filter_var" is equal to 1.1 or 1.2.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">KEY   </th><th class="markdownTableHeadNone">VALUE    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_VAR   </td><td class="markdownTableBodyNone">my_filter_var    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_FILTER   </td><td class="markdownTableBodyNone">/var.value/eq/1.1//or/var.value/eq/1.2   </td></tr>
</table>
<h3><a class="anchor" id="dvs_element_filter_example_2"></a>
Example 2</h3>
<p>A user would like to filter out elements based on the variable "pressure" if they are above the threshold of 2.0 and below the threshold of 15.4.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">KEY   </th><th class="markdownTableHeadNone">VALUE    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_VAR   </td><td class="markdownTableBodyNone">pressure    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_FILTER   </td><td class="markdownTableBodyNone">/var.value/gt/2.0//and/var.value/lt/15.4   </td></tr>
</table>
<h3><a class="anchor" id="dvs_element_filter_example_3"></a>
Example 3</h3>
<p>A user would like to filter out elements based on the variable "delete_element" if the value is not equal to 1.0.</p>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">KEY   </th><th class="markdownTableHeadNone">VALUE    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_VAR   </td><td class="markdownTableBodyNone">delete_element    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::REMOVE_ELEMENT_FILTER   </td><td class="markdownTableBodyNone">/var.value/neq/1.0   </td></tr>
</table>
<hr  />
 <h2><a class="anchor" id="dvs_part_metadata"></a>
DVS Part Metadata</h2>
<p>The DVS API supports writing part metadata via <a class="el" href="dynamic__visualization__store__api_8h.xhtml#a4e8a904ae19fd7f2b0c300543bc42576" title="Add part info for simulation.">dvs_add_part_info()</a> or <a class="el" href="class_d_v_s_1_1_i_client.xhtml#a5e9ee6af237e76a6e270d99ec8cd4388" title="Add part information for session.">DVS::IClient::add_part_info()</a> methods for the C/C++ API through the <a class="el" href="structdvs__part__info.xhtml#aef3ab830a0bfcab49d9cbed978e315c2" title="UTF-8 Compatible key , each array should be null terminated.">dvs_part_info::_metadata_keys</a> and <a class="el" href="structdvs__part__info.xhtml#a59c04a77c663b68008a1f69b62574337" title="UTF-8 Compatible value, each array should be null terminate.">dvs_part_info::_metadata_vals</a>. The Python API method is dvs_add_part_info and metadata is passed via the tags dictionary on an object.</p>
<h3><a class="anchor" id="dvs_part_metadata_ensight_supported"></a>
Supported EnSight Part Metadata</h3>
<table class="markdownTable">
<tr class="markdownTableHead">
<th class="markdownTableHeadNone">KEY   </th><th class="markdownTableHeadNone">VALUE    </th></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::PATHNAME   </td><td class="markdownTableBodyNone">Used to setup groups in the user interface. eg. My|Group would create 2 group levels (My-&gt;Group) and put the part under the "Group" group.    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::OBJATTR   </td><td class="markdownTableBodyNone">See <a href="https://nexusdemo.ensight.com/docs/python/html/Python.html?ENS_OBJATTRSchema.html">https://nexusdemo.ensight.com/docs/python/html/Python.html?ENS_OBJATTRSchema.html</a>    </td></tr>
<tr class="markdownTableRowOdd">
<td class="markdownTableBodyNone">_DVS::KIND   </td><td class="markdownTableBodyNone">Used to set part kind. eg. Inlet    </td></tr>
<tr class="markdownTableRowEven">
<td class="markdownTableBodyNone">_DVS::NO_AUTOLOAD   </td><td class="markdownTableBodyNone">Set to anything to not autoload the part when EnSight loads the dataset. Part must be manually loaded.   </td></tr>
</table>
<hr  />
 <h2><a class="anchor" id="dvs_plot_metadata"></a>
DVS Plot Metadata</h2>
<p>The DVS API supports writing plot metadata via <a class="el" href="dynamic__visualization__store__api_8h.xhtml#afe298f932fd909b7caabd6f430489b16" title="Add plot info for simulation.">dvs_add_plot_info()</a> or <a class="el" href="class_d_v_s_1_1_i_client.xhtml#a1bdb7ca9cf25c63e533f47fe26132af6" title="Add plot information for session.">DVS::IClient::add_plot_info()</a> methods for the C/C++ API through the <a class="el" href="structdvs__plot__info.xhtml#a6182c10a62849ada795123fd6707d612" title="UTF-8 Compatible key , each array should be null terminated.">dvs_plot_info::_metadata_keys</a> and <a class="el" href="structdvs__plot__info.xhtml#a467b2e79ceb431c9358423647de59699" title="UTF-8 Compatible value, each array should be null terminated.">dvs_plot_info::_metadata_vals</a>. The Python API method is dvs_add_plot_info and metadata is passed via the tags dictionary on an object.</p>
<hr  />
 <h2><a class="anchor" id="dvs_variable_metadata"></a>
DVS Variable Metadata</h2>
<p>The DVS API supports writing variable metadata via <a class="el" href="dynamic__visualization__store__api_8h.xhtml#a0b9bbed0db0a5f3e91af8a02aed48e1e" title="Add var info for simulation.">dvs_add_var_info()</a> or <a class="el" href="class_d_v_s_1_1_i_client.xhtml#a82f841d7f6f33071bf8c709623ca215d" title="Add variable information for session.">DVS::IClient::add_var_info()</a> methods for the C/C++ API through the <a class="el" href="structdvs__var__info.xhtml#a9c656726edeeb5c0cf5b9a42f870b3a2" title="UTF-8 Compatible key , each array should be null terminated.">dvs_var_info::_metadata_keys</a> and <a class="el" href="structdvs__var__info.xhtml#abe0afbff61a368336c7750c831a3c056" title="UTF-8 Compatible value, each array should be null terminated.">dvs_var_info::_metadata_vals</a>. The Python API method is dvs_add_var_info and metadata is passed via the tags dictionary on an object. </p>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
