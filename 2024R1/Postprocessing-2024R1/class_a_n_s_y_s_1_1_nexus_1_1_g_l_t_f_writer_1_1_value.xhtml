<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: ANSYS::Nexus::GLTFWriter::Value Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_a_n_s_y_s.xhtml">ANSYS</a></li><li class="navelem"><b>Nexus</b></li><li class="navelem"><b>GLTFWriter</b></li><li class="navelem"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ANSYS::Nexus::GLTFWriter::Value Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span><div class="ingroups"><a class="el" href="group__gltf.xhtml">GLTFWriter Interface</a></div></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_g_l_t_f_writer_8h_source.xhtml">GLTFWriter.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ANSYS::Nexus::GLTFWriter::Value:</div>
<div class="dyncontent">
 <div class="center">
  <img src="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.png" alt=""/>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a00142a70a3b2095c69d89326d8959ba2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a00142a70a3b2095c69d89326d8959ba2">Set</a> (unsigned int count, const char **v)=0</td></tr>
<tr class="separator:a00142a70a3b2095c69d89326d8959ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a749860d3862d60086133d74b48edd6e5"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a749860d3862d60086133d74b48edd6e5">Set</a> (unsigned int count, const bool *v)=0</td></tr>
<tr class="separator:a749860d3862d60086133d74b48edd6e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a906d5aba0c13e575910f54f5c5631fad"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a906d5aba0c13e575910f54f5c5631fad">Set</a> (unsigned int count, const char *v)=0</td></tr>
<tr class="separator:a906d5aba0c13e575910f54f5c5631fad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67da789ae0d18f77a00d111e4a49e205"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a67da789ae0d18f77a00d111e4a49e205">Set</a> (unsigned int count, const short *v)=0</td></tr>
<tr class="separator:a67da789ae0d18f77a00d111e4a49e205"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26b18046ec4fb4621e7b0ecde0150967"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a26b18046ec4fb4621e7b0ecde0150967">Set</a> (unsigned int count, const unsigned short *v)=0</td></tr>
<tr class="separator:a26b18046ec4fb4621e7b0ecde0150967"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedd6e4f026418125f3707a8c14e6dc21"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#aedd6e4f026418125f3707a8c14e6dc21">Set</a> (unsigned int count, const int *v)=0</td></tr>
<tr class="separator:aedd6e4f026418125f3707a8c14e6dc21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3fc4f41646e5266180ae461ab05ed5c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#aa3fc4f41646e5266180ae461ab05ed5c">Set</a> (unsigned int count, const unsigned int *v)=0</td></tr>
<tr class="separator:aa3fc4f41646e5266180ae461ab05ed5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdb0d8b7722cb29136fcb47da4b590f1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#abdb0d8b7722cb29136fcb47da4b590f1">Set</a> (unsigned int count, const float *v)=0</td></tr>
<tr class="separator:abdb0d8b7722cb29136fcb47da4b590f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0e5ed0d020e7fb037473ef60f0af55"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#abb0e5ed0d020e7fb037473ef60f0af55">Set</a> (unsigned int count, const double *v)=0</td></tr>
<tr class="separator:abb0e5ed0d020e7fb037473ef60f0af55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727cc4b43c23e4404c88b5f4b9e7e6b1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a727cc4b43c23e4404c88b5f4b9e7e6b1">Set</a> (const char *v1, const char *v2=0, const char *v3=0, const char *v4=0)=0</td></tr>
<tr class="separator:a727cc4b43c23e4404c88b5f4b9e7e6b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86b24c5305ac68fa3edae8179f74e8a6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a86b24c5305ac68fa3edae8179f74e8a6">Set</a> (double v1)=0</td></tr>
<tr class="separator:a86b24c5305ac68fa3edae8179f74e8a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a09a9331bc683f60336d63a8c2fa6ed"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a0a09a9331bc683f60336d63a8c2fa6ed">Set</a> (double v1, double v2)=0</td></tr>
<tr class="separator:a0a09a9331bc683f60336d63a8c2fa6ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb9077e7def645a8b053eedb550c1d1c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#aeb9077e7def645a8b053eedb550c1d1c">Set</a> (double v1, double v2, double v3)=0</td></tr>
<tr class="separator:aeb9077e7def645a8b053eedb550c1d1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6d698fe9c7213333f6259bd2e648cd2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#ae6d698fe9c7213333f6259bd2e648cd2">Set</a> (double v1, double v2, double v3, double v4)=0</td></tr>
<tr class="separator:ae6d698fe9c7213333f6259bd2e648cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71a0c1673f29bd17f151d656b2e5d20c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a71a0c1673f29bd17f151d656b2e5d20c">Append</a> (const char *value)=0</td></tr>
<tr class="separator:a71a0c1673f29bd17f151d656b2e5d20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afba2497c06b6ddfd500c302dfd9fcbbe"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#afba2497c06b6ddfd500c302dfd9fcbbe">Append</a> (double value)=0</td></tr>
<tr class="separator:afba2497c06b6ddfd500c302dfd9fcbbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af29f4e14a62716a228a514f941b269cb"><td class="memItemLeft" align="right" valign="top">virtual unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#af29f4e14a62716a228a514f941b269cb">Size</a> () const =0</td></tr>
<tr class="separator:af29f4e14a62716a228a514f941b269cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e7be40e2ced81b9522beb638949bdff"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a2e7be40e2ced81b9522beb638949bdff">elemS</a> (unsigned int pos) const =0</td></tr>
<tr class="separator:a2e7be40e2ced81b9522beb638949bdff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae85df55775fc4d616c70b8f56775ffd8"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#ae85df55775fc4d616c70b8f56775ffd8">elemD</a> (unsigned int pos) const =0</td></tr>
<tr class="separator:ae85df55775fc4d616c70b8f56775ffd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a6dbaf0f04a2c61d832b4d9cacc3b96e5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a6dbaf0f04a2c61d832b4d9cacc3b96e5">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, const <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *value=0)</td></tr>
<tr class="separator:a6dbaf0f04a2c61d832b4d9cacc3b96e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5d5cf92f46f5566a08f6970eed6e9ff"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#af5d5cf92f46f5566a08f6970eed6e9ff">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const char **v)</td></tr>
<tr class="separator:af5d5cf92f46f5566a08f6970eed6e9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7685f9efebe00f6fc919bfc0d0c2ba2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#ad7685f9efebe00f6fc919bfc0d0c2ba2">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const bool *v)</td></tr>
<tr class="separator:ad7685f9efebe00f6fc919bfc0d0c2ba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1c3da25f5c6dac6153663207a77ec6f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#ad1c3da25f5c6dac6153663207a77ec6f">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const char *v)</td></tr>
<tr class="separator:ad1c3da25f5c6dac6153663207a77ec6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4e4785d5c4260f7179d860e71ebb921"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#ac4e4785d5c4260f7179d860e71ebb921">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const short *v)</td></tr>
<tr class="separator:ac4e4785d5c4260f7179d860e71ebb921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3adcc908a6a069f695e1cc923b18fc0f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a3adcc908a6a069f695e1cc923b18fc0f">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const unsigned short *v)</td></tr>
<tr class="separator:a3adcc908a6a069f695e1cc923b18fc0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07a4a46698df3c3442f4f54c470e0906"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a07a4a46698df3c3442f4f54c470e0906">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const int *v)</td></tr>
<tr class="separator:a07a4a46698df3c3442f4f54c470e0906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1673b402749e73be0063c8961c3161b6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a1673b402749e73be0063c8961c3161b6">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const unsigned int *v)</td></tr>
<tr class="separator:a1673b402749e73be0063c8961c3161b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381225a7adf4da6f142d9a8c5a289c5a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a381225a7adf4da6f142d9a8c5a289c5a">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const float *v)</td></tr>
<tr class="separator:a381225a7adf4da6f142d9a8c5a289c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a084cde317981e452b8145b80725319e2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a084cde317981e452b8145b80725319e2">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, unsigned int count, const double *v)</td></tr>
<tr class="separator:a084cde317981e452b8145b80725319e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa0b7d5635bed8c9d06f15314692ae7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a9aa0b7d5635bed8c9d06f15314692ae7">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, const char *v1, const char *v2=0, const char *v3=0, const char *v4=0)</td></tr>
<tr class="separator:a9aa0b7d5635bed8c9d06f15314692ae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24e94628c0c852a804cbb42601407aa2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a24e94628c0c852a804cbb42601407aa2">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, double v1)</td></tr>
<tr class="separator:a24e94628c0c852a804cbb42601407aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed919f8db8c3cca7ea8dc590ccd4879"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a7ed919f8db8c3cca7ea8dc590ccd4879">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, double v1, double v2)</td></tr>
<tr class="separator:a7ed919f8db8c3cca7ea8dc590ccd4879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64d2b223b15897b19ab41abebe0dc503"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a64d2b223b15897b19ab41abebe0dc503">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, double v1, double v2, double v3)</td></tr>
<tr class="separator:a64d2b223b15897b19ab41abebe0dc503"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d3581e322ddd9fdc12e45a3fda39ce2"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml#a5d3581e322ddd9fdc12e45a3fda39ce2">Create</a> (<a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *gltf, const char *name, double v1, double v2, double v3, double v4)</td></tr>
<tr class="separator:a5d3581e322ddd9fdc12e45a3fda39ce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="_g_l_t_f_value_8h_source.xhtml#l00025">25</a> of file <a class="el" href="_g_l_t_f_value_8h_source.xhtml">GLTFValue.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a817255ad6a8c2c4213d828668b6d1a1f" name="a817255ad6a8c2c4213d828668b6d1a1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a817255ad6a8c2c4213d828668b6d1a1f">&#9670;&#160;</a></span>~Value()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual ANSYS::Nexus::GLTFWriter::Value::~Value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="_g_l_t_f_value_8h_source.xhtml#l00028">28</a> of file <a class="el" href="_g_l_t_f_value_8h_source.xhtml">GLTFValue.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a71a0c1673f29bd17f151d656b2e5d20c" name="a71a0c1673f29bd17f151d656b2e5d20c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71a0c1673f29bd17f151d656b2e5d20c">&#9670;&#160;</a></span>Append() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Append </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Appends to the content of a value. Extends the size of the value. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Element value to append </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="afba2497c06b6ddfd500c302dfd9fcbbe" name="afba2497c06b6ddfd500c302dfd9fcbbe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afba2497c06b6ddfd500c302dfd9fcbbe">&#9670;&#160;</a></span>Append() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Append </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Appends to the content of a value. Extends the size of the value. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Element value to append </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a9aa0b7d5635bed8c9d06f15314692ae7" name="a9aa0b7d5635bed8c9d06f15314692ae7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aa0b7d5635bed8c9d06f15314692ae7">&#9670;&#160;</a></span>Create() <span class="overload">[1/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v2</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v3</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v4</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with 1-4 elements. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Initial content of value element 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Optional content of value element 2.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Optional content of value element 3.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v4</td><td>Optional content of value element 4. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6dbaf0f04a2c61d832b4d9cacc3b96e5" name="a6dbaf0f04a2c61d832b4d9cacc3b96e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dbaf0f04a2c61d832b4d9cacc3b96e5">&#9670;&#160;</a></span>Create() <span class="overload">[2/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> *&#160;</td>
          <td class="paramname"><em>value</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with an optional content. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">value</td><td>Optional, initial content of value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a24e94628c0c852a804cbb42601407aa2" name="a24e94628c0c852a804cbb42601407aa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24e94628c0c852a804cbb42601407aa2">&#9670;&#160;</a></span>Create() <span class="overload">[3/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with a single element. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Initial content of value element 1. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a7ed919f8db8c3cca7ea8dc590ccd4879" name="a7ed919f8db8c3cca7ea8dc590ccd4879"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ed919f8db8c3cca7ea8dc590ccd4879">&#9670;&#160;</a></span>Create() <span class="overload">[4/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with 2 elements. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Initial content of value element 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Initial content of value element 2. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a64d2b223b15897b19ab41abebe0dc503" name="a64d2b223b15897b19ab41abebe0dc503"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a64d2b223b15897b19ab41abebe0dc503">&#9670;&#160;</a></span>Create() <span class="overload">[5/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with 3 elements. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Initial content of value element 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Initial content of value element 2.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Initial content of value element 3. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5d3581e322ddd9fdc12e45a3fda39ce2" name="a5d3581e322ddd9fdc12e45a3fda39ce2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d3581e322ddd9fdc12e45a3fda39ce2">&#9670;&#160;</a></span>Create() <span class="overload">[6/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value with 4 elements. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Initial content of value element 1.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Initial content of value element 2.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Initial content of value element 3.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v4</td><td>Initial content of value element 4. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad7685f9efebe00f6fc919bfc0d0c2ba2" name="ad7685f9efebe00f6fc919bfc0d0c2ba2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7685f9efebe00f6fc919bfc0d0c2ba2">&#9670;&#160;</a></span>Create() <span class="overload">[7/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af5d5cf92f46f5566a08f6970eed6e9ff" name="af5d5cf92f46f5566a08f6970eed6e9ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5d5cf92f46f5566a08f6970eed6e9ff">&#9670;&#160;</a></span>Create() <span class="overload">[8/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad1c3da25f5c6dac6153663207a77ec6f" name="ad1c3da25f5c6dac6153663207a77ec6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1c3da25f5c6dac6153663207a77ec6f">&#9670;&#160;</a></span>Create() <span class="overload">[9/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a084cde317981e452b8145b80725319e2" name="a084cde317981e452b8145b80725319e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a084cde317981e452b8145b80725319e2">&#9670;&#160;</a></span>Create() <span class="overload">[10/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a381225a7adf4da6f142d9a8c5a289c5a" name="a381225a7adf4da6f142d9a8c5a289c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a381225a7adf4da6f142d9a8c5a289c5a">&#9670;&#160;</a></span>Create() <span class="overload">[11/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a07a4a46698df3c3442f4f54c470e0906" name="a07a4a46698df3c3442f4f54c470e0906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07a4a46698df3c3442f4f54c470e0906">&#9670;&#160;</a></span>Create() <span class="overload">[12/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac4e4785d5c4260f7179d860e71ebb921" name="ac4e4785d5c4260f7179d860e71ebb921"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4e4785d5c4260f7179d860e71ebb921">&#9670;&#160;</a></span>Create() <span class="overload">[13/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1673b402749e73be0063c8961c3161b6" name="a1673b402749e73be0063c8961c3161b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1673b402749e73be0063c8961c3161b6">&#9670;&#160;</a></span>Create() <span class="overload">[14/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3adcc908a6a069f695e1cc923b18fc0f" name="a3adcc908a6a069f695e1cc923b18fc0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3adcc908a6a069f695e1cc923b18fc0f">&#9670;&#160;</a></span>Create() <span class="overload">[15/15]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml">Value</a> * ANSYS::Nexus::GLTFWriter::Value::Create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml">GLTF</a> *&#160;</td>
          <td class="paramname"><em>gltf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Creates a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> object. <span style="color: #ff0000;font-weight:bold;">Do not delete this pointer.</span> </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">gltf</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_g_l_t_f.xhtml" title="This is the main class of the GLTFWriter.">GLTF</a> object.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>Name of value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Initial content of value elements. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae85df55775fc4d616c70b8f56775ffd8" name="ae85df55775fc4d616c70b8f56775ffd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae85df55775fc4d616c70b8f56775ffd8">&#9670;&#160;</a></span>elemD()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double ANSYS::Nexus::GLTFWriter::Value::elemD </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns value of string element </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> element at position </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_index.xhtml" title="Indexes define elements within primitives.">Index</a> of element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a2e7be40e2ced81b9522beb638949bdff" name="a2e7be40e2ced81b9522beb638949bdff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e7be40e2ced81b9522beb638949bdff">&#9670;&#160;</a></span>elemS()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * ANSYS::Nexus::GLTFWriter::Value::elemS </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns value of string element </p><dl class="section return"><dt>Returns</dt><dd><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_value.xhtml" title="Values are objects for storing single and multiple numbers and strings.">Value</a> element at position </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">pos</td><td><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_index.xhtml" title="Indexes define elements within primitives.">Index</a> of element </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a727cc4b43c23e4404c88b5f4b9e7e6b1" name="a727cc4b43c23e4404c88b5f4b9e7e6b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a727cc4b43c23e4404c88b5f4b9e7e6b1">&#9670;&#160;</a></span>Set() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v2</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v3</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v4</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resizes value to a 1 to 4 size element and sets the content. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Element 1 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Optional, element 1 value</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Optional, element 2 value</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v4</td><td>Optional, element 3 value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a86b24c5305ac68fa3edae8179f74e8a6" name="a86b24c5305ac68fa3edae8179f74e8a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86b24c5305ac68fa3edae8179f74e8a6">&#9670;&#160;</a></span>Set() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resizes value to a single element and sets the content. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Element 1 value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0a09a9331bc683f60336d63a8c2fa6ed" name="a0a09a9331bc683f60336d63a8c2fa6ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a09a9331bc683f60336d63a8c2fa6ed">&#9670;&#160;</a></span>Set() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resizes value to 2 elements and sets the content. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Element 1 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Element 2 value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeb9077e7def645a8b053eedb550c1d1c" name="aeb9077e7def645a8b053eedb550c1d1c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb9077e7def645a8b053eedb550c1d1c">&#9670;&#160;</a></span>Set() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resizes value to 3 elements and sets the content. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Element 1 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Element 2 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Element 3 value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ae6d698fe9c7213333f6259bd2e648cd2" name="ae6d698fe9c7213333f6259bd2e648cd2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6d698fe9c7213333f6259bd2e648cd2">&#9670;&#160;</a></span>Set() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resizes value to 4 elements and sets the content. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v1</td><td>Element 1 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v2</td><td>Element 2 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v3</td><td>Element 3 value.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v4</td><td>Element 4 value. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a749860d3862d60086133d74b48edd6e5" name="a749860d3862d60086133d74b48edd6e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a749860d3862d60086133d74b48edd6e5">&#9670;&#160;</a></span>Set() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a00142a70a3b2095c69d89326d8959ba2" name="a00142a70a3b2095c69d89326d8959ba2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00142a70a3b2095c69d89326d8959ba2">&#9670;&#160;</a></span>Set() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char **&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a906d5aba0c13e575910f54f5c5631fad" name="a906d5aba0c13e575910f54f5c5631fad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a906d5aba0c13e575910f54f5c5631fad">&#9670;&#160;</a></span>Set() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abb0e5ed0d020e7fb037473ef60f0af55" name="abb0e5ed0d020e7fb037473ef60f0af55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb0e5ed0d020e7fb037473ef60f0af55">&#9670;&#160;</a></span>Set() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="abdb0d8b7722cb29136fcb47da4b590f1" name="abdb0d8b7722cb29136fcb47da4b590f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdb0d8b7722cb29136fcb47da4b590f1">&#9670;&#160;</a></span>Set() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aedd6e4f026418125f3707a8c14e6dc21" name="aedd6e4f026418125f3707a8c14e6dc21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aedd6e4f026418125f3707a8c14e6dc21">&#9670;&#160;</a></span>Set() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a67da789ae0d18f77a00d111e4a49e205" name="a67da789ae0d18f77a00d111e4a49e205"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67da789ae0d18f77a00d111e4a49e205">&#9670;&#160;</a></span>Set() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const short *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa3fc4f41646e5266180ae461ab05ed5c" name="aa3fc4f41646e5266180ae461ab05ed5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa3fc4f41646e5266180ae461ab05ed5c">&#9670;&#160;</a></span>Set() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a26b18046ec4fb4621e7b0ecde0150967" name="a26b18046ec4fb4621e7b0ecde0150967"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26b18046ec4fb4621e7b0ecde0150967">&#9670;&#160;</a></span>Set() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ANSYS::Nexus::GLTFWriter::Value::Set </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short *&#160;</td>
          <td class="paramname"><em>v</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resises value and sets the content of a value from a vector of values. </p><dl class="section return"><dt>Returns</dt><dd>Status of Set. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">count</td><td>Amount of v content to use.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Elements values. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af29f4e14a62716a228a514f941b269cb" name="af29f4e14a62716a228a514f941b269cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af29f4e14a62716a228a514f941b269cb">&#9670;&#160;</a></span>Size()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual unsigned int ANSYS::Nexus::GLTFWriter::Value::Size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns number of entries in value. </p><dl class="section return"><dt>Returns</dt><dd>Size of value. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/Product-src/webgl_viewer/gltfwriterlib/include/<a class="el" href="_g_l_t_f_value_8h_source.xhtml">GLTFValue.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
