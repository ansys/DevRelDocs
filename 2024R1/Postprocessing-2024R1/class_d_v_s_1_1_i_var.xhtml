<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: DVS::IVar Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>DVS</b></li><li class="navelem"><a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="class_d_v_s_1_1_i_var-members.xhtml">List of all members</a>  </div>
  <div class="headertitle"><div class="title">DVS::IVar Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="dvs__var__interface_8h_source.xhtml">dvs_var_interface.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a102df9a173523a896419011582abefb1"><td class="memItemLeft" align="right" valign="top"><a id="a102df9a173523a896419011582abefb1" name="a102df9a173523a896419011582abefb1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>IVar</b> ()=default</td></tr>
<tr class="separator:a102df9a173523a896419011582abefb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f21e53225c764cb3441f36c32f77bee"><td class="memItemLeft" align="right" valign="top"><a id="a0f21e53225c764cb3441f36c32f77bee" name="a0f21e53225c764cb3441f36c32f77bee"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~IVar</b> ()=default</td></tr>
<tr class="separator:a0f21e53225c764cb3441f36c32f77bee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac24d89cca155832661aaf190e933e30"><td class="memItemLeft" align="right" valign="top"><a id="aac24d89cca155832661aaf190e933e30" name="aac24d89cca155832661aaf190e933e30"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>IVar</b> (<a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;&amp;)=default</td></tr>
<tr class="separator:aac24d89cca155832661aaf190e933e30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2bc5d54f4ba396d261698089d3ec263"><td class="memItemLeft" align="right" valign="top"><a id="ad2bc5d54f4ba396d261698089d3ec263" name="ad2bc5d54f4ba396d261698089d3ec263"></a>
<a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;&amp;)=default</td></tr>
<tr class="separator:ad2bc5d54f4ba396d261698089d3ec263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5bd19f8cf769575e1d6f13890c876b"><td class="memItemLeft" align="right" valign="top"><a id="afd5bd19f8cf769575e1d6f13890c876b" name="afd5bd19f8cf769575e1d6f13890c876b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>IVar</b> (const <a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;)=default</td></tr>
<tr class="separator:afd5bd19f8cf769575e1d6f13890c876b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7eb6e25ea05a45c383d24ef7483486a"><td class="memItemLeft" align="right" valign="top"><a id="aa7eb6e25ea05a45c383d24ef7483486a" name="aa7eb6e25ea05a45c383d24ef7483486a"></a>
<a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="class_d_v_s_1_1_i_var.xhtml">IVar</a> &amp;)=default</td></tr>
<tr class="separator:aa7eb6e25ea05a45c383d24ef7483486a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b24dd196d3ddf3dbbdc29eca9cca3f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a12b24dd196d3ddf3dbbdc29eca9cca3f">get_name</a> () const =0</td></tr>
<tr class="separator:a12b24dd196d3ddf3dbbdc29eca9cca3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae837af2ee946d8f54695d1abf95c5cda"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0">dvs_var_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#ae837af2ee946d8f54695d1abf95c5cda">get_var_type</a> () const =0</td></tr>
<tr class="separator:ae837af2ee946d8f54695d1abf95c5cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e97f43d3d1057267399c0e66deadd3d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="dynamic__visualization__store__enums_8h.xhtml#af4f0eba512eff253854b44d7ce078491">dvs_var_location</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a7e97f43d3d1057267399c0e66deadd3d">get_var_location</a> () const =0</td></tr>
<tr class="separator:a7e97f43d3d1057267399c0e66deadd3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dbdd84e6f6342deae82ede6dcf2156e"><td class="memItemLeft" align="right" valign="top">virtual uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a9dbdd84e6f6342deae82ede6dcf2156e">get_float_count_per_value</a> () const =0</td></tr>
<tr class="separator:a9dbdd84e6f6342deae82ede6dcf2156e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa67cf54eb22ee51a7bf5eeb778cee5"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a6aa67cf54eb22ee51a7bf5eeb778cee5">get_unit_dimension</a> () const =0</td></tr>
<tr class="separator:a6aa67cf54eb22ee51a7bf5eeb778cee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa484336b355e68f93069e97d771e4a6e"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#aa484336b355e68f93069e97d771e4a6e">get_unit_label</a> () const =0</td></tr>
<tr class="separator:aa484336b355e68f93069e97d771e4a6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4c1b8698417ac314a45143e92986d6"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="class_d_v_s_1_1_i_dataset.xhtml">DVS::IDataset</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#acd4c1b8698417ac314a45143e92986d6">get_dataset</a> () const =0</td></tr>
<tr class="separator:acd4c1b8698417ac314a45143e92986d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2deab60f72955106a4a4a3f67a0f295e"><td class="memItemLeft" align="right" valign="top">virtual uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a2deab60f72955106a4a4a3f67a0f295e">get_num_metadata</a> () const =0</td></tr>
<tr class="separator:a2deab60f72955106a4a4a3f67a0f295e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae18e148e2d2996891560734e53cd9671"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#ae18e148e2d2996891560734e53cd9671">get_metadata_key</a> (uint32_t index) const =0</td></tr>
<tr class="separator:ae18e148e2d2996891560734e53cd9671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22432a4b79163a933a850a7a58dfe315"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a22432a4b79163a933a850a7a58dfe315">get_metadata_value</a> (uint32_t index) const =0</td></tr>
<tr class="separator:a22432a4b79163a933a850a7a58dfe315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04bb8ee80947c2bd09576961d65d4403"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_d_v_s_1_1_i_var.xhtml#a04bb8ee80947c2bd09576961d65d4403">get_metadata_value</a> (const char *key) const =0</td></tr>
<tr class="separator:a04bb8ee80947c2bd09576961d65d4403"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This object's lifetime is controlled by the query it is returned from. If the filter or uri of the query is changed this object will be destroyed. If this is a chained query and any of the parent queries are modified this object will also be destroyed. See <a class="el" href="dvs__query__interface_8h.xhtml" title="DVS Reader API Query Interface.">dvs_query_interface.h</a> for more information. </p>

<p class="definition">Definition at line <a class="el" href="dvs__var__interface_8h_source.xhtml#l00057">57</a> of file <a class="el" href="dvs__var__interface_8h_source.xhtml">dvs_var_interface.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="acd4c1b8698417ac314a45143e92986d6" name="acd4c1b8698417ac314a45143e92986d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd4c1b8698417ac314a45143e92986d6">&#9670;&#160;</a></span>get_dataset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="class_d_v_s_1_1_i_dataset.xhtml">DVS::IDataset</a> * DVS::IVar::get_dataset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the reference dataset for this var. </p>
<dl class="section return"><dt>Returns</dt><dd>const <a class="el" href="class_d_v_s_1_1_i_dataset.xhtml" title="Interface for datasets for the DVS Reader API.">DVS::IDataset</a>* the reference to the dataset </dd></dl>

</div>
</div>
<a id="a9dbdd84e6f6342deae82ede6dcf2156e" name="a9dbdd84e6f6342deae82ede6dcf2156e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dbdd84e6f6342deae82ede6dcf2156e">&#9670;&#160;</a></span>get_float_count_per_value()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint32_t DVS::IVar::get_float_count_per_value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the number of floats per value. </p>
<p>Gets the size of each value, i.e. a scalar is 1 a vector is 3 etc.</p>
<dl class="section return"><dt>Returns</dt><dd>uint32_t size of each value for the var </dd></dl>

</div>
</div>
<a id="ae18e148e2d2996891560734e53cd9671" name="ae18e148e2d2996891560734e53cd9671"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae18e148e2d2996891560734e53cd9671">&#9670;&#160;</a></span>get_metadata_key()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_metadata_key </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a metadata key based on the index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>index of the key to return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>const char* key for the metadata, nullptr if not found </dd></dl>

</div>
</div>
<a id="a04bb8ee80947c2bd09576961d65d4403" name="a04bb8ee80947c2bd09576961d65d4403"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04bb8ee80947c2bd09576961d65d4403">&#9670;&#160;</a></span>get_metadata_value() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_metadata_value </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the metadata value based on the key. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>the key to return the value of </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>const char* value for the key, nullptr if not found </dd></dl>

</div>
</div>
<a id="a22432a4b79163a933a850a7a58dfe315" name="a22432a4b79163a933a850a7a58dfe315"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22432a4b79163a933a850a7a58dfe315">&#9670;&#160;</a></span>get_metadata_value() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_metadata_value </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the metadata value base on the index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>index of the value to return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>const char* value for the metadata, nullptr if not found </dd></dl>

</div>
</div>
<a id="a12b24dd196d3ddf3dbbdc29eca9cca3f" name="a12b24dd196d3ddf3dbbdc29eca9cca3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12b24dd196d3ddf3dbbdc29eca9cca3f">&#9670;&#160;</a></span>get_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the variable. </p>
<dl class="section return"><dt>Returns</dt><dd>const char* name of variable </dd></dl>

</div>
</div>
<a id="a2deab60f72955106a4a4a3f67a0f295e" name="a2deab60f72955106a4a4a3f67a0f295e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2deab60f72955106a4a4a3f67a0f295e">&#9670;&#160;</a></span>get_num_metadata()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual uint32_t DVS::IVar::get_num_metadata </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the num metadata values on this var. </p>
<dl class="section return"><dt>Returns</dt><dd>uint32_t number of metadata keys/values </dd></dl>

</div>
</div>
<a id="a6aa67cf54eb22ee51a7bf5eeb778cee5" name="a6aa67cf54eb22ee51a7bf5eeb778cee5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6aa67cf54eb22ee51a7bf5eeb778cee5">&#9670;&#160;</a></span>get_unit_dimension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_unit_dimension </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the unit dimensions as string. </p>
<dl class="section return"><dt>Returns</dt><dd>const char* string of unit dimensions </dd></dl>

</div>
</div>
<a id="aa484336b355e68f93069e97d771e4a6e" name="aa484336b355e68f93069e97d771e4a6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa484336b355e68f93069e97d771e4a6e">&#9670;&#160;</a></span>get_unit_label()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * DVS::IVar::get_unit_label </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the unit label as string. </p>
<p>This is a specialized name referring to the dimensions</p>
<dl class="section return"><dt>Returns</dt><dd>const char* string of unit label </dd></dl>

</div>
</div>
<a id="a7e97f43d3d1057267399c0e66deadd3d" name="a7e97f43d3d1057267399c0e66deadd3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e97f43d3d1057267399c0e66deadd3d">&#9670;&#160;</a></span>get_var_location()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="dynamic__visualization__store__enums_8h.xhtml#af4f0eba512eff253854b44d7ce078491">dvs_var_location</a> DVS::IVar::get_var_location </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the var location. </p>
<dl class="section return"><dt>Returns</dt><dd>dvs_var_location location of var </dd></dl>

</div>
</div>
<a id="ae837af2ee946d8f54695d1abf95c5cda" name="ae837af2ee946d8f54695d1abf95c5cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae837af2ee946d8f54695d1abf95c5cda">&#9670;&#160;</a></span>get_var_type()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="dynamic__visualization__store__enums_8h.xhtml#af6aa6351345da4151507012681b3aff0">dvs_var_type</a> DVS::IVar::get_var_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the type of var. </p>
<dl class="section return"><dt>Returns</dt><dd>dvs_var_type type of var </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>D:/Product-src/ensight/user_defined_src/readers/dvs/include/<a class="el" href="dvs__var__interface_8h_source.xhtml">dvs_var_interface.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
