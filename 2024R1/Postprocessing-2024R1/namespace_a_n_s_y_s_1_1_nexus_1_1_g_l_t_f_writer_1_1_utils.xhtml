<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.6"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Veronica: ANSYS::Nexus::GLTFWriter::Utils Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="veronica_logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">Veronica
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Introduction</span></a></li>
      <li><a href="modules.xhtml"><span>Modules</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_a_n_s_y_s.xhtml">ANSYS</a></li><li class="navelem"><b>Nexus</b></li><li class="navelem"><b>GLTFWriter</b></li><li class="navelem"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils.xhtml">Utils</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle"><div class="title">ANSYS::Nexus::GLTFWriter::Utils Namespace Reference<div class="ingroups"><a class="el" href="group__gltf.xhtml">GLTFWriter Interface</a></div></div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils_1_1_repack.xhtml">Repack</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:affe7f4455b2c41c52b52b1f878a697b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils.xhtml#affe7f4455b2c41c52b52b1f878a697b3">ComputeElementNormals3</a> (const unsigned int numVertices, const float *vertices, const unsigned int numElements, const unsigned int elementSize, const unsigned short *indices, float *normals)</td></tr>
<tr class="separator:affe7f4455b2c41c52b52b1f878a697b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5ae42d4a7f9a507bc54fa69453b455"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils.xhtml#a9e5ae42d4a7f9a507bc54fa69453b455">ComputeElementNormals3</a> (const unsigned int numVertices, const float *vertices, const unsigned int numElements, const unsigned int elementSize, const unsigned int *indices, float *normals)</td></tr>
<tr class="separator:a9e5ae42d4a7f9a507bc54fa69453b455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79e0bdf1db7d56a58b428ee308f66bad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils.xhtml#a79e0bdf1db7d56a58b428ee308f66bad">ComputeVertexNormals3</a> (const unsigned int numVertices, const float *vertices, const unsigned int numElements, const unsigned int elementSize, const unsigned short *indices, float *normals)</td></tr>
<tr class="separator:a79e0bdf1db7d56a58b428ee308f66bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d71b67c17517bae2fdc85463f537c67"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespace_a_n_s_y_s_1_1_nexus_1_1_g_l_t_f_writer_1_1_utils.xhtml#a8d71b67c17517bae2fdc85463f537c67">ComputeVertexNormals3</a> (const unsigned int numVertices, const float *vertices, const unsigned int numElements, const unsigned int elementSize, const unsigned int *indices, float *normals)</td></tr>
<tr class="separator:a8d71b67c17517bae2fdc85463f537c67"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a9e5ae42d4a7f9a507bc54fa69453b455" name="a9e5ae42d4a7f9a507bc54fa69453b455"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e5ae42d4a7f9a507bc54fa69453b455">&#9670;&#160;</a></span>ComputeElementNormals3() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ANSYS::Nexus::GLTFWriter::Utils::ComputeElementNormals3 </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numVertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numElements</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>elementSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Computes XYZ element normals from vertices and elements. unsigned int and unsigned short indices are supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">numVertices</td><td>Number of vertices.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vertices</td><td>XYZ vertex data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numElements</td><td>Number of elements.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">elementSize</td><td>Number of vertices in element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indices</td><td>Vertex indices of element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normals</td><td>Memory into which element normals are inserted. This is preallocated to a size of 3 * numVertices floats. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="affe7f4455b2c41c52b52b1f878a697b3" name="affe7f4455b2c41c52b52b1f878a697b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe7f4455b2c41c52b52b1f878a697b3">&#9670;&#160;</a></span>ComputeElementNormals3() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ANSYS::Nexus::GLTFWriter::Utils::ComputeElementNormals3 </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numVertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numElements</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>elementSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short *&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Computes XYZ element normals from vertices and elements. unsigned int and unsigned short indices are supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">numVertices</td><td>Number of vertices.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vertices</td><td>XYZ vertex data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numElements</td><td>Number of elements.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">elementSize</td><td>Number of vertices in element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indices</td><td>Vertex indices of element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normals</td><td>Memory into which element normals are inserted. This is preallocated to a size of 3 * numVertices floats. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8d71b67c17517bae2fdc85463f537c67" name="a8d71b67c17517bae2fdc85463f537c67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d71b67c17517bae2fdc85463f537c67">&#9670;&#160;</a></span>ComputeVertexNormals3() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ANSYS::Nexus::GLTFWriter::Utils::ComputeVertexNormals3 </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numVertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numElements</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>elementSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int *&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Computes XYZ vertex normals from vertices and elements. The element normals for all elements adjacent to a vertex are combined to get the vertex normal. unsigned int and unsigned short indices are supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">numVertices</td><td>Number of vertices.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vertices</td><td>XYZ vertex data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numElements</td><td>Number of elements.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">elementSize</td><td>Number of vertices in element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indices</td><td>Vertex indices of element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normals</td><td>Memory into which vertex normals are inserted. This is preallocated to a size of 3 * numElements floats. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a79e0bdf1db7d56a58b428ee308f66bad" name="a79e0bdf1db7d56a58b428ee308f66bad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79e0bdf1db7d56a58b428ee308f66bad">&#9670;&#160;</a></span>ComputeVertexNormals3() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ANSYS::Nexus::GLTFWriter::Utils::ComputeVertexNormals3 </td>
          <td>(</td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numVertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>numElements</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned int&#160;</td>
          <td class="paramname"><em>elementSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const unsigned short *&#160;</td>
          <td class="paramname"><em>indices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>normals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Computes XYZ vertex normals from vertices and elements. The element normals for all elements adjacent to a vertex are combined to get the vertex normal. unsigned int and unsigned short indices are supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">numVertices</td><td>Number of vertices.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">vertices</td><td>XYZ vertex data.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">numElements</td><td>Number of elements.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">elementSize</td><td>Number of vertices in element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">indices</td><td>Vertex indices of element.</td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">normals</td><td>Memory into which vertex normals are inserted. This is preallocated to a size of 3 * numElements floats. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/>
<small>&#160;&#160;&copy; <script type="text/javascript">document.write(new Date().getFullYear());</script> ANSYS Inc. All rights reserved.</small>
 <span style="float:right"><small>Generated by <a href="http://www.doxygen.org/index.html">doxygen</a>&nbsp;&nbsp;</small></span>
