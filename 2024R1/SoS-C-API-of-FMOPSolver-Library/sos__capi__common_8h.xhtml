<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Statistics on Structures programming library API Documentation: sos_capi_common.h File Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('sos__capi__common_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">sos_capi_common.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>C-API for utility functions (load/unload library, license management, error handling)  
<a href="#details">More...</a></p>

<p><a href="sos__capi__common_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Public type definitions</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">Pubic type definitions used within this API </p>
</div></td></tr>
<tr class="memitem:a4847f3fa2943ffd694eb6cbe169a8bec"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> { <br />
&#160;&#160;<a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55">fmop_success</a> = 0
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf">fmop_invalid_handle</a> = 1
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198">fmop_exception_occurred</a> = 2
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd">fmop_settings_error</a> = 3
, <br />
&#160;&#160;<a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becaedda7a6dbd4f5dd3eedecca9ec7dc1e9">fmop_model_missing</a> = 4
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe">fmop_license_error</a> = 5
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becab6e0160bb71d6930176d907409618f4d">fmop_script_error</a> = 6
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca749f1c6edf13b1303018d7a3632dc316">fmop_script_no_object</a> = 7
, <br />
&#160;&#160;<a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca32eddc7d860101cdbb8e1571c726ee91">fmop_script_wrong_type</a> = 8
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca7fc167a096db0f31209791e0053de2ec">fmop_not_implemented</a> = 16382
, <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41b2d8995eb66857227a50e49e8f6016">fmop_const_max</a> = 16383
<br />
 }</td></tr>
<tr class="memdesc:a4847f3fa2943ffd694eb6cbe169a8bec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Error code definitions.  <a href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">More...</a><br /></td></tr>
<tr class="separator:a4847f3fa2943ffd694eb6cbe169a8bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe21e382a604ef55cba4d683d706422e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#afe21e382a604ef55cba4d683d706422e">fmop_license_t</a> { <a class="el" href="sos__capi__common_8h.xhtml#afe21e382a604ef55cba4d683d706422ea5b9372ca962a29cf37faac2948897143">fmop_mesh_signal</a> = 10
, <a class="el" href="sos__capi__common_8h.xhtml#afe21e382a604ef55cba4d683d706422ea71a41e6fb1935010b6ed34037f7dae8c">fmop_mesh_all</a> = 30
 }</td></tr>
<tr class="memdesc:afe21e382a604ef55cba4d683d706422e"><td class="mdescLeft">&#160;</td><td class="mdescRight">FMOP mesh features which need to be unlocked by a valid license.  <a href="sos__capi__common_8h.xhtml#afe21e382a604ef55cba4d683d706422e">More...</a><br /></td></tr>
<tr class="separator:afe21e382a604ef55cba4d683d706422e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69eb42c1b3b49f22b9e73c6c9869cb75"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> { <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75aaf0fb275c161febc56c4f10e62987049">fmop_node_data</a> = 0
, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75a1ec31fe31f3b8a9fd9dd902b014499ef">fmop_element_data</a> = 1
, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75a16a14aa0d55901638e165fb3a39b3870">fmop_scalar_data</a> = 3
 }</td></tr>
<tr class="memdesc:a69eb42c1b3b49f22b9e73c6c9869cb75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data type definitions.  <a href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">More...</a><br /></td></tr>
<tr class="separator:a69eb42c1b3b49f22b9e73c6c9869cb75"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">License handling</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API handling licenes requests </p>
</div></td></tr>
<tr class="memitem:a7086f4db3e639526b2b7fe9ce9392a24"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a7086f4db3e639526b2b7fe9ce9392a24">FMOP_appendLicenseSearchPath</a> (const char *abs_path)</td></tr>
<tr class="memdesc:a7086f4db3e639526b2b7fe9ce9392a24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends another license search path to the default ones.  <a href="sos__capi__common_8h.xhtml#a7086f4db3e639526b2b7fe9ce9392a24">More...</a><br /></td></tr>
<tr class="separator:a7086f4db3e639526b2b7fe9ce9392a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cdd0d44e0ea8172b1f7f1095395da89"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a1cdd0d44e0ea8172b1f7f1095395da89">FMOP_acquireLicense</a> ()</td></tr>
<tr class="memdesc:a1cdd0d44e0ea8172b1f7f1095395da89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Acquires an optiSLang enterprise license.  <a href="sos__capi__common_8h.xhtml#a1cdd0d44e0ea8172b1f7f1095395da89">More...</a><br /></td></tr>
<tr class="separator:a1cdd0d44e0ea8172b1f7f1095395da89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a462a99c932a9b5704aae42a15826e4c3"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a462a99c932a9b5704aae42a15826e4c3">FMOP_licenseLocked</a> ()</td></tr>
<tr class="memdesc:a462a99c932a9b5704aae42a15826e4c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check whether any license feature was acquired.  <a href="sos__capi__common_8h.xhtml#a462a99c932a9b5704aae42a15826e4c3">More...</a><br /></td></tr>
<tr class="separator:a462a99c932a9b5704aae42a15826e4c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62d038d686a8183e10f52131697bce6c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a62d038d686a8183e10f52131697bce6c">FMOP_releaseLicense</a> ()</td></tr>
<tr class="memdesc:a62d038d686a8183e10f52131697bce6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release the acquired license.  <a href="sos__capi__common_8h.xhtml#a62d038d686a8183e10f52131697bce6c">More...</a><br /></td></tr>
<tr class="separator:a62d038d686a8183e10f52131697bce6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Error Handling</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API to access and interpret recent data object error messages </p>
</div></td></tr>
<tr class="memitem:a5e19e7fe152759a80115e908c593245d"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a5e19e7fe152759a80115e908c593245d">FMOP_getLastErrorString</a> ()</td></tr>
<tr class="memdesc:a5e19e7fe152759a80115e908c593245d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns internal log messages of level warning and above.  <a href="sos__capi__common_8h.xhtml#a5e19e7fe152759a80115e908c593245d">More...</a><br /></td></tr>
<tr class="separator:a5e19e7fe152759a80115e908c593245d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac78d83f9f73afd90854e1d07657fc186"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#ac78d83f9f73afd90854e1d07657fc186">FMOP_getLastErrno</a> ()</td></tr>
<tr class="memdesc:ac78d83f9f73afd90854e1d07657fc186"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the error number which has been set at the last library call.  <a href="sos__capi__common_8h.xhtml#ac78d83f9f73afd90854e1d07657fc186">More...</a><br /></td></tr>
<tr class="separator:ac78d83f9f73afd90854e1d07657fc186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa838a7c375fc1d01d51636ad52a182ad"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#aa838a7c375fc1d01d51636ad52a182ad">FMOP_getLastErrnoString</a> ()</td></tr>
<tr class="memdesc:aa838a7c375fc1d01d51636ad52a182ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to a string that describes the error code which has been set at the last library call.  <a href="sos__capi__common_8h.xhtml#aa838a7c375fc1d01d51636ad52a182ad">More...</a><br /></td></tr>
<tr class="separator:aa838a7c375fc1d01d51636ad52a182ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78d4b2f659d76cce9d16eb7b0e10e2c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#ad78d4b2f659d76cce9d16eb7b0e10e2c">FMOP_getLastLogString</a> ()</td></tr>
<tr class="memdesc:ad78d4b2f659d76cce9d16eb7b0e10e2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns internal log messages of log levels defined by FMOP_setLogLevel. Serves as debug logger.  <a href="sos__capi__common_8h.xhtml#ad78d4b2f659d76cce9d16eb7b0e10e2c">More...</a><br /></td></tr>
<tr class="separator:ad78d4b2f659d76cce9d16eb7b0e10e2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13c87c4e4d30a83f4d041a908d0a1e7"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#ac13c87c4e4d30a83f4d041a908d0a1e7">FMOP_setLogLevel</a> (int log_level)</td></tr>
<tr class="memdesc:ac13c87c4e4d30a83f4d041a908d0a1e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the new log level filter. Valid for all subsequent library calls until a new log level gets set.  <a href="sos__capi__common_8h.xhtml#ac13c87c4e4d30a83f4d041a908d0a1e7">More...</a><br /></td></tr>
<tr class="separator:ac13c87c4e4d30a83f4d041a908d0a1e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e820b85d2ef2596b00bc82445dcf650"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650">FMOP_getErrnoString</a> (<a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> error_num)</td></tr>
<tr class="memdesc:a7e820b85d2ef2596b00bc82445dcf650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string description for the error number given.  <a href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650">More...</a><br /></td></tr>
<tr class="separator:a7e820b85d2ef2596b00bc82445dcf650"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Miscellaneous</div></td></tr>
<tr class="memitem:a4f2de6ba4f98c98d1c670fa4a9117150"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a4f2de6ba4f98c98d1c670fa4a9117150">FMOP_getVersionString</a> ()</td></tr>
<tr class="memdesc:a4f2de6ba4f98c98d1c670fa4a9117150"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a version string.  <a href="sos__capi__common_8h.xhtml#a4f2de6ba4f98c98d1c670fa4a9117150">More...</a><br /></td></tr>
<tr class="separator:a4f2de6ba4f98c98d1c670fa4a9117150"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">FMOP library handling</div></td></tr>
<tr class="memitem:a9c8f0f808d3f27c57a3a57d5f9cf4834"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#a9c8f0f808d3f27c57a3a57d5f9cf4834">FMOP_initializeLibrary</a> ()</td></tr>
<tr class="memdesc:a9c8f0f808d3f27c57a3a57d5f9cf4834"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the FMOP library Allocates memory for the global script engine. Call <a class="el" href="sos__capi__common_8h.xhtml#ae0af273cc642061f90933b4af2a958ad" title="Unload the FMOP library Clears the FMOP library from memory. A warning is logged if the library was u...">FMOP_unloadLibrary()</a> to release it. A warning is logged if the library was initialized already.  <a href="sos__capi__common_8h.xhtml#a9c8f0f808d3f27c57a3a57d5f9cf4834">More...</a><br /></td></tr>
<tr class="separator:a9c8f0f808d3f27c57a3a57d5f9cf4834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0af273cc642061f90933b4af2a958ad"><td class="memItemLeft" align="right" valign="top"><a id="ae0af273cc642061f90933b4af2a958ad"></a>
DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="sos__capi__common_8h.xhtml#ae0af273cc642061f90933b4af2a958ad">FMOP_unloadLibrary</a> ()</td></tr>
<tr class="memdesc:ae0af273cc642061f90933b4af2a958ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload the FMOP library Clears the FMOP library from memory. A warning is logged if the library was unloaded already. <br /></td></tr>
<tr class="separator:ae0af273cc642061f90933b4af2a958ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p class="">C-API for utility functions (load/unload library, license management, error handling) </p>
<dl class="section copyright"><dt>Copyright</dt><dd>DYNARDO Austria GmbH </dd></dl>
</div><h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a69eb42c1b3b49f22b9e73c6c9869cb75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69eb42c1b3b49f22b9e73c6c9869cb75">&#9670;&nbsp;</a></span>fmop_dataobject_types</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Data type definitions. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a69eb42c1b3b49f22b9e73c6c9869cb75aaf0fb275c161febc56c4f10e62987049"></a>fmop_node_data&#160;</td><td class="fielddoc"><p class="">node data (one scalar per node) </p>
</td></tr>
<tr><td class="fieldname"><a id="a69eb42c1b3b49f22b9e73c6c9869cb75a1ec31fe31f3b8a9fd9dd902b014499ef"></a>fmop_element_data&#160;</td><td class="fielddoc"><p class="">element data (one scalar per element) </p>
</td></tr>
<tr><td class="fieldname"><a id="a69eb42c1b3b49f22b9e73c6c9869cb75a16a14aa0d55901638e165fb3a39b3870"></a>fmop_scalar_data&#160;</td><td class="fielddoc"><p class="">scalar data (vector of size 1) </p>
</td></tr>
</table>

</div>
</div>
<a id="a4847f3fa2943ffd694eb6cbe169a8bec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4847f3fa2943ffd694eb6cbe169a8bec">&#9670;&nbsp;</a></span>fmop_error_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Error code definitions. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55"></a>fmop_success&#160;</td><td class="fielddoc"><p class="">Function execution returned successfully. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf"></a>fmop_invalid_handle&#160;</td><td class="fielddoc"><p class="">The function got an unexpected NULL pointer. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198"></a>fmop_exception_occurred&#160;</td><td class="fielddoc"><p class="">An internal error occurred. Request log messages. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd"></a>fmop_settings_error&#160;</td><td class="fielddoc"><p class="">Input argument(s) is invalid or missing. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8becaedda7a6dbd4f5dd3eedecca9ec7dc1e9"></a>fmop_model_missing&#160;</td><td class="fielddoc"><p class="">The requested model identifier is not known. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe"></a>fmop_license_error&#160;</td><td class="fielddoc"><p class="">No valid license available. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8becab6e0160bb71d6930176d907409618f4d"></a>fmop_script_error&#160;</td><td class="fielddoc"><p class="">An error appeare while executing Lua script. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca749f1c6edf13b1303018d7a3632dc316"></a>fmop_script_no_object&#160;</td><td class="fielddoc"><p class="">Object with ident not found in script engine. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca32eddc7d860101cdbb8e1571c726ee91"></a>fmop_script_wrong_type&#160;</td><td class="fielddoc"><p class="">Object with ident has wrong type. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca7fc167a096db0f31209791e0053de2ec"></a>fmop_not_implemented&#160;</td><td class="fielddoc"><p class="">This function is yet not implemented or has been removed. </p>
</td></tr>
<tr><td class="fieldname"><a id="a4847f3fa2943ffd694eb6cbe169a8beca41b2d8995eb66857227a50e49e8f6016"></a>fmop_const_max&#160;</td><td class="fielddoc"><p class="">2^14-1 non-modifiable for each API version </p>
</td></tr>
</table>

</div>
</div>
<a id="afe21e382a604ef55cba4d683d706422e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe21e382a604ef55cba4d683d706422e">&#9670;&nbsp;</a></span>fmop_license_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="sos__capi__common_8h.xhtml#afe21e382a604ef55cba4d683d706422e">fmop_license_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>FMOP mesh features which need to be unlocked by a valid license. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="afe21e382a604ef55cba4d683d706422ea5b9372ca962a29cf37faac2948897143"></a>fmop_mesh_signal&#160;</td><td class="fielddoc"><p class="">Unlocks signal meshes. </p>
</td></tr>
<tr><td class="fieldname"><a id="afe21e382a604ef55cba4d683d706422ea71a41e6fb1935010b6ed34037f7dae8c"></a>fmop_mesh_all&#160;</td><td class="fielddoc"><p class="">Unlocks all mesh features. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1cdd0d44e0ea8172b1f7f1095395da89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cdd0d44e0ea8172b1f7f1095395da89">&#9670;&nbsp;</a></span>FMOP_acquireLicense()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_acquireLicense </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Acquires an optiSLang enterprise license. </p>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if a license has already been acquired successfully</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any error occures while checking out the requested feature(s)</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> if a license has been acquired successfully </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="a7086f4db3e639526b2b7fe9ce9392a24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7086f4db3e639526b2b7fe9ce9392a24">&#9670;&nbsp;</a></span>FMOP_appendLicenseSearchPath()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_appendLicenseSearchPath </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>abs_path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Appends another license search path to the default ones. </p>
<dl class="deprecated"><dt><b><a class="el" href="deprecated.xhtml#_deprecated000001">Deprecated:</a></b></dt><dd>Since 2022 R2. Will be removed in 2023 R1 </dd></dl>
<p>By default the following license search paths will be checked in the order given:</p><ul>
<li>@localhost</li>
<li>the current working directory</li>
<li>the path pointed to by the environment variable 'LM_LICENSE_FILE'</li>
<li>the path pointed to by the environment variable 'DYNARDO_LICENSE_FILE'</li>
</ul>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">abs_path</td><td>An absolute file system path, e.g. '/opt/DYNARDO/licensing', 'D:\Licenses', ... </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the path given does not exist</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if the path given invoces any other filesystem error</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> if the path has been appended successfully </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="a7e820b85d2ef2596b00bc82445dcf650"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e820b85d2ef2596b00bc82445dcf650">&#9670;&nbsp;</a></span>FMOP_getErrnoString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getErrnoString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td>
          <td class="paramname"><em>error_num</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a string description for the error number given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">error_num</td><td>The error number </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A human readable string description for the error number given.The returned string will be overwritten by this function at the next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will neither manipulate the internal log message stack nor the errno state of the last library call </dd>
<dd>
DON'T USE ERRNO as agrument identifier as this seems to be defined as a macro identifier Refer to <a href="http://www.cplusplus.com/reference/cerrno/errno/">http://www.cplusplus.com/reference/cerrno/errno/</a> for details </dd></dl>

</div>
</div>
<a id="ac78d83f9f73afd90854e1d07657fc186"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac78d83f9f73afd90854e1d07657fc186">&#9670;&nbsp;</a></span>FMOP_getLastErrno()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getLastErrno </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the error number which has been set at the last library call. </p>
<dl class="section return"><dt>Returns</dt><dd>The error number which has been set at the last library call </dd></dl>

</div>
</div>
<a id="aa838a7c375fc1d01d51636ad52a182ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa838a7c375fc1d01d51636ad52a182ad">&#9670;&nbsp;</a></span>FMOP_getLastErrnoString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getLastErrnoString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a pointer to a string that describes the error code which has been set at the last library call. </p>
<dl class="section return"><dt>Returns</dt><dd>A human readable string description for the error code that has been set at the last library call. The returned string will be overwritten by this function at the next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will neither manipulate the internal log message stack nor the errno state of the last library call </dd></dl>

</div>
</div>
<a id="a5e19e7fe152759a80115e908c593245d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e19e7fe152759a80115e908c593245d">&#9670;&nbsp;</a></span>FMOP_getLastErrorString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getLastErrorString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns internal log messages of level warning and above. </p>
<p class="">This log level is immutable. <a class="el" href="sos__capi__common_8h.xhtml#ac13c87c4e4d30a83f4d041a908d0a1e7" title="Defines the new log level filter. Valid for all subsequent library calls until a new log level gets s...">FMOP_setLogLevel()</a> can not modify it. If the internal logger is empty, the value of <a class="el" href="sos__capi__common_8h.xhtml#aa838a7c375fc1d01d51636ad52a182ad" title="Returns a pointer to a string that describes the error code which has been set at the last library ca...">FMOP_getLastErrnoString()</a> will be returned</p>
<dl class="section return"><dt>Returns</dt><dd>Returns all internal, formatted log messages of log level warning and above if either a warning or an error message occured during the last library call. Otherwise the return value of <a class="el" href="sos__capi__common_8h.xhtml#aa838a7c375fc1d01d51636ad52a182ad" title="Returns a pointer to a string that describes the error code which has been set at the last library ca...">FMOP_getLastErrnoString()</a> will be returned. The returned string will be overwritten by this function at its next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will neither manipulate the internal log message stack nor the errno state of the last library call </dd></dl>

</div>
</div>
<a id="ad78d4b2f659d76cce9d16eb7b0e10e2c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad78d4b2f659d76cce9d16eb7b0e10e2c">&#9670;&nbsp;</a></span>FMOP_getLastLogString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getLastLogString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns internal log messages of log levels defined by FMOP_setLogLevel. Serves as debug logger. </p>
<p class="">Initially all log levels are deactivated and no log messages will be buffered. Call FMOP_setLogLevel ( &gt;0 ) to activate the logger and FMOP_setLogLevel (0) to deactivate it again.</p>
<dl class="section return"><dt>Returns</dt><dd>Returns all internal, formatted log messages of the last library call. The returned string will be overwritten by this function at the next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will not manipulate the internal log message stack. Though the errno number will be set and can be queried calling <a class="el" href="sos__capi__common_8h.xhtml#ac78d83f9f73afd90854e1d07657fc186" title="Returns the error number which has been set at the last library call.">FMOP_getLastErrno()</a> </dd></dl>

</div>
</div>
<a id="a4f2de6ba4f98c98d1c670fa4a9117150"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f2de6ba4f98c98d1c670fa4a9117150">&#9670;&nbsp;</a></span>FMOP_getVersionString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getVersionString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a version string. </p>
<dl class="section return"><dt>Returns</dt><dd>A const pointer to a character array holding the version string. Ownership is handled internally. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will not manipulate the internal log message stack. Though the errno number will be set and can be queried calling <a class="el" href="sos__capi__common_8h.xhtml#ac78d83f9f73afd90854e1d07657fc186" title="Returns the error number which has been set at the last library call.">FMOP_getLastErrno()</a> </dd></dl>

</div>
</div>
<a id="a9c8f0f808d3f27c57a3a57d5f9cf4834"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c8f0f808d3f27c57a3a57d5f9cf4834">&#9670;&nbsp;</a></span>FMOP_initializeLibrary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_initializeLibrary </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize the FMOP library Allocates memory for the global script engine. Call <a class="el" href="sos__capi__common_8h.xhtml#ae0af273cc642061f90933b4af2a958ad" title="Unload the FMOP library Clears the FMOP library from memory. A warning is logged if the library was u...">FMOP_unloadLibrary()</a> to release it. A warning is logged if the library was initialized already. </p>
<dl class="section note"><dt>Note</dt><dd>This method must be called once, before requesting the global script engine with <a class="el" href="sos__capi__script_8h.xhtml#ace6f8c522f626dddbf5fc12d4d1d7a11" title="Get the handle to the global script engine from the initialized library. The routine checks if the Lu...">FMOP_globalScriptEngine()</a>; </dd></dl>

</div>
</div>
<a id="a462a99c932a9b5704aae42a15826e4c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a462a99c932a9b5704aae42a15826e4c3">&#9670;&nbsp;</a></span>FMOP_licenseLocked()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API bool FMOP_licenseLocked </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check whether any license feature was acquired. </p>
<dl class="section return"><dt>Returns</dt><dd>True if any license feature is locked, false otherwise </dd></dl>

</div>
</div>
<a id="a62d038d686a8183e10f52131697bce6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62d038d686a8183e10f52131697bce6c">&#9670;&nbsp;</a></span>FMOP_releaseLicense()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_releaseLicense </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release the acquired license. </p>
<p class="">Note, that no previously acquired license is released if not all loaded Database and FMOP objects are already released</p>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if any Database or FMOP object is not already released</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> in all other cases </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="ac13c87c4e4d30a83f4d041a908d0a1e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac13c87c4e4d30a83f4d041a908d0a1e7">&#9670;&nbsp;</a></span>FMOP_setLogLevel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API int FMOP_setLogLevel </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>log_level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the new log level filter. Valid for all subsequent library calls until a new log level gets set. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">log_level</td><td>Defines the new log level filter for messages returned by FMOP_getLastLog. Accepts the following integer values only:<ul>
<li>0 ... filter all log levels</li>
<li>1 ... return only log messages of log level ERROR</li>
<li>2 ... return only log messages of log level WARNING and below</li>
<li>3 ... return only log messages of log level INFO and below</li>
<li>4 ... return only log messages of log level DEBUG and below</li>
<li>5 ... return all log messages, i.e. ERROR, WARNING INFO, DEBUG, TRACE. The log level TRACE is not existing in maintenance, i.e. in customer builds. </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The former log level or -1 if the log_level is unknown </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function will not manipulate the internal log message stack. Though the errno number will be set and can be queried calling <a class="el" href="sos__capi__common_8h.xhtml#ac78d83f9f73afd90854e1d07657fc186" title="Returns the error number which has been set at the last library call.">FMOP_getLastErrno()</a> </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
