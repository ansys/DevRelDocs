<!-- HTML header for doxygen 1.9.2-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.2"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Statistics on Structures programming library API Documentation: fmop_solver.h File Reference</title>
<!-- <link href="tabs.css" rel="stylesheet" type="text/css"/> -->
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="ansys_customdoxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr>
  <!--BEGIN PROJECT_LOGO-->
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.2 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('fmop__solver_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle">
<div class="title">fmop_solver.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>C-API to evaluate a Field Meta model of Optimal Prognosis (FMOP)  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;<a class="el" href="sos__capi__common_8h_source.xhtml">sos_capi_common.h</a>&quot;</code><br />
</div>
<p><a href="fmop__solver_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4f3b1f4672b1b913e04f95def14d3572"><td class="memItemLeft" align="right" valign="top">typedef void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a></td></tr>
<tr class="memdesc:a4f3b1f4672b1b913e04f95def14d3572"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains all the data being required to post-process any FMOP.  <a href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">More...</a><br /></td></tr>
<tr class="separator:a4f3b1f4672b1b913e04f95def14d3572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed65d1ae14f8c298a702ad5b828a70ef"><td class="memItemLeft" align="right" valign="top">typedef void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a></td></tr>
<tr class="memdesc:aed65d1ae14f8c298a702ad5b828a70ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains one specific single or cross correlated FMOP.  <a href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">More...</a><br /></td></tr>
<tr class="separator:aed65d1ae14f8c298a702ad5b828a70ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Create / Initialize Data Objects</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API handling data object life time </p>
</div></td></tr>
<tr class="memitem:adf36057836bc12095f01665fa068ba4c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#adf36057836bc12095f01665fa068ba4c">FMOP_loadDbFile</a> (<a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *database, const char *path)</td></tr>
<tr class="memdesc:adf36057836bc12095f01665fa068ba4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a fmop_db_handle_t object from a previously saved Statistics on Structures (SoS) database.  <a href="fmop__solver_8h.xhtml#adf36057836bc12095f01665fa068ba4c">More...</a><br /></td></tr>
<tr class="separator:adf36057836bc12095f01665fa068ba4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3f6b6b4a84878f3c774a12a2b4cf958"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#ab3f6b6b4a84878f3c774a12a2b4cf958">FMOP_loadDbFileWMesh</a> (<a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *database, const char *path)</td></tr>
<tr class="memdesc:ab3f6b6b4a84878f3c774a12a2b4cf958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a fmop_db_handle_t object from a previously saved Statistics on Structures (SoS) database This function also builds up all internal data structures needed to represent FEM meshes. Hence it may need more CPU time and RAM.  <a href="fmop__solver_8h.xhtml#ab3f6b6b4a84878f3c774a12a2b4cf958">More...</a><br /></td></tr>
<tr class="separator:ab3f6b6b4a84878f3c774a12a2b4cf958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae65fdf242dba6c37b9de818be7c9dcc"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc">FMOP_getModel</a> (<a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> database, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> data_type, const char *const fmop_ident, <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> *fmop)</td></tr>
<tr class="memdesc:aae65fdf242dba6c37b9de818be7c9dcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a fmop_handle_t data object from the database given.  <a href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc">More...</a><br /></td></tr>
<tr class="separator:aae65fdf242dba6c37b9de818be7c9dcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ad01c460ed6e409b79e258a523d0bf9"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a3ad01c460ed6e409b79e258a523d0bf9">FMOP_releaseModel</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> *fmop)</td></tr>
<tr class="memdesc:a3ad01c460ed6e409b79e258a523d0bf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a fmop_handle_t object and dedicated memory.  <a href="fmop__solver_8h.xhtml#a3ad01c460ed6e409b79e258a523d0bf9">More...</a><br /></td></tr>
<tr class="separator:a3ad01c460ed6e409b79e258a523d0bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36d28d4c5c718284a0f4236f2740e06"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#af36d28d4c5c718284a0f4236f2740e06">FMOP_releaseDb</a> (<a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *database)</td></tr>
<tr class="memdesc:af36d28d4c5c718284a0f4236f2740e06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases a fmop_db_handle_t object and dedicated memory.  <a href="fmop__solver_8h.xhtml#af36d28d4c5c718284a0f4236f2740e06">More...</a><br /></td></tr>
<tr class="separator:af36d28d4c5c718284a0f4236f2740e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37bdee678571cd855ac0bb10675b1d8c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a37bdee678571cd855ac0bb10675b1d8c">FMOP_releaseIdents</a> (char ***const idents, const size_t *num_idents)</td></tr>
<tr class="memdesc:a37bdee678571cd855ac0bb10675b1d8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">An auxiliary function to releases an array of char arrays and dedicated memory.  <a href="fmop__solver_8h.xhtml#a37bdee678571cd855ac0bb10675b1d8c">More...</a><br /></td></tr>
<tr class="separator:a37bdee678571cd855ac0bb10675b1d8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Query properties</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API to query idents and properties of a "Field Meta Model of Optimal Prognosis" (FMOP) </p>
</div></td></tr>
<tr class="memitem:a22d6e807dc869fa28442d26e29ddbc27"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a22d6e807dc869fa28442d26e29ddbc27">FMOP_getModelIdents</a> (const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> database, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> data_type, char ***const fmop_idents, size_t *num_idents)</td></tr>
<tr class="memdesc:a22d6e807dc869fa28442d26e29ddbc27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns all known FMOP identifier from the fmop_db_handle_t given.  <a href="fmop__solver_8h.xhtml#a22d6e807dc869fa28442d26e29ddbc27">More...</a><br /></td></tr>
<tr class="separator:a22d6e807dc869fa28442d26e29ddbc27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a600dca69efae1f2eafc63f9f6a0067fc"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a600dca69efae1f2eafc63f9f6a0067fc">FMOP_getModelIdentsDim</a> (const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> database, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> data_type, size_t *num_idents)</td></tr>
<tr class="memdesc:a600dca69efae1f2eafc63f9f6a0067fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of known FMOP identifiers from the fmop_db_handle_t given.  <a href="fmop__solver_8h.xhtml#a600dca69efae1f2eafc63f9f6a0067fc">More...</a><br /></td></tr>
<tr class="separator:a600dca69efae1f2eafc63f9f6a0067fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade959f2a7f6866382b76e32204597220"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#ade959f2a7f6866382b76e32204597220">FMOP_getModelIdent</a> (const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> database, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> data_type, size_t num_ident)</td></tr>
<tr class="memdesc:ade959f2a7f6866382b76e32204597220"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the n-th known FMOP identifier from the fmop_db_handle_t given.  <a href="fmop__solver_8h.xhtml#ade959f2a7f6866382b76e32204597220">More...</a><br /></td></tr>
<tr class="separator:ade959f2a7f6866382b76e32204597220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a485827623b3d01cf3157c0a16559908f"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f">FMOP_getModelParamIdents</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, char ***const param_idents, size_t *num_params)</td></tr>
<tr class="memdesc:a485827623b3d01cf3157c0a16559908f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns all active scalar inputer parameters for the fmop handle given.  <a href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f">More...</a><br /></td></tr>
<tr class="separator:a485827623b3d01cf3157c0a16559908f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabef430a391d15eb077fe30e134f368"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#adabef430a391d15eb077fe30e134f368">FMOP_getModelParamIdentsDim</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, size_t *num_params)</td></tr>
<tr class="memdesc:adabef430a391d15eb077fe30e134f368"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of active parameter identifiers from the fmop handle given.  <a href="fmop__solver_8h.xhtml#adabef430a391d15eb077fe30e134f368">More...</a><br /></td></tr>
<tr class="separator:adabef430a391d15eb077fe30e134f368"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08f0951d2b7615c16e72341e13bad704"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a08f0951d2b7615c16e72341e13bad704">FMOP_getModelParamIdent</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, size_t num_param)</td></tr>
<tr class="memdesc:a08f0951d2b7615c16e72341e13bad704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the n-th active parameter identifier from the fmop handle given.  <a href="fmop__solver_8h.xhtml#a08f0951d2b7615c16e72341e13bad704">More...</a><br /></td></tr>
<tr class="separator:a08f0951d2b7615c16e72341e13bad704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaed2ac2af6a304f8356e51b9cb98442"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#abaed2ac2af6a304f8356e51b9cb98442">FMOP_getParamLowerBounds</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, double *lower_bounds)</td></tr>
<tr class="memdesc:abaed2ac2af6a304f8356e51b9cb98442"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns lower bound values of input parameters used to train the FMOP, aka the lower bound values of Design of Experiment input parameters.  <a href="fmop__solver_8h.xhtml#abaed2ac2af6a304f8356e51b9cb98442">More...</a><br /></td></tr>
<tr class="separator:abaed2ac2af6a304f8356e51b9cb98442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a301cfcf26e28ec7ba4b2c730facb679c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a301cfcf26e28ec7ba4b2c730facb679c">FMOP_getParamUpperBounds</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, double *upper_bounds)</td></tr>
<tr class="memdesc:a301cfcf26e28ec7ba4b2c730facb679c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns upper bound values of input parameters used to train the FMOP, aka the upper bound values of Design of Experiment input parameters.  <a href="fmop__solver_8h.xhtml#a301cfcf26e28ec7ba4b2c730facb679c">More...</a><br /></td></tr>
<tr class="separator:a301cfcf26e28ec7ba4b2c730facb679c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff6f33cf199015b78c5837e40d90f42"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a1ff6f33cf199015b78c5837e40d90f42">FMOP_getModelTotalAvgFCoP</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, double *fcop)</td></tr>
<tr class="memdesc:a1ff6f33cf199015b78c5837e40d90f42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total average Field Coefficient of Prognosis for the fmop handle given.  <a href="fmop__solver_8h.xhtml#a1ff6f33cf199015b78c5837e40d90f42">More...</a><br /></td></tr>
<tr class="separator:a1ff6f33cf199015b78c5837e40d90f42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185c515c2fe8b0528ccb5f95f543a3be"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a185c515c2fe8b0528ccb5f95f543a3be">FMOP_getModelAvgFCoP</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, double *fcops)</td></tr>
<tr class="memdesc:a185c515c2fe8b0528ccb5f95f543a3be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the Field Coefficients of Prognosis per active scalar input parameter.  <a href="fmop__solver_8h.xhtml#a185c515c2fe8b0528ccb5f95f543a3be">More...</a><br /></td></tr>
<tr class="separator:a185c515c2fe8b0528ccb5f95f543a3be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24e43563d67cc64bffb7bccddbaada65"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65">FMOP_getModelDim</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, size_t *num_mesh_items)</td></tr>
<tr class="memdesc:a24e43563d67cc64bffb7bccddbaada65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the FCoP vector, aka the number of mesh items.  <a href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65">More...</a><br /></td></tr>
<tr class="separator:a24e43563d67cc64bffb7bccddbaada65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878106f886ca5f1ce112e6c5e238d80e"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a878106f886ca5f1ce112e6c5e238d80e">FMOP_getDataDim</a> (const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> database, <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a> data_type, size_t *num_mesh_items)</td></tr>
<tr class="memdesc:a878106f886ca5f1ce112e6c5e238d80e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the FCoP vector, aka the number of mesh items.  <a href="fmop__solver_8h.xhtml#a878106f886ca5f1ce112e6c5e238d80e">More...</a><br /></td></tr>
<tr class="separator:a878106f886ca5f1ce112e6c5e238d80e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add2527ad2ad1bf1df141e5fa5b4c2e31"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#add2527ad2ad1bf1df141e5fa5b4c2e31">FMOP_getDataPointIndices</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int *part_ids, unsigned int *item_ids)</td></tr>
<tr class="memdesc:add2527ad2ad1bf1df141e5fa5b4c2e31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maps internal node/element numbering to the external scheme consisting of part and item ID.  <a href="fmop__solver_8h.xhtml#add2527ad2ad1bf1df141e5fa5b4c2e31">More...</a><br /></td></tr>
<tr class="separator:add2527ad2ad1bf1df141e5fa5b4c2e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a535bee00c4d200d31fdf4118e49c1f05"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a535bee00c4d200d31fdf4118e49c1f05">FMOP_getDataPointCoors</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, char axis, double *coors)</td></tr>
<tr class="memdesc:a535bee00c4d200d31fdf4118e49c1f05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the cartesian data point coordinates for each data point.  <a href="fmop__solver_8h.xhtml#a535bee00c4d200d31fdf4118e49c1f05">More...</a><br /></td></tr>
<tr class="separator:a535bee00c4d200d31fdf4118e49c1f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4413f3e2bc5f893b9030631aceb03c54"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a4413f3e2bc5f893b9030631aceb03c54">FMOP_getNumElementsAtNode</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int node_idx, unsigned int *num_elements)</td></tr>
<tr class="memdesc:a4413f3e2bc5f893b9030631aceb03c54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the elements connected to a given node.  <a href="fmop__solver_8h.xhtml#a4413f3e2bc5f893b9030631aceb03c54">More...</a><br /></td></tr>
<tr class="separator:a4413f3e2bc5f893b9030631aceb03c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ca72d6a865df21ce5a5180475c71cda"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a8ca72d6a865df21ce5a5180475c71cda">FMOP_getElementsAtNode</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int node_idx, unsigned int *elements)</td></tr>
<tr class="memdesc:a8ca72d6a865df21ce5a5180475c71cda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the elements connected to a given node.  <a href="fmop__solver_8h.xhtml#a8ca72d6a865df21ce5a5180475c71cda">More...</a><br /></td></tr>
<tr class="separator:a8ca72d6a865df21ce5a5180475c71cda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ff1451cc5f1c6cefa7a67c6a906d653"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a1ff1451cc5f1c6cefa7a67c6a906d653">FMOP_isNodePartOfBoundary</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int node_idx, unsigned int *is_part_of_boundary)</td></tr>
<tr class="memdesc:a1ff1451cc5f1c6cefa7a67c6a906d653"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies if the given node is on the surface.  <a href="fmop__solver_8h.xhtml#a1ff1451cc5f1c6cefa7a67c6a906d653">More...</a><br /></td></tr>
<tr class="separator:a1ff1451cc5f1c6cefa7a67c6a906d653"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a031be0f125c4fbeb450f03bb960e207d"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a031be0f125c4fbeb450f03bb960e207d">FMOP_getNumNodesAtElement</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int element_idx, unsigned int *num_nodes)</td></tr>
<tr class="memdesc:a031be0f125c4fbeb450f03bb960e207d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the nodes connected to a given element.  <a href="fmop__solver_8h.xhtml#a031be0f125c4fbeb450f03bb960e207d">More...</a><br /></td></tr>
<tr class="separator:a031be0f125c4fbeb450f03bb960e207d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03080c2458b8c03eb85ce9eb97926711"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a03080c2458b8c03eb85ce9eb97926711">FMOP_getNodesAtElement</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int element_idx, unsigned int *nodes)</td></tr>
<tr class="memdesc:a03080c2458b8c03eb85ce9eb97926711"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the nodes connected to a given element.  <a href="fmop__solver_8h.xhtml#a03080c2458b8c03eb85ce9eb97926711">More...</a><br /></td></tr>
<tr class="separator:a03080c2458b8c03eb85ce9eb97926711"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1eac903ae657e448adf1f7c6aa463c"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#ade1eac903ae657e448adf1f7c6aa463c">FMOP_getElementTypeIdent</a> (<a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, unsigned int element_idx)</td></tr>
<tr class="memdesc:ade1eac903ae657e448adf1f7c6aa463c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identifies the element type ident of a given element.  <a href="fmop__solver_8h.xhtml#ade1eac903ae657e448adf1f7c6aa463c">More...</a><br /></td></tr>
<tr class="separator:ade1eac903ae657e448adf1f7c6aa463c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Operations</div></td></tr>
<tr><td colspan="2"><div class="groupText"><p class="">API used to evalute a Field Meta Model of Optimal Prognosis (FMOP) </p>
</div></td></tr>
<tr class="memitem:a1bd5d62d9c5ba6d327b0368a8b4e2e31"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a1bd5d62d9c5ba6d327b0368a8b4e2e31">FMOP_approxField</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, const double *param_values, double *field)</td></tr>
<tr class="memdesc:a1bd5d62d9c5ba6d327b0368a8b4e2e31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Approximates a field response based on a vector of given active scalar input parameters.  <a href="fmop__solver_8h.xhtml#a1bd5d62d9c5ba6d327b0368a8b4e2e31">More...</a><br /></td></tr>
<tr class="separator:a1bd5d62d9c5ba6d327b0368a8b4e2e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4380a704857be093fc6444aa5b8fdadc"><td class="memItemLeft" align="right" valign="top">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="fmop__solver_8h.xhtml#a4380a704857be093fc6444aa5b8fdadc">FMOP_approxFieldExtrapolate</a> (const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> fmop, const double *param_values, double *field)</td></tr>
<tr class="memdesc:a4380a704857be093fc6444aa5b8fdadc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Approximates a field response based on a vector of given active scalar input parameters.  <a href="fmop__solver_8h.xhtml#a4380a704857be093fc6444aa5b8fdadc">More...</a><br /></td></tr>
<tr class="separator:a4380a704857be093fc6444aa5b8fdadc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p class="">C-API to evaluate a Field Meta model of Optimal Prognosis (FMOP) </p>
<dl class="section copyright"><dt>Copyright</dt><dd>DYNARDO Austria GmbH</dd></dl>
<ul>
<li>This API follows the <em>Basic</em> exception safety <em>rule</em>. If any of the operations fail, the original data, e.g. the fmop_handle*_t, might have been overwritten, but there should be no resource leak.</li>
<li>Return values are typically of type fmop_error_t. To get a human readalbe interpretation forward this value to <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> or call <a class="el" href="sos__capi__common_8h.xhtml#a5e19e7fe152759a80115e908c593245d" title="Returns internal log messages of level warning and above.">FMOP_getLastErrorString()</a>. More information can be found in the Error Handling section</li>
<li>Log messages from the SoS kernel are all bufferd in an internal variable. Unless otherwise stated in a function description, this internal variable gets reset(!) right at the beginning of each function call. Therefore, the user is forced into fetching all log messages of interest before proceeding.</li>
</ul>
<dl class="section warning"><dt>Warning</dt><dd>Concurrent library calls are NOT supported </dd>
<dd>
Unless otherwise stated, every function call overwrites any log message of any previous function call </dd></dl>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="a4f3b1f4672b1b913e04f95def14d3572"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f3b1f4672b1b913e04f95def14d3572">&#9670;&nbsp;</a></span>fmop_db_handle_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Contains all the data being required to post-process any FMOP. </p>
<dl class="section note"><dt>Note</dt><dd>Since we had some unresolved troubles in Matlab using the forward declaration <div class="fragment"><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct </span>FMOP_Database* <a class="code" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>; </div>
<div class="ttc" id="afmop__solver_8h_xhtml_a4f3b1f4672b1b913e04f95def14d3572"><div class="ttname"><a href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a></div><div class="ttdeci">void * fmop_db_handle_t</div><div class="ttdoc">Contains all the data being required to post-process any FMOP.</div><div class="ttdef"><b>Definition:</b> fmop_solver.h:42</div></div>
</div><!-- fragment --> we now prefer to write for the public definition 'void*' only </dd></dl>

</div>
</div>
<a id="aed65d1ae14f8c298a702ad5b828a70ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed65d1ae14f8c298a702ad5b828a70ef">&#9670;&nbsp;</a></span>fmop_handle_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef void* <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Contains one specific single or cross correlated FMOP. </p>
<dl class="section note"><dt>Note</dt><dd>Since we had some unresolved troubles in Matlab using the forward declaration <div class="fragment"><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct </span>FMOP* <a class="code" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>; </div>
<div class="ttc" id="afmop__solver_8h_xhtml_aed65d1ae14f8c298a702ad5b828a70ef"><div class="ttname"><a href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a></div><div class="ttdeci">void * fmop_handle_t</div><div class="ttdoc">Contains one specific single or cross correlated FMOP.</div><div class="ttdef"><b>Definition:</b> fmop_solver.h:53</div></div>
</div><!-- fragment --> we now prefer to write for the public defintion 'void*' only </dd></dl>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1bd5d62d9c5ba6d327b0368a8b4e2e31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bd5d62d9c5ba6d327b0368a8b4e2e31">&#9670;&nbsp;</a></span>FMOP_approxField()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_approxField </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>param_values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>field</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Approximates a field response based on a vector of given active scalar input parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param_values</td><td>Vector of a single sample of all active scalar input parameters. Size and parameter order are defined by the return values of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a><br  />
 param_values [j]... the index j matches the parameter input name position returned in the param_idents argument of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> <br  />
 sizeof ( param_values ) ... must match the num_params argument of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> The values must not be located outside the initial sampling bounds. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">field</td><td>An already initialized array of size num_mesh_items as returned by <a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65" title="Returns the size of the FCoP vector, aka the number of mesh items.">FMOP_getModelDim()</a> On output contains the approximated field response. <br  />
 Follows the scheme: <img class="formulaInl" alt="$ field[k] $" src="form_2.png"/> <br  />
 k...internal mesh item ident, e.g. internal signal position, internal element number <br  />
 Call <a class="el" href="fmop__solver_8h.xhtml#add2527ad2ad1bf1df141e5fa5b4c2e31" title="Maps internal node/element numbering to the external scheme consisting of part and item ID.">FMOP_getDataPointIndices()</a> to map internal to external numbering scheme </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop handle is not allocated.</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the param_values or field array argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation. For detailed log messages call FMOP_getLastError() which outputs internal log messages. </dd></dl>

</div>
</div>
<a id="a4380a704857be093fc6444aa5b8fdadc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4380a704857be093fc6444aa5b8fdadc">&#9670;&nbsp;</a></span>FMOP_approxFieldExtrapolate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_approxFieldExtrapolate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>param_values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>field</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Approximates a field response based on a vector of given active scalar input parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">param_values</td><td>Vector of a single sample of all active scalar input parameters. Size and parameter order are defined by the return values of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a><br  />
 param_values [j]... the index j matches the parameter input name position returned in the param_idents argument of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> <br  />
 sizeof ( param_values ) ... must match the num_params argument of <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> The values may be located outside the initial sampling bounds. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">field</td><td>An already initialized array of size num_mesh_items as returned by <a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65" title="Returns the size of the FCoP vector, aka the number of mesh items.">FMOP_getModelDim()</a> On output contains the approximated field response. <br  />
 Follows the scheme: <img class="formulaInl" alt="$ field[k] $" src="form_2.png"/> <br  />
 k...internal mesh item ident, e.g. internal signal position, internal element number <br  />
 Call <a class="el" href="fmop__solver_8h.xhtml#add2527ad2ad1bf1df141e5fa5b4c2e31" title="Maps internal node/element numbering to the external scheme consisting of part and item ID.">FMOP_getDataPointIndices()</a> to map internal to external numbering scheme </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop handle is not allocated.</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the param_values or field array argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation. For detailed log messages call FMOP_getLastError() which outputs internal log messages. </dd></dl>

</div>
</div>
<a id="a878106f886ca5f1ce112e6c5e238d80e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878106f886ca5f1ce112e6c5e238d80e">&#9670;&nbsp;</a></span>FMOP_getDataDim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getDataDim </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_mesh_items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the size of the FCoP vector, aka the number of mesh items. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">database</td><td>A successfully initialized fmop_db_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The data type to be queried (node, element, scalar) </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_mesh_items</td><td>An already initialized scalar data object. Contains the size of the data vectors for the givvemn data type on return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_mesh_items pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that FMOP_initialize() returned fmop_model_success </dd></dl>

</div>
</div>
<a id="a535bee00c4d200d31fdf4118e49c1f05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a535bee00c4d200d31fdf4118e49c1f05">&#9670;&nbsp;</a></span>FMOP_getDataPointCoors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getDataPointCoors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>coors</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the cartesian data point coordinates for each data point. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>Controls coordinate output. The following integers are accepted:<ul>
<li>0... asks for x-coordinates only</li>
<li>1... asks for y-coordinates only</li>
<li>2... asks for z-coordinates only</li>
<li>3... asks for x-, y- and z-coordinates </li>
</ul>
</td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">coors</td><td>An already initialized array of size <img class="formulaInl" alt="$ ( 1 + \lfloor \frac{\mathit{axis}}{3} \rfloor ) * \mathit{num\_mesh\_items} $" src="form_0.png"/>. Call <a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65" title="Returns the size of the FCoP vector, aka the number of mesh items.">FMOP_getModelDim()</a> to get <em>num_mesh_items</em>. On output contains the following coordinate values:<ul>
<li>finite element nodes for an FMOP of type <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75aaf0fb275c161febc56c4f10e62987049" title="node data (one scalar per node)">fmop_node_data</a></li>
<li>finite elements using their center coordinate in space for an FMOP of type <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75a1ec31fe31f3b8a9fd9dd902b014499ef" title="element data (one scalar per element)">fmop_element_data</a></li>
<li>an FMOP of type <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75a16a14aa0d55901638e165fb3a39b3870" title="scalar data (vector of size 1)">fmop_scalar_data</a> invokes an <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> error Follows the scheme: <img class="formulaInl" alt="$ \mathit{coors} \lbrack k+ \mathit{axis} \bmod 3 \rbrack $" src="form_1.png"/> with <br  />
 k...internal mesh item ident, e.g. internal signal position, internal element number <br  />
 Call <a class="el" href="fmop__solver_8h.xhtml#add2527ad2ad1bf1df141e5fa5b4c2e31" title="Maps internal node/element numbering to the external scheme consisting of part and item ID.">FMOP_getDataPointIndices()</a> to map internal to external numbering scheme </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the axis parameter is out-of-bounds, or the coors pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>Calling this function for FMOP models of type <a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75a1ec31fe31f3b8a9fd9dd902b014499ef" title="element data (one scalar per element)">fmop_element_data</a> multiplies resource consumption! </dd></dl>

</div>
</div>
<a id="add2527ad2ad1bf1df141e5fa5b4c2e31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add2527ad2ad1bf1df141e5fa5b4c2e31">&#9670;&nbsp;</a></span>FMOP_getDataPointIndices()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getDataPointIndices </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>part_ids</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>item_ids</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Maps internal node/element numbering to the external scheme consisting of part and item ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">part_ids</td><td>Either an already initialized array of size num_mesh_items as returned by <a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65" title="Returns the size of the FCoP vector, aka the number of mesh items.">FMOP_getModelDim()</a>, or a NULL pointer. Note, most of the meshes consists of a single part only, e.g. signals. If the argument is initialized, it contains the external part IDs on output. A NULL pointer otherwise<br  />
 <div class="fragment"><div class="line">external( <span class="keyword">internal</span>[k] ) = PART_ID [k], item_id [k] </div>
</div><!-- fragment --> k...mesh item, e.g. signal position, element number </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">item_ids</td><td>An already initialized array of size num_mesh_items as returned by <a class="el" href="fmop__solver_8h.xhtml#a24e43563d67cc64bffb7bccddbaada65" title="Returns the size of the FCoP vector, aka the number of mesh items.">FMOP_getModelDim()</a>. On output contains the external node/element ID <br  />
 <div class="fragment"><div class="line">external( <span class="keyword">internal</span>[k] ) = part_id [k], ITEM_ID [k] </div>
</div><!-- fragment --> k...mesh item, e.g. signal position, element number </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a8ca72d6a865df21ce5a5180475c71cda"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ca72d6a865df21ce5a5180475c71cda">&#9670;&nbsp;</a></span>FMOP_getElementsAtNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getElementsAtNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>node_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>elements</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the elements connected to a given node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">node_idx</td><td>the node index (0.. numNodes). This node index refers to the index in the FMOP data vectors. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">elements</td><td>An already initialized array of size as returned by <a class="el" href="fmop__solver_8h.xhtml#a4413f3e2bc5f893b9030631aceb03c54" title="Identifies the elements connected to a given node.">FMOP_getNumElementsAtNode()</a>. On output contains the internal element ID that are connected to the given node. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="ade1eac903ae657e448adf1f7c6aa463c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade1eac903ae657e448adf1f7c6aa463c">&#9670;&nbsp;</a></span>FMOP_getElementTypeIdent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getElementTypeIdent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>element_idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the element type ident of a given element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">element_idx</td><td>the element index (0.. numElements). This element index refers to the index in the FMOP data vectors. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>On success the element type identifier at array position num_ident from the database given, othewise an empty string. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function changes the error number to:<ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the param_ident pointer does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the value of num_param given is greater than, or equal to the size of the param_idents char* array []</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</li>
</ul>
</dd>
<dd>
Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="aae65fdf242dba6c37b9de818be7c9dcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae65fdf242dba6c37b9de818be7c9dcc">&#9670;&nbsp;</a></span>FMOP_getModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *const&#160;</td>
          <td class="paramname"><em>fmop_ident</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> *&#160;</td>
          <td class="paramname"><em>fmop</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads a fmop_handle_t data object from the database given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">database</td><td>The already initialized database handle </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The data type in question </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop_ident</td><td>The FMOP ident to be loaded from the database given </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fmop</td><td>On input <em>*fmop</em> must point to NULL. Returns an initialized fmop handle to the requested <em>fmop_ident</em> on output. Pointer ownership is up to the caller after return. Call FMOP_releaseModel (fmop_handle_t *) at the end of lifetime. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_ident argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the <em>fmop</em> argument does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to load a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becaedda7a6dbd4f5dd3eedecca9ec7dc1e9" title="The requested model identifier is not known.">fmop_model_missing</a> if the handle initialization fails</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that FMOP_initialize() returned fmop_model_success</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A success indicator. Call FMOP_getErrnoString to get a human readable representation </dd></dl>

</div>
</div>
<a id="a185c515c2fe8b0528ccb5f95f543a3be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a185c515c2fe8b0528ccb5f95f543a3be">&#9670;&nbsp;</a></span>FMOP_getModelAvgFCoP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelAvgFCoP </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>fcops</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the Field Coefficients of Prognosis per active scalar input parameter. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fcops</td><td>An already initialized array of size num_params as returned by FMOP_getModelNumParams() On output contains the average Field Coefficient of Prognosis per active scalar input parameter Follows the scheme: fcops[i] (i..i'th active scalar input parameter). </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the fcops pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a24e43563d67cc64bffb7bccddbaada65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24e43563d67cc64bffb7bccddbaada65">&#9670;&nbsp;</a></span>FMOP_getModelDim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelDim </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_mesh_items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the size of the FCoP vector, aka the number of mesh items. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_mesh_items</td><td>An already initialized scalar data object. Contains the size of the FCoP vector on return </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_mesh_items pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="ade959f2a7f6866382b76e32204597220"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade959f2a7f6866382b76e32204597220">&#9670;&nbsp;</a></span>FMOP_getModelIdent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getModelIdent </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_ident</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the n-th known FMOP identifier from the fmop_db_handle_t given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">database</td><td>A successfully initialized fmop_db_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The data type in question </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_ident</td><td>Defines the position in the fmop_idents char* array []. Notice that the first element has a position of 0 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>On succes the FMOP identifier at array position num_ident from the database given, otherwise an empty string. The returned string will be overwritten by this function at the next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function changes the error number to:<ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the fmop_idents pointer does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the value of num_ident given is greater than, or equal to the size of the fmop_idents char* array []</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </li>
</ul>
</dd>
<dd>
Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a22d6e807dc869fa28442d26e29ddbc27"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22d6e807dc869fa28442d26e29ddbc27">&#9670;&nbsp;</a></span>FMOP_getModelIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelIdents </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char ***const&#160;</td>
          <td class="paramname"><em>fmop_idents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_idents</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns all known FMOP identifier from the fmop_db_handle_t given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">database</td><td>A successfully initialized fmop_db_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The data type in question </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fmop_idents</td><td>On input <em>*fmop_idents</em> must point to NULL. On return contains all known FMOP identifier from the database given. Pointer ownership is up to the caller after return. Call <a class="el" href="fmop__solver_8h.xhtml#a37bdee678571cd855ac0bb10675b1d8c" title="An auxiliary function to releases an array of char arrays and dedicated memory.">FMOP_releaseIdents()</a> at the end of life </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_idents</td><td>An already initialized scalar data object. Contains the number of FMOP idents, aka the size of the fmop_idents char* array [] </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the fmop_idents pointer does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_idents pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd>
<dd>
Many languages offers the possiblity to call functions from an external C-library, e.g. Java, python and Matlab. If you are running in some limitations due to our tripple pointer requirement, please use the wrapper functions <a class="el" href="fmop__solver_8h.xhtml#a600dca69efae1f2eafc63f9f6a0067fc" title="Returns the total number of known FMOP identifiers from the fmop_db_handle_t given.">FMOP_getModelIdentsDim()</a> followed by <a class="el" href="fmop__solver_8h.xhtml#ade959f2a7f6866382b76e32204597220" title="Returns the n-th known FMOP identifier from the fmop_db_handle_t given.">FMOP_getModelIdent()</a> to query known idents one by one </dd></dl>

</div>
</div>
<a id="a600dca69efae1f2eafc63f9f6a0067fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a600dca69efae1f2eafc63f9f6a0067fc">&#9670;&nbsp;</a></span>FMOP_getModelIdentsDim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelIdentsDim </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a>&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="sos__capi__common_8h.xhtml#a69eb42c1b3b49f22b9e73c6c9869cb75">fmop_dataobject_types</a>&#160;</td>
          <td class="paramname"><em>data_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_idents</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the total number of known FMOP identifiers from the fmop_db_handle_t given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">database</td><td>A successfully initialized fmop_db_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_type</td><td>The data type in question </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_idents</td><td>An already initialized scalar data object. Contains the number of FMOP idents, aka the size of the fmop_idents char* array [] </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_idents pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a08f0951d2b7615c16e72341e13bad704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08f0951d2b7615c16e72341e13bad704">&#9670;&nbsp;</a></span>FMOP_getModelParamIdent()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API const char* FMOP_getModelParamIdent </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_param</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the n-th active parameter identifier from the fmop handle given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_param</td><td>Defines the position in the fmop_idents char* array []. Notice that the first element has a position of 0 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>On success the parameter identifier at array position num_ident from the database given, othewise an empty string. The returned string will be overwritten by this function at the next call and will be destroyed on program termination </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Calling this function changes the error number to:<ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database or fmop_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the param_ident pointer does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the value of num_param given is greater than, or equal to the size of the param_idents char* array []</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </li>
</ul>
</dd>
<dd>
Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a485827623b3d01cf3157c0a16559908f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a485827623b3d01cf3157c0a16559908f">&#9670;&nbsp;</a></span>FMOP_getModelParamIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelParamIdents </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char ***const&#160;</td>
          <td class="paramname"><em>param_idents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns all active scalar inputer parameters for the fmop handle given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">param_idents</td><td>Requires a NULL pointer on input. On return contains all active scalar input parameters used in the fmop handle given. Pointer ownership is up to the caller after return. Call <a class="el" href="fmop__solver_8h.xhtml#a37bdee678571cd855ac0bb10675b1d8c" title="An auxiliary function to releases an array of char arrays and dedicated memory.">FMOP_releaseIdents()</a> at the end of life </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_params</td><td>An already initialized scalar data object. Contains the number of active scalar input parameters used in the fmop handle given, aka the size of the param_idents char* array [] </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop or param_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the param_idents pointer does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_params pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd>
<dd>
Many languages offers the possiblity to call functions from an external C-library, e.g. Java, python and Matlab. If you are running in some limitations due to our tripple pointer requirement, please use the wrapper functions <a class="el" href="fmop__solver_8h.xhtml#adabef430a391d15eb077fe30e134f368" title="Returns the total number of active parameter identifiers from the fmop handle given.">FMOP_getModelParamIdentsDim()</a> followed by <a class="el" href="fmop__solver_8h.xhtml#a08f0951d2b7615c16e72341e13bad704" title="Returns the n-th active parameter identifier from the fmop handle given.">FMOP_getModelParamIdent()</a> to query known idents one by one </dd></dl>

</div>
</div>
<a id="adabef430a391d15eb077fe30e134f368"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adabef430a391d15eb077fe30e134f368">&#9670;&nbsp;</a></span>FMOP_getModelParamIdentsDim()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelParamIdentsDim </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>num_params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the total number of active parameter identifiers from the fmop handle given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_params</td><td>An already initialized scalar data object. Contains the number of active scalar input parameters used in the fmop handle given, aka the size of the param_idents char* array [] </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop or param_idents arguments is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_params pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a1ff6f33cf199015b78c5837e40d90f42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ff6f33cf199015b78c5837e40d90f42">&#9670;&nbsp;</a></span>FMOP_getModelTotalAvgFCoP()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getModelTotalAvgFCoP </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>fcop</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the total average Field Coefficient of Prognosis for the fmop handle given. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fcop</td><td>An already initialized scalar data object on input. On output contains the total average Field Coefficient of Prognosis </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the fcop pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a03080c2458b8c03eb85ce9eb97926711"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03080c2458b8c03eb85ce9eb97926711">&#9670;&nbsp;</a></span>FMOP_getNodesAtElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getNodesAtElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>element_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>nodes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the nodes connected to a given element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">element_idx</td><td>the element index (0.. numElements). This element index refers to the index in the FMOP data vectors. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">nodes</td><td>An already initialized array of size as returned by <a class="el" href="fmop__solver_8h.xhtml#a031be0f125c4fbeb450f03bb960e207d" title="Identifies the nodes connected to a given element.">FMOP_getNumNodesAtElement()</a>. On output contains the internal node ID that are connected to the given element. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a4413f3e2bc5f893b9030631aceb03c54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4413f3e2bc5f893b9030631aceb03c54">&#9670;&nbsp;</a></span>FMOP_getNumElementsAtNode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getNumElementsAtNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>node_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>num_elements</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the elements connected to a given node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">node_idx</td><td>the node index (0.. numNodes). This node index refers to the index in the FMOP data vectors. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_elements</td><td>a pointer to an unsigned integer number. On output it will contain the number of connected elements. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a031be0f125c4fbeb450f03bb960e207d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a031be0f125c4fbeb450f03bb960e207d">&#9670;&nbsp;</a></span>FMOP_getNumNodesAtElement()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getNumNodesAtElement </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>element_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>num_nodes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies the nodes connected to a given element. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">element_idx</td><td>the element index (0.. numElements). This element index refers to the index in the FMOP data vectors. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">num_nodes</td><td>a pointer to an unsigned integer number. On output it will contain the number of connected nodes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="abaed2ac2af6a304f8356e51b9cb98442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abaed2ac2af6a304f8356e51b9cb98442">&#9670;&nbsp;</a></span>FMOP_getParamLowerBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getParamLowerBounds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>lower_bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns lower bound values of input parameters used to train the FMOP, aka the lower bound values of Design of Experiment input parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">lower_bounds</td><td>An already initialized array of size num_params as returned by <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> On output contains the vector of lower bound values of all active scalar input parameters used to train the FMOP, e.g. lower_bounds<a href="j..index of the active scalar input parameter">j</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the lower_bounds pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a301cfcf26e28ec7ba4b2c730facb679c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a301cfcf26e28ec7ba4b2c730facb679c">&#9670;&nbsp;</a></span>FMOP_getParamUpperBounds()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_getParamUpperBounds </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>upper_bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns upper bound values of input parameters used to train the FMOP, aka the upper bound values of Design of Experiment input parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">upper_bounds</td><td>An already initialized array of size num_params as returned by <a class="el" href="fmop__solver_8h.xhtml#a485827623b3d01cf3157c0a16559908f" title="Returns all active scalar inputer parameters for the fmop handle given.">FMOP_getModelParamIdents()</a> On output contains the vector of upper bound values of all active scalar input parameters used to train the FMOP, e.g. upper_bounds<a href="j..index of the active scalar input parameter">j</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the upper_bounds pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise. </li>
</ul>
</dd>
<dd>
Call FMOP_getErrnoString to get a human readable representation </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Assumes that <a class="el" href="fmop__solver_8h.xhtml#aae65fdf242dba6c37b9de818be7c9dcc" title="Loads a fmop_handle_t data object from the database given.">FMOP_getModel()</a> returned fmop_success </dd></dl>

</div>
</div>
<a id="a1ff1451cc5f1c6cefa7a67c6a906d653"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ff1451cc5f1c6cefa7a67c6a906d653">&#9670;&nbsp;</a></span>FMOP_isNodePartOfBoundary()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_isNodePartOfBoundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a>&#160;</td>
          <td class="paramname"><em>fmop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>node_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int *&#160;</td>
          <td class="paramname"><em>is_part_of_boundary</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identifies if the given node is on the surface. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">fmop</td><td>A successfully initialized fmop_handle_t data object </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">node_idx</td><td>the node index (0.. numNodes). This node index refers to the index in the FMOP data vectors. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">is_part_of_boundary</td><td>a pointer to an unsigned integer number. On output it will contain<ul>
<li>1 if the node is on the boundary</li>
<li>0 if the node is not on the boundary</li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the fmop argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the item_id pointer is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="adf36057836bc12095f01665fa068ba4c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf36057836bc12095f01665fa068ba4c">&#9670;&nbsp;</a></span>FMOP_loadDbFile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_loadDbFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a fmop_db_handle_t object from a previously saved Statistics on Structures (SoS) database. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">database</td><td>On input <em>*database</em> must point to NULL. Returns an initialized handle to the loaded database on ouptut. The database of the returned handle has been set to the content of the file path given. Pointer ownership is up to the caller after return. Call FMOP_releaseDb (fmop_db_handle_t *) at the end of lifetime. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>The path to the SoS database file as a NULL terminated character array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database argument does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the path argument doesn't point to an existing file</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to load a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> if the fmop_db_handle_t has been initialized successfully </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation. </dd></dl>

</div>
</div>
<a id="ab3f6b6b4a84878f3c774a12a2b4cf958"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab3f6b6b4a84878f3c774a12a2b4cf958">&#9670;&nbsp;</a></span>FMOP_loadDbFileWMesh()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_loadDbFileWMesh </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *&#160;</td>
          <td class="paramname"><em>database</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a fmop_db_handle_t object from a previously saved Statistics on Structures (SoS) database This function also builds up all internal data structures needed to represent FEM meshes. Hence it may need more CPU time and RAM. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">database</td><td>On input <em>*database</em> must point to NULL. Returns an initialized handle to the loaded database on ouptut. The database of the returned handle has been set to the content of the file path given. Pointer ownership is up to the caller after return. Call FMOP_releaseDb (fmop_db_handle_t *) at the end of lifetime. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">path</td><td>The path to the SoS database file as a NULL terminated character array </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the database argument does not hold a NULL pointer on input</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the path argument doesn't point to an existing file</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to load a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> if the fmop_db_handle_t has been initialized successfully </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation. </dd></dl>

</div>
</div>
<a id="af36d28d4c5c718284a0f4236f2740e06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af36d28d4c5c718284a0f4236f2740e06">&#9670;&nbsp;</a></span>FMOP_releaseDb()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_releaseDb </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#a4f3b1f4672b1b913e04f95def14d3572">fmop_db_handle_t</a> *&#160;</td>
          <td class="paramname"><em>database</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Releases a fmop_db_handle_t object and dedicated memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">database</td><td>The fmop_db_handle_t to be released. Set to NULLptr on return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="a37bdee678571cd855ac0bb10675b1d8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37bdee678571cd855ac0bb10675b1d8c">&#9670;&nbsp;</a></span>FMOP_releaseIdents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_releaseIdents </td>
          <td>(</td>
          <td class="paramtype">char ***const&#160;</td>
          <td class="paramname"><em>idents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const size_t *&#160;</td>
          <td class="paramname"><em>num_idents</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>An auxiliary function to releases an array of char arrays and dedicated memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">idents</td><td>A pointer to an array of char arrays. Set to NULLptr on return. </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_idents</td><td>An already initialized scalar data object. Contains the number of idents in the char** array [] given </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacef5c059b0dd649f97d5404db95c3ccf" title="The function got an unexpected NULL pointer.">fmop_invalid_handle</a> if the array argument is a NULL pointer or if *array points to NULL</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca4040927e4d05d13e93b9f2c7373ca0cd" title="Input argument(s) is invalid or missing.">fmop_settings_error</a> if the num_idents argument is a NULL pointer</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
<a id="a3ad01c460ed6e409b79e258a523d0bf9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ad01c460ed6e409b79e258a523d0bf9">&#9670;&nbsp;</a></span>FMOP_releaseModel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DYNARDO_FMOP_API <a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8bec">fmop_error_t</a> FMOP_releaseModel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="fmop__solver_8h.xhtml#aed65d1ae14f8c298a702ad5b828a70ef">fmop_handle_t</a> *&#160;</td>
          <td class="paramname"><em>fmop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Releases a fmop_handle_t object and dedicated memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">fmop</td><td>The fmop_handle_t to be released. Set to NULLptr on return. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><ul>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becacf8dfe2eaba2eada73a26e487a04f8fe" title="No valid license available.">fmop_license_error</a> if a license error occurs, e.g. no license has been acquired so far or one tries to release a 3D mesh but acquired a SoS license for 1D meshes, e.g. signals, only</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8becadac3d9086cdab852d265dc924070c198" title="An internal error occurred. Request log messages.">fmop_exception_occurred</a> if any other failure get invoked</li>
<li><a class="el" href="sos__capi__common_8h.xhtml#a4847f3fa2943ffd694eb6cbe169a8beca41a0a2e83b0ac20d414f4b015522ce55" title="Function execution returned successfully.">fmop_success</a> elsewise </li>
</ul>
</dd>
<dd>
Call <a class="el" href="sos__capi__common_8h.xhtml#a7e820b85d2ef2596b00bc82445dcf650" title="Returns a string description for the error number given.">FMOP_getErrnoString()</a> to get a human readable representation </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- HTML footer for doxygen 1.8.15-->
<!-- start footer part -->
<script>
	$('.contents').append('<footer><p class="legalfooter" align="center"><small><i>Contains proprietary and confidential information of ANSYS, Inc. and its subsidiaries and affiliates.</i></small></p></footer>');
</script>
<!--END !GENERATE_TREEVIEW-->
</body>
</html>
