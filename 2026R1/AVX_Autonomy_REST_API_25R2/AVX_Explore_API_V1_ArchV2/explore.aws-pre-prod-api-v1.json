{
    "openapi": "3.1.0",
    "info": {
      "title": "AVxcelerate Explore Service",
      "summary": "Service to manage jobs",
      "description": "",
      "contact": {
        "name": "Ansys AVxcelerate Autonomy",
        "url": "https://developer.ansys.com/docs/avxcelerate",
        "email": "TeamTyson@ansys.com"
      },
      "version": "0.1.0"
    },
    "servers": [
      {
        "url": "/api/explore/v1"
      }
    ],
    "paths": {
      "/health": {
        "get": {
          "tags": [
            "health"
          ],
          "summary": "Health",
          "description": "Returns healthy message.",
          "operationId": "health-health",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object",
                    "title": "Response Health-Health"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ]
        }
      },
      "/jobs": {
        "post": {
          "tags": [
            "jobs"
          ],
          "summary": "Create Job",
          "description": "Create a new job.\n\n:param job: The job to create",
          "operationId": "jobs-create_job",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_jobs-create_job"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExploreJobRead"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "jobs"
          ],
          "summary": "Get Jobs",
          "description": "Get all jobs using filter.\n\n:param explore_service: The explore service instance to use for querying data.\n:param filter_exp: OData filter to filter jobs\n:param order_by: Comma separated list of fields to sort the results by. Prepend a field with \"-\" to specify\n                 that descending order should be used instead of the ascending (which is the default).\n:param skip: items to skip\n:param top: number of items to retrieve\n:param count: If True, the \"count\" entry of the response is populated with the number of retrieved elements.",
          "operationId": "jobs-get_jobs",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "$filter",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "$Filter"
              }
            },
            {
              "name": "$orderby",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "$Orderby"
              }
            },
            {
              "name": "$skip",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 0,
                "title": "$Skip"
              }
            },
            {
              "name": "$top",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "maximum": 100,
                "default": 100,
                "title": "$Top"
              }
            },
            {
              "name": "$count",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false,
                "title": "$Count"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PaginatedExploreJobsRead"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/jobs/{job_id}": {
        "get": {
          "tags": [
            "jobs"
          ],
          "summary": "Get Job",
          "description": "Get a job by its id.\n\n:param job_id: id of the job to retrieve",
          "operationId": "jobs-get_job",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExploreJobRead"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/jobs/{job_id}/kill": {
        "post": {
          "tags": [
            "jobs"
          ],
          "summary": "Kill Job",
          "description": "Submits request to kill job.\n\nThe request takes some time as it depends on resource manager to release all the resources.\n\n:param job_id: The job identifier for the job to be killed",
          "operationId": "jobs-kill_job",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExploreJobResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/jobs/{job_id}/restart": {
        "post": {
          "tags": [
            "jobs"
          ],
          "summary": "Restart failed/killed job",
          "description": "Restarts a failed/killed job.\n\n:param job_id:  The job identifier for the job to be restarted",
          "operationId": "jobs-restart_job",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExploreJobResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/jobs/{job_id}/clone": {
        "post": {
          "tags": [
            "jobs"
          ],
          "summary": "Clone Job",
          "description": "Clones a job based on reference job id.\n\n:param job_id:  The job identifier for the job to be cloned",
          "operationId": "jobs-clone_job",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExploreJob"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/post/{job_id}": {
        "post": {
          "tags": [
            "post"
          ],
          "summary": "Get Post Job Session",
          "description": "Gets or creates a new post session.\n\n:param job_id: The job_id to post-process",
          "operationId": "post-get_post_job_session",
          "security": [
            {
              "HTTPBearer": []
            }
          ],
          "parameters": [
            {
              "name": "job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Job Id"
              }
            },
            {
              "name": "shutdown_mode",
              "in": "query",
              "required": false,
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ShutdownModeEnum"
                  }
                ],
                "default": "auto",
                "title": "Shutdown Mode"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "title": "Response Post-Get Post Job Session"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/pypi/index.html": {
        "get": {
          "tags": [
            "pypi"
          ],
          "summary": "Get Pypi Root Index Html",
          "description": "Index page for pypi index.",
          "operationId": "pypi-get_pypi_root_index_html",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ]
        }
      },
      "/pypi/{package_name}/": {
        "get": {
          "tags": [
            "pypi"
          ],
          "summary": "Get Pypi Package Index Html",
          "description": "Index page for each package.",
          "operationId": "pypi-get_pypi_package_index_html",
          "parameters": [
            {
              "name": "package_name",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Package Name"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "text/html": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ]
        }
      },
      "/pypi/wheels/{wheel_file_name}": {
        "get": {
          "tags": [
            "pypi"
          ],
          "summary": "Get Wheel",
          "description": "Wheel download endpoint.",
          "operationId": "pypi-get_wheel",
          "parameters": [
            {
              "name": "wheel_file_name",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Wheel File Name"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "HTTPBearer": []
            }
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "Body_jobs-create_job": {
          "properties": {
            "job": {
              "type": "string",
              "title": "Job"
            },
            "files": {
              "items": {
                "type": "string",
                "format": "binary"
              },
              "type": "array",
              "title": "Files",
              "default": []
            }
          },
          "type": "object",
          "required": [
            "job"
          ],
          "title": "Body_jobs-create_job"
        },
        "ExploreJob": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "template_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Id"
            },
            "template_name": {
              "type": "string",
              "title": "Template Name"
            },
            "solver_queue_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Queue Name"
            },
            "solver_application_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Application Name"
            },
            "solver_application_version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Application Version"
            },
            "simctl_queue_name": {
              "type": "string",
              "title": "Simctl Queue Name"
            },
            "simctl_application_name": {
              "type": "string",
              "title": "Simctl Application Name"
            },
            "simctl_application_version": {
              "type": "string",
              "title": "Simctl Application Version"
            },
            "job_configuration": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ExploreJobConfiguration"
                }
              ],
              "default": {
  
              }
            },
            "resource_manager_job_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Manager Job Id"
            },
            "resource_manager_post_job_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Manager Post Job Id"
            },
            "status": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ExploreJobStatusEnum"
                }
              ],
              "default": "pending"
            },
            "cleaned": {
              "type": "boolean",
              "title": "Cleaned",
              "default": false
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "status_updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Updated At"
            },
            "failed_reason": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Failed Reason"
            },
            "job_access_key": {
              "type": "string",
              "title": "Job Access Key"
            },
            "state_summary": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/JsonValue"
                }
              ],
              "default": {
  
              }
            },
            "user_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          "type": "object",
          "required": [
            "name",
            "template_name",
            "simctl_queue_name",
            "simctl_application_name",
            "simctl_application_version"
          ],
          "title": "ExploreJob",
          "description": "Database job definition."
        },
        "ExploreJobConfiguration": {
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1,
              "title": "Name"
            },
            "template_name": {
              "type": "string",
              "title": "Template Name"
            },
            "template_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Id"
            },
            "simulation_controller_settings": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SimulationControllerSettings"
                }
              ],
              "default": {
                "files_to_use": [],
                "files_to_retrieve": {
  
                }
              }
            },
            "tasks": {
              "items": {
                "$ref": "#/components/schemas/TaskRuntimeParams"
              },
              "type": "array",
              "title": "Tasks"
            },
            "files": {
              "additionalProperties": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/UploadFileDefinition"
                  },
                  {
                    "$ref": "#/components/schemas/ReferenceFileDefinition"
                  }
                ]
              },
              "type": "object",
              "title": "Files",
              "default": {
  
              }
            },
            "parameters": {
              "additionalProperties": {
                "$ref": "#/components/schemas/ParameterDescription"
              },
              "type": "object",
              "title": "Parameters",
              "default": {
  
              }
            }
          },
          "type": "object",
          "required": [
            "name",
            "template_name",
            "tasks"
          ],
          "title": "ExploreJobConfiguration",
          "description": "Configuration for an Explore job."
        },
        "ExploreJobRead": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            },
            "name": {
              "type": "string",
              "title": "Name"
            },
            "template_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Template Id"
            },
            "template_name": {
              "type": "string",
              "title": "Template Name"
            },
            "solver_queue_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Queue Name"
            },
            "solver_application_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Application Name"
            },
            "solver_application_version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solver Application Version"
            },
            "simctl_queue_name": {
              "type": "string",
              "title": "Simctl Queue Name"
            },
            "simctl_application_name": {
              "type": "string",
              "title": "Simctl Application Name"
            },
            "simctl_application_version": {
              "type": "string",
              "title": "Simctl Application Version"
            },
            "job_configuration": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ExploreJobConfiguration"
                }
              ],
              "default": {
  
              }
            },
            "resource_manager_job_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Manager Job Id"
            },
            "resource_manager_post_job_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Manager Post Job Id"
            },
            "status": {
              "$ref": "#/components/schemas/ExploreJobStatusEnum"
            },
            "cleaned": {
              "type": "boolean",
              "title": "Cleaned"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "status_updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status Updated At"
            },
            "failed_reason": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Failed Reason"
            },
            "state_summary": {
              "$ref": "#/components/schemas/JsonValue"
            },
            "user_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Name"
            }
          },
          "type": "object",
          "required": [
            "name",
            "template_name",
            "simctl_queue_name",
            "simctl_application_name",
            "simctl_application_version",
            "resource_manager_job_id",
            "resource_manager_post_job_id",
            "status",
            "cleaned",
            "created_at",
            "status_updated_at",
            "failed_reason",
            "state_summary",
            "user_name"
          ],
          "title": "ExploreJobRead",
          "description": "Public job definition."
        },
        "ExploreJobResponse": {
          "properties": {
            "message": {
              "type": "string",
              "title": "Message"
            },
            "job_id": {
              "type": "string",
              "title": "Job Id"
            },
            "status": {
              "type": "string",
              "title": "Status"
            }
          },
          "type": "object",
          "required": [
            "message",
            "job_id",
            "status"
          ],
          "title": "ExploreJobResponse",
          "description": "Response Definition."
        },
        "ExploreJobStatusEnum": {
          "type": "string",
          "enum": [
            "pending",
            "running",
            "failed",
            "succeeded",
            "killing",
            "killed"
          ],
          "title": "ExploreJobStatusEnum",
          "description": "Enum of job status."
        },
        "FilesListParameterSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "enum": [
                "files_list"
              ],
              "const": "files_list",
              "title": "Source Type",
              "default": "files_list"
            },
            "files": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Files"
            }
          },
          "type": "object",
          "required": [
            "files"
          ],
          "title": "FilesListParameterSource",
          "description": "File list parameter source."
        },
        "FindReplaceParameterSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "enum": [
                "find_replace"
              ],
              "const": "find_replace",
              "title": "Source Type",
              "default": "find_replace"
            },
            "associated_file": {
              "type": "string",
              "title": "Associated File"
            }
          },
          "type": "object",
          "required": [
            "associated_file"
          ],
          "title": "FindReplaceParameterSource",
          "description": "Find and Replace parameter source."
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "JsonValue": {
  
        },
        "OtherParameterSource": {
          "properties": {
            "source_type": {
              "type": "string",
              "enum": [
                "other"
              ],
              "const": "other",
              "title": "Source Type",
              "default": "other"
            }
          },
          "type": "object",
          "title": "OtherParameterSource",
          "description": "Other parameter source."
        },
        "PaginatedExploreJobsRead": {
          "properties": {
            "values": {
              "items": {
                "$ref": "#/components/schemas/ExploreJobRead"
              },
              "type": "array",
              "title": "Values",
              "default": []
            },
            "count": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Count"
            }
          },
          "type": "object",
          "title": "PaginatedExploreJobsRead",
          "description": "Paginated results."
        },
        "ParameterDataTypeEnum": {
          "type": "string",
          "enum": [
            "float",
            "integer",
            "string",
            "boolean"
          ],
          "title": "ParameterDataTypeEnum",
          "description": "Enum of parameter data types."
        },
        "ParameterDescription": {
          "properties": {
            "name": {
              "type": "string",
              "title": "Name"
            },
            "label": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Label"
            },
            "data_type": {
              "$ref": "#/components/schemas/ParameterDataTypeEnum"
            },
            "unit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Unit"
            },
            "source": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FindReplaceParameterSource"
                },
                {
                  "$ref": "#/components/schemas/FilesListParameterSource"
                },
                {
                  "$ref": "#/components/schemas/OtherParameterSource"
                }
              ],
              "title": "Source"
            },
            "default_value": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Default Value"
            },
            "validity_safe_expression": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Validity Safe Expression"
            },
            "attributes": {
              "additionalProperties": {
                "$ref": "#/components/schemas/JsonValue"
              },
              "type": "object",
              "title": "Attributes",
              "default": {
  
              }
            }
          },
          "type": "object",
          "required": [
            "name",
            "data_type",
            "source"
          ],
          "title": "ParameterDescription",
          "description": "Parameter description."
        },
        "ReferenceFileDefinition": {
          "properties": {
            "source_type": {
              "type": "string",
              "enum": [
                "reference"
              ],
              "const": "reference",
              "title": "Source Type",
              "default": "reference"
            },
            "destination": {
              "type": "string",
              "title": "Destination"
            },
            "asset_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Type"
            },
            "file_format": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Format"
            },
            "internal_reference": {
              "type": "string",
              "title": "Internal Reference"
            }
          },
          "type": "object",
          "required": [
            "destination",
            "internal_reference"
          ],
          "title": "ReferenceFileDefinition",
          "description": "File definition with internal reference."
        },
        "ShutdownModeEnum": {
          "type": "string",
          "enum": [
            "auto",
            "manual"
          ],
          "title": "ShutdownModeEnum",
          "description": "Enum of shutdown mode."
        },
        "SimulationControllerSettings": {
          "properties": {
            "queue_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Queue Name"
            },
            "version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version"
            },
            "files_to_use": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Files To Use",
              "default": []
            },
            "files_to_retrieve": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Files To Retrieve",
              "default": {
  
              }
            }
          },
          "type": "object",
          "title": "SimulationControllerSettings",
          "description": "Simulation controller settings."
        },
        "TaskRuntimeParams": {
          "properties": {
            "task_id": {
              "type": "string",
              "title": "Task Id"
            },
            "instance_name": {
              "type": "string",
              "title": "Instance Name"
            },
            "inputs": {
              "$ref": "#/components/schemas/JsonValue"
            }
          },
          "type": "object",
          "required": [
            "task_id",
            "instance_name",
            "inputs"
          ],
          "title": "TaskRuntimeParams",
          "description": "This class holds necessary parameters to run a task.",
          "object_validation": "task@task_id:inputs"
        },
        "UploadFileDefinition": {
          "properties": {
            "source_type": {
              "type": "string",
              "enum": [
                "upload"
              ],
              "const": "upload",
              "title": "Source Type",
              "default": "upload"
            },
            "destination": {
              "type": "string",
              "title": "Destination"
            },
            "asset_type": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Asset Type"
            },
            "file_format": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "File Format"
            }
          },
          "type": "object",
          "required": [
            "destination"
          ],
          "title": "UploadFileDefinition",
          "description": "Upload file definition."
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        }
      },
      "securitySchemes": {
        "HTTPBearer": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }