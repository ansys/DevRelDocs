{"swagger": "2.0", "basePath": "/api/tsa", "paths": {"/v1/tsa/sut-config": {"get": {"responses": {"200": {"description": "Fetched all available Tags from SUT configuration."}, "500": {"description": "Error fetching SUT configuration Tags."}, "404": {"description": "SUT configuration Tags not found!"}}, "summary": "Retrieve available SUT configuration tags", "operationId": "get_sut_configuration_tags", "tags": ["SUT Configuration"]}}, "/v1/tsa/sut-config/{sut_config_tag}": {"get": {"responses": {"500": {"description": "Error fetching versions for the selected Tag. Contact admin!"}, "404": {"description": "No version was found!"}, "200": {"description": "Fetched all available versions for the selected SUT Tag."}}, "summary": "Retrieve SUT versions for given sut_config_tag", "operationId": "get_sut_configuration_versions", "parameters": [{"name": "sut_config_tag", "in": "path", "required": true, "type": "string", "description": "Tag of the Sut Config to read "}], "tags": ["SUT Configuration"]}}, "/v1/tsa/sut-config/{sut_config_tag}/{sut_config_version}": {"get": {"responses": {"500": {"description": "Error fetching SUT configuration. Contact admin!"}, "404": {"description": "SUT Config for the <tag>:<version> not found."}, "200": {"description": "Fetched SUT Config for the provided <tag>:<version>."}}, "summary": "Retrieve a specific SUT Config by its unique pair of identifiers <tag>:<version>", "operationId": "get_sut_configuration", "parameters": [{"name": "sut_config_tag", "in": "path", "required": true, "type": "string", "description": "Tag ID of the Sut Config to get "}, {"name": "sut_config_version", "in": "path", "required": true, "type": "string", "description": "Supported version for the chosen Tag "}], "tags": ["SUT Configuration"]}}, "/v2/tsa": {"post": {"responses": {"500": {"description": "Internal Server Error. Triggering the TSA airflow job failed. Contact Admin. The server has encountered a situation it does not know how to handle."}, "400": {"description": "Bad Request. Couldn't trigger the TSA airflow job - check that the input parameters are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The TSA airflow job was successfully triggered."}}, "summary": "Trigger a TSA airflow job", "operationId": "post_tsa_airflow_job", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TsaConfig"}}], "tags": ["Airflow Pipeline"]}}, "/v2/tsa-airflow-resample/{job_id}/{chunk_id}/{job_iteration}": {"post": {"responses": {"500": {"description": "Internal Server Error. Triggering the TSA airflow job failed. Contact Admin. The server has encountered a situation it does not know how to handle."}, "400": {"description": "Bad Request. Couldn't trigger the TSA airflow job - check that the input parameters are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The TSA airflow job was successfully triggered."}}, "summary": "Trigger a TSA airflow job", "operationId": "post_tsa_airflow_resample_job", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job chunk within the job"}, {"name": "job_iteration", "in": "path", "required": true, "type": "integer", "description": "Job iteration number"}], "tags": ["Airflow Pipeline"]}}, "/v2/tsa/algorithms": {"get": {"responses": {"200": {"description": "Retrieved all available information on algorithms."}, "400": {"description": "Bad Request. Couldn't find algorithm information. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Retrieve all information available for algorithms", "operationId": "get_algorithms", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Algorithms"]}}, "/v2/tsa/health": {"get": {"responses": {"204": {"description": "No Content. There is no content to send for this request, but the headers may be useful. The user agent may update its cached headers for this resource with the new ones. "}, "200": {"description": "The request succeeded. The service is healthy."}}, "summary": "Get the health status of the service", "operationId": "get_tsa_monitoring_health", "tags": ["Monitoring"]}}, "/v2/tsa/jobs": {"get": {"responses": {"400": {"description": "Bad Request. Couldn't retrieve the TSA jobs status. Please check the TSA job ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Job"}}}}, "summary": "Retrieve the status and configuration of all TSA jobs - deprecated on 11/8/2023", "operationId": "get_tsa_jobs", "parameters": [{"required": false, "example": "{\"job_id\":[\"job_1\", \"job_2\"], \"status\":[\"status_1\", \"status_2\"]}", "in": "query", "description": "Filtering one or more column entries with list of values", "name": "in", "type": "string"}, {"required": false, "example": "timestamp:desc (default)", "in": "query", "description": "Ordering a column in ascending (asc) or descending (desc) order", "name": "order_by", "type": "string"}, {"required": false, "example": "{\"job_id\":\"tsa-\", \"scenario\":\"scen\"}", "in": "query", "description": "Condition like startswith for filtering column/ columns based on partial string", "name": "like", "type": "string"}, {"required": false, "example": "Sensitivity Analysis", "in": "query", "description": "Type of the job for which the records need to be filtered by", "name": "job_type", "type": "string"}, {"required": false, "example": "avoid_lateral_collision_scenario", "in": "query", "description": "Scenario for which the records need to be filtered by", "name": "scenario", "type": "string"}, {"required": false, "example": "080_042_081", "in": "query", "description": "System under test for which the records need to be filtered by", "name": "SUT", "type": "string"}, {"required": false, "example": "tsa-cdf9b3ee-e3a1-11eb-b379-0a580a83287d", "in": "query", "description": "Id of the job for which the records need to be filtered by", "name": "job_id", "type": "string"}, {"required": false, "example": "Success", "in": "query", "description": "Status of the job for which the records need to be filtered by", "name": "status", "type": "string"}, {"required": false, "example": "nloop", "in": "query", "description": "Source of the jobs data", "name": "source", "type": "string"}, {"required": false, "example": "1000", "in": "query", "description": "Starting index to return the records from(offset value or the number of records to skip)", "name": "skip", "type": "string"}, {"required": false, "example": "2500", "in": "query", "description": "Number of records to return in the response", "name": "limit", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "deprecated": true, "tags": ["TSA-job"]}}, "/v2/tsa/jobs/cancel/{job_id}": {"post": {"responses": {"400": {"description": "Bad Request. The job couldn't be canceled. Check the job ID is correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "\"Success. A message will appear to confirm cancellation. {\"status\": \"cancelling\", \"message\": \"Job cancellation started\"}"}}, "summary": "Cancel the job based on the job ID and update the job status in the database", "operationId": "post_tsa_job_cancel", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Job_Cancel_Request"}}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/chunk_files/{job_id}/{chunk_id}": {"parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"500": {"description": "Internal Server Error. Contact admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Not Found. Check the TSA job ID and chunk_id is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Couldn't retrieve the file. Check the TSA job ID and chunk_id and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The file content has been retrieved."}}, "operationId": "get_tsa_chunk_file", "parameters": [{"name": "chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job chunk"}, {"required": true, "example": "parameter.json", "enum": ["kpi", "parameter"], "in": "query", "description": "Type of file", "name": "file_type", "type": "string"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/files/{job_id}/{sample_id}": {"get": {"responses": {"500": {"description": "Internal Server Error. Contact admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Not Found. Check the TSA job ID and sample_id is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Couldn't retrieve the file. Check the TSA job ID and sample_id and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The file content has been retrieved."}}, "summary": "Retrieve scenario/kpi/simulation log file content of based on the sample ID of the TSA job", "operationId": "get_tsa_file", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "sample_id", "in": "path", "required": true, "type": "string", "description": "Sample identifier"}, {"required": true, "example": "scenario", "enum": ["kpi", "scenario", "sensor_error", "simulation_log", "simulation_trace_log"], "in": "query", "description": "Type of file", "name": "file_type", "type": "string"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/log_run_time/{job_id}/{chunk_id}": {"get": {"responses": {"200": {"description": "Success. The run time for the TSA job chunk was logged."}}, "operationId": "get_tsa_log_run_time", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job chunk within the job"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/pause/{job_id}": {"post": {"responses": {"400": {"description": "Bad Request. The job couldn't be paused. Check the job ID is correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. A message will appear to confirm the job has been paused. {\"status\": \"pausing\", \"message\": \"Job pausing started\"}"}}, "summary": "Pause job based on the job ID and update the job status in the database", "operationId": "post_tsa_job_pause", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Job_Pause_Request"}}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/resume/{job_id}": {"post": {"responses": {"400": {"description": "Bad Request. The job couldn't be resumed. Check the job ID is correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. A message will appear to confirm the job has been resumed. {\"status\": \"resuming\", \"message\": \"Job resume started\"}"}}, "summary": "Resume the job based on the job ID and update the job status in the database", "operationId": "post_tsa_job_resume", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/save_task_status/{job_id}/{job_chunk_id}": {"post": {"responses": {"400": {"description": "Bad Request. The request to save task status of TSA job {job_id} {job_chunk_id} couldn't be completed. Check the job ID and the job chunk ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The request to save task status of TSA job {job_id} {job_chunk_id} has been completed."}}, "summary": "Save the task status of a TSA job identified by its job ID", "operationId": "post_save_tsa_job_task_status", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "job_chunk_id", "in": "path", "required": true, "type": "string", "description": "The chunk identifier of the TSA job"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/simulation_status/{job_chunk_id}": {"get": {"responses": {"400": {"description": "Bad Request. Couldn't retrieve the simulation status, check the job chunk id is correct and try again."}, "200": {"description": "Success. Retrieved simulation status of TSA job chunk id."}}, "operationId": "get_sim_status", "parameters": [{"name": "job_chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job_chunk"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/simulation_status/{job_chunk_id}/stats": {"post": {"responses": {"201": {"description": "Reported successfully"}}, "summary": "Report the change of active simulations at the moment", "description": "Relative values are considered (\u00b11)", "operationId": "post_simulation_status_metric", "parameters": [{"name": "job_chunk_id", "in": "path", "required": true, "type": "string", "description": "The TSA job-chunk-id for which statistics are reported."}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Job_Chunk_Id_Status_Update"}}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/task_status/{job_id}/{job_chunk_id}": {"get": {"responses": {"400": {"description": "Bad Request. Couldn't retrieve the status of TSA job {job_id}, check the job ID an dthe chunk ID are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Job_Task_Status"}}}}, "summary": "Retrieve the status of a TSA job identified with its job ID", "operationId": "get_tsa_job_task_status", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "job_chunk_id", "in": "path", "required": true, "type": "string", "description": "The chunk identifier of the TSA job"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["TSA-job"]}}, "/v2/tsa/jobs/{job_id}": {"get": {"responses": {"400": {"description": "Bad Request. The status of TSA job {job_id} couldn't be retrieved. Check the job ID is correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Job"}}}, "summary": "Retrieve the status of a TSA job identified by the job ID", "operationId": "get_tsa_job", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["TSA-job"]}}, "/v2/tsa/logical-scenarios": {"get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/LogicalScenario"}}}, "400": {"description": "Bad Request. Could not retrieve available logical scenarios. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Retrieve a list of all available logical scenarios", "operationId": "get_logical_scenarios", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/config": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve logical scenario config file. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. Retrieved logical scenario config file."}}, "summary": "Retrieve contents of a scenario config file", "operationId": "get_scenario_config", "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/group-type": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve group-type data. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/GroupType"}}}}, "summary": "Retrieve group types data for scenarios", "operationId": "get_group_types", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the group-type"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/groups": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve logical scenario group data. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Group"}}}, "summary": "Retrieve groups data for scenarios", "operationId": "get_groups", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the group"}, {"name": "type", "in": "query", "type": "string", "description": "Type of the group"}, {"name": "source_id", "in": "query", "type": "string", "description": "Type of the group"}, {"name": "enabled", "in": "query", "type": "boolean", "description": "Enabled flag of the group"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/id/{scenario_id}": {"get": {"responses": {"404": {"description": "Not Found. Could not retrieve logical scenario. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Could not retrieve logical scenario. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/LogicalScenario"}}}, "summary": "Retrieve logical scenario by ID", "operationId": "get_logical_scenario_id", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "scenario_id of logical scenario "}, {"required": false, "in": "query", "description": "fields to include in response. comma separated without space as a single string. example : id,label,parameters[].name", "name": "fields", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "deprecated": true, "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/id/{scenario_id}/versions/{version}": {"get": {"responses": {"404": {"description": "Not Found. Could not retrieve logical scenario. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Could not retrieve logical scenario. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/LogicalScenario"}}}, "summary": "Retrieve logical scenario by ID", "operationId": "get_logical_scenario_id_and_version", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "scenario_id of logical scenario "}, {"name": "version", "in": "path", "required": true, "type": "string", "description": "version of logical scenario "}, {"required": false, "in": "query", "description": "fields to include in response. comma separated without space as a single string. example : id,label,parameters[].name", "name": "fields", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/kpis": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve KPI data. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/KPI"}}}}, "summary": "Retrieve KPI data for logical scenarios", "operationId": "get_kpis", "parameters": [{"name": "name", "in": "query", "type": "array", "description": "comma-saperated list of kpis names", "items": {"type": "string"}, "collectionFormat": "csv"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/{scenario_id}/assets": {"parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Not Found. The scenario does not exist. Check the scenario ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad request. the scenario ID was not provided in the request. Add the scenario ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/asset"}}}}, "summary": "Retrieve asset list for a specific logical scenario", "operationId": "get_logical_scenario_id_assets_link", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/{scenario_name}": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve details of the logical scenario {scenario_name}. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/LogicalScenario"}}}, "summary": "Retrieve details of a specific logical scenario", "operationId": "get_logical_scenario_resource", "parameters": [{"name": "scenario_name", "in": "path", "required": true, "type": "string", "description": "The scenario Name"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/{scenario_name}/parameter_bounds": {"get": {"responses": {"400": {"description": "Bad Request. Could not retrieve parameter bounds for the logical scenario {scenario_name}. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ParameterDistribution"}}}}, "summary": "Retrieve parameter bounds for the given logical scenario", "operationId": "get_parameter_distributions", "parameters": [{"name": "scenario_name", "in": "path", "required": true, "type": "string", "description": "The logical scenario name"}, {"description": "Source of the data", "in": "query", "enum": ["cdc", "test_fleet", "all"], "required": true, "name": "source", "type": "string"}, {"description": "Json file with parameters for which bounds are desired", "in": "query", "type": "string", "example": "[{\"name\": \"initial_host_velocity_km_h\", \"min\": 1, \"max\": 20}]", "required": true, "name": "parameters"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/logical-scenarios/{scenario_name}/versions": {"get": {"responses": {"500": {"description": "Internal Server Error. Versions of the logical scenario could not be retrieved. The server has encountered a situation it does not know how to handle. Contact Admin."}, "404": {"description": "Bad Request. Logical scenario not found. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. Retrieved versions of the logical scenario."}}, "summary": "Retrieve all versions for the given logical scenario", "operationId": "get_scenario_versions", "parameters": [{"name": "scenario_name", "in": "path", "required": true, "type": "string", "description": "The logical scenario name"}], "tags": ["Logical Scenario"]}}, "/v2/tsa/maprfs-health": {"get": {"responses": {"204": {"description": "No Content. The test to access the MapR file system failed. There is no content to send for this request, but the headers may be useful. The user agent may update its cached headers for this resource with the new ones."}, "200": {"description": "The test to access the MapR file system succeeded."}}, "summary": "Get the health status of the service", "operationId": "get_tsa_monitoring_maprfs_health", "tags": ["Monitoring"]}}, "/v2/tsa/metric": {"get": {"responses": {"200": {"description": "Success. The metrics for the service have been retrieved."}}, "summary": "Retrieve the metrics of the service", "operationId": "get_tsa_monitoring_metrics", "tags": ["Monitoring"]}, "post": {"responses": {"400": {"description": "Bad Request. Please check your request and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The monitoring data has been added."}}, "operationId": "post_tsa_monitoring_metrics", "parameters": [{"required": false, "in": "query", "description": "Other simulation cases like no kpis, invalid scenario, etc.", "name": "other_simulations", "type": "string"}, {"required": false, "in": "query", "description": "Number of logical scenarios", "name": "no_of_logical_scenarios", "type": "string"}, {"required": false, "in": "query", "description": "Number of failed simulations", "name": "no_of_failed_simulations", "type": "string"}, {"required": false, "in": "query", "description": "Number of successful simulations", "name": "no_of_successful_simulations", "type": "string"}, {"required": false, "in": "query", "description": "Number of valid concrete scenarios created", "name": "no_of_valid_concrete_scenarios", "type": "string"}, {"required": false, "in": "query", "description": "Number of invalid concrete scenarios created", "name": "no_of_invalid_concrete_scenarios", "type": "string"}, {"required": false, "in": "query", "description": "Number of jobs created", "name": "number_of_jobs_created", "type": "string"}, {"required": false, "in": "query", "description": "Distance driven", "name": "distance_driven", "type": "string"}, {"required": false, "in": "query", "description": "Date", "name": "date", "type": "string"}, {"required": false, "in": "query", "description": "Job ID", "name": "job_id", "type": "string"}], "tags": ["Monitoring"]}}, "/v2/tsa/model": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ParameterBounds"}}}, "operationId": "get_tsa_airflow_model", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Airflow Pipeline"]}}, "/v2/tsa/ping": {"get": {"responses": {"200": {"description": "Successfully pinged"}}, "summary": "Ping the service", "operationId": "get_tsa_monitoring_ping", "tags": ["Monitoring"]}}, "/v2/tsa/reports": {"post": {"responses": {"400": {"description": "Bad Request. The request to create a CVS report with the job data couldn't be completed. Check that the list of TSA jobs are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The request to create a CVS report with all the job data has been completed. Please find the path of the CVS report in the response body."}}, "summary": "Create a CSV file with data for all jobs in body", "operationId": "post_tsa_reports", "parameters": [{"required": true, "example": "{}", "in": "body", "description": "The list of TSA jobs", "name": "body", "type": "string"}], "tags": ["Simulation Reports"]}}, "/v2/tsa/reports/analytics-result/{job_id}": {"get": {"responses": {"400": {"description": "Bad Request. The request to retrieve analytics results for {job_id} couldn't be completed. Check that the job ID is correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The analytics results for the {job_id} have been retrieved."}}, "summary": "Retrieve analytics results of a specific TSA job ID", "operationId": "get_tsa_analytics_result", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}], "tags": ["Simulation Reports"]}}, "/v2/tsa/reports/post-processor-result/{job_id}/{chunk_id}": {"get": {"responses": {"400": {"description": "Bad Request. The post processor results for {chunk_id} couldn't be retrieved. Check that the job ID and chunk ID are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The KPI post processor results for  {chunk_id} have been retrieved."}}, "summary": "Retrieve post processor results for given TSA job chunk ID", "operationId": "get_post_processor_results", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job "}, {"name": "chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job chunk"}], "tags": ["Simulation Reports"]}}, "/v2/tsa/reports/{job_id}/{chunk_id}": {"get": {"responses": {"404": {"description": "Not Found. The report couldn't be retrieved because the TSA job or TSA chunk were not found. Check that the job ID and chunk ID are correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. The request to retrieve the {job_id} report couldn't be completed. Check that the job ID and chunk ID are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/JobReport"}}}, "summary": "Retrieve generated report according to the Job ID", "operationId": "get_tsa_report2", "parameters": [{"name": "job_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job"}, {"name": "chunk_id", "in": "path", "required": true, "type": "string", "description": "The identifier of the TSA job chunk within the job or 'all'"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Simulation Reports"]}}, "/v3/tsa": {"post": {"responses": {"500": {"description": "Internal Server Error. Triggering the TSA airflow job failed. Contact Admin. The server has encountered a situation it does not know how to handle."}, "400": {"description": "Bad Request. Couldn't trigger the TSA airflow job - check that the input parameters are correct and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The TSA airflow job was successfully triggered."}}, "summary": "Trigger a TSA airflow job", "operationId": "post_tsa_airflow_job_experimental", "parameters": [{"name": "parameter_json", "in": "formData", "type": "file"}, {"name": "kpi_json", "in": "formData", "type": "file"}, {"name": "job_config", "in": "formData", "type": "string", "required": true}, {"name": "driver_input", "in": "formData", "type": "file"}], "consumes": ["multipart/form-data"], "tags": ["Airflow Pipeline"]}}, "/v3/tsa/jobs": {"get": {"responses": {"400": {"description": "Bad Request. Couldn't retrieve the TSA jobs status. Please check the TSA job ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Tsa_Jobs_Response"}}}}, "summary": "Retrieve the status and configuration of all TSA jobs", "operationId": "get_tsa_jobs_v3", "parameters": [{"required": false, "example": "{\"job_id\":[\"job_1\", \"job_2\"], \"status\":[\"status_1\", \"status_2\"]}", "in": "query", "description": "Filtering one or more column entries with list of values", "name": "in", "type": "string"}, {"required": false, "example": "timestamp:desc (default)", "in": "query", "description": "Ordering a column in ascending (asc) or descending (desc) order", "name": "order_by", "type": "string"}, {"required": false, "example": "{\"job_id\":\"tsa-\", \"scenario\":\"scen\"}", "in": "query", "description": "Condition like startswith for filtering column/ columns based on partial string", "name": "like", "type": "string"}, {"required": false, "example": "User-1", "in": "query", "description": "User ID by which the records need to be filtered", "name": "user_id", "type": "string"}, {"required": false, "example": "Sensitivity Analysis", "in": "query", "description": "Type of the job for which the records need to be filtered by", "name": "job_type", "type": "string"}, {"required": false, "example": "avoid_lateral_collision_scenario", "in": "query", "description": "Scenario for which the records need to be filtered by", "name": "scenario", "type": "string"}, {"required": false, "example": "080_042_081", "in": "query", "description": "System under test for which the records need to be filtered by", "name": "SUT", "type": "string"}, {"required": false, "example": "tsa-cdf9b3ee-e3a1-11eb-b379-0a580a83287d", "in": "query", "description": "Id of the job for which the records need to be filtered by", "name": "job_id", "type": "string"}, {"required": false, "example": "Success", "in": "query", "description": "Status of the job for which the records need to be filtered by", "name": "status", "type": "string"}, {"required": false, "example": "nloop", "in": "query", "description": "Source of the jobs data", "name": "source", "type": "string"}, {"required": false, "example": "1000", "in": "query", "description": "Starting index to return the records from(offset value or the number of records to skip)", "name": "skip", "type": "string"}, {"required": false, "example": "2500", "in": "query", "description": "Number of records to return in the response", "name": "limit", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["TSA-job"]}}}, "info": {"title": "Test Space Analytics", "version": "1.0.0", "description": "This is the REST API for the Explore and Analyze (TSA) application that is part of the Ansys Avxcelerate Autonomous Driving Toolchain.<br/>The REST API provides endpoints to manage logical scenarios and their related entities including associated assets, algorithms, manage TSA jobs, simulation reports and Airflow Pipeline.<br/>Please refer to the Analyze and Explore User Guide available on the Ansys documentation portal for examples of how to use the available REST API features.", "contact": {"name": "support@ansys.com", "email": "support@ansys.com", "url": null}, "license": {"name": "Ansys software"}}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"apikey": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "security": [{"apikey": []}], "tags": [{"name": "Logical Scenario", "description": "Endpoints to manage logical scenarios and associated data"}, {"name": "Algorithms", "description": "Endpoints to manage algorithms"}, {"name": "Monitoring", "description": "Endpoints to monitor the health of the services"}, {"name": "TSA-job", "description": "The endpoints that manage the configuration and status of the tsa-job in the Explore and Analyze application."}, {"name": "Simulation Reports", "description": "The endpoints used to generate simulation reports"}, {"name": "Airflow Pipeline", "description": "The endpoints used to trigger a test-space analytics run with Airflow."}, {"name": "SUT Configuration", "description": "This section is not used in this REST API, please use the dedicated SUT REST API to manage SUT endpoints"}], "definitions": {"LogicalScenario": {"properties": {"id": {"type": "string", "description": "ID of LogicalScenario.", "example": "14c1c565-7dca-4ef4-9180-bfbb1e0914a4"}, "name": {"type": "string", "description": "The name of this LogicalScenario.", "example": "cut-out"}, "label": {"type": "string", "description": "The label of this LogicalScenario.", "example": "Avoid Lateral Collision Scenario"}, "description": {"type": "string", "description": "The description of this LogicalScenario.", "example": "One non-ego vehicle performing a cut-out maneuver"}, "parameters": {"type": "array", "description": "The parameters of this LogicalScenario.", "example": [{"description": "velocity of the host", "name": "velocity", "label": "Relative Velocity", "data_type": "double", "unit": "m/s"}], "items": {"$ref": "#/definitions/ParameterDescription"}}, "kpis": {"type": "array", "description": "The kpis of this LogicalScenario.", "default": [], "example": [{"description": "Minimum value of Time to Collision during simulation", "name": "min_ttc", "label": "Minimum time to collision", "target": "application/adp/test/evaluation/kpi/closed_loop_evaluation/closed_loop_kpi_evaluation.test.sh", "data_type": "double", "unit": "s"}], "items": {"$ref": "#/definitions/KPI"}}, "file_format": {"type": "string", "description": "File format of concrete scenario file", "example": "XOSC"}, "user_data": {"type": "object", "description": "User data for the logical scenario.", "example": "{}"}}, "type": "object"}, "ParameterDescription": {"properties": {"name": {"type": "string", "description": "The name of this ParameterDescription.", "example": "velocity"}, "label": {"type": "string", "description": "User friendly label for this parameter.", "example": "Relative Velocity"}, "description": {"type": "string", "description": "The description of this ParameterDescription.", "example": "velocity of the host"}, "data_type": {"type": "string", "description": "The type of this ParameterDescription", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "unit": {"type": "string", "description": "The unit of this ParameterDescription if applicable", "example": "m/s"}}, "type": "object"}, "KPI": {"properties": {"name": {"type": "string", "description": "The name of this KPI", "example": "min_ttc"}, "label": {"type": "string", "description": "User friendly label for this KPI", "example": "Minimum time to collision"}, "description": {"type": "string", "description": "The description of this KPI", "example": "Minimum value of Time to Collision during simulation"}, "data_type": {"type": "string", "description": "The data type of this KPI", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "unit": {"type": "string", "description": "The unit of this KPI if applicable", "example": "s"}}, "type": "object"}, "Group": {"properties": {"id": {"type": "string", "description": "Auto generated id of the group"}, "name": {"type": "string", "description": "User defined unique name of the group"}, "description": {"type": "string", "description": "User defined description of the group"}, "source_id": {"type": "string", "description": "Source of Truth for the group."}, "enabled": {"type": "boolean", "description": "Enable flag of groups"}, "scenarios": {"type": "array", "description": "List of referenced scenarios", "items": {"$ref": "#/definitions/ScenarioReference"}}}, "type": "object"}, "ScenarioReference": {"properties": {"id": {"type": "string", "description": "Id of the attached scenario"}, "name": {"type": "string", "description": "Name of the attached scenario"}, "label": {"type": "string", "description": "label of the attached scenario"}}, "type": "object"}, "ParameterDistribution": {"required": ["histogram", "parameterName", "stats"], "properties": {"parameterName": {"type": "string", "description": "The name of this parameter.", "example": "relative_velocity"}, "histogram": {"description": "The histogram data for this parameter.", "example": {"startvalues": [11.547677674177862, 182.4928057730206, 353.4379338718633, 524.3830619707061, 695.3281900695488, 866.2733181683915], "counts": [25, 5, 2, 2, 2]}, "allOf": [{"$ref": "#/definitions/Histogram"}]}, "stats": {"description": "The stats for this parameter.", "example": {"count": 36.0, "mean": 189.66970265961152, "stdDev": 218.71526714543336, "min": 11.547677674177862, "max": 866.2733181683915}, "allOf": [{"$ref": "#/definitions/Stats"}]}}, "type": "object"}, "Histogram": {"required": ["counts", "startvalues"], "properties": {"startvalues": {"type": "array", "description": "The list of start values of each bucket of histogram.", "example": [11.547677674177862, 182.4928057730206, 353.4379338718633, 524.3830619707061, 695.3281900695488, 866.2733181683915], "items": {"type": "number"}}, "counts": {"type": "array", "description": "The list of counts in each bucket of histogram.", "example": [25, 5, 2, 2, 2], "items": {"type": "integer"}}}, "type": "object"}, "Stats": {"required": ["count", "max", "mean", "min", "stdDev"], "properties": {"count": {"type": "integer", "description": "The total count of all values.", "example": 36.0}, "mean": {"type": "number", "description": "The mean value.", "example": 189.66970265961152}, "stdDev": {"type": "number", "description": "The standard deviation of values.", "example": 218.71526714543336}, "min": {"type": "number", "description": "The minimum value.", "example": 11.547677674177862}, "max": {"type": "number", "description": "The maximum value.", "example": 866.2733181683915}}, "type": "object"}, "GroupType": {"properties": {"id": {"type": "string", "description": "Auto generated id of the group type"}, "name": {"type": "string", "description": "User defined unique name of the group type"}, "description": {"type": "string", "description": "User defined description of the group type"}, "groups": {"type": "array", "description": "List of referenced groups", "items": {"$ref": "#/definitions/GroupReference"}}}, "type": "object"}, "GroupReference": {"properties": {"id": {"type": "string", "description": "Id of the attached group"}, "name": {"type": "string", "description": "Id of the attached scenario"}, "scenarios": {"type": "array", "description": "List of referenced scenarios", "items": {"$ref": "#/definitions/ScenarioReference"}}}, "type": "object"}, "asset": {"properties": {"id": {"type": "string", "description": "The unique identifier of asset", "example": "1"}, "name": {"type": "string", "description": "The Name of asset", "example": "driver_input.json"}, "file_type": {"type": "string", "description": "Type of the asset", "example": "driver_input, map"}, "version": {"type": "string", "description": "creation date/version"}}, "type": "object"}, "Job_Task_Status": {"properties": {"duration": {"type": "string", "description": "Duration in seconds taken to complete task", "example": "50.9196"}, "end_date": {"type": "string", "description": "DateTime when task execution completed", "example": "2020-09-15 11:33:57.198179+00:00"}, "execution_date": {"type": "string", "description": "DateTime when Job iteration was submitted for execution", "example": "2020-09-15 11:32:09+00:00"}, "max_tries": {"type": "string", "description": "Maximum tries of this task ", "example": "0"}, "queued_dttm": {"type": "string", "description": "DateTime when task was queued for execution", "example": "2020-09-15 11:33:01.999767+00:00"}, "start_date": {"type": "string", "description": "DateTime when task execution started", "example": "2020-09-15 11:33:06.278579+00:00"}, "state": {"type": "string", "description": "State of this task", "example": "running"}, "task_name": {"type": "string", "description": "Name of this task", "example": "ResultProcessor"}, "task_label": {"type": "string", "description": "Label of this task", "example": "Result Processor"}, "airflow_run_id": {"type": "string", "description": "Airflow run id ", "example": "2022-04-07T09:16:20.097860"}}, "type": "object"}, "Job": {"properties": {"job_id": {"type": "string", "description": "The job_id of this Job.", "example": "ce267512-88d9-47c2-947c-bd25e93d26b1"}, "job_config": {"type": "object", "description": "The job_config of this Job.", "example": "{}"}, "number_of_chunks": {"type": "string", "description": "The number_of_chunks of this Job.", "example": "2"}, "status": {"type": "string", "description": "The status of this Job.", "example": "SUCCESS"}, "start_time": {"type": "string", "description": "DateTime when job was created.", "example": ""}, "end_time": {"type": "string", "description": "DateTime when job ended.", "example": ""}, "source": {"type": "string", "description": "Source from where job was created.", "example": "UI"}, "job_type": {"type": "string", "description": "Type of job.", "example": "sensitivity_analysis"}, "job_chunks": {"type": "object", "description": "The job_config of this Job.", "example": "{}"}, "total_samples": {"type": "integer", "description": "Total number of samples for this Job.", "example": 10}, "operator_config": {"type": "object", "description": "The operator config of this Job.", "example": "{}"}, "user_id": {"type": "string", "description": "User name of the user who created the job", "example": "ABC"}, "kpi_json_present": {"type": "boolean", "description": "Flag to determine if KPI file is uploaded"}, "comment": {"type": "string", "description": "Comment added by user when job was created", "example": "Test Sensitivity Job"}}, "type": "object"}, "Tsa_Jobs_Response": {"properties": {"data": {"type": "array", "description": "The list of TSA Jobs", "items": {"$ref": "#/definitions/Job"}}, "limit": {"type": "integer", "description": "Number of records to return in the response", "example": 2500}, "offset": {"type": "integer", "description": "Starting index to return the records from(offset value or the number of records to skip)", "example": 0}, "total": {"type": "integer", "description": "The total number of TSA Jobs", "example": 1000}}, "type": "object"}, "Job_Chunk_Id_Status_Update": {"required": ["value"], "properties": {"value": {"type": "integer", "description": "Simulation status change", "example": "1"}, "type": {"type": "string", "description": "Type of the change: only relative supported", "default": "rel", "example": "rel", "enum": ["rel"]}}, "type": "object"}, "Job_Cancel_Request": {"properties": {"message": {"type": "string", "description": "Cancellation message/reason.", "example": "This is sample cancellation message."}}, "type": "object"}, "Job_Pause_Request": {"properties": {"message": {"type": "string", "description": "Pause message/reason.", "example": "This is sample pause message."}}, "type": "object"}, "JobReport": {"properties": {"job_id": {"type": "string", "description": "The job_id of this Job.", "example": "123"}, "chunks": {"type": "array", "description": "List of chunks for the job", "items": {"$ref": "#/definitions/JobChunk"}}, "kpis": {"type": "array", "description": "List of kpis and related metadata", "items": {"$ref": "#/definitions/KPI"}}, "parameters": {"type": "array", "description": "List of parameters and related metadata", "items": {"$ref": "#/definitions/Parameter"}}}, "type": "object"}, "JobChunk": {"properties": {"chunk_id": {"type": "string", "description": "Chunk id", "example": "tsa-123-1"}, "samples": {"type": "array", "description": "List of samples for the chunk", "items": {"$ref": "#/definitions/Sample"}}}, "type": "object"}, "Sample": {"properties": {"sample_id": {"type": "integer", "description": "Sample Identifier", "example": 1}, "sample_status": {"type": "array", "description": "List of task status for this sample", "items": {"$ref": "#/definitions/SampleStatus"}}, "sample_params": {"type": "object", "description": "Name value pairs of parameters for this sample", "example": {"lateral_distance": -3.0, "longitudinal_distance": -5.0, "relative_velocity": -2.0}}, "scenario_json_file_path": {"type": "string", "description": "", "example": "/input/scenarios/scenario_tsa-123-1-1.json"}, "kpi_results": {"type": "object", "description": "Name value pairs of kpis for this sample", "example": {"critical_lateral_events": 1, "driven_distance": "637.120010"}}, "kpis_json_file_path": {"type": "string", "description": "", "example": "/output/1/scenario_tsa-123-1-1.json"}}, "type": "object"}, "SampleStatus": {"properties": {"name": {"type": "string", "description": "Task name for the sample", "example": "Algorithm Sampling"}, "completed_time": {"type": "string", "description": "Time at which the task for this sample was complete", "example": "2021-03-02T19:21:56.377727+00:00"}, "status": {"type": "string", "description": "Status of the task for this sample", "example": "success"}}, "type": "object"}, "Parameter": {"properties": {"name": {"type": "string", "description": "The name of this Parameter.", "example": "velocity"}, "label": {"type": "string", "description": "User friendly label for this Parameter", "example": "Relative Velocity"}, "description": {"type": "string", "description": "The description of this Parameter", "example": "velocity of the host"}, "data_type": {"type": "string", "description": "The type of this Parameter", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "unit": {"type": "string", "description": "The unit of this Parameter if applicable", "example": "m/s"}}, "type": "object"}, "ParameterBounds": {"properties": {"constant": {"type": "string", "description": "The constant of this ParameterBounds."}, "constant_type": {"type": "string", "description": "Treat constant parameters as given data type", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "discrete_type": {"type": "string", "description": "Treat discrete parameters as given data type", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "discrete_values": {"type": "array", "description": "The discrete values of this ParameterBounds.", "items": {"type": "string"}}, "distribution_type": {"type": "string", "description": "The distribution_type of this ParameterBounds", "example": "continuous", "enum": ["continuous", "constant", "discrete"]}, "min": {"type": "number", "description": "The min of this ParameterBounds."}, "max": {"type": "number", "description": "The max of this ParameterBounds."}, "pdf": {"description": "The pdf of this ParameterBounds.", "allOf": [{"$ref": "#/definitions/ProbabilityDistributionFunction"}]}}, "type": "object"}, "ProbabilityDistributionFunction": {"properties": {"name": {"type": "string", "description": "The name of this ProbabilityDistributionFunction."}, "variables": {"type": "object", "description": "The variables of this ProbabilityDistributionFunction.", "additionalProperties": {"type": "string"}}}, "type": "object"}, "TsaConfig": {"required": ["source", "system_under_test_config"], "properties": {"scenario_config": {"description": "The scenario_config of this TsaConfig", "allOf": [{"$ref": "#/definitions/ScenarioConfig"}]}, "sensor_error_config": {"description": "The sensor error config of this TsaConfig", "allOf": [{"$ref": "#/definitions/SensorErrorConfig"}]}, "sampling_algorithm_config": {"description": "The sampling_algorithm_config of this TsaConfig.", "allOf": [{"$ref": "#/definitions/SamplingAlgorithmConfig"}]}, "system_under_test_config": {"description": "The system_under_test_config of this TsaConfig.", "allOf": [{"$ref": "#/definitions/SystemUnderTest"}]}, "analytics_algorithm_config": {"description": "The analytics_algorithm_config of this TsaConfig.", "allOf": [{"$ref": "#/definitions/AnalyticsAlgorithmConfig"}]}, "source": {"type": "string", "description": "Source from where this job is getting created.", "example": "UI"}, "job_type": {"type": "string", "description": "Type of the job.", "example": "reliability_analysis", "enum": ["sensitivity_analysis", "reliability_analysis"]}, "skip_error_injection": {"type": "boolean", "description": "Skip Error Injection step or not", "example": false}, "validate_kpis_definition": {"type": "boolean", "description": "Validate kpis definition or not", "example": true}, "comment": {"type": "string", "description": "Comment added by user when job was created", "example": "Test Sensitivity Job"}}, "type": "object"}, "ScenarioConfig": {"required": ["name"], "properties": {"name": {"type": "string", "description": "The name of this ScenarioConfig.", "example": "avoid_lateral_collision_scenario"}, "version": {"type": "string", "description": "The version of this Scenario.", "example": "version_1.0.0"}, "file_format": {"type": "string", "description": "File format of concrete scenario file", "example": "xosc"}, "parameter_bounds": {"type": "object", "description": "Dictionary with parameter name as key and parameter_bounds data as value.", "example": {"relative_velocity": {"distribution_type": "continuous", "pdf": {"name": "gaussian", "variables": {"mean": "2", "stdev": "3"}}}, "lateral_distance": {"distribution_type": "continuous", "pdf": {"name": "gaussian", "variables": {"mean": "2", "stdev": "3"}}}, "longitudinal_distance": {"distribution_type": "continuous", "pdf": {"name": "gaussian", "variables": {"mean": "2", "stdev": "3"}}}}, "additionalProperties": {"$ref": "#/definitions/ParameterBounds"}}, "parameter_correlations": {"type": "array", "description": "List of all pair-wise parameter correlations.", "example": [{"x": "relative_velocity", "y": "lateral_distance", "value": 0.5}], "items": {"$ref": "#/definitions/ParameterCorrelations"}}}, "type": "object"}, "ParameterCorrelations": {"properties": {"x": {"type": "string", "description": "The name of the first parameter to be correlated."}, "y": {"type": "string", "description": "The name of the second parameter to be correlated."}, "value": {"type": "number", "description": "The correlation between the two parameters."}}, "type": "object"}, "SensorErrorConfig": {"properties": {"parameter_bounds": {"type": "object", "description": "Dictionary with parameter name as key and parameter_bounds data as value.", "example": {"sensor_position_error": {"distribution_type": "continuous", "min": 1.5, "max": 2.5}, "sensor_velocity_error": {"distribution_type": "continuous", "min": -0.5, "max": 3}}, "additionalProperties": {"$ref": "#/definitions/ParameterBounds"}}}, "type": "object"}, "SamplingAlgorithmConfig": {"properties": {"name": {"type": "string", "description": "The name of this SamplingAlgorithmConfig.", "example": "monte_carlo_sampling"}, "settings": {"type": "object", "description": "The settings of this SamplingAlgorithmConfig.", "example": {"number_of_samples": 10, "key": "settings"}, "additionalProperties": {"type": ["string", "number"]}}}, "type": "object"}, "SystemUnderTest": {"properties": {"release": {"type": "string", "description": "Identifier of the release container.", "example": "highway_2020.05"}, "target": {"type": "string", "description": "Executable inside the release container to run the simulation with the ad function.", "example": "application/adp/test/evaluation/kpi/closed_loop_evaluation/closed_loop_kpi_evaluation.test.sh"}, "*": {"type": "object", "additionalProperties": {"type": "string"}}}, "type": "object"}, "AnalyticsAlgorithmConfig": {"properties": {"name": {"type": "string", "description": "The name of this AnalyticsAlgorithmConfig.", "example": "monte_carlo_reliability"}, "settings": {"type": "object", "description": "The settings of this AnalyticsAlgorithmConfig.", "example": {"failure_state_value": 0, "failure_state_kpi": "min_ttc", "failure_state_operator": "<="}, "additionalProperties": {"type": ["string", "number"]}}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}