{"swagger": "2.0", "basePath": "/api/lsm/v1", "paths": {"/assets": {"post": {"responses": {"500": {"description": "Internal Server Error. Unable to upload file. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. Asset already exists. Try uploading another asset. This response is sent when a request conflicts with the current state of the server."}, "400": {"description": "Bad Request. Invalid File(s). Check the file format and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "201": {"description": "Success. Files uploaded successfully."}}, "summary": "Upload new assets through file upload", "description": "Swagger does not work to upload files. Please use postman or the Scenario Manager application. Please make sure the uploaded document is\nencoded as UTF-8.", "operationId": "post_generic_documents", "parameters": [{"name": "files", "in": "formData", "type": "array", "required": true, "description": "the files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}, {"name": "logical_scenarios", "in": "query", "type": "array", "description": "Comma separated list of logical scenario IDs", "items": {"type": "string"}, "collectionFormat": "csv"}, {"name": "file_type", "in": "query", "type": "string", "description": "Add the type of asset, possible values driver input or map"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Assets"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Asset"}}}}, "summary": "Retrieve a list of all available assets", "operationId": "get_generic_documents", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Assets"]}}, "/assets/{asset_id}": {"post": {"responses": {"500": {"description": "Internal Server Error. Unable to upload file. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Generic Document does not exist."}, "400": {"description": "Invalid File(s)."}, "200": {"description": "Success. File uploaded successfully."}}, "summary": "Update an existing asset", "operationId": "post_documents_id", "parameters": [{"name": "asset_id", "in": "path", "required": true, "type": "string", "description": "ID of the asset to get "}, {"name": "files", "in": "formData", "type": "array", "required": true, "description": "the files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}, {"name": "logical_scenarios", "in": "query", "type": "array", "description": "Comma separated list of logical scenario IDs", "items": {"type": "string"}, "collectionFormat": "csv"}, {"name": "file_type", "in": "query", "type": "string", "description": "Add the type of asset, possible values driver input or map"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Assets"]}, "get": {"responses": {"404": {"description": "Not Found. Check the ID or the name and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. No ID or name was provided, provide the ID or name and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. Retrieved asset file by ID."}}, "summary": "Download an asset by ID or name", "description": "The ID or the name must be provided. If both are provided, only the ID is used.", "operationId": "get_documents_id", "parameters": [{"name": "asset_id", "in": "path", "required": true, "type": "string"}], "tags": ["Assets"]}}, "/assets/{asset_id}/versions": {"get": {"responses": {"404": {"description": "Documents not found."}, "200": {"description": "Retrieved all versions of the asset by ID."}}, "summary": "Retrieve all versions of a specific asset", "operationId": "get_generic_documents_id_all_versions", "parameters": [{"name": "asset_id", "in": "path", "required": true, "type": "string", "description": "ID of the asset "}], "tags": ["Assets"]}}, "/assets/{asset_id}/versions/{version_id}": {"get": {"responses": {"404": {"description": "Document not found."}, "200": {"description": "Retrieved version of asset by ID."}}, "summary": "Retrieve a specific version of a asset", "operationId": "get_generic_document_id_version", "parameters": [{"name": "asset_id", "in": "path", "required": true, "type": "string", "description": "ID of the asset"}, {"name": "version_id", "in": "path", "required": true, "type": "string", "description": "version ID of the asset"}], "tags": ["Assets"]}}, "/group-type": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Upload a new group-type", "operationId": "post_group_types", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GroupTypeInput"}}], "tags": ["GroupType"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/GroupType"}}}}, "summary": "Retrieve a list of available group-types", "operationId": "get_group_types", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the group"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["GroupType"]}}, "/group-type/{id}": {"parameters": [{"in": "path", "description": "ID of an existing group type", "name": "id", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "summary": "Update a specific group-type with its unique identifier (ID)", "operationId": "post_group_types_by_id", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GroupTypeInput"}}], "tags": ["GroupType"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/GroupType"}}}}, "summary": "Retrieve the assets associated to a specific group-type with its unique identifier (ID)", "operationId": "get_group_types_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["GroupType"]}}, "/groups": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Upload a new group", "operationId": "post_groups", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GroupInput"}}], "tags": ["Groups"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Group"}}}}, "summary": "Retrieve a list of available groups", "operationId": "get_groups", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Name of the group"}, {"name": "type", "in": "query", "type": "string", "description": "Type of the group"}, {"name": "source_id", "in": "query", "type": "string", "description": "Source ID of the group"}, {"name": "enabled", "in": "query", "type": "boolean", "description": "Enabled flag of the group"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Groups"]}}, "/groups/{group_id}/versions": {"get": {"responses": {"404": {"description": "Groups not found. Check that the group ID is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Group"}}}}, "summary": "Retrieve a group version with its unique identifier (ID)", "operationId": "get_group_id_all_versions", "parameters": [{"name": "group_id", "in": "path", "required": true, "type": "string", "description": "ID of the group "}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Groups"]}}, "/groups/{group_id}/versions/{file_version}": {"parameters": [{"name": "file_version", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "File version of the specific group not found. Check that the group ID is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Group"}}}}, "summary": "Retrieve a specific version of a group file with its ID and version ID", "operationId": "get_group_id_version", "parameters": [{"name": "group_id", "in": "path", "required": true, "type": "string", "description": "ID of the group"}, {"required": true, "in": "path", "description": "version ID of the group", "name": "version_id", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Groups"]}}, "/groups/{id}": {"parameters": [{"in": "path", "description": "ID of an existing group", "name": "id", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "summary": "Update a group with its unique identifier (ID)", "operationId": "post_groups_by_id", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GroupInput"}}], "tags": ["Groups"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Group"}}}}, "summary": "Retrieve a group and its associated assets by its unique identifier (ID)", "operationId": "get_groups_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Groups"]}}, "/kpis": {"post": {"responses": {"500": {"description": "Internal Server Error. The KPI couldn't be imported. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. The KPI already exists. Check the file with the KPI and try again. This response is sent when a request conflicts with the current state of the server."}, "400": {"description": "Bad Request. The KPI added are invalid. Check the KPI and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "201": {"description": "Success. The KPI was imported. "}}, "summary": "Uploads a new KPI file", "description": "Swagger will not work. Please use postman or the LSM UI. The content of the KPI file being uploaded must be\nencoded using UTF-8.", "operationId": "post_kpi", "parameters": [{"name": "files", "in": "formData", "type": "array", "required": true, "description": "Files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Key Performance Indicators"]}, "get": {"responses": {"404": {"description": "Not Found. No KPIs were found. Try uploading the KPIs and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Key%20Performance%20Indicators%20%28KPI%29"}}}}, "summary": "Retrieve all KPIs", "description": "Returns a list of the latest versions of all KPIs.", "operationId": "get_kpi", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Key Performance Indicators"]}}, "/kpis/{kpi_id}": {"post": {"responses": {"500": {"description": "Internal Server Error. The KPI couldn't be updated. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. KPI already exists. This response is sent when a request conflicts with the current state of the server."}, "404": {"description": "KPI not found. Check the KPI ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad request. Invalid KPI ID. Check the KPI ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success. The KPI has been updated."}}, "summary": "Update an existing KPI", "operationId": "post_kpi_update", "parameters": [{"name": "kpi_id", "in": "path", "required": true, "type": "string", "description": "ID of the KPI "}, {"name": "files", "in": "formData", "type": "file", "required": true, "description": "Files to upload"}], "consumes": ["multipart/form-data"], "tags": ["Key Performance Indicators"]}, "get": {"responses": {"404": {"description": "Not Found. Could not retrieve KPI. Check the KPI ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Key%20Performance%20Indicators%20%28KPI%29"}}}}, "summary": "Retrieve a KPI by its unique identifier (ID)", "description": "Returns the KPI object.", "operationId": "get_kpi_update", "parameters": [{"name": "kpi_id", "in": "path", "required": true, "type": "string", "description": "ID of the KPI "}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Key Performance Indicators"]}}, "/logical-scenarios": {"post": {"responses": {"500": {"description": "Internal Server Error. Unable to upload logical scenarios. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. Logical scenario already exists. Enter the name of a new logical scenario and try again. This response is sent when a request conflicts with the current state of the server."}, "400": {"description": "Bad Request. Invalid logical scenario name. Check the logical scenario name and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "201": {"description": "Success. Logical scenarios uploaded successfully."}}, "summary": "Upload new logical scenarios", "description": "Swagger will not work. Please use postman or the Scenario Manager application.", "operationId": "post_logical_scenarios", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Logical Scenario Name"}, {"name": "are_scenarios_ready", "in": "query", "type": "boolean", "required": true, "description": "Are the uploaded scenarios ready"}, {"name": "files", "in": "formData", "type": "array", "required": true, "description": "Files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}, {"name": "asset_ids", "in": "query", "type": "array", "description": "Comma separated list of asset IDs", "items": {"type": "string"}, "collectionFormat": "csv"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Logical Scenario"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Scenario_min"}}}}, "summary": "Retrieve a list of all available logical scenarios", "description": "Retrieves a list of logical scenario information containing the logical scenario ID, name, label, status, and if a generator is\navailable.", "operationId": "get_logical_scenarios", "parameters": [{"required": false, "in": "query", "description": "Filter by status", "name": "status", "type": "string"}, {"required": false, "in": "query", "description": "Filter by name", "name": "name", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/expert-distributions": {"post": {"responses": {"500": {"description": "Unable to upload file."}, "404": {"description": "Logical scenario not found."}, "400": {"description": "Invalid File"}, "201": {"description": "Expert parameter distributions uploaded successfully."}}, "summary": "Upload parameter distributions", "description": "Uploads parameter distributions for the parameters of the scenario which is mentioned in the <ScenarioFile>\ntag of the associated *.xosc file. Swagger will not work. Please use postman or the Scenario Manager application.", "operationId": "post_expert_distributions", "parameters": [{"name": "files", "in": "formData", "type": "array", "required": true, "description": "Files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Logical Scenario"]}}, "/logical-scenarios/metadata-only": {"post": {"responses": {"500": {"description": "Internal Server Error. Unable to upload logical scenarios. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. The logical scenarios already exists. Check the logical scenario ID and try again. This response is sent when a request conflicts with the current state of the server."}, "400": {"description": "Bad Request. Logical scenarios couldn't be uploaded. Check the logical scenario ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "201": {"description": "Logical scenarios have been uploaded successfully."}}, "summary": "Upload new scenarios with metadata only", "operationId": "post_logical_scenarios_metadata_only", "parameters": [{"name": "name", "in": "query", "type": "string", "description": "Logical Scenario Name"}, {"name": "are_scenarios_ready", "in": "query", "type": "boolean", "required": true, "description": "Are the uploaded scenarios ready"}, {"name": "files", "in": "formData", "type": "array", "required": true, "description": "Files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}, {"name": "asset_ids", "in": "query", "type": "array", "description": "Comma separated list of asset IDs", "items": {"type": "string"}, "collectionFormat": "csv"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Logical Scenario"]}}, "/logical-scenarios/metadata-only/{scenario_id}": {"post": {"responses": {"200": {"description": "Success. The logical scenario has been updated."}, "500": {"description": "Internal server error while updating the logical scenario. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Logical scenario not found. Check the ID of the logical scenario and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Check the logical scenario ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Update an existing logical scenario", "operationId": "post_logical_scenario_metadata_only_id", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of the logical scenario "}, {"name": "ready_scenario", "in": "query", "type": "boolean", "required": true, "description": "If the scenario status is ready or not"}, {"name": "file", "in": "formData", "type": "file", "required": true, "description": "Files to upload"}], "consumes": ["multipart/form-data"], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}": {"post": {"responses": {"200": {"description": "Success. The logical scenario has been updated."}, "500": {"description": "Internal Server Error. The logical scenario couldn't be updated. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Not Found. The logical scenario with the specified ID was not found. Check the logical scenario ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Check the logical scenario ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Update an existing logical scenario with its unique identifier (ID)", "operationId": "post_logical_scenario_id", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of the logical scenario "}, {"name": "are_scenarios_ready", "in": "query", "type": "boolean", "required": true, "description": "Are the updated scenarios ready"}, {"name": "files", "in": "formData", "type": "array", "description": "Files to upload", "items": {"type": "file"}, "collectionFormat": "multi"}, {"name": "asset_ids", "in": "query", "type": "array", "description": "Comma separated list of asset IDs", "items": {"type": "string"}, "collectionFormat": "csv"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Logical Scenario"]}, "get": {"responses": {"404": {"description": "The logical scenario with the specified ID was not found. Check the logical scenario ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Logical%20Scenario"}}}, "summary": "Retrieve logical scenario by its unique identifier (ID)", "description": "This field must contain a list of information to retrieve (names) separated by a \",\" without spaces. For example: ID,label,parameters[].name", "operationId": "get_logical_scenario_id", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of the logical scenario "}, {"required": false, "in": "query", "description": "Specify any specific information to retrieve in this field - leave blank to get all the available information", "name": "fields", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}/assets": {"parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "Not Found. Linked assets couldn't be retrieved. Check the logical scenario ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Linked assets couldn't be retrieved. Add the logical scenario ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Asset_min"}}}}, "operationId": "get_logical_scenario_id_assets_link", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}/scenario_file": {"get": {"responses": {"404": {"description": "Not Found. A logical scenario with the specified ID was not found. Check if the specified ID is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success. Retrieved logical scenario file by ID."}}, "summary": "Download the logical scenario file", "operationId": "get_logical_scenario_file", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of logical scenario "}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}/versions": {"get": {"responses": {"404": {"description": "Not Found. The logical scenario versions were not found. Check if the specified logical scenario ID is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success. Retrieved all logical scenario versions."}}, "summary": "Retrieve all versions of a specific logical scenario", "operationId": "get_logical_scenario_versions", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of logical scenario. "}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}/versions/{scenario_version}": {"get": {"responses": {"404": {"description": "Not Found. The logical scenario with the specified ID or version ID was not found. Check if the specified ID or version is correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Logical%20Scenario"}}}, "summary": "Retrieve a specific version of a logical scenario", "description": "The fields query parameter allows you to specify which fields to include in the response. This query parameter\nis a comma separated list of field names without spaces. For example: ID,label,parameters[].name", "operationId": "get_logical_scenario_version_id", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of the logical scenario "}, {"name": "scenario_version", "in": "path", "required": true, "type": "string", "description": "Version ID of the logical scenario "}, {"required": false, "in": "query", "description": "Specify any specific information to retrieve in this field - leave blank to get all the available information.", "name": "fields", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Logical Scenario"]}}, "/logical-scenarios/{scenario_id}/versions/{scenario_version}/scenario_file": {"get": {"responses": {"404": {"description": "Not Found. No logical scenario were found. Check if the specified logical scenario ID and versions are correct and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web"}, "200": {"description": "Success. Retrieved logical scenario file by ID and version."}}, "summary": "Download the specific version of a logical scenario file", "operationId": "get_logical_scenario_file_version", "parameters": [{"name": "scenario_id", "in": "path", "required": true, "type": "string", "description": "ID of logical scenario "}, {"name": "scenario_version", "in": "path", "required": true, "type": "string", "description": "Version of logical scenario "}], "tags": ["Logical Scenario"]}}, "/monitoring/health": {"get": {"responses": {"204": {"description": "the service is unavailable."}, "200": {"description": "the service is healthy"}}, "summary": "Get the health status of the service", "operationId": "get_monitoring_health", "security": [], "tags": ["Monitoring"]}}, "/monitoring/metric": {"get": {"responses": {"200": {"description": "the metrics for the service"}}, "summary": "Get the metrics for the service", "operationId": "get_monitoring_metrics", "security": [], "tags": ["Monitoring"]}}, "/monitoring/ping": {"get": {"responses": {"200": {"description": "Successfully pinged"}}, "summary": "Ping the service", "operationId": "get_monitoring_ping", "security": [], "tags": ["Monitoring"]}}, "/parameters": {"get": {"responses": {"404": {"description": "No parameters were found."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Parameter"}}}}, "summary": "Retrieve available parameters", "description": "If the parameter_name query parameter is not specified, then all available parameters are retrieved.", "operationId": "get_parameter_info_name", "parameters": [{"required": false, "in": "query", "description": "Enter the parameter name", "name": "parameter_name", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Parameter"]}}, "/parameters/{parameter_id}": {"get": {"responses": {"404": {"description": "Not Found. A parameter with the specified ID was not found. Check the parameter ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Parameter"}}}, "summary": "Retrieve a parameter by its unique identifier (ID)", "description": "This field must contain a list of information to retrieve (names) separated by a \",\" without spaces.\nFor example: ID,label,parameters[].name", "operationId": "get_parameter_info_id", "parameters": [{"name": "parameter_id", "in": "path", "required": true, "type": "string", "description": "ID of parameter "}, {"required": false, "in": "query", "description": "Specify any specific information to retrieve in this field - leave blank to get all the available information.", "name": "fields", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Parameter"]}}, "/requirements": {"post": {"responses": {"500": {"description": "Internal Server Request. Unable to upload the file. Contact Admin. The server has encountered a situation it does not know how to handle."}, "409": {"description": "Conflict. This requirement already exists. Check the requirement file and try again. This response is sent when a request conflicts with the current state of the server."}, "400": {"description": "Bad Request. Invalid File(s). Check the files and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "201": {"description": "Success. The files have been uploaded."}}, "summary": "Upload new requirement files", "description": "Swagger will not work to upload files, please use postman or the Scenario Manager application. Please make sure the document\nbeing uploaded has a UTF-8 encoding.", "operationId": "post_requirements", "parameters": [{"name": "files", "in": "formData", "type": "array", "required": true, "description": "The files to upload in format mentioned in requirement model", "items": {"type": "file"}, "collectionFormat": "multi"}], "consumes": ["application/x-www-form-urlencoded", "multipart/form-data"], "tags": ["Requirement"]}, "get": {"responses": {"200": {"description": "Retrieved all available requirements."}}, "summary": "Retrieve a list of all available requirements", "operationId": "get_requirements", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Requirement"]}}, "/requirements/{requirement_id}": {"post": {"responses": {"500": {"description": "Internal Server Error. Unable to upload file. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Not Found. Requirement does not exist. Check the requirement ID ad try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Invalid File(s). Check the files and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}, "200": {"description": "File uploaded successfully."}}, "summary": "Update an existing requirement", "operationId": "post_requirements_id", "parameters": [{"name": "requirement_id", "in": "path", "required": true, "type": "string", "description": "ID of the requirement to get "}, {"name": "files", "in": "formData", "type": "file", "required": true, "description": "The files to upload in format mentioned in requirement model"}], "consumes": ["multipart/form-data"], "tags": ["Requirement"]}, "get": {"responses": {"200": {"description": "Success. The requirement has been retrieved."}, "404": {"description": "Not Found.The requirement couldn't be retrieved. Check the requirement ID ad try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}}, "summary": "Retrieve a specific requirement by its unique identifier (ID)", "operationId": "get_requirements_id", "parameters": [{"name": "requirement_id", "in": "path", "required": true, "type": "string", "description": "ID of the requirement to get "}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Requirement"]}}, "/requirements/{requirement_id}/versions": {"get": {"responses": {"404": {"description": "Not Found. The versions of the requirement couldn't be retrieved. Check the requirement ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Retrieved all versions of the requirement."}}, "summary": "Retrieve all versions of a specific requirement", "operationId": "get_requirements_id_versions", "parameters": [{"name": "requirement_id", "in": "path", "required": true, "type": "string", "description": "ID of the requirement "}], "tags": ["Requirement"]}}, "/requirements/{requirement_id}/versions/{version_id}": {"get": {"responses": {"404": {"description": "Not Found. The version of the requirement couldn't be retrieved. Check the requirement ID and version ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success. Retrieved version of the requirement."}}, "summary": "Retrieve a specific version of a requirement", "operationId": "get_requirements_id_versions_version_id", "parameters": [{"name": "requirement_id", "in": "path", "required": true, "type": "string", "description": "ID of the requirement "}, {"name": "version_id", "in": "path", "required": true, "type": "string", "description": "Version ID of the requirement "}], "tags": ["Requirement"]}}, "/thresholds": {"post": {"responses": {"200": {"description": "Success"}}, "summary": "Upload a new threshold", "operationId": "post_thresholds", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ThresholdInput"}}], "tags": ["Threshold"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Threshold"}}}}, "summary": "Retrieve a list of all available thresholds", "operationId": "get_thresholds", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Threshold"]}}, "/thresholds/kpi/{kpi_id}": {"post": {"responses": {"200": {"description": "Success. The KPI was updated."}, "500": {"description": "Internal Server Error. The KPI could not be updated. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "Not Found. A Kpi with the specified ID was not found. Check the KPI ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Check the KPI ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Update the existing KPI by linking thresholds to it", "operationId": "post_kpi_thresholds_link", "parameters": [{"name": "kpi_id", "in": "path", "required": true, "type": "string", "description": "ID of the KPI "}, {"name": "threshold_ids", "in": "query", "type": "array", "description": "Comma separated list of threshold IDs", "items": {"type": "string"}, "collectionFormat": "csv"}], "tags": ["Threshold"]}}, "/thresholds/requirements/{requirement_id}": {"post": {"responses": {"200": {"description": "Success. The requirement has been updated."}, "500": {"description": "Internal Server Error. The requirement could not be updated. Contact Admin. The server has encountered a situation it does not know how to handle."}, "404": {"description": "A requirement with the specified ID was not found. Check the requirement ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "400": {"description": "Bad Request. Check the requirement ID and try again. The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing)."}}, "summary": "Update an existing requirement by linking thresholds to it", "operationId": "post_requirements_link_thresholds", "parameters": [{"name": "requirement_id", "in": "path", "required": true, "type": "string", "description": "ID of the requirement "}, {"name": "threshold_ids", "in": "query", "type": "array", "description": "Comma separated list of threshold IDs", "items": {"type": "string"}, "collectionFormat": "csv"}], "tags": ["Threshold"]}}, "/thresholds/{threshold_id}": {"parameters": [{"in": "path", "description": "ID of an existing threshold", "name": "threshold_id", "required": true, "type": "string"}], "post": {"responses": {"200": {"description": "Success"}}, "summary": "Update an existing threshold", "operationId": "post_threshold_by_id", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ThresholdInput"}}], "tags": ["Threshold"]}, "get": {"responses": {"200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Threshold"}}}}, "summary": "Retrieve a threshold by its unique identifier", "operationId": "get_threshold_by_id", "parameters": [{"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Threshold"]}}, "/thresholds/{threshold_id}/versions": {"get": {"responses": {"404": {"description": "The threshold couldn't be found. Check the threshold ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Threshold"}}}}, "summary": "Retrieve all versions of a specific threshold", "operationId": "get_threshold_id_all_versions", "parameters": [{"name": "threshold_id", "in": "path", "required": true, "type": "string", "description": "ID of the threshold "}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Threshold"]}}, "/thresholds/{threshold_id}/versions/{version_id}": {"parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string"}], "get": {"responses": {"404": {"description": "The threshold couldn't be found. Check the threshold ID, version and version ID and try again. The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web."}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Threshold"}}}}, "summary": "Retrieve a specific version of a threshold", "operationId": "get_threshold_id_version", "parameters": [{"name": "threshold_id", "in": "path", "required": true, "type": "string", "description": "ID of the threshold"}, {"required": true, "in": "path", "description": "Version of the threshold", "name": "version", "type": "string"}, {"name": "X-Fields", "in": "header", "type": "string", "format": "mask", "description": "An optional fields mask"}], "tags": ["Threshold"]}}}, "info": {"title": "Scenario Manager", "version": "0.1", "description": "This is the REST API for the Scenario Manager (LSM) application that is part of the Ansys Avxcelerate Autonomous Driving Toolchain.<br/>The REST API provides endpoints to manage logical scenarios and their related entities including requirements, parameters, Key performance indicators (KPIs), groups and group types.<br/>Please refer to the Scenario Manager User Guide available on the Ansys documentation portal for examples of how to use the available REST API features.", "contact": {"name": "support@ansys.com", "email": "support@ansys.com", "url": ""}, "license": {"name": "Ansys software"}}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"apikey": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "security": [{"apikey": []}], "tags": [{"name": "Logical Scenario", "description": "Endpoints to manage logical scenarios and related documents"}, {"name": "Parameter", "description": "Endpoints to manage parameters"}, {"name": "Key Performance Indicators", "description": "Endpoints to manage Key Performance Indicators (KPI)"}, {"name": "Assets", "description": "Endpoints to manage assets"}, {"name": "Monitoring", "description": "Endpoints related to monitoring the service"}, {"name": "Groups", "description": "Endpoints related to managing groups in the Scenario Manager"}, {"name": "Threshold", "description": "Endpoints to manage thresholds"}, {"name": "GroupType", "description": "Endpoints related to manage group-types in the Scenario Manager"}, {"name": "Requirement", "description": "Endpoint to manage requirements"}], "definitions": {"Logical Scenario": {"properties": {"id": {"type": "string", "description": "The unique identifier of this logical scenario", "example": "1"}, "label": {"type": "string", "description": "User friendly label for this logical scenario.", "example": "Avoid Lateral Collision Scenario"}, "name": {"type": "string", "description": "The name of this logical scenario", "example": "avoid_lateral_collision_scenario"}, "date": {"type": "string", "format": "date-time", "description": "Modification date and time", "example": "2022-09-21T14:32:58"}, "description": {"type": "string", "description": "The description of this logical scenario", "example": "Avoid lateral collision"}, "parameters": {"type": "array", "description": "The parameters of this logical scenario", "items": {"$ref": "#/definitions/Parameter"}}, "assets": {"type": "array", "items": {"type": "string", "description": "ID of the asset attached to the scenario"}}, "fragment_info": {"type": "array", "description": "Information of the underlying fragments of this scenario", "items": {"$ref": "#/definitions/Fragment_info"}}, "status": {"type": "string", "description": "Status of the scenario", "example": "ready"}, "file_format": {"type": "string", "description": "Format of the scenario definition", "example": "XOSC", "enum": ["XOSC", "JSCENE", "None"]}, "lsm_generator_available": {"type": "boolean", "description": "Flag indicating if the scenario has a generator available on the LSM", "example": true}, "user_data": {"type": "object"}}, "type": "object"}, "Parameter": {"properties": {"id": {"type": "string", "description": "The unique identifier of this parameter", "example": "1"}, "label": {"type": "string", "description": "User friendly label for this parameter.", "example": "Relative Velocity"}, "name": {"type": "string", "description": "The name of this parameter", "example": "relative_velocity"}, "description": {"type": "string", "description": "The description of this Parameter", "example": "Relative speed to lateral vehicle"}, "data_type": {"type": "string", "description": "Treat parameters as given data type", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "unit": {"type": "string", "description": "The unit of this parameter", "example": "m/s", "enum": ["m/s", "kmp/h"]}, "parameter_distributions": {"description": "Parameter distributions for this parameter", "allOf": [{"$ref": "#/definitions/ParameterDistributions"}]}, "constraints": {"type": "array", "items": {"description": "Constraints on the parameter", "allOf": [{"$ref": "#/definitions/Constraints"}]}}}, "type": "object"}, "ParameterDistributions": {"properties": {"deterministic_distribution": {"description": "Deterministic distribution", "allOf": [{"$ref": "#/definitions/DeterministicDistribution"}]}, "stochastic_distribution": {"description": "Stochastic distribution", "allOf": [{"$ref": "#/definitions/StochasticDistribution"}]}}, "type": "object"}, "DeterministicDistribution": {"properties": {"deterministic_multi_parameter_distribution": {"description": "Multi-parameter deterministic distribution", "allOf": [{"$ref": "#/definitions/DeterministicMultiParameterDistribution"}]}, "deterministic_single_parameter_distribution": {"description": "Single-parameter deterministic distribution", "allOf": [{"$ref": "#/definitions/DeterministicSingleParameterDistribution"}]}}, "type": "object"}, "DeterministicMultiParameterDistribution": {"properties": {"value_set_distribution": {"description": "Value set distribution for this parameter", "allOf": [{"$ref": "#/definitions/ValueSetDistribution"}]}}, "type": "object"}, "ValueSetDistribution": {"properties": {"parameter_value_set": {"description": "Parameter value set for this parameter", "allOf": [{"$ref": "#/definitions/ParameterValueSet"}]}}, "type": "object"}, "ParameterValueSet": {"properties": {"parameter_assignment": {"description": "Parameter assignment for this parameter", "allOf": [{"$ref": "#/definitions/ParameterAssignment"}]}}, "type": "object"}, "ParameterAssignment": {"properties": {"value": {"type": "string", "description": "Value for this parameter", "example": "40"}}, "type": "object"}, "DeterministicSingleParameterDistribution": {"properties": {"distribution_set": {"type": "array", "description": "Distribution set for this parameter", "items": {"type": "string"}}, "distribution_range": {"description": "Distribution range for this parameter", "allOf": [{"$ref": "#/definitions/DistributionRange"}]}}, "type": "object"}, "DistributionRange": {"properties": {"step_width": {"type": "number", "description": "Step width for this parameter", "example": 0.4}, "range": {"description": "Range for this parameter", "allOf": [{"$ref": "#/definitions/Range"}]}}, "type": "object"}, "Range": {"properties": {"lower_limit": {"type": "number", "description": "Lower limit of distribution", "example": -2}, "upper_limit": {"type": "number", "description": "Upper limit of distribution", "example": 2}}, "type": "object"}, "StochasticDistribution": {"properties": {"probability_distribution_set": {"type": "array", "description": "Probability distribution set for this parameter", "items": {"$ref": "#/definitions/ProbabilityDistributionSet"}}, "normal_distribution": {"description": "Normal Distribution for this parameter", "allOf": [{"$ref": "#/definitions/NormalDistribution"}]}, "uniform_distribution": {"description": "Uniform Distribution for this parameter", "allOf": [{"$ref": "#/definitions/UniformDistribution"}]}, "poisson_distribution": {"description": "Poisson Distribution for this parameter", "allOf": [{"$ref": "#/definitions/PoissonDistribution"}]}, "histogram": {"type": "array", "description": "Histogram for this parameter", "items": {"$ref": "#/definitions/Bin"}}}, "type": "object"}, "ProbabilityDistributionSet": {"properties": {"value": {"type": "string", "description": "value", "example": "ActorA"}, "weight": {"type": "number", "description": "Weight of this value", "example": 0.25}}, "type": "object"}, "NormalDistribution": {"properties": {"expected_value": {"type": "number", "description": "Expected value of this normal distribution", "example": 2}, "variance": {"type": "number", "description": "Variance of this normal distribution", "example": 1}}, "type": "object"}, "UniformDistribution": {"properties": {"range": {"description": "Range for this parameter", "allOf": [{"$ref": "#/definitions/Range"}]}}, "type": "object"}, "PoissonDistribution": {"properties": {"expected_value": {"type": "number", "description": "Expected value of this poisson distribution", "example": 2}}, "type": "object"}, "Bin": {"properties": {"weight": {"type": "number", "description": "Weight in this bin", "example": 0.4}, "range": {"description": "Range for this bin", "allOf": [{"$ref": "#/definitions/Range"}]}}, "type": "object"}, "Constraints": {"properties": {"id": {"type": "string", "description": "The unique identifier of this constraint"}, "rule": {"type": "string", "description": "Rule to be applied on the constraint"}, "formula": {"type": "string", "description": "Formula to be implemented in constraint"}, "description": {"type": "string", "description": "A description of the constraint"}}, "type": "object"}, "Fragment_info": {"required": ["fragment_name", "fragment_type", "source_id", "version"], "properties": {"fragment_name": {"type": "string", "description": "Fragment name", "example": "Minimal Scenario"}, "fragment_type": {"type": "string", "description": "Fragment type", "example": "Logical Scenario"}, "source_id": {"type": "string", "description": "Source fragment ID", "example": "2056145"}, "version": {"type": "string", "description": "Version ID of CodeBeamer", "example": "11"}}, "type": "object"}, "Asset_min": {"properties": {"id": {"type": "string", "description": "Unique identifier (ID) of this asset", "example": "1"}, "name": {"type": "string", "description": "Name of this asset", "example": "driver_input.json"}, "file_type": {"type": "string", "description": "Type of the asset", "example": "driver_input, map"}, "version": {"type": "string", "description": "Creation date/version of the asset"}}, "type": "object"}, "Scenario_min": {"properties": {"id": {"type": "string", "description": "The unique identifier (ID) of this logical scenario", "example": "1"}, "name": {"type": "string", "description": "Name of this logical scenario", "example": "avoid_lateral_collision_scenario"}, "date": {"type": "string", "format": "date-time", "description": "Modification date and time", "example": "2022-09-21T14:32:58"}, "label": {"type": "string", "description": "Label of this logical scenario", "example": "Avoid lateral collision"}, "status": {"type": "string", "description": "Status of the logical scenario", "example": "ready"}, "lsm_generator_available": {"type": "boolean", "description": "Flag indicating if the logical scenario has a generator available in the Scenario Manager.", "example": true}}, "type": "object"}, "Key Performance Indicators (KPI)": {"properties": {"id": {"type": "string", "description": "The unique identifier of this KPI", "example": "b829473e-042b-427f-9585"}, "name": {"type": "string", "description": "The name of this KPI.", "example": "min_ttc"}, "label": {"type": "string", "description": "User friendly label (description) for this KPI.", "example": "Minimum time to collision"}, "description": {"type": "string", "description": "The description of this KPI.", "example": "Minimum value of Time to Collision during simulation"}, "target": {"type": "string"}, "parameters": {"type": "array", "items": {"type": "string", "description": "The parameters of this KPI.", "example": ["Very uncomfortable breaking", "some other feedback"]}}, "data_type": {"type": "string", "description": "The data type of this KPI", "example": "double", "enum": ["double", "integer", "string", "boolean"]}, "unit": {"type": "string"}, "id_version": {"type": "string", "description": "The version of this kpi entry", "example": "57062bc5f66f27bc23b7"}, "thresholds": {"type": "array", "items": {"type": "string", "description": "ID of the threshold attached to the kpi"}}, "user_data": {"type": "object"}}, "type": "object"}, "Asset": {"properties": {"id": {"type": "string", "description": "Unique identifier (ID) of this asset", "example": "004ad8"}, "name": {"type": "string", "description": "Name of this asset", "example": "ALKS_Road_Different_Curvature.xodr"}, "file_type": {"type": "string", "description": "Type of the asset", "example": "driver_input, map"}, "logical_scenarios": {"type": "array", "description": "List of referenced scenarios", "items": {"$ref": "#/definitions/ScenarioReference"}}}, "type": "object"}, "ScenarioReference": {"properties": {"id": {"type": "string", "description": "Id of the attached scenario"}, "name": {"type": "string", "description": "Name of the attached scenario"}, "label": {"type": "string", "description": "label of the attached scenario"}, "status": {"type": "string", "description": "status of the attached scenario"}}, "type": "object"}, "GroupInput": {"required": ["name"], "properties": {"name": {"type": "string", "description": "User defined unique name of the group"}, "description": {"type": "string", "description": "User defined description of the group"}, "type": {"type": "string", "description": "A user identified type of group"}, "source_id": {"type": "string", "description": "Source of Truth for the group."}, "scenarios": {"type": "array", "description": "List of scenario IDs to be linked to the group", "items": {"type": "string"}}, "kpis": {"type": "array", "description": "List of kpi IDs to be linked to the group", "items": {"type": "string"}}, "requirements": {"type": "array", "description": "List of requirement IDs to be linked to the group", "items": {"type": "string"}}, "enabled": {"type": "boolean", "description": "Enable flag of groups"}}, "type": "object"}, "Group": {"properties": {"id": {"type": "string", "description": "Auto generated id of the group"}, "name": {"type": "string", "description": "User defined unique name of the group"}, "description": {"type": "string", "description": "User defined description of the group"}, "source_id": {"type": "string", "description": "Source of Truth for the group."}, "enabled": {"type": "boolean", "description": "Enable flag of groups"}, "scenarios": {"type": "array", "description": "List of referenced scenarios", "items": {"$ref": "#/definitions/ScenarioReference"}}, "kpis": {"type": "array", "description": "List of referenced kpis", "items": {"$ref": "#/definitions/KpiReference"}}, "requirements": {"type": "array", "description": "List of referenced requirements", "items": {"$ref": "#/definitions/RequirementReference"}}, "user_data": {"type": "object"}, "is_latest_version": {"type": "boolean", "description": "latest_version flag of groups"}, "file_version": {"type": "string", "description": "Version of the group"}}, "type": "object"}, "KpiReference": {"properties": {"id": {"type": "string", "description": "Id of the attached kpi"}, "name": {"type": "string", "description": "Name of the attached kpi"}, "label": {"type": "string", "description": "label of the attached kpi"}}, "type": "object"}, "RequirementReference": {"properties": {"id": {"type": "string", "description": "Id of the attached requirement"}, "name": {"type": "string", "description": "Name of the attached requirement"}, "qualified_name": {"type": "string", "description": "label of the attached requirement"}}, "type": "object"}, "ThresholdInput": {"properties": {"value": {"type": "string", "description": "User defined value of the threshold"}, "operator": {"type": "string", "description": "User defined operator of the threshold"}}, "type": "object"}, "Threshold": {"properties": {"id": {"type": "string", "description": "Auto generated id of the threshold"}, "value": {"type": "string", "description": "User defined value of the threshold"}, "operator": {"type": "string", "description": "User defined operator of the threshold"}, "creation_date": {"type": "string", "description": "Creation date of the threshold"}}, "type": "object"}, "GroupTypeInput": {"properties": {"name": {"type": "string", "description": "User defined unique name of the group type"}, "description": {"type": "string", "description": "User defined description of the croup type"}, "groups": {"type": "array", "items": {"type": "string", "description": "Group ids belonging to this group type"}}}, "type": "object"}, "GroupType": {"properties": {"id": {"type": "string", "description": "Auto generated id of the group type"}, "name": {"type": "string", "description": "User defined unique name of the group type"}, "description": {"type": "string", "description": "User defined description of the croup type"}, "groups": {"type": "array", "description": "List of referenced groups", "items": {"$ref": "#/definitions/GroupReference"}}}, "type": "object"}, "GroupReference": {"properties": {"id": {"type": "string", "description": "Id of the attached group"}, "name": {"type": "string", "description": "Id of the attached scenario"}, "scenarios": {"type": "array", "description": "List of referenced scenarios", "items": {"$ref": "#/definitions/ScenarioReference"}}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}