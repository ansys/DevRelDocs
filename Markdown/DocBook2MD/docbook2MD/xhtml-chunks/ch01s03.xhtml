<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html
  PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Sherlock Analysis Service- SherlockAnalysisService.proto</title><meta name="generator" content="DocBook XSL Stylesheets V1.76.1"/><link rel="home" href="index.xhtml" title="Chapter 1. API Services"/><link rel="up" href="index.xhtml" title="Chapter 1. API Services"/><link rel="prev" href="ch01s02.xhtml" title="Index to the Sherlock APIs"/><link rel="next" href="ch01s04.xhtml" title="Sherlock Common Service- SherlockCommonService.proto"/></head><body><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">Sherlock Analysis Service- SherlockAnalysisService.proto</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="ch01s02.xhtml">Prev</a> </td><th width="60%" align="center"> </th><td width="20%" align="right"> <a accesskey="n" href="ch01s04.xhtml">Next</a></td></tr></table><hr/></div><div class="sect1" title="Sherlock Analysis Service- SherlockAnalysisService.proto"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a id="sherlock_ug_SherlockAnalysisService.proto"/>Sherlock Analysis Service- SherlockAnalysisService.proto</h2></div></div></div><p><a class="link" href="ch01s02.xhtml" title="Index to the Sherlock APIs">Click here to return to the main index to
        Sherlock's APIs.</a></p><p>The APIs in this section allow you to run one or more analyses in sequential order.
      Results are saved to the project's <span class="guilabel">Saved Results</span> folder on Sherlock's
        <span class="guilabel">Project Tree</span>. Clicking on the active links in the table below will take
      you to the selected API. </p><div class="table"><a id="d0e413"/><p class="title"><strong>Table 1.2. Index to Sherlock Analysis Service APIs</strong></p><div class="table-contents"><table summary="Index to Sherlock Analysis Service APIs" border="1"><colgroup><col width="97.5pt" class="col1"/><col width="99pt" class="col2"/><col width="103.5pt" class="col3"/><col width="184.5pt" class="col4"/></colgroup><tbody><tr><td><span class="bold"><strong>Method Name</strong></span></td><td><span class="bold"><strong>Request Type</strong></span></td><td><span class="bold"><strong>Response Type</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td colspan="4"><span class="emphasis"><em>For display purposes, the long strings in
                columns 1 to 3 are broken into multiple lines. The strings should be interpreted as
                continuous. For example: </em></span><span class="emphasis"><em><span class="bold"><strong>.GetNaturalFrequencyInputFieldsResponse</strong></span></em></span></td></tr><tr><td>runAnalysis</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunAnalysisRequest" title="RunAnalysisRequest">.RunAnalysis
              Request</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Runs one or more Sherlock analysis.</td></tr><tr><td>runStrainMap Analysis</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunStrainMapAnalysisRequest" title="RunStrainMapAnalysisRequest">.RunStrainMap Analysis
                Request</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Run Sherlock strain map analysis.</td></tr><tr><td>getRandomVibe InputFields</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_GetRandomVibeInputFieldsRequest" title="GetRandomVibeInputFieldsRequest">.GetRandom VibeInput
                FieldsRequest</a></td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_GetRandomVibeInputFieldsResponse" title="GetRandomVibeInputFieldsResponse">.GetRandomVibe
                InputFields Response</a></td><td>Returns the list of valid Random Vibe input fields for the provided model source
              and user configuration.</td></tr><tr><td>updateRandom VibeProps</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdateRandomVibePropsRequest" title="UpdateRandomVibePropsRequest">.UpdateRandom VibeProps
                Request</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Updates the analysis properties for Random Vibe analysis.</td></tr><tr><td>getNatural FrequencyInput Fields</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_GetNaturalFrequencyInputFieldsRequest" title="GetNaturalFrequencyInputFieldsRequest">.GetNatural
                Frequency InputFields Request</a></td><td><a class="link" href="ch01s05.xhtml#sherlock_ug_GetMountPointsPropertiesResponse" title="GetMountPointsPropertiesResponse">.GetNatural
                Frequency InputFields Response</a></td><td>Returns the list of valid Natural Frequency property fields given the user
              configuration.</td></tr><tr><td>updateNatural FrequencyProps</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdateNaturalFrequencyPropsRequest" title="UpdateNaturalFrequencyPropsRequest">.UpdateNatural
                FrequencyProps Request</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Updates the analysis properties for Natural Frequency analysis.</td></tr><tr><td>updateThermal MechProps</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdateThermalMechPropsRequest" title="UpdateThermalMechPropsRequest">.UpdateThermal Mech
                PropsRequest</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Updates the analysis properties for Thermal Mech analysis</td></tr><tr><td>getPcbModeling InputFields</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_GetPcbModelingInputFieldsRequest" title="GetPcbModelingInputFieldsRequest">.GetPcb
                ModelingInput FieldsRequest</a></td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_GetPcbModelingInputFieldsResponse" title="GetPcbModelingInputFieldsResponse">.GetPcbModeling
                InputFields Response</a></td><td>Returns the list of valid PCB MOdeling property field.</td></tr><tr><td>updatePcb ModelingProps</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest" title="UpdatePcbModelingPropsRequest">.UpdatePcb Modeling
                PropsRequest</a></td><td><a class="link" href="ch01s04.xhtml#sherlock_ug_ReturnCode" title="Return Code">.ReturnCode</a></td><td>Updates the PCB modeling properties for the provided analysis types.</td></tr></tbody></table></div></div><br class="table-break"/><div class="sect2" title="Get Natural Frequency Input Fields"><div class="titlepage"><div><div><h3 class="title"><a id="d0e541"/>Get Natural Frequency Input Fields </h3></div></div></div><div class="sect3" title="GetNaturalFrequencyInputFieldsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetNaturalFrequencyInputFieldsRequest"/>GetNaturalFrequencyInputFieldsRequest</h4></div></div></div><p> </p></div><div class="sect3" title="GetNaturalFrequencyInputFieldsResponse"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetNaturalFrequencyInputFieldsResponse"/>GetNaturalFrequencyInputFieldsResponse</h4></div></div></div><div class="table"><a id="d0e552"/><p class="title"><strong>Table 1.3. GetNaturalFrequencyInputFieldsResponse</strong></p><div class="table-contents"><table summary="GetNaturalFrequencyInputFieldsResponse" border="1"><colgroup><col width="98.25pt" align="center" class="col1"/><col width="109.5pt" align="center" class="col2"/><col width="111.75pt" align="center" class="col3"/><col width="151.5pt" align="center" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td align="center">fieldName</td><td align="center"><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td align="center">repeated</td><td align="center"> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Get Natural Frequency Input Fields"><div class="titlepage"><div><div><h4 class="title"><a id="d0e583"/>Example: Get Natural Frequency Input Fields</h4></div></div></div><h5><a id="d0e586"/>Proto Request Example:</h5><pre class="programlisting">{}</pre><h5><a id="d0e590"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.GetNaturalFrequencyInputFieldsRequest()

response = stub.getNaturalFrequencyInputFields(message)
print(str(response))</pre></div></div><div class="sect2" title="Get PCB Modeling Input Fields"><div class="titlepage"><div><div><h3 class="title"><a id="d0e594"/>Get PCB Modeling Input Fields</h3></div></div></div><div class="sect3" title="GetPcbModelingInputFieldsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetPcbModelingInputFieldsRequest"/>GetPcbModelingInputFieldsRequest</h4></div></div></div><p> </p></div><div class="sect3" title="GetPcbModelingInputFieldsResponse"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetPcbModelingInputFieldsResponse"/>GetPcbModelingInputFieldsResponse</h4></div></div></div><div class="table"><a id="d0e605"/><p class="title"><strong>Table 1.4. GetPcbModelingInputFieldsResponse</strong></p><div class="table-contents"><table summary="GetPcbModelingInputFieldsResponse" border="1"><colgroup><col class="col1"/><col class="col2"/><col class="col3"/><col class="col4"/></colgroup><tbody><tr><td><span class="bold"><strong>Field</strong></span></td><td><span class="bold"><strong>Type</strong></span></td><td><span class="bold"><strong>Label</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td>fieldName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>repeated</td><td> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Get PCB Modeling Input Fields"><div class="titlepage"><div><div><h4 class="title"><a id="d0e636"/>Example: Get PCB Modeling Input Fields</h4></div></div></div><h5><a id="d0e639"/>Proto Request Example:</h5><pre class="programlisting">{}</pre><h5><a id="d0e643"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.GetPcbModelingInputFieldsRequest()

response = stub.getPcbModelingInputFields(message)
print(str(response))</pre></div></div><div class="sect2" title="Get Random Vibe Input Fields"><div class="titlepage"><div><div><h3 class="title"><a id="d0e647"/>Get Random Vibe Input Fields</h3></div></div></div><div class="highlights"><p>Request to list the valid Random Vibe input fields for the provided model source and
          user configuration.</p></div><div class="sect3" title="GetRandomVibeInputFieldsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetRandomVibeInputFieldsRequest"/>GetRandomVibeInputFieldsRequest</h4></div></div></div><div class="table"><a id="d0e656"/><p class="title"><strong>Table 1.5. GetRandomVibeInputFieldsRequest</strong></p><div class="table-contents"><table summary="GetRandomVibeInputFieldsRequest" border="1"><colgroup><col width="1.31in" class="col1"/><col width="1.49in" class="col2"/><col width="0.84in" class="col3"/><col width="2.85in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>modelSource</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_api_modelsource" title="ModelSource">ModelSource</a></td><td>optional</td><td>Optional model source. Default: GENERATED </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="GetRandomVibeInputFieldsResponse"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_GetRandomVibeInputFieldsResponse"/>GetRandomVibeInputFieldsResponse</h4></div></div></div><div class="table"><a id="d0e691"/><p class="title"><strong>Table 1.6. GetRandomVibeInputFieldsResponse</strong></p><div class="table-contents"><table summary="GetRandomVibeInputFieldsResponse" border="1"><colgroup><col width="1.31in" class="col1"/><col width="1.49in" class="col2"/><col width="0.84in" class="col3"/><col width="2.85in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>fieldName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>repeated</td><td> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Get Random Vibe Input Fields"><div class="titlepage"><div><div><h4 class="title"><a id="d0e722"/>Example: Get Random Vibe Input Fields</h4></div></div></div><h5><a id="d0e725"/>Proto Request Example:</h5><pre class="programlisting">{}</pre><h5><a id="d0e729"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.GetRandomVibeInputFieldsRequest()

response = stub.getRandomVibeInputFields(message)
print(str(response))
</pre></div></div><div class="sect2" title="Run Analysis"><div class="titlepage"><div><div><h3 class="title"><a id="d0e733"/>Run Analysis</h3></div></div></div><div class="highlights"><p>In this section:</p></div><div class="sect3" title="RunAnalysisRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunAnalysisRequest"/>RunAnalysisRequest</h4></div></div></div><p>Request to run one or more Sherlock analyses given the project path, CCA name,
          analyses, Life Cycle phases and events.</p><div class="table"><a id="d0e744"/><p class="title"><strong>Table 1.7. RunAnalysisRequest</strong></p><div class="table-contents"><table summary="RunAnalysisRequest" border="1"><colgroup><col width="1in" class="col1"/><col width="1.72in" class="col2"/><col width="0.84in" class="col3"/><col width="2.85in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td colspan="4"><span class="emphasis"><em>For display purposes, the long string
                    in column two is broken into multiple lines. It should be interpreted as:
                      <span class="bold"><strong>RunAnalysisRequest.Analysis</strong></span></em></span></td></tr><tr><td>projectDir</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>The full path to the Sherlock project directory. </td></tr><tr><td>ccaName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>The CCA name. </td></tr><tr><td>analyses</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunAnalysisRequest.Analysis" title="RunAnalysisRequest.Analysis">RunAnalysisRequest
                    .Analysis</a></td><td>repeated</td><td> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="RunAnalysisRequest.Analysis"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunAnalysisRequest.Analysis"/>RunAnalysisRequest.Analysis</h4></div></div></div><div class="table"><a id="d0e802"/><p class="title"><strong>Table 1.8. RunAnalysisRequest.Analysis</strong></p><div class="table-contents"><table summary="RunAnalysisRequest.Analysis" border="1"><colgroup><col width="0.72in" class="col1"/><col width="2.84in" class="col2"/><col width="0.84in" class="col3"/><col width="2.08in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td colspan="4"><span class="emphasis"><em>For display purposes, the long string
                    in column two is broken into multiple lines. It should be interpreted as:
                      <span class="bold"><strong>RunAnalysisRequest.Analysis.AnalysisType</strong></span></em></span></td></tr><tr><td>type</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunAnalysisRequest.Analysis.AnalysisType" title="RunAnalysisRequest.Analysis.AnalysisType">RunAnalysisRequest.Analysis .AnalysisType</a></td><td> </td><td> </td></tr><tr><td>phases</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunAnalysisRequest.Analysis.Phase" title="RunAnalysisRequest.Analysis.Phase">RunAnalysisRequest.Analysis.Phase</a></td><td>repeated</td><td> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="RunAnalysisRequest.Analysis.Phase"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunAnalysisRequest.Analysis.Phase"/>RunAnalysisRequest.Analysis.Phase</h4></div></div></div><div class="table"><a id="d0e850"/><p class="title"><strong>Table 1.9. RunAnalysisRequest.Analysis.Phase</strong></p><div class="table-contents"><table summary="RunAnalysisRequest.Analysis.Phase" border="1"><colgroup><col width="0.69in" class="col1"/><col width="1.76in" class="col2"/><col width="1.78in" class="col3"/><col width="2.29in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td colspan="4"><span class="emphasis"><em><span class="emphasis"><em>For display purposes, the
                      long string in column two is broken into multiple lines. It should be
                      interpreted as:</em></span>
                    <span class="bold"><strong>RunAnalysisRequest.Analysis.Phase.Event</strong></span></em></span></td></tr><tr><td>name</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Life cycle phase name. </td></tr><tr><td>events</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_RunAnalysisRequest.Analysis.Phase.Event" title="RunAnalysisRequest.Analysis.Phase.Event">RunAnalysisRequest. Analysis.Phase.Event</a></td><td>repeated</td><td> </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="RunAnalysisRequest.Analysis.Phase.Event"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunAnalysisRequest.Analysis.Phase.Event"/>RunAnalysisRequest.Analysis.Phase.Event</h4></div></div></div><div class="table"><a id="d0e901"/><p class="title"><strong>Table 1.10. RunAnalysisRequest.Analysis.Phase.Event</strong></p><div class="table-contents"><table summary="RunAnalysisRequest.Analysis.Phase.Event" border="1"><colgroup><col width="1in" class="col1"/><col width="1in" class="col2"/><col width="1in" class="col3"/><col width="3.5in" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>name</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Life cycle event name. </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Run Part Validation and Mechanical Shock Analysis"><div class="titlepage"><div><div><h4 class="title"><a id="d0e932"/>Example: Run Part Validation and Mechanical Shock Analysis</h4></div></div></div><h5><a id="d0e935"/>Proto Request Example</h5><pre class="programlisting">{
  "project": "Tutorial",
  "ccaName": "Main Board",
  "analyses": [
    {
      "type": 10
    },
    {
      "type": 4,
      "phases": [
        {
          "name": "On The Road",
          "events": [
            {
              "name": "2 - Pothole"
            }
          ]
        },
        {
          "name": "Environmental",
          "events": [
            {
              "name": "3 - Earthquake"
            }
          ]
        }
      ]
    }
  ]
}</pre><h5><a id="d0e939"/>Python Example</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.RunAnalysisRequest()
message.project = "Tutorial"
message.ccaName = 'Main Board'

shMessage = SherlockAnalysisService_pb2.RunAnalysisRequest()
shMessage.project = "Tutorial"
shMessage.ccaName = 'Main Board'

analysis = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis()
analysis.type = SherlockAnalysisService_pb2.RunAnalysisRequest.Analysis.AnalysisType.PartValidation

shAnalysis = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis()
shAnalysis.type = SherlockAnalysisService_pb2.RunAnalysisRequest.Analysis.AnalysisType.MechanicalShock

phase1 = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis().Phase()
phase1.name = 'On The Road'

event1 = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis().Phase().Event()
event1.name = '2 - Pothole'

phase2 = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis().Phase()
phase2.name = 'Environmental'

event2 = SherlockAnalysisService_pb2.RunAnalysisRequest().Analysis().Phase().Event()
event2.name = '3 - Earthquake'

phase1.events.extend([event1])
phase2.events.extend([event2])
shAnalysis.phases.extend([phase1, phase2])

# Part Validation
message.analyses.extend([analysis])
response = stub.runAnalysis(message)
print(str(response))

# Mechanical Shock
shMessage.analyses.extend([shAnalysis])
response = stub.runAnalysis(shMessage)
print(str(response))
</pre></div></div><div class="sect2" title="Run Strain Map Analysis"><div class="titlepage"><div><div><h3 class="title"><a id="d0e943"/>Run Strain Map Analysis</h3></div></div></div><div class="highlights"><p>Request to run Sherlock strain map analysis given the project name, CCA name, and
          strain maps.</p></div><div class="sect3" title="RunStrainMapAnalysisRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunStrainMapAnalysisRequest"/>RunStrainMapAnalysisRequest</h4></div></div></div><div class="table"><a id="d0e952"/><p class="title"><strong>Table 1.11. RunStrainMapAnalysisRequest</strong></p><div class="table-contents"><table summary="RunStrainMapAnalysisRequest" border="1"><colgroup><col width="115.5pt" class="col1"/><col width="126pt" class="col2"/><col width="81pt" class="col3"/><col width="200.25pt" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>project</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Sherlock project name. </td></tr><tr><td>ccaName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>The CCA name of the main CCA for the analysis. </td></tr><tr><td rowspan="2">strainMapAnalyses</td><td align="left">
                  <p>See below  ⇓</p>
                </td><td>repeated</td><td> </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_RunStrainMapAnalysisRequest.StrainMapAnalysis" title="RunStrainMapAnalysisRequest.StrainMapAnalysis">RunStrainMapAnalysisRequest.StrainMapAnalysis</a></td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="RunStrainMapAnalysisRequest.StrainMapAnalysis"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunStrainMapAnalysisRequest.StrainMapAnalysis"/>RunStrainMapAnalysisRequest.StrainMapAnalysis</h4></div></div></div><div class="table"><a id="d0e1010"/><p class="title"><strong>Table 1.12. RunStrainMapAnalysisRequest.StrainMapAnalysis</strong></p><div class="table-contents"><table summary="RunStrainMapAnalysisRequest.StrainMapAnalysis" border="1"><colgroup><col width="100.5pt" class="col1"/><col width="195.75pt" class="col2"/><col width="64.5pt" class="col3"/><col width="86.25pt" class="col4"/></colgroup><tbody><tr><td><span class="bold"><strong>Field</strong></span></td><td><span class="bold"><strong>Type</strong></span></td><td><span class="bold"><strong>Label</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td rowspan="2">type</td><td>
                  <p>See below ⇓</p>
                </td><td> </td><td> </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.AnalysisType" title="UpdatePcbModelingPropsRequest.Analysis.AnalysisType">RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType</a></td></tr><tr><td rowspan="2">eventStrainMaps</td><td>
                  <p>See below ⇓</p>
                </td><td>repeated</td><td> </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap" title="RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap">RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap</a></td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap"/>RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap</h4></div></div></div><div class="table"><a id="d0e1064"/><p class="title"><strong>Table 1.13. RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap</strong></p><div class="table-contents"><table summary="RunStrainMapAnalysisRequest.StrainMapAnalysis.EventStrainMap" border="1"><colgroup><col width="109.5pt" class="col1"/><col width="85.5pt" class="col2"/><col width="63pt" class="col3"/><col width="208.5pt" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>phaseName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Life cycle phase name. </td></tr><tr><td>eventName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Life cycle event name. </td></tr><tr><td>pcbSide</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>PCB side for the strain map. Supported values are: TOP, BOTTOM. </td></tr><tr><td>strainMap</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Strain map assigned to the event. </td></tr><tr><td>subAssemblyName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>The name of the sub-assembly CCA to be assigned the strain map. </td></tr></tbody></table></div></div><br class="table-break"/></div></div><div class="sect2" title="Update Natural Frequency Properties"><div class="titlepage"><div><div><h3 class="title"><a id="d0e1132"/>Update Natural Frequency Properties</h3></div></div></div><div class="sect3" title="UpdateNaturalFrequencyPropsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_UpdateNaturalFrequencyPropsRequest"/>UpdateNaturalFrequencyPropsRequest</h4></div></div></div><div class="table"><a id="d0e1138"/><p class="title"><strong>Table 1.14. UpdateNaturalFrequencyPropsRequest</strong></p><div class="table-contents"><table summary="UpdateNaturalFrequencyPropsRequest" border="1"><colgroup><col width="196.5pt" class="col1"/><col width="78.75pt" class="col2"/><col width="50.25pt" class="col3"/><col width="144pt" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>project</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Project name. </td></tr><tr><td>ccaName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>CCA name. </td></tr><tr><td>naturalFreqCount</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">int32</a></td><td> </td><td>NF Result Count. </td></tr><tr><td>naturalFreqMin</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td> </td><td>Min Frequency. </td></tr><tr><td>naturalFreqMinUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Min Frequency units (HZ, KHZ, MHZ, or GHZ). </td></tr><tr><td>naturalFreqMax</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td> </td><td>Max Frequency. </td></tr><tr><td>naturalFreqMaxUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Max Frequency units (HZ, KHZ, MHZ, or GHZ). </td></tr><tr><td>partValidationEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Part Validation. </td></tr><tr><td>requireMaterialAssignmentEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Require Material Assignment. </td></tr><tr><td>analysisTemp</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td>optional</td><td>Temperature. </td></tr><tr><td>analysisTempUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Temperature units (C, F, or K). </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Update Natural Frequency Properties"><div class="titlepage"><div><div><h4 class="title"><a id="d0e1261"/>Example: Update Natural Frequency Properties</h4></div></div></div><h5><a id="d0e1264"/>Proto Request Example:</h5><pre class="programlisting">{
  "project": "Tutorial Project",
  "ccaName": "Main Board",
  "naturalFreqCount": 8,
  "naturalFreqMin": 100,
  "naturalFreqMinUnits": "HZ",
  "naturalFreqMax": 1000,
  "naturalFreqMaxUnits": "HZ",
  "partValidationEnabled": true,
  "requireMaterialAssignmentEnabled": true,
  "analysisTemp": 20,
  "analysisTempUnits": "C"
}</pre><h5><a id="d0e1268"/>Python Example:</h5><pre class="programlisting">import sys
import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import grpc

channel = grpc.insecure_channel('localhost:9090')
stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.UpdateNaturalFrequencyPropsRequest()
message.project = "Tutorial Project"
message.ccaName = "Main Board"
message.naturalFreqCount = 8
message.naturalFreqMin = 100
message.naturalFreqMinUnits = "HZ"
message.naturalFreqMax = 1000
message.naturalFreqMaxUnits = "HZ"
message.partValidationEnabled = True
message.requireMaterialAssignmentEnabled = True
message.analysisTemp = 20
message.analysisTempUnits = "C"

# Update NF properties
response = stub.updateNaturalFrequencyProps(message)
print(str(response))</pre></div></div><div class="sect2" title="Update PCB Modeling Properties"><div class="titlepage"><div><div><h3 class="title"><a id="d0e1272"/>Update PCB Modeling Properties</h3></div></div></div><div class="sect3" title="UpdatePcbModelingPropsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_UpdatePcbModelingPropsRequest"/>UpdatePcbModelingPropsRequest</h4></div></div></div><div class="table"><a id="d0e1278"/><p class="title"><strong>Table 1.15. UpdatePcbModelingPropsRequest</strong></p><div class="table-contents"><table summary="UpdatePcbModelingPropsRequest" border="1"><colgroup><col width="97.5pt" class="col1"/><col width="84.75pt" class="col2"/><col width="93pt" class="col3"/><col width="194.25pt" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>project</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Sherlock project name. </td></tr><tr><td>ccaNames</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>repeated</td><td>The CCA names for which to assign the PCB modeling parameters. </td></tr><tr><td>analyses</td><td>
                  <p>See below ⇓</p>
                </td><td>repeated</td><td> </td></tr><tr><td> </td><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest.Analysis" title="UpdatePcbModelingPropsRequest.Analysis">UpdatePcbModelingPropsRequest.Analysis</a></td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="UpdatePcbModelingPropsRequest.Analysis"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_UpdatePcbModelingPropsRequest.Analysis"/>UpdatePcbModelingPropsRequest.Analysis</h4></div></div></div><div class="table"><a id="d0e1338"/><p class="title"><strong>Table 1.16. UpdatePcbModelingPropsRequest.Analysis</strong></p><div class="table-contents"><table summary="UpdatePcbModelingPropsRequest.Analysis" border="1"><colgroup><col width="139.5pt" class="col1"/><col width="102pt" class="col2"/><col width="49.5pt" class="col3"/><col width="174pt" class="col4"/></colgroup><tbody><tr><td><span class="bold"><strong>Field</strong></span></td><td><span class="bold"><strong>Type</strong></span></td><td><span class="bold"><strong>Label</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td rowspan="2">type</td><td>
                  <p>See below ⇓</p>
                </td><td> </td><td>The type of analysis for which PCB modeling properties apply. </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.AnalysisType" title="UpdatePcbModelingPropsRequest.Analysis.AnalysisType">UpdatePcbModelingPropsRequest.Analysis.AnalysisType</a></td></tr><tr><td rowspan="2">modelType</td><td>
                  <p>See below ⇓</p>
                </td><td> </td><td>The PCB modeling mesh type. </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.PcbModelType" title="UpdatePcbModelingPropsRequest.Analysis.PcbModelType">UpdatePcbModelingPropsRequest.Analysis.PcbModelType</a></td></tr><tr><td>modelingRegionEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Indicates if modeling regions are enabled. </td></tr><tr><td rowspan="2">pcbMaterialModel</td><td>
                  <p>See below ⇓</p>
                </td><td> </td><td>The PCB modeling PCB model type. </td></tr><tr><td colspan="3"><a class="link" href="ch01s03.xhtml#sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.PcbModelType" title="UpdatePcbModelingPropsRequest.Analysis.PcbModelType">UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel</a></td></tr><tr><td>pcbMaxMaterials</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">int32</a></td><td>optional</td><td>The number of PCB materials for Uniform Elements and Layered Elements PCB
                  model types. </td></tr><tr><td>pcbElemOrder</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_api_elementorder" title="ElementOrder">ElementOrder</a></td><td> </td><td>The element order for PCB elements. </td></tr><tr><td>pcbMaxEdgeLength</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td> </td><td>The maximum mesh size for PCB elements. </td></tr><tr><td>pcbMaxEdgeLengthUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>The length units for the maximum mesh size. </td></tr><tr><td>pcbMaxVertical</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>The maximum vertical mesh size for PCB elements. </td></tr><tr><td>pcbMaxVerticalUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>The length units for the maximum vertical mesh size. </td></tr><tr><td>quadsPreferred</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Indicates that the meshing engine should attempt to generate quad-shaped
                  elements when creating the mesh. </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Update PCB Modeling Properties"><div class="titlepage"><div><div><h4 class="title"><a id="d0e1490"/>Example: Update PCB Modeling Properties</h4></div></div></div><h5><a id="d0e1493"/>Proto Request Example:</h5><pre class="programlisting">{
  "project": "Tutorial Project",
  "ccaNames": [
    "Main Board"
  ],
  "analyses": [
    {
      "type": 6,
      "modelType": 1,
      "modelingRegionEnabled": true,
      "pcbMaterialModel": 2,
      "pcbMaxMaterials": 5,
      "pcbElemOrder": 1,
      "pcbMaxEdgeLength": 0.5,
      "pcbMaxEdgeLengthUnits": "mm",
      "pcbMaxVertical": 1,
      "pcbMaxVerticalUnits": "mm",
      "quadsPreferred": true
    }
  ]
}</pre><h5><a id="d0e1497"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.UpdatePcbModelingPropsRequest()
message.project = "Tutorial Project"
message.ccaNames.extend(['Main Board'])
analysis = SherlockAnalysisService_pb2.UpdatePcbModelingPropsRequest().Analysis()
analysis.type = SherlockAnalysisService_pb2.UpdatePcbModelingPropsRequest.Analysis.AnalysisType.ThermalMech
analysis.modelType = SherlockAnalysisService_pb2.UpdatePcbModelingPropsRequest.Analysis.PcbModelType.Bonded
analysis.modelingRegionEnabled = True
analysis.pcbMaterialModel = SherlockAnalysisService_pb2.UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel.Layered
analysis.pcbMaxMaterials = 5
analysis.pcbElemOrder = 1
analysis.pcbMaxEdgeLength = 0.5
analysis.pcbMaxEdgeLengthUnits = "mm"
analysis.pcbMaxVertical = 1
analysis.pcbMaxVerticalUnits = "mm"
analysis.quadsPreferred = True
message.analyses.extend([analysis])
response = stub.updatePcbModelingProps(message)
print(str(response))</pre></div></div><div class="sect2" title="Update Random Vibe Properties"><div class="titlepage"><div><div><h3 class="title"><a id="d0e1501"/>Update Random Vibe Properties</h3></div></div></div><p>Update the random vibe properties for a given CCA.</p><div class="sect3" title="UpdateRandomVibePropsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_UpdateRandomVibePropsRequest"/>UpdateRandomVibePropsRequest</h4></div></div></div><div class="table"><a id="d0e1509"/><p class="title"><strong>Table 1.17. UpdateRandomVibePropsRequest</strong></p><div class="table-contents"><table summary="UpdateRandomVibePropsRequest" border="1"><colgroup><col width="191.25pt" class="col1"/><col width="79.5pt" class="col2"/><col width="64.5pt" class="col3"/><col width="165pt" class="col4"/></colgroup><tbody><tr><td><span class="bold"><strong>Field</strong></span></td><td><span class="bold"><strong>Type</strong></span></td><td><span class="bold"><strong>Label</strong></span></td><td><span class="bold"><strong>Description</strong></span></td></tr><tr><td>project</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Project name. </td></tr><tr><td>ccaName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>CCA name. </td></tr><tr><td>randomVibeDamping</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Modal Damping Ratio(s). </td></tr><tr><td>naturalFreqMin</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td>optional</td><td>Min Frequency. For NX Nastran analysis only. </td></tr><tr><td>naturalFreqMinUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Min Frequency units. For NX Nastran analysis only. </td></tr><tr><td>naturalFreqMax</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td>optional</td><td>Max Frequency. For NX Nastran analysis only. </td></tr><tr><td>naturalFreqMaxUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Max Frequency units. For NX Nastran analysis only. </td></tr><tr><td>analysisTemp</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">double</a></td><td>optional</td><td>Temperature. </td></tr><tr><td>analysisTempUnits</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Temperature units. </td></tr><tr><td>partValidationEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td>optional</td><td>Part Validation. </td></tr><tr><td>forceModelRebuild</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Model Creation. Valid values are "FORCE" or "AUTO" </td></tr><tr><td>reuseModalAnalysis</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td>optional</td><td>Reuse Natural Frequency. For NX Nastran analysis only. </td></tr><tr><td>performNFFreqRangeCheck</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td>optional</td><td>Frequency Range Check. For NX Nastran analysis only. </td></tr><tr><td>requireMaterialAssignmentEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td>optional</td><td>Require Material Assignment. </td></tr><tr><td>modelSource</td><td><a class="link" href="ch01s03.xhtml#sherlock_ug_api_modelsource" title="ModelSource">ModelSource</a></td><td>optional</td><td>Optional model source. Default: GENERATED </td></tr><tr><td>strainMapNaturalFreqs</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>optional</td><td>Comma-separated list of natural frequencies for strain map analysis. </td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Update Random Vibe Properties"><div class="titlepage"><div><div><h4 class="title"><a id="d0e1689"/>Example: Update Random Vibe Properties</h4></div></div></div><h5><a id="d0e1692"/>Proto Request Example:</h5><pre class="programlisting">{
  "project": "Tutorial Project",
  "ccaName": "Main Board",
  "randomVibeDamping": "0.01",
  "naturalFreqMin": 0,
  "naturalFreqMinUnits": "HZ",
  "naturalFreqMax": 500,
  "naturalFreqMaxUnits": "HZ",
  "analysisTemp": 0,
  "analysisTempUnits": "C",
  "partValidationEnabled": true,
  "forceModelRebuild": "AUTO",
  "reuseModalAnalysis": true,
  "performNFFreqRangeCheck": true,
  "requireMaterialAssignmentEnabled": true
}</pre><h5><a id="d0e1696"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.UpdateRandomVibePropsRequest()
message.project = "Tutorial Project"
message.ccaName = 'Main Board'
message.randomVibeDamping = ".01"
message.naturalFreqMin = 0
message.naturalFreqMinUnits = 'HZ'
message.naturalFreqMax = 500
message.naturalFreqMaxUnits ='HZ'
message.analysisTemp = 0
message.analysisTempUnits = "C"
message.partValidationEnabled = True
message.forceModelRebuild = "AUTO"
message.reuseModalAnalysis = True
message.performNFFreqRangeCheck = True
message.requireMaterialAssignmentEnabled = True

response = stub.updateRandomVibeProps(message)
print(str(response))</pre></div></div><div class="sect2" title="Update Thermal Mech Properties"><div class="titlepage"><div><div><h3 class="title"><a id="d0e1700"/>Update Thermal Mech Properties</h3></div></div></div><p>Allows for Thermal Mech analysis parameters to be updated. </p><div class="sect3" title="UpdateThermalMechPropsRequest"><div class="titlepage"><div><div><h4 class="title"><a id="sherlock_ug_UpdateThermalMechPropsRequest"/>UpdateThermalMechPropsRequest</h4></div></div></div><div class="table"><a id="d0e1708"/><p class="title"><strong>Table 1.18. UpdateThermalMechPropsRequest</strong></p><div class="table-contents"><table summary="UpdateThermalMechPropsRequest" border="1"><colgroup><col width="123.75pt" class="col1"/><col width="66.75pt" class="col2"/><col width="60.75pt" class="col3"/><col width="210pt" class="col4"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Field</strong></span></td><td align="center"><span class="bold"><strong>Type</strong></span></td><td align="center"><span class="bold"><strong>Label</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>project</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td> </td><td>Project name. </td></tr><tr><td>ccaName</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">string</a></td><td>repeated</td><td>CCA names. </td></tr><tr><td>thermalResultCount</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">int32</a></td><td> </td><td>Thermal Mech Result Count. </td></tr><tr><td>partValidationEnabled</td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Part Validation. </td></tr><tr><td>
                  <p>See below ⇓</p>
                </td><td><a class="link" href="ch01s11.xhtml" title="gRPC Scalar Value Types">bool</a></td><td> </td><td>Require Material Assignment. </td></tr><tr><td colspan="4">requireMaterialAssignmentEnabled</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect3" title="Example: Update Thermal Mech Properties"><div class="titlepage"><div><div><h4 class="title"><a id="d0e1782"/>Example: Update Thermal Mech Properties</h4></div></div></div><h5><a id="d0e1785"/>Proto Request Example:</h5><pre class="programlisting">{
  "project": "Tutorial Project",
  "ccaName": [
    "Main Board"
  ],
  "thermalResultCount": 4,
  "partValidationEnabled": true,
  "requireMaterialAssignmentEnabled": true
}</pre><h5><a id="d0e1789"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.UpdateThermalMechPropsRequest()
message.project = "Tutorial Project"
message.ccaName.extend(['Main Board'])
message.thermalResultCount = 4
message.partValidationEnabled = True
requireMaterialAssignmentEnabled = True

response = stub.updateThermalMechProps(message)
print(str(response))</pre></div></div><div class="sect2" title="ElementOrder"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_api_elementorder"/>ElementOrder</h3></div></div></div><p>Enumeration defining the types of suppored element orders.</p><div class="table"><a id="d0e1798"/><p class="title"><strong>Table 1.19. ElementOrder</strong></p><div class="table-contents"><table summary="ElementOrder" border="1"><colgroup><col width="109.5pt" class="col1"/><col width="70.5pt" align="center" class="col2"/><col width="285pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UnknownOrder</td><td align="center">0</td><td>Default enum to catch invalid element order.</td></tr><tr><td>Linear</td><td align="center">1</td><td>Enum for first order linear elements.</td></tr><tr><td>Quadratic</td><td align="center">2</td><td>Enum for second order quadratic elements.</td></tr><tr><td>SolidShell</td><td align="center">3</td><td>Enum for solid shell elements.</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect2" title="ModelSource"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_api_modelsource"/>ModelSource</h3></div></div></div><div class="table"><a id="d0e1847"/><p class="title"><strong>Table 1.20. ModelSource</strong></p><div class="table-contents"><table summary="ModelSource" border="1"><colgroup><col width="105pt" class="col1"/><col width="67.5pt" align="center" class="col2"/><col width="295.5pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UNKNOWN</td><td align="center">0</td><td>Default enum to catch invalid source</td></tr><tr><td>GENERATED</td><td align="center">1</td><td>Generated analysis model source</td></tr><tr><td>STRAIN_MAP</td><td align="center">2</td><td>Strain map analysis model source</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect2" title="RunAnalysisRequest.Analysis.AnalysisType"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_RunAnalysisRequest.Analysis.AnalysisType"/>RunAnalysisRequest.Analysis.AnalysisType</h3></div></div></div><div class="table"><a id="d0e1889"/><p class="title"><strong>Table 1.21. RunAnalysisRequest.Analysis.AnalysisType</strong></p><div class="table-contents"><table summary="RunAnalysisRequest.Analysis.AnalysisType" border="1"><colgroup><col width="1.95in" class="col1"/><col width="0.82in" class="col2"/><col width="3.75in" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UNKNOWN</td><td>0</td><td>Default enum to catch invalid analysis.</td></tr><tr><td>NaturalFreq</td><td>1</td><td>Enum for the Natural Frequency analysis.</td></tr><tr><td>HarmonicVibe</td><td>2</td><td>Enum for the Harmonic Vibe analysis.</td></tr><tr><td>ICTAnalysis</td><td>3</td><td>Enum for the ICA analysis.</td></tr><tr><td>MechanicalShock</td><td>4</td><td>Enum for the Mechanical Shock analysis.</td></tr><tr><td>RandomVibe</td><td>5</td><td>Enum for the Random Vibe analysis.</td></tr><tr><td>ComponentFailureMode</td><td>7</td><td>Enum for the Component Failure Mechanism analysis.</td></tr><tr><td>DFMEAModule</td><td>8</td><td>Enum for the DFMEA analysis.</td></tr><tr><td>PTHFatigue</td><td>9</td><td>Enum for the PTH Fatigue analysis.</td></tr><tr><td>PartValidation</td><td>10</td><td>Enum for the Part Validation analysis.</td></tr><tr><td>SemiconductorWearout</td><td>11</td><td>Enum for the Semiconductor Wearout analysis.</td></tr><tr><td>SolderJointFatigue</td><td>12</td><td>Enum for the Solder Fatigue analysis.</td></tr><tr><td>ThermalDerating</td><td>13</td><td>Enum for the Thermal Derating analysis.</td></tr><tr><td>ThermalMech</td><td>14</td><td>Enum for the Thermal Mech analysis.</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect2" title="RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType"/>RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType</h3></div></div></div><div class="table"><a id="d0e2008"/><p class="title"><strong>Table 1.22. RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType</strong></p><div class="table-contents"><table summary="RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType" border="1"><colgroup><col width="97.5pt" class="col1"/><col width="69pt" class="col2"/><col width="220.5pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UNKNOWN</td><td>0</td><td>Default enum to catch invalid analysis.</td></tr><tr><td>RandomVibe</td><td>1</td><td>Enum for the Random Vibe analysis.</td></tr></tbody></table></div></div><br class="table-break"/><div class="sect3" title="Example: Run Strain Map Analysis"><div class="titlepage"><div><div><h4 class="title"><a id="d0e2040"/>Example: Run Strain Map Analysis</h4></div></div></div><h5><a id="d0e2043"/>Proto Request Example:</h5><pre class="programlisting">{
  "project": "Tutorial Project",
  "ccaName": "Main Board",
  "strainMapAnalyses": [
    {
      "type": 1,
      "eventStrainMaps": [
        {
          "phaseName": "On The Road",
          "eventName": "1 - Vibration",
          "pcbSide": "TOP",
          "strainMap": "StrainMap - Top",
          "subAssemblyName": "Main Board"
        }
      ]
    },
    {
      "type": 1,
      "eventStrainMaps": [
        {
          "phaseName": "On The Road",
          "eventName": "1 - Vibration",
          "pcbSide": "BOTTOM",
          "strainMap": "StrainMap - Bottom",
          "subAssemblyName": "Main Board"
        }
      ]
    }
  ]
}</pre><h5><a id="d0e2047"/>Python Example:</h5><pre class="programlisting">import SherlockAnalysisService_pb2
import SherlockAnalysisService_pb2_grpc
import SherlockCommonService_pb2
import grpc

channel = grpc.insecure_channel('localhost:9090')

stub = SherlockAnalysisService_pb2_grpc.SherlockAnalysisServiceStub(channel)

message = SherlockAnalysisService_pb2.RunStrainMapAnalysisRequest()
message.project = "Tutorial Project"
message.ccaName = 'Main Board'
strainMapAnalysis = SherlockAnalysisService_pb2.RunStrainMapAnalysisRequest().StrainMapAnalysis()
strainMapAnalysis.type = SherlockAnalysisService_pb2.RunStrainMapAnalysisRequest.StrainMapAnalysis.AnalysisType.RandomVibe
eventStrainMapAnalysis1 = SherlockAnalysisService_pb2.RunStrainMapAnalysisRequest().StrainMapAnalysis().EventStrainMap()
eventStrainMapAnalysis1.phaseName = "On The Road"
eventStrainMapAnalysis1.eventName = "1 - Vibration"
eventStrainMapAnalysis1.pcbSide = "TOP"
eventStrainMapAnalysis1.strainMap = "StrainMap - Top"
eventStrainMapAnalysis1.subAssemblyName = "Main Board" #optional
eventStrainMapAnalysis2 = SherlockAnalysisService_pb2.RunStrainMapAnalysisRequest().StrainMapAnalysis().EventStrainMap()
eventStrainMapAnalysis2.phaseName = "On The Road"
eventStrainMapAnalysis2.eventName = "1 - Vibration"
eventStrainMapAnalysis2.pcbSide = "BOTTOM"
eventStrainMapAnalysis2.strainMap = "StrainMap - Bottom"
eventStrainMapAnalysis2.subAssemblyName = "Main Board" #optional
strainMapAnalysis.eventStrainMaps.extend([eventStrainMapAnalysis1, eventStrainMapAnalysis2])
message.strainMapAnalyses.extend([strainMapAnalysis])

response = stub.runStrainMapAnalysis(message)
print(str(response))</pre></div></div><div class="sect2" title="UpdatePcbModelingPropsRequest.Analysis.AnalysisType"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.AnalysisType"/>UpdatePcbModelingPropsRequest.Analysis.AnalysisType</h3></div></div></div><div class="table"><a id="d0e2054"/><p class="title"><strong>Table 1.23. UpdatePcbModelingPropsRequest.Analysis.AnalysisType</strong></p><div class="table-contents"><table summary="UpdatePcbModelingPropsRequest.Analysis.AnalysisType" border="1"><colgroup><col width="129pt" class="col1"/><col width="78pt" class="col2"/><col width="253.5pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UnknownAnalysisType</td><td>0</td><td>Default enum to catch invalid analysis.</td></tr><tr><td>HarmonicVibe</td><td>1</td><td>Enum for the Harmonic Vibe analysis.</td></tr><tr><td>ICTAnalysis</td><td>2</td><td>Enum for the ICT analysis.</td></tr><tr><td>MechanicalShock</td><td>3</td><td>Enum for the Mechanical Shock analysis.</td></tr><tr><td>NaturalFreq</td><td>4</td><td>Enum for the Natural Frequency analysis.</td></tr><tr><td>RandomVibe</td><td>5</td><td>Enum for the Random Vibe analysis.</td></tr><tr><td>ThermalMech</td><td>6</td><td>Enum for the Thermal Mech analysis.</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect2" title="UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel"/>UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel</h3></div></div></div><div class="table"><a id="d0e2124"/><p class="title"><strong>Table 1.24. UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel</strong></p><div class="table-contents"><table summary="UpdatePcbModelingPropsRequest.Analysis.PcbMaterialModel" border="1"><colgroup><col width="128.25pt" class="col1"/><col width="77.25pt" class="col2"/><col width="255.75pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UnknownPcbModel</td><td>0</td><td>Default enum to catch invalid PCB model</td></tr><tr><td>Uniform</td><td>1</td><td>Enum for uniform PCB model</td></tr><tr><td>Layered</td><td>2</td><td>Enum for layered PCB model</td></tr><tr><td>UniformElements</td><td>3</td><td>Enum for uniform elements PCB model</td></tr><tr><td>LayeredElements</td><td>4</td><td>Enum for layered elements PCB model</td></tr></tbody></table></div></div><br class="table-break"/></div><div class="sect2" title="UpdatePcbModelingPropsRequest.Analysis.PcbModelType"><div class="titlepage"><div><div><h3 class="title"><a id="sherlock_ug_UpdatePcbModelingPropsRequest.Analysis.PcbModelType"/>UpdatePcbModelingPropsRequest.Analysis.PcbModelType</h3></div></div></div><div class="table"><a id="d0e2180"/><p class="title"><strong>Table 1.25. UpdatePcbModelingPropsRequest.Analysis.PcbModelType</strong></p><div class="table-contents"><table summary="UpdatePcbModelingPropsRequest.Analysis.PcbModelType" border="1"><colgroup><col width="115.5pt" class="col1"/><col width="55.5pt" class="col2"/><col width="221.25pt" class="col3"/></colgroup><tbody><tr><td align="center"><span class="bold"><strong>Name</strong></span></td><td align="center"><span class="bold"><strong>Number</strong></span></td><td align="center"><span class="bold"><strong>Description</strong></span></td></tr><tr><td>UnknownMeshType</td><td>0</td><td>Default enum to catch invalid mesh type.</td></tr><tr><td>Bonded</td><td>1</td><td>Bonded FEA model.</td></tr></tbody></table></div></div><br class="table-break"/></div></div><div class="navfooter"><hr/><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="ch01s02.xhtml">Prev</a> </td><td width="20%" align="center"> </td><td width="40%" align="right"> <a accesskey="n" href="ch01s04.xhtml">Next</a></td></tr><tr><td width="40%" align="left" valign="top">Index to the Sherlock APIs </td><td width="20%" align="center"><a accesskey="h" href="index.xhtml">Home</a></td><td width="40%" align="right" valign="top"> Sherlock Common Service- SherlockCommonService.proto</td></tr></table></div></body></html>